comment_sentence_id,class,comment_sentence,partition,instance_type,category
2,Abfss.java,this impl delegates to the old filesystem,0,0,summary
516,FileSystemApplicationHistoryStore.java,@link #applicationstarted applicationstartdata is supposed to,1,0,summary
517,FileSystemApplicationHistoryStore.java,be invoked first when writing any history data of one application and it will,0,0,summary
6,AbstractContractGetFileStatusTest.java,the tree parameters.,1,0,summary
518,FileSystemApplicationHistoryStore.java,"open a file, while @link #applicationfinished applicationfinishdata is",0,0,summary
7,AbstractContractGetFileStatusTest.java,kept small to avoid killing object store test runs too much.,1,0,summary
519,FileSystemApplicationHistoryStore.java,supposed to be last writing operation and will close the file.,0,0,summary
8,AbstractContractGetFileStatusTest.java,accept everything.,1,0,summary
9,AbstractContractGetFileStatusTest.java,the tree parameters.,0,0,summary
10,AbstractContractGetFileStatusTest.java,kept small to avoid killing object store test runs too much.,1,0,summary
11,AbstractContractGetFileStatusTest.java,accept nothing.,0,0,summary
1035,TestCustomOauthTokenProvider.java,instead this just checks that the creation works and that everything,1,0,summary
12,AbstractContractGetFileStatusTest.java,the tree parameters.,0,0,summary
1036,TestCustomOauthTokenProvider.java,is propagated.,1,0,summary
13,AbstractContractGetFileStatusTest.java,kept small to avoid killing object store test runs too much.,0,0,summary
14,AbstractContractGetFileStatusTest.java,path filter which only expects paths whose final name element,1,0,summary
15,AbstractContractGetFileStatusTest.java,equals the @code match field.,0,0,summary
16,AbstractContractGetFileStatusTest.java,the tree parameters.,1,0,summary
17,AbstractContractGetFileStatusTest.java,kept small to avoid killing object store test runs too much.,0,0,summary
18,AbstractContractGetFileStatusTest.java,a filesystem filter which exposes the protected method,1,0,summary
19,AbstractContractGetFileStatusTest.java,"@link #listlocatedstatus path, pathfilter .",0,0,summary
1058,TestHDFSServerPorts.java,the correct behavior is br when a specific port is provided the server must either start on that port or fail by throwing @link java^net.bindexception .,1,0,summary
1059,TestHDFSServerPorts.java,br,0,0,summary
1060,TestHDFSServerPorts.java,if the port 0 ephemeral then the server should choose a free port and start on it.,1,0,summary
44,AbstractS3ACommitterFactory.java,dynamically create the output committer based on subclass type and settings.,0,0,summary
1072,TestNativeAzureFileSystemUploadLogic.java,just an arbitrary number so that the values i write have a predictable,1,0,summary
1073,TestNativeAzureFileSystemUploadLogic.java,various scenarios to test in how often we flush data while uploading.,0,0,summary
562,HttpHeaderConfigurations.java,responsible to keep all abfs http headers here.,1,0,summary
53,ApplicationConstants.java,the type of launch for the container.,0,0,summary
54,ApplicationConstants.java,environment for applications.,1,0,summary
567,InconsistentS3ClientFactory.java,this client is for testing i only i it is in the production,0,0,summary
568,InconsistentS3ClientFactory.java,@code hadoop aws module to enable integration tests to use this,1,0,summary
569,InconsistentS3ClientFactory.java,just by editing the hadoop configuration used to bring up the client.,0,0,summary
1086,TestProtoBufRpc.java,this test depends on test^proto definition of types in src test proto,1,0,summary
1087,TestProtoBufRpc.java,and protobuf service definition from src test test rpc service^proto,0,0,summary
66,AutoInputFormat.java,it can currently handle text and sequence files.,1,0,summary
74,BalancingPolicy.java,cluster is balanced if each node is balanced.,0,0,summary
75,BalancingPolicy.java,cluster is balanced if each pool in each node is balanced.,1,0,summary
588,ITestCommitOperations.java,this is done with an inconsistent client.,0,0,summary
1105,TestSaveNamespace.java,cases covered,1,0,summary
594,ITestS3Select.java,executed if the destination store declares its support for the feature.,0,0,summary
1106,TestSaveNamespace.java,ol,1,0,summary
1107,TestSaveNamespace.java,li recover from failure while saving into the second storage directory li,0,0,summary
1108,TestSaveNamespace.java,li recover from failure while moving current into lastcheckpoint^tmp li,1,0,summary
1109,TestSaveNamespace.java,li recover from failure while moving lastcheckpoint^tmp into,0,0,summary
1110,TestSaveNamespace.java,previous^checkpoint li,1,0,summary
1111,TestSaveNamespace.java,li recover from failure while rolling edits file li,0,0,summary
88,BatchedRequests.java,the placement algorithm tends to give more optimal,1,0,summary
1112,TestSaveNamespace.java,ol,0,0,summary
89,BatchedRequests.java,placements if more requests are batched together.,1,0,summary
90,BatchedRequests.java,placementalgorithmoutput attempt the number of times the requests in this,0,0,summary
604,KerberosDelegationTokenAuthenticator.java,it falls back to the @link pseudodelegationtokenauthenticator if the http,1,0,summary
605,KerberosDelegationTokenAuthenticator.java,endpoint does not trigger a spnego authentication,0,0,summary
104,BlocksMap.java,block s metadata currently includes blockcollection it belongs to and,1,0,summary
105,BlocksMap.java,the datanodes that store the block.,0,0,summary
619,LoggedTask.java,"it knows about the pssibly empty sequence of attempts, its i o footprint,",1,0,summary
620,LoggedTask.java,and its runtime.,0,0,summary
1132,TestSwiftFileSystemContract.java,some of the tests override the base class tests these,1,0,summary
621,LoggedTask.java,all of the public methods are simply accessors for the instance variables we,0,0,summary
1133,TestSwiftFileSystemContract.java,"are where swiftfs does not implement those features, or",1,0,summary
622,LoggedTask.java,want to write out in the json files.,0,0,summary
1134,TestSwiftFileSystemContract.java,when the behavior of swiftfs does not match the normal,1,0,summary
1135,TestSwiftFileSystemContract.java,contract which normally means that directories and equal files,0,0,summary
1136,TestSwiftFileSystemContract.java,are being treated as equal.,1,0,summary
120,CapacitySchedulerPlanFollower.java,"this implementation does so, by",0,0,summary
632,LogWebService.java,support only atsv2 client only.,1,0,summary
121,CapacitySchedulerPlanFollower.java,"adding removing resizing leaf queues in the scheduler, thus affecting the",0,0,summary
122,CapacitySchedulerPlanFollower.java,dynamic behavior of the scheduler in a way that is consistent with the,1,0,summary
1146,TestTaskCommit.java,the framework s fileoutputcommitter cleans up any temporary,0,0,summary
123,CapacitySchedulerPlanFollower.java,content of the plan.,1,0,summary
124,CapacitySchedulerPlanFollower.java,it also updates the plan s view on how much resources,0,0,summary
1148,TestTaskCommit.java,we want the test case to,1,0,summary
125,CapacitySchedulerPlanFollower.java,are available in the cluster.,0,0,summary
126,CapacitySchedulerPlanFollower.java,"this implementation of planfollower is relatively stateless, and it can",1,0,summary
638,MapContext.java,@param keyin the key input type to the mapper,0,0,summary
1150,TestTaskCommit.java,special committer that always requires commit.,1,0,summary
127,CapacitySchedulerPlanFollower.java,synchronize schedulers and plans that have arbitrary changes performing set,0,0,summary
639,MapContext.java,@param valuein the value input type to the mapper,1,0,summary
128,CapacitySchedulerPlanFollower.java,differences among existing queues .,0,0,summary
640,MapContext.java,@param keyout the key output type from the mapper,1,0,summary
129,CapacitySchedulerPlanFollower.java,this makes it resilient to frequency of,0,0,summary
641,MapContext.java,@param valueout the value output type from the mapper,1,0,summary
130,CapacitySchedulerPlanFollower.java,"synchronization, and rm restart issues no catch up is necessary .",0,0,summary
652,MetricsCache.java,cached record,1,0,summary
1164,TestUpgradeDomainBlockPlacementPolicy.java,the test configs upgrade domain for nodes via admin json,0,0,summary
1165,TestUpgradeDomainBlockPlacementPolicy.java,config file and put some nodes to decommission state.,1,0,summary
1166,TestUpgradeDomainBlockPlacementPolicy.java,the test then verifies replicas are placed on the nodes that,0,0,summary
1167,TestUpgradeDomainBlockPlacementPolicy.java,satisfy the upgrade domain policy.,1,0,summary
656,NativeBatchProcessor.java,"used to create channel, transfer data and command between java and native",0,0,summary
660,NativeSingleLineParser.java,p the expected log format is normalizedjobname numinstances submittime,1,0,summary
661,NativeSingleLineParser.java,starttime endtime jobinstancename memusage coreusage,0,0,summary
151,Classpath.java,the output likely will include wildcards in the classpath.,1,0,summary
1175,TextInputFormat.java,either linefeed or carriage return are used to signal end of line.,0,0,summary
1178,TextInputFormat.java,.,1,0,summary
156,Classpath.java,this is useful in situations where wildcard syntax isn t usable.,0,0,summary
157,Classpath.java,"with the jar argument, it writes the classpath as a manifest in a jar file.",1,0,summary
672,Node2ObjectsMap.java,this information is built from the dn container reports.,0,0,summary
1190,TimelineDataToRetrieve.java,ul,1,0,summary
1191,TimelineDataToRetrieve.java,li b confstoretrieve b used for deciding which configs to return,0,0,summary
1192,TimelineDataToRetrieve.java,in response.,1,0,summary
1193,TimelineDataToRetrieve.java,this is represented as a @link timelinefilterlist object,0,0,summary
1194,TimelineDataToRetrieve.java,containing @link timelineprefixfilter objects.,1,0,summary
1195,TimelineDataToRetrieve.java,these can either be,0,0,summary
172,ComparableVersion.java,code source of this file http grepcode^com file repo1^maven.org maven2 org^apache.maven maven artifact 31.1 org apache maven artifact versioning comparableversion^java modifications made on top of the source 1.,1,0,summary
1196,TimelineDataToRetrieve.java,exact config keys or prefixes which are then compared against config,0,0,summary
173,ComparableVersion.java,changed package org^apache.maven^artifact.versioning to package org^apache.hadoop^util 2.,1,0,summary
1199,TimelineDataToRetrieve.java,"or empty, all configurations will be fetched if fieldstoretrieve",0,0,summary
176,ComparableVersion.java,p features,1,0,summary
1200,TimelineDataToRetrieve.java,contains @link field#configs or @link field#all .,0,0,summary
177,ComparableVersion.java,ul,1,0,summary
1202,TimelineDataToRetrieve.java,confused with configfilters which is used to decide which entities to,0,0,summary
1203,TimelineDataToRetrieve.java,return instead.,1,0,summary
1204,TimelineDataToRetrieve.java,li,0,0,summary
693,OzoneObj.java,ozone objects supported for acl.,1,0,summary
694,OzoneObj.java,ozone objects supported for acl.,0,0,summary
1206,TimelineDataToRetrieve.java,in response.,1,0,summary
1207,TimelineDataToRetrieve.java,this is represented as a @link timelinefilterlist object,0,0,summary
1208,TimelineDataToRetrieve.java,containing @link timelineprefixfilter objects.,1,0,summary
1209,TimelineDataToRetrieve.java,these can either be,0,0,summary
1210,TimelineDataToRetrieve.java,exact metric ids or prefixes which are then compared against metric,1,0,summary
699,PartialOutputCommitter.java,interface for an @link org^apache.hadoop^mapreduce.outputcommitter,0,0,summary
188,ComparableVersion.java,li code milestone code or code m code li,1,0,summary
189,ComparableVersion.java,li code rc code or code cr code li,0,0,summary
1213,TimelineDataToRetrieve.java,"or empty, all metrics will be fetched if fieldstoretrieve contains",1,0,summary
190,ComparableVersion.java,li code snapshot code li,0,0,summary
191,ComparableVersion.java,li code the empty string code or code ga code or code final code li,1,0,summary
192,ComparableVersion.java,li code sp code li,0,0,summary
1216,TimelineDataToRetrieve.java,with metricfilters which is used to decide which entities to return,1,0,summary
193,ComparableVersion.java,ul,0,0,summary
1217,TimelineDataToRetrieve.java,instead.,1,0,summary
194,ComparableVersion.java,"unknown qualifiers are considered after known qualifiers, with lexical order always case insensitive ,",0,0,summary
1218,TimelineDataToRetrieve.java,li,1,0,summary
195,ComparableVersion.java,li,0,0,summary
197,ComparableVersion.java,li,1,0,summary
1222,TimelineDataToRetrieve.java,"namely entity id, entity type and entity created time.",0,0,summary
199,ComparableVersion.java,@see a href https cwiki^apache.org confluence display mavenold versioning versioning on maven wiki a,1,0,summary
1223,TimelineDataToRetrieve.java,all fields will,0,0,summary
712,QuasiMonteCarlo.java,using a quasi monte carlo qmc method.,0,0,summary
713,QuasiMonteCarlo.java,arbitrary integrals can be approximated numerically by qmc methods.,0,0,summary
1225,TimelineDataToRetrieve.java,li,0,0,summary
714,QuasiMonteCarlo.java,"in this example,",0,0,summary
715,QuasiMonteCarlo.java,"we use a qmc method to approximate the integral i int s f x dx ,",0,0,summary
716,QuasiMonteCarlo.java,"where s 0,1 ^2 is a unit square,",0,0,summary
1228,TimelineDataToRetrieve.java,number of metrics to return.,0,0,summary
717,QuasiMonteCarlo.java,"x x 1,x 2 is a 2 dimensional point,",0,0,summary
1229,TimelineDataToRetrieve.java,this parameter is ignored if metrics are not to,0,0,summary
718,QuasiMonteCarlo.java,"and f is a function describing the inscribed circle of the square s ,",0,0,summary
1230,TimelineDataToRetrieve.java,be fetched.,0,0,summary
719,QuasiMonteCarlo.java,"f x 1 if 2x 1 1 ^2 2x 2 1 ^2 &lt 1 and f x 0 , otherwise.",0,0,summary
1231,TimelineDataToRetrieve.java,li,0,0,summary
720,QuasiMonteCarlo.java,it is easy to see that pi is equal to 4i .,0,0,summary
721,QuasiMonteCarlo.java,so an approximation of pi is obtained once i is evaluated numerically.,0,0,summary
1233,TimelineDataToRetrieve.java,be retrieved.,0,0,summary
722,QuasiMonteCarlo.java,there are better methods for computing pi.,0,0,summary
723,QuasiMonteCarlo.java,we emphasize numerical approximation of arbitrary integrals in this example.,0,0,summary
1235,TimelineDataToRetrieve.java,li,0,0,summary
724,QuasiMonteCarlo.java,"for computing many digits of pi, consider using bbp.",0,0,summary
725,QuasiMonteCarlo.java,the implementation is discussed below.,0,0,summary
1237,TimelineDataToRetrieve.java,be retrieved.,0,0,summary
726,QuasiMonteCarlo.java,mapper,0,0,summary
727,QuasiMonteCarlo.java,generate points in a unit square,0,0,summary
1239,TimelineDataToRetrieve.java,li,0,0,summary
728,QuasiMonteCarlo.java,and then count points inside outside of the inscribed circle of the square.,0,0,summary
1240,TimelineDataToRetrieve.java,ul,0,0,summary
729,QuasiMonteCarlo.java,reducer,0,0,summary
741,QuasiMonteCarlo.java,generate points in a unit square,0,0,summary
742,QuasiMonteCarlo.java,and then count points inside outside of the inscribed circle of the square.,0,0,summary
249,DBProfile.java,documentation for options.,0,0,summary
250,DBProfile.java,p,0,0,summary
251,DBProfile.java,https github^com facebook rocksdb blob master include rocksdb options^h,0,0,summary
252,DBProfile.java,p,0,0,summary
253,DBProfile.java,most tuning parameters are based on this url.,0,0,summary
254,DBProfile.java,p,0,0,summary
255,DBProfile.java,https github^com facebook rocksdb wiki setup options and basic tuning,0,0,summary
776,Query.java,the query is usually a partial record.,0,0,summary
777,Query.java,@param t type of the record to query.,0,0,summary
784,RandomKeyGenerator.java,wrapper to hold ozone keyvalidate entry.,0,0,summary
785,RandomKeyGenerator.java,validates the write done in ozone cluster.,0,0,summary
274,DelegatingSSLSocketFactory.java,"specifically, either openssl or jsse can be used.",0,0,summary
275,DelegatingSSLSocketFactory.java,openssl offers better,0,0,summary
276,DelegatingSSLSocketFactory.java,performance than jsse and is made available via the,0,0,summary
277,DelegatingSSLSocketFactory.java,a href https github^com wildfly wildfly openssl wildlfy openssl a,0,0,summary
278,DelegatingSSLSocketFactory.java,library.,0,0,summary
279,DelegatingSSLSocketFactory.java,p,0,0,summary
791,ReencryptionUpdater.java,p,0,0,summary
280,DelegatingSSLSocketFactory.java,the factory has several different modes of operation,0,0,summary
281,DelegatingSSLSocketFactory.java,ul,0,0,summary
793,ReencryptionUpdater.java,p,0,0,summary
282,DelegatingSSLSocketFactory.java,li openssl uses the wildly openssl library to delegate to the,0,0,summary
283,DelegatingSSLSocketFactory.java,system installed openssl.,0,0,summary
284,DelegatingSSLSocketFactory.java,if the wildfly openssl integration is not,0,0,summary
285,DelegatingSSLSocketFactory.java,"properly setup, an exception is thrown.",0,0,summary
797,ReencryptionUpdater.java,class to track re encryption submissions of a single zone.,0,0,summary
286,DelegatingSSLSocketFactory.java,li,0,0,summary
800,ReencryptionUpdater.java,processed.,0,0,summary
289,DelegatingSSLSocketFactory.java,li,0,0,summary
291,DelegatingSSLSocketFactory.java,it disables the gcm cipher when running on java 8.,0,0,summary
292,DelegatingSSLSocketFactory.java,li,0,0,summary
295,DelegatingSSLSocketFactory.java,li,0,0,summary
296,DelegatingSSLSocketFactory.java,ul,0,0,summary
297,DelegatingSSLSocketFactory.java,p,0,0,summary
301,DelegatingSSLSocketFactory.java,p,0,0,summary
302,DelegatingSSLSocketFactory.java,default jsse is not truly the the default jsse implementation because,0,0,summary
303,DelegatingSSLSocketFactory.java,the gcm cipher is disabled when running on java 8.,0,0,summary
304,DelegatingSSLSocketFactory.java,"however, the name",0,0,summary
305,DelegatingSSLSocketFactory.java,was not changed in order to preserve backwards compatibility.,0,0,summary
306,DelegatingSSLSocketFactory.java,"instead,",0,0,summary
307,DelegatingSSLSocketFactory.java,a new mode called default jsse with gcm delegates to the default jsse,0,0,summary
308,DelegatingSSLSocketFactory.java,implementation with no changes to the list of enabled ciphers.,0,0,summary
309,DelegatingSSLSocketFactory.java,p,0,0,summary
831,RegistryInternalConstants.java,these are the things which aren t visible to users.,0,0,summary
838,ResourceBlacklistRequest.java,@see resourcerequest,0,0,summary
839,ResourceBlacklistRequest.java,@see applicationmasterprotocol#allocate org^apache.hadoop^yarn.api^protocolrecords.allocaterequest,0,0,summary
1356,TypedEvent.java,@param t,0,0,summary
847,ResourceRequestsJsonVerifications.java,with the help of the,0,0,summary
848,ResourceRequestsJsonVerifications.java,"@link builder , users can also make verifications of the custom resource",0,0,summary
849,ResourceRequestsJsonVerifications.java,types and its values.,0,0,summary
1362,UniformSizeInputFormat.java,it looks at the copy listing and groups the contents into input splits such,0,0,summary
1363,UniformSizeInputFormat.java,that the total number of bytes to be copied for each input split is,0,0,summary
1364,UniformSizeInputFormat.java,uniform.,0,0,summary
1373,Utils.java,this class filters output part files from the given directory,0,0,summary
1374,Utils.java,it does not accept files with filenames logs and success.,0,0,summary
1375,Utils.java,this can be used to list paths of output directory as follows,0,0,summary
1376,Utils.java,"path filelist fileutil^stat2paths fs^liststatus outdir,",0,0,summary
1377,Utils.java,new outputfilesfilter,0,0,summary
1378,Utils.java,this class filters log files from directory given,0,0,summary
1379,Utils.java,it doesnt accept paths having logs.,0,0,summary
1380,Utils.java,this can be used to list paths of output directory as follows,0,0,summary
1381,Utils.java,"path filelist fileutil^stat2paths fs^liststatus outdir,",0,0,summary
1382,Utils.java,new outputlogfilter,0,0,summary
876,SafeModeException.java,client cannot modified namespace until the safe mode is off.,0,0,summary
365,DiskBalancerCluster.java,p,0,0,summary
366,DiskBalancerCluster.java,please note,0,0,summary
367,DiskBalancerCluster.java,semantics of inclusionlist and exclusionlists.,0,0,summary
368,DiskBalancerCluster.java,p,0,0,summary
369,DiskBalancerCluster.java,if a non empty inclusionlist is specified then the diskbalancer assumes that,0,0,summary
370,DiskBalancerCluster.java,the user is only interested in processing that list of nodes.,0,0,summary
371,DiskBalancerCluster.java,this node list,0,0,summary
372,DiskBalancerCluster.java,is checked against the exclusionlist and only the nodes in inclusionlist but,0,0,summary
373,DiskBalancerCluster.java,not in exclusionlist is processed.,0,0,summary
374,DiskBalancerCluster.java,p,0,0,summary
375,DiskBalancerCluster.java,"if inclusionlist is empty, then we assume that all live nodes in the nodes is",0,0,summary
376,DiskBalancerCluster.java,to be processed by diskbalancer.,0,0,summary
377,DiskBalancerCluster.java,in that case diskbalancer will avoid any,0,0,summary
378,DiskBalancerCluster.java,nodes specified in the exclusionlist but will process all nodes in the,0,0,summary
379,DiskBalancerCluster.java,cluster.,0,0,summary
380,DiskBalancerCluster.java,p,0,0,summary
1404,WritableComparator.java,p this base implementation uses the natural ordering.,0,0,summary
381,DiskBalancerCluster.java,"in other words, an empty inclusionlist is means all the nodes otherwise",0,0,summary
1405,WritableComparator.java,to define alternate,0,0,summary
382,DiskBalancerCluster.java,only a given list is processed and exclusionlist is always honored.,0,0,summary
1406,WritableComparator.java,"orderings, override @link #compare writablecomparable,writablecomparable .",0,0,summary
1407,WritableComparator.java,p one may optimize compare intensive operations by overriding,0,0,summary
1408,WritableComparator.java,"@link #compare byte ,int,int,byte ,int,int .",0,0,summary
1409,WritableComparator.java,static utility methods are,0,0,summary
1410,WritableComparator.java,provided to assist in optimized implementations of this method.,0,0,summary
899,StreamBaseRecordReader.java,a custom reader can be,0,0,summary
900,StreamBaseRecordReader.java,defined to be a recordreader with the constructor below and is selected with,0,0,summary
901,StreamBaseRecordReader.java,the option bin hadoopstreaming inputreader .,0,0,summary
902,StreamBaseRecordReader.java,@see streamxmlrecordreader,0,0,summary
910,StructureGenerator.java,constraints,0,0,summary
911,StructureGenerator.java,1,0,0,summary
912,StructureGenerator.java,"the number of subdirectories is a random number in minwidth, maxwidth .",0,0,summary
913,StructureGenerator.java,2,0,0,summary
914,StructureGenerator.java,"the maximum depth of each subdirectory is a random number 2 maxdepth 3, maxdepth .",0,0,summary
915,StructureGenerator.java,3,0,0,summary
916,StructureGenerator.java,files are randomly placed in the empty directories.,0,0,summary
917,StructureGenerator.java,the size of each,0,0,summary
918,StructureGenerator.java,file follows gaussian distribution.,0,0,summary
919,StructureGenerator.java,the generated namespace structure is described by two files in the output,0,0,summary
920,StructureGenerator.java,directory.,0,0,summary
1432,YarnAuthorizationProvider.java,it is excepted that any of the,0,0,summary
1433,YarnAuthorizationProvider.java,methods defined in this interface should be non blocking call and should not,0,0,summary
922,StructureGenerator.java,each line of the second file contains,0,0,summary
1434,YarnAuthorizationProvider.java,involve expensive computation as these method could be invoked in rpc.,0,0,summary
923,StructureGenerator.java,"the full name of a file and its size, separated by a blank.",0,0,summary
924,StructureGenerator.java,the synopsis of the command is,0,0,summary
413,EditLogTailer.java,the thread which does the actual work of tailing edits journals and,0,0,summary
925,StructureGenerator.java,java structuregenerator,0,0,summary
414,EditLogTailer.java,applying the transactions to the fsns.,0,0,summary
926,StructureGenerator.java,maxdepth maxdepth maximum depth of the directory tree default is 5.,0,0,summary
415,EditLogTailer.java,manage the active namenode proxy .,0,0,summary
927,StructureGenerator.java,minwidth minwidth minimum number of subdirectories per directories default is 1,0,0,summary
416,EditLogTailer.java,this cannot just be the a single proxy since we could,0,0,summary
928,StructureGenerator.java,maxwidth maxwidth maximum number of subdirectories per directories default is 5,0,0,summary
417,EditLogTailer.java,"failover across a number of namenodes, rather than just between an active and a standby.",0,0,summary
929,StructureGenerator.java,numoffiles #offiles the total number of files default is 10.,0,0,summary
418,EditLogTailer.java,p,0,0,summary
930,StructureGenerator.java,avgfilesize avgfilesizeinblocks average size of blocks default is 1.,0,0,summary
419,EditLogTailer.java,we lazily get a proxy to one of the configured namenodes and attempt to make the request,0,0,summary
931,StructureGenerator.java,outdir outdir output directory default is the current directory.,0,0,summary
420,EditLogTailer.java,against it.,0,0,summary
932,StructureGenerator.java,seed seed random number generator seed default is the current time.,0,0,summary
421,EditLogTailer.java,"if it doesn t succeed, either because the proxy failed to be created or the request",0,0,summary
933,StructureGenerator.java,in memory representation of a directory in memory representation of a file,0,0,summary
422,EditLogTailer.java,"failed, we try the next nn in the list.",0,0,summary
423,EditLogTailer.java,we try this up to the configuration maximum number of,0,0,summary
424,EditLogTailer.java,retries before throwing up our hands.,0,0,summary
425,EditLogTailer.java,a working proxy is retained across attempts since we,0,0,summary
426,EditLogTailer.java,expect the active namenode to switch rarely.,0,0,summary
427,EditLogTailer.java,p,0,0,summary
428,EditLogTailer.java,this mechanism is b very bad b for cases where we care about being i fast i it just,0,0,summary
429,EditLogTailer.java,blindly goes and tries namenodes.,0,0,summary
961,SwiftBadRequestException.java,data locality can t be calculated if openstack swift version is old.,0,0,summary
451,ErasureCodingPolicyManager.java,it loads customized policies and syncs with persisted ones in,0,0,summary
452,ErasureCodingPolicyManager.java,namenode image.,0,0,summary
453,ErasureCodingPolicyManager.java,this class is instantiated by the fsnamesystem.,0,0,summary
971,SwiftRestClient.java,get the current operation statistics.,0,0,summary
972,SwiftRestClient.java,@return a snapshot of the statistics,0,0,summary
461,EventWatcher.java,event watcher will send the tracked payload event after a timeout period,0,0,summary
973,SwiftRestClient.java,base class for all swift rest operations.,0,0,summary
462,EventWatcher.java,unless a confirmation from the original event completion event is arrived.,0,0,summary
974,SwiftRestClient.java,@param m request,0,0,summary
463,EventWatcher.java,@param timeout payload the type of the events which are tracked.,0,0,summary
975,SwiftRestClient.java,@param r result,0,0,summary
464,EventWatcher.java,@param completion payload the type of event which could cancel the,0,0,summary
976,SwiftRestClient.java,get the current operation statistics.,0,0,summary
465,EventWatcher.java,tracking.,0,0,summary
977,SwiftRestClient.java,@return a snapshot of the statistics,0,0,summary
981,SwiftRestClient.java,get the current operation statistics.,0,0,summary
982,SwiftRestClient.java,@return a snapshot of the statistics,0,0,summary
983,SwiftRestClient.java,generate an auth message.,0,0,summary
984,SwiftRestClient.java,@param r response,0,0,summary
985,SwiftRestClient.java,get the current operation statistics.,0,0,summary
986,SwiftRestClient.java,@return a snapshot of the statistics,0,0,summary
987,SwiftRestClient.java,create operation.,0,0,summary
989,SwiftRestClient.java,get the current operation statistics.,0,0,summary
990,SwiftRestClient.java,@return a snapshot of the statistics,0,0,summary
991,SwiftRestClient.java,delete operation.,0,0,summary
480,FairOrderingPolicy.java,if,0,0,summary
992,SwiftRestClient.java,@param r,0,0,summary
481,FairOrderingPolicy.java,sizedbasedweight is set to true then an application with high demand,0,0,summary
482,FairOrderingPolicy.java,may be prioritized ahead of an application with less usage.,0,0,summary
483,FairOrderingPolicy.java,this,0,0,summary
484,FairOrderingPolicy.java,"is to offset the tendency to favor small apps, which could result in",0,0,summary
486,FairOrderingPolicy.java,"continuously optional, default false",0,0,summary
1536,KVStore.java,kvstore instances are thread safe for both reads and writes.,0,0,summary
1537,KVStore.java,p,1,0,summary
1448,ChunkFetchSuccess.java,"similarly, the client side decoding will reuse the netty bytebuf as the buffer.",0,0,summary
1588,StreamHandle.java,this is used by @link org^apache.spark^network.shuffle^oneforoneblockfetcher .,1,0,summary
1595,UploadBlockStream.java,the actual block data is not contained here.,0,0,summary
1596,UploadBlockStream.java,it will be passed to the streamcallbackwithid,1,0,summary
1597,UploadBlockStream.java,that is returned from rpchandler^receivestream,0,0,summary
1471,JavaRecord.java,java bean class to be used with the example javasqlnetworkwordcount.,1,0,summary
1477,JavaStreamingTestExample.java,"the rows of the text files must be in the form boolean, double .",0,0,summary
1478,JavaStreamingTestExample.java,for example,1,0,summary
1479,JavaStreamingTestExample.java,"false, 392",0,0,summary
1480,JavaStreamingTestExample.java,"true, 9932",1,0,summary
1481,JavaStreamingTestExample.java,usage,0,0,summary
1482,JavaStreamingTestExample.java,javastreamingtestexample datadir batchduration numbatchestimeout,1,0,summary
1483,JavaStreamingTestExample.java,to run on your local machine using the directory datadir with 5 seconds between each batch and,0,0,summary
1484,JavaStreamingTestExample.java,"a timeout after 100 insignificant batches, call",1,0,summary
1485,JavaStreamingTestExample.java,bin run example mllib^javastreamingtestexample datadir 5 100,0,0,summary
1486,JavaStreamingTestExample.java,as you add text files to datadir the significance test wil continually update every,1,0,summary
1487,JavaStreamingTestExample.java,batchduration seconds until the test becomes significant p value 005 or the number of,0,0,summary
1488,JavaStreamingTestExample.java,batches processed exceeds numbatchestimeout .,1,0,summary
1506,KVStore.java,p,0,0,summary
1507,KVStore.java,there are two main features provided by the implementations of this interface,0,0,summary
1508,KVStore.java,p,0,0,summary
1509,KVStore.java,h3 serialization h3,0,0,summary
1510,KVStore.java,p,0,0,summary
1511,KVStore.java,"if the underlying data store requires serialization, data will be serialized to and deserialized",0,0,summary
1512,KVStore.java,"using a @link kvstoreserializer , which can be customized by the application.",0,0,summary
1513,KVStore.java,the serializer is,0,0,summary
1514,KVStore.java,"based on jackson, so it supports all the jackson annotations for controlling the serialization of",0,0,summary
1515,KVStore.java,app defined types.,0,0,summary
1516,KVStore.java,p,0,0,summary
1517,KVStore.java,p,0,0,summary
1518,KVStore.java,data is also automatically compressed to save disk space.,0,0,summary
1519,KVStore.java,p,0,0,summary
1520,KVStore.java,h3 automatic key management h3,0,0,summary
1521,KVStore.java,p,0,0,summary
1522,KVStore.java,"when using the built in key management, the implementation will automatically create unique",0,0,summary
1523,KVStore.java,keys for each type written to the store.,0,0,summary
1524,KVStore.java,"keys are based on the type name, and always start",0,0,summary
1525,KVStore.java,with the prefix character so that it s easy to use both manual and automatic key,0,0,summary
1526,KVStore.java,management apis without conflicts .,0,0,summary
1527,KVStore.java,p,0,0,summary
1528,KVStore.java,p,0,0,summary
1529,KVStore.java,another feature of automatic key management is indexing by annotating fields or methods of,0,0,summary
1530,KVStore.java,"objects written to the store with @link kvindex , indices are created to sort the data",0,0,summary
1531,KVStore.java,by the values of those properties.,0,0,summary
1532,KVStore.java,this makes it possible to provide sorting without having,0,0,summary
1533,KVStore.java,to load all instances of those types from the store.,0,0,summary
1534,KVStore.java,p,0,0,summary
1535,KVStore.java,p,0,0,summary
2048,ICodeReaderFactory.java,@noreference this interface is not intended to be referenced by clients.,0,0,summary
2055,ICPointerType.java,@noimplement this interface is not intended to be implemented by clients.,1,0,summary
2059,ICPPAliasTemplateInstance.java,@since 55,0,0,summary
2060,ICPPAliasTemplateInstance.java,@noextend this interface is not intended to be extended by clients.,1,0,summary
2061,ICPPAliasTemplateInstance.java,@noimplement this interface is not intended to be implemented by clients.,0,0,summary
2068,ICPPASTLinkageSpecification.java,@noextend this interface is not intended to be extended by clients.,1,0,summary
2069,ICPPASTLinkageSpecification.java,@noimplement this interface is not intended to be implemented by clients.,0,0,summary
2581,TypedCDTViewerFilter.java,see org^eclipse.cdt^internal.ui^dialogs.typedviewerfilter,1,0,summary
2582,TypedCDTViewerFilter.java,@noextend this class is not intended to be subclassed by clients.,0,0,summary
2586,UncallCommandHandler.java,@since 70,1,0,summary
2075,ICPPASTVirtSpecifier.java,"there are two virt specifiers, final and override .",0,0,summary
2076,ICPPASTVirtSpecifier.java,@noimplement this interface is not intended to be implemented by clients.,1,0,summary
2077,ICPPASTVirtSpecifier.java,@noextend this interface is not intended to be extended by clients.,0,0,summary
2078,ICPPASTVirtSpecifier.java,@since 57,1,0,summary
2590,UPCKeyword.java,@author mike kucera,0,0,summary
2594,UPCLanguage.java,@author mike kucera,1,0,summary
2085,ICPPPointerToMemberType.java,@noimplement this interface is not intended to be implemented by clients.,0,0,summary
2598,VMHasChildrenUpdate.java,@see vmviewerupdate,1,0,summary
2599,VMHasChildrenUpdate.java,@since 10,0,0,summary
2090,ICSourceNotFoundDescription.java,an instance is usually provided by an adapter.,1,0,summary
2604,WhiteSpaceOptions.java,preview snippets.,0,0,summary
2605,WhiteSpaceOptions.java,"private void createbeforeellipsis map workingvalues, innernode parent createoption parent, workingvalues, formattermessages^whitespaceoptions vararg parameter, defaultcodeformatterconstants^formatter insert space before ellipsis, vararg parameter preview private void createafterellipsis map workingvalues, innernode parent createoption parent, workingvalues, formattermessages^whitespaceoptions vararg parameter, defaultcodeformatterconstants^formatter insert space after ellipsis, vararg parameter preview syntax element tree private innernode createreturntree map workingvalues, innernode parent final innernode root new innernode parent, workingvalues, formattermessages^whitespaceoptions return createoption root, workingvalues, formattermessages^whitespacetabpage before parenthesized expressions, defaultcodeformatterconstants^formatter insert space before parenthesized expression in return, return preview return root private innernode createthrowtree map workingvalues, innernode parent final innernode root new innernode parent, workingvalues, formattermessages^whitespaceoptions throw createoption root, workingvalues, formattermessages^whitespacetabpage before parenthesized expressions, defaultcodeformatterconstants^formatter insert space before parenthesized expression in throw, throw preview return root",1,0,summary
2606,WhiteSpaceOptions.java,represents a node in the options tree.,0,0,summary
2607,WhiteSpaceOptions.java,preview snippets.,1,0,summary
2096,IDsfDebugServicesFactory.java,@since 11,0,0,summary
2608,WhiteSpaceOptions.java,"private void createbeforeellipsis map workingvalues, innernode parent createoption parent, workingvalues, formattermessages^whitespaceoptions vararg parameter, defaultcodeformatterconstants^formatter insert space before ellipsis, vararg parameter preview private void createafterellipsis map workingvalues, innernode parent createoption parent, workingvalues, formattermessages^whitespaceoptions vararg parameter, defaultcodeformatterconstants^formatter insert space after ellipsis, vararg parameter preview syntax element tree private innernode createreturntree map workingvalues, innernode parent final innernode root new innernode parent, workingvalues, formattermessages^whitespaceoptions return createoption root, workingvalues, formattermessages^whitespacetabpage before parenthesized expressions, defaultcodeformatterconstants^formatter insert space before parenthesized expression in return, return preview return root private innernode createthrowtree map workingvalues, innernode parent final innernode root new innernode parent, workingvalues, formattermessages^whitespaceoptions throw createoption root, workingvalues, formattermessages^whitespacetabpage before parenthesized expressions, defaultcodeformatterconstants^formatter insert space before parenthesized expression in throw, throw preview return root",1,0,summary
2609,WhiteSpaceOptions.java,a node representing a group of options in the tree.,0,0,summary
2610,WhiteSpaceOptions.java,preview snippets.,1,0,summary
2611,WhiteSpaceOptions.java,"private void createbeforeellipsis map workingvalues, innernode parent createoption parent, workingvalues, formattermessages^whitespaceoptions vararg parameter, defaultcodeformatterconstants^formatter insert space before ellipsis, vararg parameter preview private void createafterellipsis map workingvalues, innernode parent createoption parent, workingvalues, formattermessages^whitespaceoptions vararg parameter, defaultcodeformatterconstants^formatter insert space after ellipsis, vararg parameter preview syntax element tree private innernode createreturntree map workingvalues, innernode parent final innernode root new innernode parent, workingvalues, formattermessages^whitespaceoptions return createoption root, workingvalues, formattermessages^whitespacetabpage before parenthesized expressions, defaultcodeformatterconstants^formatter insert space before parenthesized expression in return, return preview return root private innernode createthrowtree map workingvalues, innernode parent final innernode root new innernode parent, workingvalues, formattermessages^whitespaceoptions throw createoption root, workingvalues, formattermessages^whitespacetabpage before parenthesized expressions, defaultcodeformatterconstants^formatter insert space before parenthesized expression in throw, throw preview return root",0,0,summary
2612,WhiteSpaceOptions.java,a node representing a concrete white space option in the tree.,1,0,summary
2101,IGDBTraceControl.java,it is used to do such things as start and stop tracing.,0,0,summary
2102,IGDBTraceControl.java,@since 30,1,0,summary
2103,IGDBTraceControl.java,gdb specific part,0,0,summary
2104,IGDBTraceControl.java,marker interface for a context on which trace operations can be performed,1,0,summary
2105,IGDBTraceControl.java,gdb specific part,0,0,summary
2106,IGDBTraceControl.java,specific trace record context.,1,0,summary
2107,IGDBTraceControl.java,it describes tracing data.,0,0,summary
2108,IGDBTraceControl.java,gdb specific part,1,0,summary
2109,IGDBTraceControl.java,this is the model data interface that corresponds to itracerecorddmcontext.,0,0,summary
2110,IGDBTraceControl.java,gdb specific part,1,0,summary
2111,IGDBTraceControl.java,trace events,0,0,summary
2112,IGDBTraceControl.java,gdb specific part @since 44,1,0,summary
1607,AbstractCPropertyTab.java,"in this case, we ll able to use",0,0,summary
1608,AbstractCPropertyTab.java,a lot of utility methods via provider link.,1,0,summary
1609,AbstractCPropertyTab.java,"in particular, it allows to get current project,",0,0,summary
1610,AbstractCPropertyTab.java,configuration etc see icpropertyprovider interface.,1,0,summary
1611,AbstractCPropertyTab.java,a standard way to create buttons ins edit del etc,0,0,summary
1612,AbstractCPropertyTab.java,and to handle their events see buttonpressed int,1,0,summary
1613,AbstractCPropertyTab.java,several utility methods to create widgets in the,0,0,summary
1614,AbstractCPropertyTab.java,"uniform manner setuplabel , setuptext etc .",1,0,summary
1615,AbstractCPropertyTab.java,means to handle control messages which are the main,0,0,summary
1616,AbstractCPropertyTab.java,communication way for new cdt model pages and tabs.,1,0,summary
2128,IInclude.java,@noextend this interface is not intended to be extended by clients.,0,0,summary
2129,IInclude.java,@noimplement this interface is not intended to be implemented by clients.,1,0,summary
2136,IMacroEntry.java,@noextend this interface is not intended to be extended by clients.,0,0,summary
2137,IMacroEntry.java,@noimplement this interface is not intended to be implemented by clients.,1,0,summary
2141,IMIBackend.java,@since 11,0,0,summary
2142,IMIBackend.java,event indicating that the back end process has started or terminated.,1,0,summary
1631,AbstractTrialUndoActionProvider.java,action for a null rule,0,0,summary
2147,IMSASTDeclspecList.java,@since 66,1,0,summary
2148,IMSASTDeclspecList.java,@noextend this interface is not intended to be extended by clients.,0,0,summary
2149,IMSASTDeclspecList.java,@noimplement this interface is not intended to be implemented by clients.,1,0,summary
1638,AddLineBreakpointActionDelegate.java,initially derived from addfunctionbreakpointactiondelegate,0,0,summary
1642,AddMemoryBlocks.java,p,1,0,summary
2155,INodeFactory.java,@noextend this interface is not intended to be extended by clients.,0,0,summary
2161,IPropertyChangeParticipant.java,p,1,0,summary
1650,AddMemoryBlocks.java,p,0,0,summary
2162,IPropertyChangeParticipant.java,clients may implement this interface.,1,0,summary
1651,AddMemoryBlocks.java,@since 32,0,0,summary
2163,IPropertyChangeParticipant.java,p,1,0,summary
1652,AddMemoryBlocks.java,"in order to avoid duplicating the addmemoryblocks method one version for expressions, one for memory space address, we pass in a an opaque parameter and let the logic within addmemoryblocks differentiate where needed via isinstanceof request object used to get the memory spaces",0,0,summary
2164,IPropertyChangeParticipant.java,@since 50,1,0,summary
2172,IRefreshAllTarget.java,@since 11,0,0,summary
1662,AllTemplateEngineTests.java,the test suite will execute all the testcases added to the suite.,1,0,summary
1663,AllTemplateEngineTests.java,@since 40,0,0,summary
2176,IRegisters2.java,@since 26,1,0,summary
1668,AutoconfMacroParameterListValidator.java,it is modified from the cdt class cparameterlistvalidator,0,0,summary
2180,IScannerInfoConsoleParser.java,@author vhirsl,1,0,summary
1669,AutoconfMacroParameterListValidator.java,@author jjohnstn,0,0,summary
1673,AutotoolsProblemMarkerInfo.java,@noextend this class is not intended to be subclassed by clients.,1,0,summary
2185,ITestItem.java,@noextend this interface is not intended to be extended by clients.,0,0,summary
2186,ITestItem.java,@noimplement this interface is not intended to be implemented by clients.,1,0,summary
1679,C99BuildASTParserAction.java,@author mike kucera,0,0,summary
2196,IViewInMemory.java,@since 74,1,0,summary
1685,CConfigurationDescriptionCache.java,ol,0,0,summary
1686,CConfigurationDescriptionCache.java,li initialization,1,0,summary
1687,CConfigurationDescriptionCache.java,ul,0,0,summary
1688,CConfigurationDescriptionCache.java,li after eclipse started a project is being opened.,1,0,summary
1689,CConfigurationDescriptionCache.java,a new cconfigurationdescriptioncache is created,0,0,summary
1690,CConfigurationDescriptionCache.java,"with cconfigurationdescriptioncache icstorageelement storage, cprojectdescription parent constructor.",1,0,summary
1691,CConfigurationDescriptionCache.java,li any clients needed icconfigurationdescription get cconfigurationdescription using constructor,0,0,summary
1692,CConfigurationDescriptionCache.java,"cconfigurationdescription cconfigurationdata data, string buildsystemid, icdataproxycontainer cr",1,0,summary
1693,CConfigurationDescriptionCache.java,where the cconfigurationdescriptioncache is passed as data.,0,0,summary
1694,CConfigurationDescriptionCache.java,the reference to cache is kept in field fcfgcache.,1,0,summary
1695,CConfigurationDescriptionCache.java,"li fcfgcache is used to getspecsettings cconfigurationspecsettings, after that fcfgcache is set to null.",0,0,summary
1696,CConfigurationDescriptionCache.java,ul,1,0,summary
1697,CConfigurationDescriptionCache.java,li user enters project properties settings,0,0,summary
1698,CConfigurationDescriptionCache.java,ul,1,0,summary
1699,CConfigurationDescriptionCache.java,li another cconfigurationdescription settings configuration created using the same constructor setting fcfgcache,0,0,summary
1700,CConfigurationDescriptionCache.java,to the cconfigurationdescriptioncache.,1,0,summary
1701,CConfigurationDescriptionCache.java,ul,0,0,summary
1702,CConfigurationDescriptionCache.java,li user changes settings in the settings configuration cconfigurationdescription and saves it,1,0,summary
1703,CConfigurationDescriptionCache.java,ul,0,0,summary
1704,CConfigurationDescriptionCache.java,li new cconfigurationdescriptioncache is created from the cconfigurationdescription via constructor,1,0,summary
1705,CConfigurationDescriptionCache.java,"cconfigurationdescriptioncache icconfigurationdescription basedescription, .",0,0,summary
1706,CConfigurationDescriptionCache.java,where,1,0,summary
1707,CConfigurationDescriptionCache.java,basedescription is saved as fbasedescription.,0,0,summary
2219,MachOBinaryParserPage.java,@noextend this class is not intended to be subclassed by clients.,1,0,summary
1708,CConfigurationDescriptionCache.java,li cconfigurationdescriptioncache^applydata .,0,0,summary
1709,CConfigurationDescriptionCache.java,is used to persist the data.,1,0,summary
2221,ManageConfigRunner.java,@noextend this class is not intended to be subclassed by clients.,0,0,summary
1710,CConfigurationDescriptionCache.java,at that point,1,0,summary
2223,MIAsyncErrorProcessor.java,in some cases gdb reports exec commands failure after the ^running event is fired.,0,0,summary
1712,CConfigurationDescriptionCache.java,ul,1,0,summary
1713,CConfigurationDescriptionCache.java,ol,0,0,summary
1714,CConfigurationDescriptionCache.java,@see icconfigurationdescription,1,0,summary
1715,CConfigurationDescriptionCache.java,@see cconfigurationdescription,0,0,summary
1716,CConfigurationDescriptionCache.java,@see cprojectdescriptionevent,1,0,summary
2238,MIAsyncErrorProcessor.java,@since 53,0,0,summary
2246,MIBreakpointsSynchronizer.java,p,1,0,summary
2247,MIBreakpointsSynchronizer.java,"bug 530377 prior to fixing 530377, events that arrived from gdb faster than",0,0,summary
2248,MIBreakpointsSynchronizer.java,dsf eclipse fully processed them could cause the state within the,1,0,summary
2249,MIBreakpointsSynchronizer.java,synchronizer and manager to become corrupt.,0,0,summary
2250,MIBreakpointsSynchronizer.java,this would happen because it,1,0,summary
2251,MIBreakpointsSynchronizer.java,"takes multiple dsf stages to complete handling 1 event, so the handling of",0,0,summary
2252,MIBreakpointsSynchronizer.java,the next event would become intermingled.,1,0,summary
2253,MIBreakpointsSynchronizer.java,that violated many assumptions in,0,0,summary
2254,MIBreakpointsSynchronizer.java,the code that the code run in the respective requestmonitor would be on the,1,0,summary
2255,MIBreakpointsSynchronizer.java,same state.,0,0,summary
2256,MIBreakpointsSynchronizer.java,this is an unsuprising assumption based on the general idea of,1,0,summary
2257,MIBreakpointsSynchronizer.java,dsf as not requiring the normal synchronization primitives as everything is,0,0,summary
2258,MIBreakpointsSynchronizer.java,single threaded.,1,0,summary
2259,MIBreakpointsSynchronizer.java,"to resolve this problem, there is some code",0,0,summary
2260,MIBreakpointsSynchronizer.java,@link #queueevent breakpointevent that ensures each event is fully,1,0,summary
2261,MIBreakpointsSynchronizer.java,processed before the next event starts processing.,0,0,summary
2262,MIBreakpointsSynchronizer.java,@since 42,1,0,summary
2263,MIBreakpointsSynchronizer.java,catchpoint expressions gdb tracepoint commands,0,0,summary
2264,MIBreakpointsSynchronizer.java,class to store an event that needs to be performed by the synchronizer,0,0,summary
2265,MIBreakpointsSynchronizer.java,@see mibreakpointssynchronizer class documentation for design comments,0,0,summary
1755,CDebugModelPresentation.java,@see idebugmodelpresentation,0,0,summary
1757,CElementDelta.java,@see icelementdelta,0,0,summary
1762,ClangToolChain.java,@author dschaefer,0,0,summary
1767,CommonBuildTab.java,@since 91,0,0,summary
1770,ContainerTabModel.java,@since 12.1,0,0,summary
1771,ContainerTabModel.java,@author jjohnstn,0,0,summary
1775,CoreBuildGenericLaunchConfigProvider.java,@since 83,0,0,summary
2287,MIDataListRegisterNames.java,data list register names regno,0,0,summary
1784,CPPDeferredFunction.java,a compiler would resolve it during instantiation.,0,0,summary
1788,CPPImplicitVariable.java,for example the initializer of a structured binding decomposition dcl^struct.bind,0,0,summary
1789,CPPImplicitVariable.java,"code auto first, second decomposed code",0,0,summary
2301,MIEnvironmentDirectory.java,environment directory r pathdir,0,0,summary
1790,CPPImplicitVariable.java,the code initializerevaluation code has to be supplied.,0,0,summary
2303,MIEnvironmentDirectory.java,r will first reset the path to its default,0,0,summary
2309,MIReverseDebugEnabler.java,@since 42,0,0,summary
1801,CUIPreferenceInitializer.java,@noextend this class is not intended to be subclassed by clients.,0,0,summary
2313,MIStack.java,provide the data.,0,0,summary
2314,MIStack.java,sub classes must supply the miarg object.,0,0,summary
2315,MIStack.java,class to track stack depth and debug frames for our internal cache,0,0,summary
2316,MIStack.java,"a map of threadid framescacheinfo, that can be cleared based on a context.",0,0,summary
2317,MIStack.java,we use this cache for a few reasons,0,0,summary
2318,MIStack.java,br,0,0,summary
2319,MIStack.java,"first, two commands such as",0,0,summary
2320,MIStack.java,pre,0,0,summary
1809,DefaultEnvironmentContextInfo.java,"used to represent the configuration, project, workspace and eclipse environment contexts",0,0,summary
2321,MIStack.java,stack info depth 11,0,0,summary
1810,DefaultEnvironmentContextInfo.java,@since 30,0,0,summary
2322,MIStack.java,stack info depth 2,0,0,summary
2323,MIStack.java,pre,0,0,summary
2324,MIStack.java,would both be sent to gdb because the command cache sees them as different.,0,0,summary
2325,MIStack.java,this cache allows us to know that if we already asked for a stack depth,0,0,summary
2326,MIStack.java,we can potentially re use the answer.,0,0,summary
2327,MIStack.java,br,0,0,summary
2328,MIStack.java,the same concept is applicable for the stack list frames command with different limits.,0,0,summary
2329,MIStack.java,"also, the stack depth can be deduced from the frames list, so we don t need to ask gdb for it again.",0,0,summary
2330,MIStack.java,p,0,0,summary
2331,MIStack.java,the second reason is that gdb is unreliable when it comes to returning frames.,0,0,summary
2332,MIStack.java,the mi protocol only allows to reply,0,0,summary
2333,MIStack.java,with data or with error.,0,0,summary
2334,MIStack.java,"when gdb is unwinding sometimes it gets both, and while the console cli protocol has no",0,0,summary
1823,DisplayDsfExecutor.java,@since 10,0,0,summary
2335,MIStack.java,"problem with that, for mi, gdb replies randomly, sometimes with data, sometimes with error.",0,0,summary
2336,MIStack.java,if we cache the valid data,0,0,summary
2337,MIStack.java,it will eliminate the issue with invalid data on subsequent invocations.,0,0,summary
2338,MIStack.java,we don t cache errors.,0,0,summary
2339,MIStack.java,base class for the iframedmdata object that uses an miframe object to,0,0,summary
2340,MIStack.java,provide the data.,0,0,summary
1829,DocCommentOwnerBlock.java,em this class is not intended for use outside of cdt em,0,0,summary
2341,MIStack.java,sub classes must provide the miframe object,0,0,summary
1830,DocCommentOwnerBlock.java,@noextend this class is not intended to be subclassed by clients.,0,0,summary
1831,DocCommentOwnerBlock.java,@noinstantiate this class is not intended to be instantiated by clients.,0,0,summary
1836,DOMGCCParserExtensionTestSuite.java,@author jcamelon,0,0,summary
1838,DOMParserTestSuite.java,@author jcamelon,0,0,summary
1840,DsfDebugUITools.java,@since 11,0,0,summary
1847,ElementNumberFormatsContribution.java,@since 22,0,0,summary
1850,FindStdLibPath.java,the purpose is to find a path where stdc library is located.,0,0,summary
1851,FindStdLibPath.java,currently the shell script is only for linux.,0,0,summary
1856,FoldingConfigurationBlock.java,@since 30,0,0,summary
1860,FormattedValueTests.java,@since 22,0,0,summary
2372,MIThreadCreatedEvent.java,this can only be detected by gdb mi after gdb 68.,0,0,summary
1861,FormattedValueTests.java,helper class that stores some element paths and nodes using a certain format,0,0,summary
2374,MIThreadGroupAddedEvent.java,"thread group added,id i1",0,0,summary
2375,MIThreadGroupAddedEvent.java,this can only be detected by gdb mi with gdb 72.,0,0,summary
2376,MIThreadGroupAddedEvent.java,@since 51,0,0,summary
1865,GCCKeywords.java,@noextend this interface is not intended to be extended by clients.,0,0,summary
1866,GCCKeywords.java,@noinstantiate this class is not intended to be instantiated by clients.,0,0,summary
2380,MultiCfgContributedEnvironment.java,@noextend this class is not intended to be subclassed by clients.,0,0,summary
1869,GDBControl_7_12.java,need a new finallaunchsequence for gdb 712,0,0,summary
1870,GDBControl_7_12.java,@since 52,0,0,summary
2383,MultiLaunchConfigurationTabGroup.java,"@deprecated see bug 517722, launch groups are now part of platform.",0,0,summary
2386,PDOMDependencyGenerator.java,@author doug schaefer,0,0,summary
1875,GdbExpressionVMProvider.java,"to understand why this is necessary, see gdbvariablevmnode.",0,0,summary
2387,PDOMDependencyGenerator.java,@noextend this class is not intended to be subclassed by clients.,0,0,summary
2388,PDOMDependencyGenerator.java,@noinstantiate this class is not intended to be instantiated by clients.,0,0,summary
1880,GDBSourceLookup.java,@since 50,0,0,summary
1885,GnuMakefileGenerator.java,@since 12,0,0,summary
2397,ProblemMarkerManager.java,visitors used to filter the element delta changes,0,0,summary
1886,GnuMakefileGenerator.java,@noinstantiate this class is not intended to be instantiated by clients.,0,0,summary
1887,GnuMakefileGenerator.java,string constants for makefile contents and messages private static final string auto dep comment ^autodeps non nls 1 private static final string message managedmakebuilder^message non nls 1 private static final string build error message ^error non nls 1 private static final string dep incl comment ^module.dep^includes non nls 1 private static final string mod incl comment ^module.make^includes non nls 1 private itool buildtools private boolean buildtoolsused private imanagedbuildinfo info private set outputextensionsset maps of macro names string to values list dependency file variables private vector dependencymakefiles ipath s relative to the top build directory or absolute,0,0,summary
1888,GnuMakefileGenerator.java,imanagedbuildermakefilegenerator m e t h o d s,0,0,summary
1889,GnuMakefileGenerator.java,m a k e f i l e s p o p u l a t i o n m e t h o d s,0,0,summary
1890,GnuMakefileGenerator.java,m a i n makefile m a k e f i l e m e t h o d s,0,0,summary
1891,GnuMakefileGenerator.java,s o u r c e s sources^mk m a k e f i l e m e t h o d s,0,0,summary
1892,GnuMakefileGenerator.java,f r a g m e n t subdir^mk m a k e f i l e m e t h o d s,0,0,summary
1893,GnuMakefileGenerator.java,m a k e f i l eg e n e r a t i o n c o m m o n m e t h o d s,0,0,summary
2405,ProcStatParser.java,@author marc dumais,0,0,summary
1894,GnuMakefileGenerator.java,adds a macro addition prefix to a map of macro names to entries.,0,0,summary
1895,GnuMakefileGenerator.java,entry prefixes look like,0,0,summary
2407,ProcStatParser.java,@see also http www^linuxhowtos.org system procstat^htm,0,0,summary
1896,GnuMakefileGenerator.java,c srcs,0,0,summary
1897,GnuMakefileGenerator.java,"addprefix root ,",0,0,summary
1898,GnuMakefileGenerator.java,r e s o u r c e v i s i t o r m e t h o d s,0,0,summary
1899,GnuMakefileGenerator.java,o t h e r m e t h o d s,0,0,summary
2411,QtPDOMNameIndex.java,"this is equivalent to the java type map string, list pdomname .",0,0,summary
1900,GnuMakefileGenerator.java,"process a string denoting a filepath in a way compatible for gnu make rules, handling",0,0,summary
1901,GnuMakefileGenerator.java,windows drive letters and whitespace appropriately.,0,0,summary
1902,GnuMakefileGenerator.java,p p,0,0,summary
2414,RenameCSourceFolderChange.java,@author ee4 graf ifs,0,0,summary
1903,GnuMakefileGenerator.java,the context these paths appear in is on the right hand side of a rule header.,0,0,summary
1904,GnuMakefileGenerator.java,ie,0,0,summary
1905,GnuMakefileGenerator.java,p p,0,0,summary
1906,GnuMakefileGenerator.java,target dep1 dep2 dep3,0,0,summary
1907,GnuMakefileGenerator.java,p,0,0,summary
1908,GnuMakefileGenerator.java,@param path the string denoting the path to process,0,0,summary
1909,GnuMakefileGenerator.java,@throws nullpointerexception is path is null,0,0,summary
1910,GnuMakefileGenerator.java,@return a suitable make rule compatible path,0,0,summary
1912,GnuMakefileGenerator.java,what resources have been changed.,0,0,summary
1913,GnuMakefileGenerator.java,the logic is very simple.,0,0,summary
1914,GnuMakefileGenerator.java,if a,0,0,summary
1916,GnuMakefileGenerator.java,in which they are located are dirty so the makefile fragments for them,0,0,summary
1917,GnuMakefileGenerator.java,have to be regenerated.,0,0,summary
1918,GnuMakefileGenerator.java,p,0,0,summary
2431,RulerColumnDescriptor.java,instances can be obtained from a @link rulercolumnregistry .,0,0,summary
1920,GnuMakefileGenerator.java,itself.,0,0,summary
2432,RulerColumnDescriptor.java,@since 72,0,0,summary
1921,GnuMakefileGenerator.java,we are relying on make to do the right things when confronted,0,0,summary
2433,RulerColumnDescriptor.java,@noinstantiate this class is not intended to be instantiated by clients.,0,0,summary
1922,GnuMakefileGenerator.java,with a dependency on a moved header file.,0,0,summary
1923,GnuMakefileGenerator.java,"that said, make will treat",0,0,summary
1924,GnuMakefileGenerator.java,the missing header file in a dependency rule as a target it has to build,0,0,summary
1925,GnuMakefileGenerator.java,unless told otherwise.,0,0,summary
1926,GnuMakefileGenerator.java,these dummy targets are added to the makefile,0,0,summary
1927,GnuMakefileGenerator.java,to avoid a missing target error.,0,0,summary
1928,GnuMakefileGenerator.java,string constants for makefile contents and messages private static final string auto dep comment ^autodeps non nls 1 private static final string message managedmakebuilder^message non nls 1 private static final string build error message ^error non nls 1 private static final string dep incl comment ^module.dep^includes non nls 1 private static final string mod incl comment ^module.make^includes non nls 1 private itool buildtools private boolean buildtoolsused private imanagedbuildinfo info private set outputextensionsset maps of macro names string to values list dependency file variables private vector dependencymakefiles ipath s relative to the top build directory or absolute,0,0,summary
1929,GnuMakefileGenerator.java,imanagedbuildermakefilegenerator m e t h o d s,0,0,summary
2441,SCDOptionsEnum.java,@author vhirsl,0,0,summary
1930,GnuMakefileGenerator.java,m a k e f i l e s p o p u l a t i o n m e t h o d s,0,0,summary
1931,GnuMakefileGenerator.java,m a i n makefile m a k e f i l e m e t h o d s,0,0,summary
1932,GnuMakefileGenerator.java,s o u r c e s sources^mk m a k e f i l e m e t h o d s,0,0,summary
1933,GnuMakefileGenerator.java,f r a g m e n t subdir^mk m a k e f i l e m e t h o d s,0,0,summary
1934,GnuMakefileGenerator.java,m a k e f i l eg e n e r a t i o n c o m m o n m e t h o d s,0,0,summary
2446,SourceLookupTest.java,p,0,0,summary
1935,GnuMakefileGenerator.java,adds a macro addition prefix to a map of macro names to entries.,0,0,summary
1936,GnuMakefileGenerator.java,entry prefixes look like,0,0,summary
1937,GnuMakefileGenerator.java,c srcs,0,0,summary
1938,GnuMakefileGenerator.java,"addprefix root ,",0,0,summary
2450,SourceLookupTest.java,"located in the @link #build path directory, but it is now located in the",0,0,summary
1939,GnuMakefileGenerator.java,r e s o u r c e v i s i t o r m e t h o d s,0,0,summary
2451,SourceLookupTest.java,@link basetestcase#source path directory.,0,0,summary
1940,GnuMakefileGenerator.java,o t h e r m e t h o d s,0,0,summary
2452,SourceLookupTest.java,p,0,0,summary
1941,GnuMakefileGenerator.java,"process a string denoting a filepath in a way compatible for gnu make rules, handling",0,0,summary
2453,SourceLookupTest.java,the wild card in sourcelookup ^exe can be one of the following to cover the,0,0,summary
1942,GnuMakefileGenerator.java,windows drive letters and whitespace appropriately.,0,0,summary
2454,SourceLookupTest.java,different effective types of source lookups that need to be done depending on,0,0,summary
1943,GnuMakefileGenerator.java,p p,0,0,summary
2455,SourceLookupTest.java,how the program was compiled.,0,0,summary
1944,GnuMakefileGenerator.java,the context these paths appear in is on the right hand side of a rule header.,0,0,summary
2456,SourceLookupTest.java,each of these options produces different debug,0,0,summary
1945,GnuMakefileGenerator.java,ie,0,0,summary
2457,SourceLookupTest.java,information about where to find the source file.,0,0,summary
1946,GnuMakefileGenerator.java,p p,0,0,summary
2458,SourceLookupTest.java,see the makefile for more,0,0,summary
1947,GnuMakefileGenerator.java,target dep1 dep2 dep3,0,0,summary
2459,SourceLookupTest.java,information.,0,0,summary
1948,GnuMakefileGenerator.java,p,0,0,summary
2460,SourceLookupTest.java,ul,0,0,summary
1949,GnuMakefileGenerator.java,@param path the string denoting the path to process,0,0,summary
2461,SourceLookupTest.java,li b ac b absolute and canonical path no .,0,0,summary
1950,GnuMakefileGenerator.java,@throws nullpointerexception is path is null,0,0,summary
2462,SourceLookupTest.java,.,0,0,summary
1951,GnuMakefileGenerator.java,@return a suitable make rule compatible path,0,0,summary
2463,SourceLookupTest.java,in path passed to gcc,0,0,summary
1952,GnuMakefileGenerator.java,this class is used to recursively walk the project and determine which,0,0,summary
2464,SourceLookupTest.java,li,0,0,summary
1953,GnuMakefileGenerator.java,modules contribute buildable source files.,0,0,summary
2466,SourceLookupTest.java,.,0,0,summary
2467,SourceLookupTest.java,in path passed to gcc,0,0,summary
2468,SourceLookupTest.java,li,0,0,summary
2470,SourceLookupTest.java,.,0,0,summary
2471,SourceLookupTest.java,in path passed to gcc,0,0,summary
2472,SourceLookupTest.java,li,0,0,summary
2474,SourceLookupTest.java,.,0,0,summary
2475,SourceLookupTest.java,in path passed to gcc,0,0,summary
2476,SourceLookupTest.java,li,0,0,summary
2478,SourceLookupTest.java,ul,0,0,summary
2479,SourceLookupTest.java,"in addition, there can also be a b dwarf2 b in the name.",0,0,summary
2480,SourceLookupTest.java,that means it is,0,0,summary
2481,SourceLookupTest.java,"designed to run with gdb 74, see comment in makefile for olddwarfflags.",0,0,summary
2482,SourceLookupTest.java,p,0,0,summary
2483,SourceLookupTest.java,the result of the variations on compilation arguments means that some of the,0,0,summary
2484,SourceLookupTest.java,tests are parameterised.,0,0,summary
2485,SourceLookupTest.java,p,0,0,summary
2486,SourceLookupTest.java,some of the cdt source lookup features require newer versions of gdb than,0,0,summary
2487,SourceLookupTest.java,"others, therefore the relevant tests use assumegdbversion methods to be",0,0,summary
2488,SourceLookupTest.java,skipped when appropriate.,0,0,summary
2534,StandardCElementLabelProvider.java,triggers a viewer update when a preference changes.,0,0,summary
2535,StandardCElementLabelProvider.java,@deprecated use @link appearanceawarelabelprovider instead.,0,0,summary
2025,GroupDebugContextsCommandHandler.java,@since 71,0,0,summary
2030,IBuildObject.java,@noextend this class is not intended to be subclassed by clients.,0,0,summary
2031,IBuildObject.java,@noimplement this interface is not intended to be implemented by clients.,0,0,summary
2545,ToggleDynamicPrintfAdapter.java,@since 75,0,0,summary
2036,ICLanguageSettingPathEntry.java,see interface hierarchy for more specifics.,0,0,summary
2549,TracepointActionsPropertyPage.java,@since 21,0,0,summary
2041,ICLibraryFileEntry.java,see @link icsettingentry#library file .,0,0,summary
2046,ICodeReaderFactory.java,@author jcamelon,0,0,summary
2558,TracingConsole.java,@since 21,0,0,summary
2047,ICodeReaderFactory.java,@deprecated replaced by @link includefilecontentprovider,0,0,summary
2559,TracingConsole.java,this class was moved from package org^eclipse.cdt^dsf.gdb^internal.ui^tracing,0,0,summary
3075,CloseablesTest.java,"p checks proper closing behavior, and ensures that ioexceptions on closeable^close are not",0,0,summary
3076,CloseablesTest.java,propagated out from the @link closeables#close method if @code swallowexception is true.,1,0,summary
3077,CloseablesTest.java,@author michael lancaster,0,0,summary
3085,CollectionTestSuiteBuilder.java,@author chris povirk,1,0,summary
3086,CollectionTestSuiteBuilder.java,@author louis wasserman,0,0,summary
4116,SortedSetNavigationTester.java,can t be invoked directly please see,1,0,summary
4117,SortedSetNavigationTester.java,@code sortedsettestsuitebuilder .,0,0,summary
4118,SortedSetNavigationTester.java,@author jesse wilson,1,0,summary
4119,SortedSetNavigationTester.java,@author louis wasserman,0,0,summary
3096,ConflictingRequirementsException.java,@author george van den driessche,1,0,summary
3100,CountingOutputStream.java,@author chris nokleberg,0,0,summary
3101,CountingOutputStream.java,@since 10,1,0,summary
4127,SubscriberTest.java,@author cliff biffle,0,0,summary
4128,SubscriberTest.java,@author colin decker,1,0,summary
3106,DescendingMultiset.java,only needs @code forwardmultiset and,0,0,summary
3107,DescendingMultiset.java,@code entryiterator .,1,0,summary
3108,DescendingMultiset.java,@author louis wasserman,0,0,summary
4136,TesterRequirements.java,@author george van den driessche,1,0,summary
3114,EqualsTester.java,p the simplest use case is,0,0,summary
3115,EqualsTester.java,pre,1,0,summary
4141,TestStringListGenerator.java,@author kevin bourrillion,0,0,summary
3117,EqualsTester.java,pre,1,0,summary
3118,EqualsTester.java,"p this tests @code foo^equals foo , @code foo^equals null , and a few other operations.",0,0,summary
3119,EqualsTester.java,"p for more extensive testing, add multiple equality groups.",1,0,summary
3120,EqualsTester.java,each group should contain objects,0,0,summary
4145,WrappingScheduledExecutorService.java,p note that task wrapping may occur even if the task is never executed.,1,0,summary
3121,EqualsTester.java,that are equal to each other but unequal to the objects in any other group.,0,0,summary
4146,WrappingScheduledExecutorService.java,@author luke sandberg,1,0,summary
3122,EqualsTester.java,for example,0,0,summary
3123,EqualsTester.java,pre,1,0,summary
3124,EqualsTester.java,new equalstester,0,0,summary
3125,EqualsTester.java,"addequalitygroup new user page , new user page",1,0,summary
3126,EqualsTester.java,addequalitygroup new user sergey,0,0,summary
3127,EqualsTester.java,testequals,1,0,summary
3128,EqualsTester.java,pre,0,0,summary
3129,EqualsTester.java,p this tests,1,0,summary
3130,EqualsTester.java,ul,0,0,summary
3131,EqualsTester.java,li comparing each object against itself returns true,1,0,summary
3133,EqualsTester.java,li comparing each object against an instance of an incompatible class returns false,0,0,summary
3134,EqualsTester.java,li comparing each pair of objects within the same equality group returns true,1,0,summary
3135,EqualsTester.java,li comparing each pair of objects from different equality groups returns false,0,0,summary
3136,EqualsTester.java,li the hash codes of any two equal objects are equal,1,0,summary
3137,EqualsTester.java,ul,0,0,summary
3140,EqualsTester.java,ul,1,0,summary
3146,EqualsTester.java,ul,0,0,summary
3147,EqualsTester.java,@author jim mcmaster,1,0,summary
3148,EqualsTester.java,@author jige yu,0,0,summary
3149,EqualsTester.java,@since 100,1,0,summary
3150,EqualsTester.java,class used to test whether equals correctly handles an instance of an incompatible class.,0,0,summary
3151,EqualsTester.java,"since it is a private inner class, the invoker can never pass in an instance to the tester",1,0,summary
3184,FeatureSpecificTestSuiteBuilder.java,@param b the concrete type of this builder the self type .,0,0,summary
3185,FeatureSpecificTestSuiteBuilder.java,all the builder methods of this,1,0,summary
3186,FeatureSpecificTestSuiteBuilder.java,"class such as @link #named return this type, so that builder methods of more derived",0,0,summary
3188,FeatureSpecificTestSuiteBuilder.java,@param g the type of the generator to be passed to testers in the generated test suite.,1,0,summary
3189,FeatureSpecificTestSuiteBuilder.java,an,0,0,summary
3191,FeatureSpecificTestSuiteBuilder.java,information required to parameterize the test.,1,0,summary
3192,FeatureSpecificTestSuiteBuilder.java,@author george van den driessche,0,0,summary
3206,ForwardingBlockingDequeTest.java,@author emily soldal,1,0,summary
3210,ForwardingImmutableSet.java,@author hayward chan,0,0,summary
3215,ForwardingQueueTest.java,@author robert konigsberg,1,0,summary
3216,ForwardingQueueTest.java,@author louis wasserman,0,0,summary
3221,GwtTestSuite.java,grouping them into a suite is much faster than running each as a one test,1,0,summary
3222,GwtTestSuite.java,"suite, as the per suite setup is expensive.",0,0,summary
3227,HashFunctionEnum.java,@author kurt alfred kluever,1,0,summary
3231,HostAndPort.java,p example usage,0,0,summary
3232,HostAndPort.java,pre,1,0,summary
3233,HostAndPort.java,hostandport hp hostandport^fromstring 2001 db8 1,0,0,summary
3235,HostAndPort.java,requirebracketsforipv6,1,0,summary
3236,HostAndPort.java,hp^gethost returns 2001 db8 1,0,0,summary
3237,HostAndPort.java,hp^getport returns 80,1,0,summary
3238,HostAndPort.java,hp^tostring returns 2001 db8 1 80,0,0,summary
3239,HostAndPort.java,pre,1,0,summary
3240,HostAndPort.java,p here are some examples of recognized formats,0,0,summary
3241,HostAndPort.java,ul,1,0,summary
3242,HostAndPort.java,li example^com,0,0,summary
3244,HostAndPort.java,li 1920.21,1,0,summary
3246,HostAndPort.java,li 2001 db8 1 @link #gethost omits brackets,0,0,summary
3247,HostAndPort.java,li 2001 db8 1 80 @link #gethost omits brackets,1,0,summary
3248,HostAndPort.java,li 2001 db8 1 use @link #requirebracketsforipv6 to prohibit this,0,0,summary
3249,HostAndPort.java,ul,1,0,summary
3250,HostAndPort.java,"p note that this is not an exhaustive list, because these methods are only concerned with",0,0,summary
3251,HostAndPort.java,"brackets, colons, and port numbers.",1,0,summary
3253,HostAndPort.java,caller s responsibility.,0,0,summary
3254,HostAndPort.java,@author paul marks,1,0,summary
3255,HostAndPort.java,@since 100,0,0,summary
3287,ImmutableTable_CustomFieldSerializerBase.java,serializers should delegate to @link #serialize and @link #instantiate .,1,0,summary
3288,ImmutableTable_CustomFieldSerializerBase.java,@author chris povirk,0,0,summary
3294,LazyStackTraceBenchmark.java,we benchmark a caller,1,0,summary
3295,LazyStackTraceBenchmark.java,finder implementation that might be used in a logging framework.,0,0,summary
3301,LongMathBenchmark.java,@author louis wasserman,1,0,summary
3306,MapPutAllTester.java,please see @link com^google.common^collect.testing^maptestsuitebuilder .,0,0,summary
3307,MapPutAllTester.java,@author chris povirk,1,0,summary
3308,MapPutAllTester.java,@author kevin bourrillion,0,0,summary
3314,MapSerializationTester.java,@author louis wasserman,1,0,summary
3319,MultimapBuilder.java,p this can be used to easily configure multimap data structure implementations not provided,0,0,summary
3320,MultimapBuilder.java,"explicitly in @code com^google.common^collect , for example",1,0,summary
3321,MultimapBuilder.java,pre @code,0,0,summary
3322,MultimapBuilder.java,"listmultimap string, integer treelistmultimap",1,0,summary
3323,MultimapBuilder.java,multimapbuilder^treekeys ^arraylistvalues ^build,0,0,summary
3324,MultimapBuilder.java,"setmultimap integer, myenum hashenummultimap",1,0,summary
3325,MultimapBuilder.java,multimapbuilder^hashkeys ^enumsetvalues myenum^class ^build,0,0,summary
3326,MultimapBuilder.java,pre,1,0,summary
3327,MultimapBuilder.java,p @code multimapbuilder instances are immutable.,0,0,summary
3328,MultimapBuilder.java,invoking a configuration method has no effect,1,0,summary
3329,MultimapBuilder.java,on the receiving instance you must store and use the new builder instance it returns instead.,0,0,summary
3330,MultimapBuilder.java,"p the generated multimaps are serializable if the key and value types are serializable, unless",1,0,summary
3331,MultimapBuilder.java,stated otherwise in one of the configuration methods.,0,0,summary
3332,MultimapBuilder.java,@author louis wasserman,1,0,summary
3333,MultimapBuilder.java,@param k0 an upper bound on the key type of the generated multimap.,0,0,summary
3334,MultimapBuilder.java,@param v0 an upper bound on the value type of the generated multimap.,1,0,summary
3335,MultimapBuilder.java,@since 160,0,0,summary
3336,MultimapBuilder.java,leaving k and v as upper bounds rather than the actual key and value types allows type,1,0,summary
3337,MultimapBuilder.java,parameters to be left implicit more often.,0,0,summary
3338,MultimapBuilder.java,cachebuilder uses the same technique.,1,0,summary
3339,MultimapBuilder.java,an intermediate stage in a @link multimapbuilder in which the key value collection map,0,0,summary
3340,MultimapBuilder.java,"implementation has been specified, but the value collection implementation has not.",1,0,summary
3341,MultimapBuilder.java,@param k0 the upper bound on the key type of the generated multimap.,0,0,summary
3342,MultimapBuilder.java,@since 160,1,0,summary
3343,MultimapBuilder.java,leaving k and v as upper bounds rather than the actual key and value types allows type,0,0,summary
3344,MultimapBuilder.java,parameters to be left implicit more often.,1,0,summary
3345,MultimapBuilder.java,cachebuilder uses the same technique.,0,0,summary
3346,MultimapBuilder.java,a specialization of @link multimapbuilder that generates @link listmultimap instances.,1,0,summary
3347,MultimapBuilder.java,@since 160,0,0,summary
3348,MultimapBuilder.java,leaving k and v as upper bounds rather than the actual key and value types allows type,1,0,summary
3349,MultimapBuilder.java,parameters to be left implicit more often.,0,0,summary
3350,MultimapBuilder.java,cachebuilder uses the same technique.,1,0,summary
3352,MultimapBuilder.java,@since 160,0,0,summary
3353,MultimapBuilder.java,leaving k and v as upper bounds rather than the actual key and value types allows type,1,0,summary
3354,MultimapBuilder.java,parameters to be left implicit more often.,0,0,summary
3355,MultimapBuilder.java,cachebuilder uses the same technique.,1,0,summary
3357,MultimapBuilder.java,@since 160,0,0,summary
3391,MultimapBuilderTest.java,@author louis wasserman,1,0,summary
3395,NullsLastOrdering_CustomFieldSerializer.java,@author chris povirk,0,0,summary
3400,ObjectCountHashMap.java,comparing to using a traditional @code hashmap,1,0,summary
3401,ObjectCountHashMap.java,"implementation which stores keys and count values as map entries, @code objectcounthashmap",0,0,summary
3402,ObjectCountHashMap.java,minimizes object allocation and reduces memory footprint.,1,0,summary
3403,ObjectCountHashMap.java,"p in the absence of element deletions, this will iterate over elements in insertion order.",0,0,summary
3411,PeekingIterator.java,p see the guava user guide article on a href,1,0,summary
3412,PeekingIterator.java,https github^com google guava wiki collectionhelpersexplained#peekingiterator @code,0,0,summary
3413,PeekingIterator.java,peekingiterator a .,1,0,summary
3414,PeekingIterator.java,@author mick killianey,0,0,summary
3415,PeekingIterator.java,@since 20,1,0,summary
3424,Preconditions.java,"p if the precondition is not met, the @code preconditions method throws an unchecked exception",0,0,summary
3425,Preconditions.java,"of a specified type, which helps the method in which the exception was thrown communicate that",1,0,summary
3426,Preconditions.java,its caller has made a mistake.,0,0,summary
3427,Preconditions.java,this allows constructs such as,1,0,summary
3428,Preconditions.java,pre @code,0,0,summary
3429,Preconditions.java,public static double sqrt double value,1,0,summary
3430,Preconditions.java,if value 0,0,0,summary
3431,Preconditions.java,throw new illegalargumentexception input is negative value,1,0,summary
3432,Preconditions.java,calculate square root,0,0,summary
3433,Preconditions.java,pre,1,0,summary
3434,Preconditions.java,p to be replaced with the more compact,0,0,summary
3435,Preconditions.java,pre @code,1,0,summary
3436,Preconditions.java,public static double sqrt double value,0,0,summary
3437,Preconditions.java,"checkargument value 0, input is negative %s , value",1,0,summary
3438,Preconditions.java,calculate square root,0,0,summary
3439,Preconditions.java,pre,1,0,summary
3440,Preconditions.java,"p so that a hypothetical bad caller of this method, such as",0,0,summary
3441,Preconditions.java,pre @code,1,0,summary
3442,Preconditions.java,void examplebadcaller,0,0,summary
3443,Preconditions.java,double d sqrt 10,1,0,summary
3444,Preconditions.java,pre,0,0,summary
3445,Preconditions.java,p would be flagged as having called @code sqrt with an illegal argument.,1,0,summary
3446,Preconditions.java,h3 performance h3,0,0,summary
3447,Preconditions.java,p avoid passing message arguments that are expensive to compute your code will always compute,1,0,summary
3448,Preconditions.java,"them, even though they usually won t be needed.",0,0,summary
3449,Preconditions.java,"if you have such arguments, use the conventional",1,0,summary
3450,Preconditions.java,if throw idiom instead.,0,0,summary
3451,Preconditions.java,"p depending on your message arguments, memory may be allocated for boxing and varargs array",1,0,summary
3452,Preconditions.java,creation.,0,0,summary
3453,Preconditions.java,"however, the methods of this class have a large number of overloads that prevent such",1,0,summary
3454,Preconditions.java,allocations in many common cases.,0,0,summary
3455,Preconditions.java,"p the message string is not formatted unless the exception will be thrown, so the cost of the",1,0,summary
3456,Preconditions.java,string formatting itself should not be a concern.,0,0,summary
3457,Preconditions.java,"p as with any performance concerns, you should consider profiling your code in a production",1,0,summary
3458,Preconditions.java,environment if possible before spending a lot of effort on tweaking a particular element.,0,0,summary
3459,Preconditions.java,h3 other types of preconditions h3,1,0,summary
3460,Preconditions.java,p not every type of precondition failure is supported by these methods.,0,0,summary
3461,Preconditions.java,continue to throw,1,0,summary
3462,Preconditions.java,standard jdk exceptions such as @link java^util.nosuchelementexception or @link,0,0,summary
3463,Preconditions.java,unsupportedoperationexception in the situations they are intended for.,1,0,summary
3464,Preconditions.java,h3 non preconditions h3,0,0,summary
3465,Preconditions.java,p it is of course possible to use the methods of this class to check for invalid conditions,1,0,summary
3466,Preconditions.java,which are i not the caller s fault i .,0,0,summary
3467,Preconditions.java,doing so is b not recommended b because it is,1,0,summary
3468,Preconditions.java,misleading to future readers of the code and of stack traces.,0,0,summary
3469,Preconditions.java,see a,1,0,summary
3470,Preconditions.java,href https github^com google guava wiki conditionalfailuresexplained conditional failures,0,0,summary
3471,Preconditions.java,explained a in the guava user guide for more advice.,1,0,summary
3472,Preconditions.java,"notably, @link verify offers assertions",0,0,summary
3473,Preconditions.java,similar to those in this class for non precondition checks.,1,0,summary
3474,Preconditions.java,h3 @code java^util.objects^requirenonnull h3,0,0,summary
3475,Preconditions.java,p projects which use @code com^google.common should generally avoid the use of @link,1,0,summary
3476,Preconditions.java,java^util.objects#requirenonnull object .,0,0,summary
3477,Preconditions.java,"instead, use whichever of @link",1,0,summary
3478,Preconditions.java,#checknotnull object or @link verify#verifynotnull object is appropriate to the situation.,0,0,summary
3479,Preconditions.java,the same goes for the message accepting overloads.,1,0,summary
3480,Preconditions.java,h3 only @code %s is supported h3,0,0,summary
3481,Preconditions.java,p @code preconditions uses @link strings#lenientformat to format error message template,1,0,summary
3482,Preconditions.java,strings.,0,0,summary
3483,Preconditions.java,"this only supports the @code %s specifier, not the full range of @link",1,0,summary
3484,Preconditions.java,java^util.formatter specifiers.,0,0,summary
3485,Preconditions.java,"however, note that if the number of arguments does not match the",1,0,summary
3486,Preconditions.java,"number of occurrences of @code %s in the format string, @code preconditions will still",0,0,summary
3487,Preconditions.java,"behave as expected, and will still include all argument values in the error message the message",1,0,summary
3488,Preconditions.java,will simply not be formatted exactly as intended.,0,0,summary
3489,Preconditions.java,h3 more information h3,1,0,summary
3490,Preconditions.java,p see the guava user guide on a,0,0,summary
3491,Preconditions.java,href https github^com google guava wiki preconditionsexplained using @code,1,0,summary
3492,Preconditions.java,preconditions a .,0,0,summary
3493,Preconditions.java,@author kevin bourrillion,1,0,summary
3494,Preconditions.java,@since 20,0,0,summary
3581,RegularImmutableList_CustomFieldSerializer.java,@author hayward chan,1,0,summary
3587,ReserializingTestCollectionGenerator.java,@author jesse wilson,0,0,summary
3594,Resources.java,p all method parameters must be non null unless documented otherwise.,1,0,summary
3595,Resources.java,@author chris nokleberg,0,0,summary
3596,Resources.java,@author ben yu,1,0,summary
3597,Resources.java,@author colin decker,0,0,summary
3598,Resources.java,@since 10,1,0,summary
3599,Resources.java,a byte source that reads from a url using @link url#openstream .,0,0,summary
3607,SmoothRateLimiter.java,"how is the ratelimiter designed, and why?",1,0,summary
3613,SmoothRateLimiter.java,the simplest way to maintain a rate of qps is to keep the timestamp of the last granted,0,0,summary
3614,SmoothRateLimiter.java,"request, and ensure that 1 qps seconds have elapsed since then.",1,0,summary
3615,SmoothRateLimiter.java,"for example, for a rate of",0,0,summary
3616,SmoothRateLimiter.java,"qps 5 5 tokens per second , if we ensure that a request isn t granted earlier than 200ms after",1,0,summary
3617,SmoothRateLimiter.java,"the last one, then we achieve the intended rate.",0,0,summary
3618,SmoothRateLimiter.java,if a request comes and the last request was,1,0,summary
3619,SmoothRateLimiter.java,"granted only 100ms ago, then we wait for another 100ms.",0,0,summary
3620,SmoothRateLimiter.java,"at this rate, serving 15 fresh permits",1,0,summary
3621,SmoothRateLimiter.java,ie for an acquire 15 request naturally takes 3 seconds.,0,0,summary
3622,SmoothRateLimiter.java,it is important to realize that such a ratelimiter has a very superficial memory of the past,1,0,summary
3623,SmoothRateLimiter.java,it only remembers the last request.,0,0,summary
3624,SmoothRateLimiter.java,what if the ratelimiter was unused for a long period of,1,0,summary
3625,SmoothRateLimiter.java,"time, then a request arrived and was immediately granted?",0,0,summary
3626,SmoothRateLimiter.java,this ratelimiter would immediately,1,0,summary
3627,SmoothRateLimiter.java,forget about that past underutilization.,0,0,summary
3628,SmoothRateLimiter.java,this may result in either underutilization or,1,0,summary
3629,SmoothRateLimiter.java,"overflow, depending on the real world consequences of not using the expected rate.",0,0,summary
3630,SmoothRateLimiter.java,past underutilization could mean that excess resources are available.,1,0,summary
3631,SmoothRateLimiter.java,"then, the ratelimiter",0,0,summary
3632,SmoothRateLimiter.java,"should speed up for a while, to take advantage of these resources.",1,0,summary
3633,SmoothRateLimiter.java,this is important when the,0,0,summary
3634,SmoothRateLimiter.java,"rate is applied to networking limiting bandwidth , where past underutilization typically",1,0,summary
3635,SmoothRateLimiter.java,"translates to almost empty buffers , which can be filled immediately.",0,0,summary
3636,SmoothRateLimiter.java,"on the other hand, past underutilization could mean that the server responsible for handling",1,0,summary
3637,SmoothRateLimiter.java,"the request has become less ready for future requests , ie its caches become stale, and",0,0,summary
3638,SmoothRateLimiter.java,requests become more likely to trigger expensive operations a more extreme case of this,1,0,summary
3639,SmoothRateLimiter.java,"example is when a server has just booted, and it is mostly busy with getting itself up to",0,0,summary
3640,SmoothRateLimiter.java,speed .,1,0,summary
3641,SmoothRateLimiter.java,"to deal with such scenarios, we add an extra dimension, that of past underutilization ,",0,0,summary
3642,SmoothRateLimiter.java,modeled by storedpermits variable.,1,0,summary
3643,SmoothRateLimiter.java,"this variable is zero when there is no underutilization,",0,0,summary
3644,SmoothRateLimiter.java,"and it can grow up to maxstoredpermits, for sufficiently large underutilization.",1,0,summary
3645,SmoothRateLimiter.java,"so, the",0,0,summary
3646,SmoothRateLimiter.java,"requested permits, by an invocation acquire permits , are served from",1,0,summary
3647,SmoothRateLimiter.java,stored permits if available,0,0,summary
3648,SmoothRateLimiter.java,fresh permits for any remaining permits,1,0,summary
3649,SmoothRateLimiter.java,how this works is best explained with an example,0,0,summary
3650,SmoothRateLimiter.java,"for a ratelimiter that produces 1 token per second, every second that goes by with the",1,0,summary
3651,SmoothRateLimiter.java,"ratelimiter being unused, we increase storedpermits by 1.",0,0,summary
3652,SmoothRateLimiter.java,say we leave the ratelimiter unused,0,0,summary
3653,SmoothRateLimiter.java,"for 10 seconds ie, we expected a request at time x, but we are at time x 10 seconds before",0,0,summary
3654,SmoothRateLimiter.java,"a request actually arrives this is also related to the point made in the last paragraph , thus",0,0,summary
2631,AbstractCollectionTester.java,@param e the element type of the collection to be tested.,0,0,summary
3655,SmoothRateLimiter.java,storedpermits becomes 100 assuming maxstoredpermits 100 .,0,0,summary
2632,AbstractCollectionTester.java,@author kevin bourrillion,0,0,summary
3656,SmoothRateLimiter.java,"at that point, a request of",0,0,summary
3657,SmoothRateLimiter.java,acquire 3 arrives.,0,0,summary
3658,SmoothRateLimiter.java,"we serve this request out of storedpermits, and reduce that to 70 how",0,0,summary
3659,SmoothRateLimiter.java,this is translated to throttling time is discussed later .,0,0,summary
3660,SmoothRateLimiter.java,"immediately after, assume that an",0,0,summary
3661,SmoothRateLimiter.java,acquire 10 request arriving.,0,0,summary
2638,AbstractListeningExecutorService.java,these tasks are run,0,0,summary
3662,SmoothRateLimiter.java,"we serve the request partly from storedpermits, using all the",0,0,summary
2639,AbstractListeningExecutorService.java,with the abstract @link #execute execute runnable method.,0,0,summary
3663,SmoothRateLimiter.java,"remaining 70 permits, and the remaining 30, we serve them by fresh permits produced by the",0,0,summary
2640,AbstractListeningExecutorService.java,"p in addition to @link #execute , subclasses must implement all methods related to shutdown and",0,0,summary
3664,SmoothRateLimiter.java,rate limiter.,0,0,summary
2641,AbstractListeningExecutorService.java,termination.,0,0,summary
3665,SmoothRateLimiter.java,we already know how much time it takes to serve 3 fresh permits if the rate is,0,0,summary
2642,AbstractListeningExecutorService.java,@author chris povirk,0,0,summary
3666,SmoothRateLimiter.java,"1 token per second , then this will take 3 seconds.",0,0,summary
2643,AbstractListeningExecutorService.java,@since 140,0,0,summary
3667,SmoothRateLimiter.java,but what does it mean to serve 7 stored,0,0,summary
3668,SmoothRateLimiter.java,permits?,0,0,summary
3669,SmoothRateLimiter.java,"as explained above, there is no unique answer.",0,0,summary
3670,SmoothRateLimiter.java,if we are primarily interested to deal,0,0,summary
3671,SmoothRateLimiter.java,"with underutilization, then we want stored permits to be given out faster than fresh ones,",0,0,summary
3672,SmoothRateLimiter.java,because underutilization free resources for the taking.,0,0,summary
3673,SmoothRateLimiter.java,if we are primarily interested to,0,0,summary
3674,SmoothRateLimiter.java,"deal with overflow, then stored permits could be given out slower than fresh ones.",0,0,summary
3675,SmoothRateLimiter.java,"thus, we",0,0,summary
3676,SmoothRateLimiter.java,require a different in each case function that translates storedpermits to throttling time.,0,0,summary
2653,AbstractLoadingCache.java,effort required to implement this interface.,0,0,summary
3677,SmoothRateLimiter.java,"this role is played by storedpermitstowaittime double storedpermits, double permitstotake .",0,0,summary
2654,AbstractLoadingCache.java,"p to implement a cache, the programmer needs only to extend this class and provide an",0,0,summary
3678,SmoothRateLimiter.java,the,0,0,summary
3679,SmoothRateLimiter.java,underlying model is a continuous function mapping storedpermits from 00 to maxstoredpermits,0,0,summary
2656,AbstractLoadingCache.java,@link,0,0,summary
3681,SmoothRateLimiter.java,storedpermits,0,0,summary
3682,SmoothRateLimiter.java,essentially measure unused time we spend unused time buying storing permits.,0,0,summary
3683,SmoothRateLimiter.java,rate is,0,0,summary
3684,SmoothRateLimiter.java,"permits time , thus 1 rate time permits .",0,0,summary
3685,SmoothRateLimiter.java,"thus, 1 rate time permits times",0,0,summary
2662,AbstractLoadingCache.java,all other methods throw,0,0,summary
2664,AbstractLoadingCache.java,@author charles fry,0,0,summary
3688,SmoothRateLimiter.java,of requested permits.,0,0,summary
2665,AbstractLoadingCache.java,@since 110,0,0,summary
3697,SmoothRateLimiter.java,this guarantees that we handle,0,0,summary
3701,SmoothRateLimiter.java,integrals .,0,0,summary
3704,SmoothRateLimiter.java,cost as fresh ones 1 qps is the cost for each .,0,0,summary
2682,AbstractMultimap.java,@author louis wasserman,0,0,summary
3709,SmoothRateLimiter.java,underutilization.,0,0,summary
2686,AbstractMultimapTester.java,@author louis wasserman,0,0,summary
3713,SmoothRateLimiter.java,"last, but not least consider a ratelimiter with rate of 1 permit per second, currently",0,0,summary
2690,AbstractSortedKeySortedSetMultimap.java,p this superclass allows @code treemultimap to override methods to return navigable set and,0,0,summary
3714,SmoothRateLimiter.java,"completely unused, and an expensive acquire 100 request comes.",0,0,summary
2691,AbstractSortedKeySortedSetMultimap.java,"map types in non gwt only, while gwt code will inherit the sortedmap sortedset overrides.",0,0,summary
3715,SmoothRateLimiter.java,it would be nonsensical to just,0,0,summary
2692,AbstractSortedKeySortedSetMultimap.java,@author louis wasserman,0,0,summary
3717,SmoothRateLimiter.java,why wait without doing anything?,0,0,summary
3718,SmoothRateLimiter.java,a much,0,0,summary
3720,SmoothRateLimiter.java,"instead , and postpone subsequent requests as needed.",0,0,summary
3722,SmoothRateLimiter.java,"task immediately, and postpone by 100 seconds future requests, thus we allow for work to get",0,0,summary
2699,ArbitraryInstances.java,"p covers arrays, enums and common types defined in @code java^lang , @code java^lang.reflect ,",0,0,summary
2700,ArbitraryInstances.java,"@code java^io , @code java^nio , @code java^math , @code java^util , @code",0,0,summary
3724,SmoothRateLimiter.java,this has important consequences it means that the ratelimiter doesn t remember the time of the,0,0,summary
2701,ArbitraryInstances.java,"java^util.concurrent , @code java^util.regex , @code com^google.common^base , @code",0,0,summary
3725,SmoothRateLimiter.java,"last request, but it remembers the expected time of the next request.",0,0,summary
2702,ArbitraryInstances.java,com^google.common^collect and @code com^google.common^primitives .,0,0,summary
3726,SmoothRateLimiter.java,this also enables,0,0,summary
2703,ArbitraryInstances.java,"in addition, if the type",0,0,summary
3727,SmoothRateLimiter.java,us to tell immediately see tryacquire timeout whether a particular timeout is enough to get,0,0,summary
2704,ArbitraryInstances.java,"exposes at least one public static final constant of the same type, one of the constants will be",0,0,summary
3728,SmoothRateLimiter.java,"us to the point of the next scheduling time, since we always maintain that.",0,0,summary
2705,ArbitraryInstances.java,used or if the class exposes a public parameter less constructor then it will be new d and,0,0,summary
3729,SmoothRateLimiter.java,and what we mean by,0,0,summary
2706,ArbitraryInstances.java,returned.,0,0,summary
3730,SmoothRateLimiter.java,an unused ratelimiter is also defined by that notion when we observe that the,0,0,summary
2707,ArbitraryInstances.java,p all default instances returned by @link #get are generics safe.,0,0,summary
3731,SmoothRateLimiter.java,"expected arrival time of the next request is actually in the past, then the difference now",0,0,summary
2708,ArbitraryInstances.java,clients won t get type,0,0,summary
3732,SmoothRateLimiter.java,"past is the amount of time that the ratelimiter was formally unused, and it is that amount of",0,0,summary
2709,ArbitraryInstances.java,"errors for using @code get comparator^class as a @code comparator foo , for example.",0,0,summary
3733,SmoothRateLimiter.java,time which we translate to storedpermits.,0,0,summary
2710,ArbitraryInstances.java,immutable empty instances are returned for collection types @code for string @code 0 for,0,0,summary
3734,SmoothRateLimiter.java,we increase storedpermits with the amount of permits,0,0,summary
2711,ArbitraryInstances.java,number types reasonable default instance for other stateless types.,0,0,summary
3735,SmoothRateLimiter.java,that would have been produced in that idle time .,0,0,summary
2712,ArbitraryInstances.java,"for mutable types, a fresh",0,0,summary
3736,SmoothRateLimiter.java,"so, if rate 1 permit per second, and",0,0,summary
2713,ArbitraryInstances.java,instance is created each time @code get is called.,0,0,summary
3737,SmoothRateLimiter.java,"arrivals come exactly one second after the previous, then storedpermits is never increased",0,0,summary
2714,ArbitraryInstances.java,@author kevin bourrillion,0,0,summary
3738,SmoothRateLimiter.java,we would only increase it for arrivals later than the expected one second.,0,0,summary
2715,ArbitraryInstances.java,@author ben yu,0,0,summary
3739,SmoothRateLimiter.java,the time when the next request no matter its size will be granted.,0,0,summary
2716,ArbitraryInstances.java,@since 120,0,0,summary
3740,SmoothRateLimiter.java,"after granting a request,",0,0,summary
3741,SmoothRateLimiter.java,this is pushed further in the future.,0,0,summary
3742,SmoothRateLimiter.java,large requests push this further than small requests.,0,0,summary
3743,SmoothRateLimiter.java,this implements the following function where coldinterval coldfactor stableinterval.,0,0,summary
3744,SmoothRateLimiter.java,pre,0,0,summary
3745,SmoothRateLimiter.java,^ throttling,0,0,summary
3746,SmoothRateLimiter.java,cold,0,0,summary
3747,SmoothRateLimiter.java,interval .,0,0,summary
3748,SmoothRateLimiter.java,warmup period is the area of the trapezoid between,0,0,summary
3749,SmoothRateLimiter.java,thresholdpermits and maxpermits,0,0,summary
3750,SmoothRateLimiter.java,stable warm .,0,0,summary
3751,SmoothRateLimiter.java,interval .,0,0,summary
3752,SmoothRateLimiter.java,up .,0,0,summary
3753,SmoothRateLimiter.java,period.,0,0,summary
3754,SmoothRateLimiter.java,0 storedpermits,0,0,summary
3755,SmoothRateLimiter.java,0 thresholdpermits maxpermits,0,0,summary
3756,SmoothRateLimiter.java,pre,0,0,summary
3757,SmoothRateLimiter.java,"before going into the details of this particular function, let s keep in mind the basics",0,0,summary
3758,SmoothRateLimiter.java,ol,0,0,summary
3759,SmoothRateLimiter.java,li the state of the ratelimiter storedpermits is a vertical line in this figure.,0,0,summary
3760,SmoothRateLimiter.java,"li when the ratelimiter is not used, this goes right up to maxpermits",0,0,summary
3761,SmoothRateLimiter.java,"li when the ratelimiter is used, this goes left down to zero , since if we have",0,0,summary
3762,SmoothRateLimiter.java,"storedpermits, we serve from those first",0,0,summary
3763,SmoothRateLimiter.java,"li when unused , we go right at a constant rate!",0,0,summary
3764,SmoothRateLimiter.java,the rate at which we move to the right is,0,0,summary
3766,SmoothRateLimiter.java,this ensures that the time it takes to go from 0 to,0,0,summary
3768,SmoothRateLimiter.java,"li when used , the time it takes, as explained in the introductory class note, is equal to",0,0,summary
3769,SmoothRateLimiter.java,"the integral of our function, between x permits and x k permits, assuming we want to",0,0,summary
3770,SmoothRateLimiter.java,spend k saved permits.,0,0,summary
3771,SmoothRateLimiter.java,ol,0,0,summary
2748,ArrayListMultimapGwtSerializationDependencies.java,the gwt supersource for this class contains a field for each type.,0,0,summary
2749,ArrayListMultimapGwtSerializationDependencies.java,"p for details about this hack, see @link gwtserializationdependencies , which takes the same",0,0,summary
2750,ArrayListMultimapGwtSerializationDependencies.java,approach but with a subclass rather than a superclass.,0,0,summary
3774,SmoothRateLimiter.java,"p assuming we have saturated demand, the time to go from maxpermits to thresholdpermits is",0,0,summary
3775,SmoothRateLimiter.java,equal to warmupperiod.,0,0,summary
3776,SmoothRateLimiter.java,and the time to go from thresholdpermits to 0 is warmupperiod 2.,0,0,summary
3777,SmoothRateLimiter.java,the,0,0,summary
3778,SmoothRateLimiter.java,reason that this is warmupperiod 2 is to maintain the behavior of the original implementation,0,0,summary
3779,SmoothRateLimiter.java,where coldfactor was hard coded as 3.,0,0,summary
3780,SmoothRateLimiter.java,p it remains to calculate thresholdspermits and maxpermits.,0,0,summary
2757,AtomicDoubleArrayTest.java,source,0,0,summary
2758,AtomicDoubleArrayTest.java,http gee^cs.oswego^edu cgi bin viewcvs^cgi jsr166 src test tck jsr166e atomicdoublearraytest^java?revision 113,0,0,summary
3782,SmoothRateLimiter.java,li the time to go from thresholdpermits to 0 is equal to the integral of the function,0,0,summary
2759,AtomicDoubleArrayTest.java,modified to adapt to guava coding conventions,0,0,summary
3783,SmoothRateLimiter.java,between 0 and thresholdpermits.,0,0,summary
3784,SmoothRateLimiter.java,this is thresholdpermits stableintervals.,0,0,summary
3787,SmoothRateLimiter.java,therefore,0,0,summary
3789,SmoothRateLimiter.java,thresholdpermits 05 warmupperiod stableinterval,0,0,summary
3791,SmoothRateLimiter.java,li the time to go from maxpermits to thresholdpermits is equal to the integral of the,0,0,summary
3792,SmoothRateLimiter.java,function between thresholdpermits and maxpermits.,0,0,summary
3793,SmoothRateLimiter.java,this is the area of the pictured,0,0,summary
3794,SmoothRateLimiter.java,"trapezoid, and it is equal to 05 stableinterval coldinterval maxpermits",0,0,summary
2771,BloomFilter.java,"p if you are unfamiliar with bloom filters, this nice a",0,0,summary
3795,SmoothRateLimiter.java,thresholdpermits .,0,0,summary
2772,BloomFilter.java,href http llimllib^github.com bloomfilter tutorial tutorial a may help you understand how,0,0,summary
2773,BloomFilter.java,they work.,0,0,summary
2774,BloomFilter.java,p the false positive probability @code fpp of a bloom filter is defined as the probability,0,0,summary
3798,SmoothRateLimiter.java,maxpermits thresholdpermits 2 warmupperiod stableinterval coldinterval,0,0,summary
2775,BloomFilter.java,that @linkplain #mightcontain object will erroneously return @code true for an object that,0,0,summary
2776,BloomFilter.java,has not actually been put in the @code bloomfilter .,0,0,summary
2777,BloomFilter.java,p bloom filters are serializable.,0,0,summary
3801,SmoothRateLimiter.java,"how is the ratelimiter designed, and why?",0,0,summary
2778,BloomFilter.java,they also support a more compact serial representation via the,0,0,summary
2779,BloomFilter.java,@link #writeto and @link #readfrom methods.,0,0,summary
2780,BloomFilter.java,both serialized forms will continue to be,0,0,summary
2781,BloomFilter.java,supported by future versions of this library.,0,0,summary
2782,BloomFilter.java,"however, serial forms generated by newer versions",0,0,summary
2783,BloomFilter.java,"of the code may not be readable by older versions of the code eg, a serialized bloom filter",0,0,summary
3807,SmoothRateLimiter.java,the simplest way to maintain a rate of qps is to keep the timestamp of the last granted,0,0,summary
2784,BloomFilter.java,generated today may i not i be readable by a binary that was compiled 6 months ago .,0,0,summary
3808,SmoothRateLimiter.java,"request, and ensure that 1 qps seconds have elapsed since then.",0,0,summary
2785,BloomFilter.java,"p as of guava 230, this class is thread safe and lock free.",0,0,summary
3809,SmoothRateLimiter.java,"for example, for a rate of",0,0,summary
2786,BloomFilter.java,it internally uses atomics and,0,0,summary
3810,SmoothRateLimiter.java,"qps 5 5 tokens per second , if we ensure that a request isn t granted earlier than 200ms after",0,0,summary
2787,BloomFilter.java,compare and swap to ensure correctness when multiple threads are used to access it.,0,0,summary
3811,SmoothRateLimiter.java,"the last one, then we achieve the intended rate.",0,0,summary
2788,BloomFilter.java,@param t the type of instances that the @code bloomfilter accepts,0,0,summary
3812,SmoothRateLimiter.java,if a request comes and the last request was,0,0,summary
2789,BloomFilter.java,@author dimitris andreou,0,0,summary
3813,SmoothRateLimiter.java,"granted only 100ms ago, then we wait for another 100ms.",0,0,summary
2790,BloomFilter.java,@author kevin bourrillion,0,0,summary
3814,SmoothRateLimiter.java,"at this rate, serving 15 fresh permits",0,0,summary
2791,BloomFilter.java,@since 110 thread safe since 230,0,0,summary
3815,SmoothRateLimiter.java,ie for an acquire 15 request naturally takes 3 seconds.,0,0,summary
2792,BloomFilter.java,"cheat sheet m total bits n expected insertions b m n, bits per insertion p expected false positive probability 1 optimal k b ln2 2 p 1 e ^ kn m ^k 3 for optimal k p 2 ^ k 06185^b 4 for optimal k m nlnp ln2 ^ 2",0,0,summary
3816,SmoothRateLimiter.java,it is important to realize that such a ratelimiter has a very superficial memory of the past,0,0,summary
2793,BloomFilter.java,"a strategy to translate t instances, to @code numhashfunctions bit indexes.",0,0,summary
3817,SmoothRateLimiter.java,it only remembers the last request.,0,0,summary
2794,BloomFilter.java,p implementations should be collections of pure functions ie stateless .,0,0,summary
3818,SmoothRateLimiter.java,what if the ratelimiter was unused for a long period of,0,0,summary
3819,SmoothRateLimiter.java,"time, then a request arrived and was immediately granted?",0,0,summary
3820,SmoothRateLimiter.java,this ratelimiter would immediately,0,0,summary
3821,SmoothRateLimiter.java,forget about that past underutilization.,0,0,summary
3822,SmoothRateLimiter.java,this may result in either underutilization or,0,0,summary
3823,SmoothRateLimiter.java,"overflow, depending on the real world consequences of not using the expected rate.",0,0,summary
3824,SmoothRateLimiter.java,past underutilization could mean that excess resources are available.,0,0,summary
3825,SmoothRateLimiter.java,"then, the ratelimiter",0,0,summary
3826,SmoothRateLimiter.java,"should speed up for a while, to take advantage of these resources.",0,0,summary
3827,SmoothRateLimiter.java,this is important when the,0,0,summary
3828,SmoothRateLimiter.java,"rate is applied to networking limiting bandwidth , where past underutilization typically",0,0,summary
3829,SmoothRateLimiter.java,"translates to almost empty buffers , which can be filled immediately.",0,0,summary
3830,SmoothRateLimiter.java,"on the other hand, past underutilization could mean that the server responsible for handling",0,0,summary
3831,SmoothRateLimiter.java,"the request has become less ready for future requests , ie its caches become stale, and",0,0,summary
3832,SmoothRateLimiter.java,requests become more likely to trigger expensive operations a more extreme case of this,0,0,summary
3833,SmoothRateLimiter.java,"example is when a server has just booted, and it is mostly busy with getting itself up to",0,0,summary
3834,SmoothRateLimiter.java,speed .,0,0,summary
3835,SmoothRateLimiter.java,"to deal with such scenarios, we add an extra dimension, that of past underutilization ,",0,0,summary
3836,SmoothRateLimiter.java,modeled by storedpermits variable.,0,0,summary
3837,SmoothRateLimiter.java,"this variable is zero when there is no underutilization,",0,0,summary
3838,SmoothRateLimiter.java,"and it can grow up to maxstoredpermits, for sufficiently large underutilization.",0,0,summary
3839,SmoothRateLimiter.java,"so, the",0,0,summary
3840,SmoothRateLimiter.java,"requested permits, by an invocation acquire permits , are served from",0,0,summary
3841,SmoothRateLimiter.java,stored permits if available,0,0,summary
3842,SmoothRateLimiter.java,fresh permits for any remaining permits,0,0,summary
3843,SmoothRateLimiter.java,how this works is best explained with an example,0,0,summary
3844,SmoothRateLimiter.java,"for a ratelimiter that produces 1 token per second, every second that goes by with the",0,0,summary
3845,SmoothRateLimiter.java,"ratelimiter being unused, we increase storedpermits by 1.",0,0,summary
3846,SmoothRateLimiter.java,say we leave the ratelimiter unused,0,0,summary
3847,SmoothRateLimiter.java,"for 10 seconds ie, we expected a request at time x, but we are at time x 10 seconds before",0,0,summary
3848,SmoothRateLimiter.java,"a request actually arrives this is also related to the point made in the last paragraph , thus",0,0,summary
3849,SmoothRateLimiter.java,storedpermits becomes 100 assuming maxstoredpermits 100 .,0,0,summary
3850,SmoothRateLimiter.java,"at that point, a request of",0,0,summary
3851,SmoothRateLimiter.java,acquire 3 arrives.,0,0,summary
3852,SmoothRateLimiter.java,"we serve this request out of storedpermits, and reduce that to 70 how",0,0,summary
3853,SmoothRateLimiter.java,this is translated to throttling time is discussed later .,0,0,summary
3854,SmoothRateLimiter.java,"immediately after, assume that an",0,0,summary
3855,SmoothRateLimiter.java,acquire 10 request arriving.,0,0,summary
3856,SmoothRateLimiter.java,"we serve the request partly from storedpermits, using all the",0,0,summary
2833,CacheBuilder.java,following features,0,0,summary
3857,SmoothRateLimiter.java,"remaining 70 permits, and the remaining 30, we serve them by fresh permits produced by the",0,0,summary
2834,CacheBuilder.java,ul,0,0,summary
3858,SmoothRateLimiter.java,rate limiter.,0,0,summary
2835,CacheBuilder.java,li automatic loading of entries into the cache,0,0,summary
3859,SmoothRateLimiter.java,we already know how much time it takes to serve 3 fresh permits if the rate is,0,0,summary
2836,CacheBuilder.java,li least recently used eviction when a maximum size is exceeded,0,0,summary
3860,SmoothRateLimiter.java,"1 token per second , then this will take 3 seconds.",0,0,summary
2837,CacheBuilder.java,"li time based expiration of entries, measured since last access or last write",0,0,summary
3861,SmoothRateLimiter.java,but what does it mean to serve 7 stored,0,0,summary
2838,CacheBuilder.java,li keys automatically wrapped in @linkplain weakreference weak references,0,0,summary
3862,SmoothRateLimiter.java,permits?,0,0,summary
2839,CacheBuilder.java,li values automatically wrapped in @linkplain weakreference weak or @linkplain,0,0,summary
3863,SmoothRateLimiter.java,"as explained above, there is no unique answer.",0,0,summary
2840,CacheBuilder.java,softreference soft references,0,0,summary
3864,SmoothRateLimiter.java,if we are primarily interested to deal,0,0,summary
2841,CacheBuilder.java,li notification of evicted or otherwise removed entries,0,0,summary
3865,SmoothRateLimiter.java,"with underutilization, then we want stored permits to be given out faster than fresh ones,",0,0,summary
3866,SmoothRateLimiter.java,because underutilization free resources for the taking.,0,0,summary
2843,CacheBuilder.java,ul,0,0,summary
3867,SmoothRateLimiter.java,if we are primarily interested to,0,0,summary
2844,CacheBuilder.java,p these features are all optional caches can be created using all or none of them.,0,0,summary
3868,SmoothRateLimiter.java,"deal with overflow, then stored permits could be given out slower than fresh ones.",0,0,summary
2845,CacheBuilder.java,by default,0,0,summary
3869,SmoothRateLimiter.java,"thus, we",0,0,summary
2846,CacheBuilder.java,cache instances created by @code cachebuilder will not perform any type of eviction.,0,0,summary
3870,SmoothRateLimiter.java,require a different in each case function that translates storedpermits to throttling time.,0,0,summary
2847,CacheBuilder.java,p usage example,0,0,summary
3871,SmoothRateLimiter.java,"this role is played by storedpermitstowaittime double storedpermits, double permitstotake .",0,0,summary
2848,CacheBuilder.java,pre @code,0,0,summary
3872,SmoothRateLimiter.java,the,0,0,summary
2849,CacheBuilder.java,"loadingcache key, graph graphs cachebuilder^newbuilder",0,0,summary
3873,SmoothRateLimiter.java,underlying model is a continuous function mapping storedpermits from 00 to maxstoredpermits,0,0,summary
2850,CacheBuilder.java,maximumsize 10000,0,0,summary
2851,CacheBuilder.java,expireafterwrite duration^ofminutes 10,0,0,summary
3875,SmoothRateLimiter.java,storedpermits,0,0,summary
2852,CacheBuilder.java,removallistener my listener,0,0,summary
3876,SmoothRateLimiter.java,essentially measure unused time we spend unused time buying storing permits.,0,0,summary
2853,CacheBuilder.java,build,0,0,summary
3877,SmoothRateLimiter.java,rate is,0,0,summary
2854,CacheBuilder.java,"new cacheloader key, graph",0,0,summary
3878,SmoothRateLimiter.java,"permits time , thus 1 rate time permits .",0,0,summary
2855,CacheBuilder.java,public graph load key key throws anyexception,0,0,summary
3879,SmoothRateLimiter.java,"thus, 1 rate time permits times",0,0,summary
2856,CacheBuilder.java,return createexpensivegraph key,0,0,summary
2857,CacheBuilder.java,pre,0,0,summary
2858,CacheBuilder.java,"p or equivalently,",0,0,summary
3882,SmoothRateLimiter.java,of requested permits.,0,0,summary
2859,CacheBuilder.java,pre @code,0,0,summary
2860,CacheBuilder.java,in real life this would come from a command line flag or config file,0,0,summary
2863,CacheBuilder.java,removallistener my listener,0,0,summary
2864,CacheBuilder.java,build,0,0,summary
2865,CacheBuilder.java,"new cacheloader key, graph",0,0,summary
2866,CacheBuilder.java,public graph load key key throws anyexception,0,0,summary
2867,CacheBuilder.java,return createexpensivegraph key,0,0,summary
3891,SmoothRateLimiter.java,this guarantees that we handle,0,0,summary
2868,CacheBuilder.java,pre,0,0,summary
2869,CacheBuilder.java,p the returned cache is implemented as a hash table with similar performance characteristics to,0,0,summary
2870,CacheBuilder.java,@link concurrenthashmap .,0,0,summary
2871,CacheBuilder.java,it implements all optional operations of the @link loadingcache and,0,0,summary
3895,SmoothRateLimiter.java,integrals .,0,0,summary
2872,CacheBuilder.java,@link cache interfaces.,0,0,summary
2873,CacheBuilder.java,the @code asmap view and its collection views have i weakly,0,0,summary
2874,CacheBuilder.java,consistent iterators i .,0,0,summary
3898,SmoothRateLimiter.java,cost as fresh ones 1 qps is the cost for each .,0,0,summary
2875,CacheBuilder.java,"this means that they are safe for concurrent use, but if other threads",0,0,summary
2876,CacheBuilder.java,"modify the cache after the iterator is created, it is undefined which of these changes, if any,",0,0,summary
2877,CacheBuilder.java,are reflected in that iterator.,0,0,summary
2878,CacheBuilder.java,these iterators never throw @link,0,0,summary
2879,CacheBuilder.java,concurrentmodificationexception .,0,0,summary
3903,SmoothRateLimiter.java,underutilization.,0,0,summary
2880,CacheBuilder.java,"p b note b by default, the returned cache uses equality comparisons the @link",0,0,summary
2881,CacheBuilder.java,object#equals equals method to determine equality for keys or values.,0,0,summary
2882,CacheBuilder.java,"however, if @link",0,0,summary
2883,CacheBuilder.java,"#weakkeys was specified, the cache uses identity @code comparisons instead for keys.",0,0,summary
3907,SmoothRateLimiter.java,"last, but not least consider a ratelimiter with rate of 1 permit per second, currently",0,0,summary
2884,CacheBuilder.java,"likewise, if @link #weakvalues or @link #softvalues was specified, the cache uses identity",0,0,summary
3908,SmoothRateLimiter.java,"completely unused, and an expensive acquire 100 request comes.",0,0,summary
2885,CacheBuilder.java,comparisons for values.,0,0,summary
3909,SmoothRateLimiter.java,it would be nonsensical to just,0,0,summary
2886,CacheBuilder.java,p entries are automatically evicted from the cache when any of @linkplain #maximumsize long,0,0,summary
2887,CacheBuilder.java,"maximumsize , @linkplain #maximumweight long maximumweight , @linkplain #expireafterwrite",0,0,summary
3911,SmoothRateLimiter.java,why wait without doing anything?,0,0,summary
2888,CacheBuilder.java,"expireafterwrite , @linkplain #expireafteraccess expireafteraccess , @linkplain #weakkeys",0,0,summary
3912,SmoothRateLimiter.java,a much,0,0,summary
2889,CacheBuilder.java,"weakkeys , @linkplain #weakvalues weakvalues , or @linkplain #softvalues softvalues are",0,0,summary
2890,CacheBuilder.java,requested.,0,0,summary
3914,SmoothRateLimiter.java,"instead , and postpone subsequent requests as needed.",0,0,summary
2891,CacheBuilder.java,p if @linkplain #maximumsize long maximumsize or @linkplain #maximumweight long,0,0,summary
2892,CacheBuilder.java,maximumweight is requested entries may be evicted on each cache modification.,0,0,summary
3916,SmoothRateLimiter.java,"task immediately, and postpone by 100 seconds future requests, thus we allow for work to get",0,0,summary
2893,CacheBuilder.java,p if @linkplain #expireafterwrite expireafterwrite or @linkplain #expireafteraccess,0,0,summary
2894,CacheBuilder.java,"expireafteraccess is requested entries may be evicted on each cache modification, on occasional",0,0,summary
3918,SmoothRateLimiter.java,this has important consequences it means that the ratelimiter doesn t remember the time of the,0,0,summary
2895,CacheBuilder.java,"cache accesses, or on calls to @link cache#cleanup .",0,0,summary
3919,SmoothRateLimiter.java,"last request, but it remembers the expected time of the next request.",0,0,summary
2896,CacheBuilder.java,expired entries may be counted by @link,0,0,summary
3920,SmoothRateLimiter.java,this also enables,0,0,summary
2897,CacheBuilder.java,"cache#size , but will never be visible to read or write operations.",0,0,summary
3921,SmoothRateLimiter.java,us to tell immediately see tryacquire timeout whether a particular timeout is enough to get,0,0,summary
2898,CacheBuilder.java,"p if @linkplain #weakkeys weakkeys , @linkplain #weakvalues weakvalues , or @linkplain",0,0,summary
3922,SmoothRateLimiter.java,"us to the point of the next scheduling time, since we always maintain that.",0,0,summary
3923,SmoothRateLimiter.java,and what we mean by,0,0,summary
2900,CacheBuilder.java,be reclaimed by the garbage collector.,0,0,summary
3924,SmoothRateLimiter.java,an unused ratelimiter is also defined by that notion when we observe that the,0,0,summary
2901,CacheBuilder.java,entries with reclaimed keys or values may be removed from,0,0,summary
3925,SmoothRateLimiter.java,"expected arrival time of the next request is actually in the past, then the difference now",0,0,summary
2902,CacheBuilder.java,"the cache on each cache modification, on occasional cache accesses, or on calls to @link",0,0,summary
3926,SmoothRateLimiter.java,"past is the amount of time that the ratelimiter was formally unused, and it is that amount of",0,0,summary
2903,CacheBuilder.java,"cache#cleanup such entries may be counted in @link cache#size , but will never be visible to",0,0,summary
3927,SmoothRateLimiter.java,time which we translate to storedpermits.,0,0,summary
2904,CacheBuilder.java,read or write operations.,0,0,summary
3928,SmoothRateLimiter.java,we increase storedpermits with the amount of permits,0,0,summary
2905,CacheBuilder.java,p certain cache configurations will result in the accrual of periodic maintenance tasks which,0,0,summary
3929,SmoothRateLimiter.java,that would have been produced in that idle time .,0,0,summary
2906,CacheBuilder.java,"will be performed during write operations, or during occasional read operations in the absence of",0,0,summary
3930,SmoothRateLimiter.java,"so, if rate 1 permit per second, and",0,0,summary
2907,CacheBuilder.java,writes.,0,0,summary
3931,SmoothRateLimiter.java,"arrivals come exactly one second after the previous, then storedpermits is never increased",0,0,summary
2908,CacheBuilder.java,"the @link cache#cleanup method of the returned cache will also perform maintenance, but",0,0,summary
3932,SmoothRateLimiter.java,we would only increase it for arrivals later than the expected one second.,0,0,summary
2909,CacheBuilder.java,calling it should not be necessary with a high throughput cache.,0,0,summary
3933,SmoothRateLimiter.java,the time when the next request no matter its size will be granted.,0,0,summary
2910,CacheBuilder.java,only caches built with,0,0,summary
3934,SmoothRateLimiter.java,"after granting a request,",0,0,summary
2911,CacheBuilder.java,"@linkplain #removallistener removallistener , @linkplain #expireafterwrite expireafterwrite ,",0,0,summary
3935,SmoothRateLimiter.java,this is pushed further in the future.,0,0,summary
2912,CacheBuilder.java,"@linkplain #expireafteraccess expireafteraccess , @linkplain #weakkeys weakkeys , @linkplain",0,0,summary
3936,SmoothRateLimiter.java,large requests push this further than small requests.,0,0,summary
2913,CacheBuilder.java,"#weakvalues weakvalues , or @linkplain #softvalues softvalues perform periodic maintenance.",0,0,summary
3937,SmoothRateLimiter.java,"this implements a bursty ratelimiter, where storedpermits are translated to zero throttling.",0,0,summary
3938,SmoothRateLimiter.java,the maximum number of permits that can be saved when the ratelimiter is unused is defined in,0,0,summary
2915,CacheBuilder.java,retain all the configuration properties of the original cache.,0,0,summary
3939,SmoothRateLimiter.java,"terms of time, in this sense if a ratelimiter is 2qps, and this time is specified as 10",0,0,summary
2916,CacheBuilder.java,note that the serialized form does,0,0,summary
3940,SmoothRateLimiter.java,"seconds, we can save up to 2 10 20 permits.",0,0,summary
2917,CacheBuilder.java,"i not i include cache contents, but only configuration.",0,0,summary
2918,CacheBuilder.java,p see the guava user guide article on a,0,0,summary
2919,CacheBuilder.java,href https github^com google guava wiki cachesexplained caching a for a higher level,0,0,summary
2920,CacheBuilder.java,explanation.,0,0,summary
2922,CacheBuilder.java,this is,0,0,summary
2923,CacheBuilder.java,normally @code object unless it is constrained by using a method like @code,0,0,summary
2924,CacheBuilder.java,#removallistener,0,0,summary
2926,CacheBuilder.java,this is,0,0,summary
2927,CacheBuilder.java,normally @code object unless it is constrained by using a method like @code,0,0,summary
2928,CacheBuilder.java,#removallistener,0,0,summary
2929,CacheBuilder.java,@author charles fry,0,0,summary
2930,CacheBuilder.java,@author kevin bourrillion,0,0,summary
2931,CacheBuilder.java,@since 100,0,0,summary
3041,CacheLoaderTest.java,@author charles fry,0,0,summary
3044,CacheManualTest.java,@author charles fry,0,0,summary
3050,ClassToInstanceMap.java,"p like any other @code map class, object , this map may contain entries for primitive types,",0,0,summary
3051,ClassToInstanceMap.java,and a primitive type and its corresponding wrapper type may map to different values.,0,0,summary
3052,ClassToInstanceMap.java,p see the guava user guide article on a href,0,0,summary
3053,ClassToInstanceMap.java,https github^com google guava wiki newcollectiontypesexplained#classtoinstancemap @code,0,0,summary
3054,ClassToInstanceMap.java,classtoinstancemap a .,0,0,summary
3055,ClassToInstanceMap.java,"p to map a generic type to an instance of that type, use @link",0,0,summary
3056,ClassToInstanceMap.java,com^google.common^reflect.typetoinstancemap instead.,0,0,summary
3057,ClassToInstanceMap.java,@param b the common supertype that all entries must share often this is simply @link object,0,0,summary
3058,ClassToInstanceMap.java,@author kevin bourrillion,0,0,summary
3059,ClassToInstanceMap.java,@since 20,0,0,summary
4153,AbstractModule.java,"simply extend this class, implement @link #configure , and call the inherited",0,0,summary
4154,AbstractModule.java,methods which mirror those found in @link binder .,1,0,summary
4155,AbstractModule.java,for example,0,0,summary
4156,AbstractModule.java,pre,1,0,summary
4157,AbstractModule.java,public class mymodule extends abstractmodule,0,0,summary
4158,AbstractModule.java,protected void configure,1,0,summary
4159,AbstractModule.java,bind service^class ^to serviceimpl^class ^in singleton^class,0,0,summary
4160,AbstractModule.java,bind creditcardpaymentservice^class,1,0,summary
4161,AbstractModule.java,bind paymentservice^class ^to creditcardpaymentservice^class,0,0,summary
4162,AbstractModule.java,bindconstant ^annotatedwith names^named port ^to 8080,1,0,summary
4163,AbstractModule.java,pre,0,0,summary
4164,AbstractModule.java,@author crazybob@google^com bob lee,1,0,summary
4183,Binder.java,h3 the guice binding edsl h3,0,0,summary
4184,Binder.java,"guice uses an i embedded domain specific language i , or edsl, to help you create bindings",1,0,summary
4185,Binder.java,simply and readably.,0,0,summary
4188,Binder.java,javadocs b .,1,0,summary
4189,Binder.java,"instead, you should consult the series of examples below.",0,0,summary
4190,Binder.java,"to save space, these",1,0,summary
4191,Binder.java,"examples omit the opening @code binder , just as you will if your module extends @link",0,0,summary
4192,Binder.java,abstractmodule .,1,0,summary
4193,Binder.java,pre,0,0,summary
4196,Binder.java,does not change guice s default behavior.,1,0,summary
4198,Binder.java,@link module class to serve as an explicit i manifest i for the services it provides.,0,0,summary
4199,Binder.java,"also,",1,0,summary
4201,Binder.java,given explicitly.,0,0,summary
4202,Binder.java,pre,1,0,summary
4204,Binder.java,specifies that a request for a @code service instance with no binding annotations should be,0,0,summary
4205,Binder.java,treated as if it were a request for a @code serviceimpl instance.,1,0,summary
4206,Binder.java,this i overrides i the,0,0,summary
4207,Binder.java,function of any @link implementedby @implementedby or @link providedby @providedby,1,0,summary
4208,Binder.java,"annotations found on @code service , since guice will have already moved on to @code",0,0,summary
4209,Binder.java,serviceimpl before it reaches the point when it starts looking for these annotations.,1,0,summary
4210,Binder.java,pre,0,0,summary
4212,Binder.java,"in this example, @code serviceprovider must extend or implement @code provider service .",1,0,summary
4213,Binder.java,this,0,0,summary
4214,Binder.java,binding specifies that guice should resolve an unannotated injection request for @code service,1,0,summary
4215,Binder.java,"by first resolving an instance of @code serviceprovider in the regular way, then calling @link",0,0,summary
4216,Binder.java,provider#get get on the resulting provider instance to obtain the @code service instance.,1,0,summary
4217,Binder.java,"p the @link provider you use here does not have to be a factory that is, a provider which",0,0,summary
4218,Binder.java,always i creates i each instance it provides.,1,0,summary
4474,DefaultMethodInterceptionTest.java,@author cgdecker@google^com colin decker,0,0,summary
4475,DefaultMethodInterceptionTest.java,interface with a default method annotated to be intercepted.,1,0,summary
4220,Binder.java,follow.,0,0,summary
4476,DefaultMethodInterceptionTest.java,foo implementation that does not override the default method.,1,0,summary
4221,Binder.java,you can then use guice s concept of @link scope scopes to guide when creation should,0,0,summary
4477,DefaultMethodInterceptionTest.java,a base class defining a method with the same signature as foo s default method.,1,0,summary
4222,Binder.java,happen letting guice work for you .,0,0,summary
4478,DefaultMethodInterceptionTest.java,foo implementation that should use superclass method rather than default method.,1,0,summary
4223,Binder.java,pre,0,0,summary
4226,Binder.java,@code @red .,1,0,summary
4227,Binder.java,if your module also includes bindings for particular i values i of the,0,0,summary
4229,Binder.java,of @code @red that have no exact match in the bindings.,1,0,summary
4230,Binder.java,pre,0,0,summary
4231,Binder.java,bind serviceimpl^class ^in singleton^class,1,0,summary
4232,Binder.java,"or, alternatively",0,0,summary
4488,Element.java,all elements are,1,0,summary
4489,Element.java,assigned a globally unique id to allow different modules to contribute multibindings,0,0,summary
4234,Binder.java,either of these statements places the @code serviceimpl class into singleton scope.,1,0,summary
4490,Element.java,independently.,0,0,summary
4235,Binder.java,guice will,0,0,summary
4491,Element.java,@author jessewilson@google^com jesse wilson,0,0,summary
4236,Binder.java,create only one instance of @code serviceimpl and will reuse it for all injection requests of,0,0,summary
4238,Binder.java,note that it is still possible to bind another instance of @code serviceimpl if the,0,0,summary
4240,Binder.java,guice is not overly,0,0,summary
4497,EncounterImpl.java,@author jessewilson@google^com jesse wilson,0,0,summary
4242,Binder.java,with i enabling i your application to share only one instance if that s all you tell guice you,0,0,summary
4243,Binder.java,need.,0,0,summary
4499,ImplicitBindingTest.java,"@author crazybob@google^com bob lee an enum cannot be implemented by anything, so it should not be possible to have a successful valid jitable binding",0,0,summary
4245,Binder.java,an annotation on the @code serviceimpl class.,0,0,summary
4246,Binder.java,"p besides @link singleton @link scopes#singleton , there are servlet specific scopes",0,0,summary
4247,Binder.java,"available in @code com^google.inject^servlet.servletscopes , and your modules can contribute",0,0,summary
4248,Binder.java,their own custom scopes for use here as well.,0,0,summary
4504,ManagedFilterPipeline.java,@author dhanji@gmail^com dhanji r. prasanna,0,0,summary
4249,Binder.java,pre,0,0,summary
4250,Binder.java,bind new typeliteral&lt paymentservice&lt creditcard,0,0,summary
4253,Binder.java,it tells guice how to,0,0,summary
4509,PrivateElementProcessor,@author jessewilson@google^com jesse wilson,0,0,summary
4254,Binder.java,honor an injection request for an element of type @code paymentservice creditcard .,0,0,summary
4255,Binder.java,the class,0,0,summary
4256,Binder.java,@code creditcardpaymentservice must implement the @code paymentservice creditcard interface.,0,0,summary
4512,ProxyFactoryTest.java,@author crazybob@google^com bob lee,0,0,summary
4257,Binder.java,"guice cannot currently bind or inject a generic type, such as @code set e all type parameters",0,0,summary
4258,Binder.java,must be fully specified.,0,0,summary
4259,Binder.java,pre,0,0,summary
4515,SpiUtils.java,@author sameb@google^com sam berlin,0,0,summary
4260,Binder.java,bind service^class ^toinstance new serviceimpl,0,0,summary
4261,Binder.java,"or, alternatively",0,0,summary
4518,SpiUtils.java,the kind of binding.,0,0,summary
4519,SpiUtils.java,the result of the binding.,0,0,summary
4265,Binder.java,@code service injection requests.,0,0,summary
4266,Binder.java,"when the @link injector is created, it will automatically",0,0,summary
4268,Binder.java,serviceimpl is simply ignored.,0,0,summary
4270,Binder.java,that you can t control.,0,0,summary
4271,Binder.java,pre,0,0,summary
4273,Binder.java,sets up a constant binding.,0,0,summary
4274,Binder.java,constant injections must always be annotated.,0,0,summary
4275,Binder.java,when a constant,0,0,summary
4276,Binder.java,"binding s value is a string, it is eligible for conversion to all primitive types, to @link",0,0,summary
4277,Binder.java,"enum#valueof class, string all enums , and to @link class#forname class literals .",0,0,summary
4278,Binder.java,conversions,0,0,summary
4279,Binder.java,"for other types can be configured using @link #converttotypes matcher, typeconverter",0,0,summary
4280,Binder.java,converttotypes .,0,0,summary
4281,Binder.java,pre,0,0,summary
4282,Binder.java,@literal @ color red color red a member variable field,0,0,summary
4283,Binder.java,red mymodule^class.getdeclaredfield red ^getannotation color^class,0,0,summary
4285,Binder.java,if your binding annotation has parameters you can apply different bindings to different specific,0,0,summary
4286,Binder.java,values of your annotation.,0,0,summary
4287,Binder.java,getting your hands on the right instance of the annotation is a bit of,0,0,summary
4288,Binder.java,"a pain one approach, shown above, is to apply a prototype annotation to a field in your module",0,0,summary
4290,Binder.java,pre,0,0,summary
4291,Binder.java,bind service^class,0,0,summary
4292,Binder.java,annotatedwith names^named blue,0,0,summary
4294,Binder.java,"differentiating by names is a common enough use case that we provided a standard annotation,",0,0,summary
4295,Binder.java,@link com^google.inject^name.named @named .,0,0,summary
4296,Binder.java,"because of guice s library support, binding by name",0,0,summary
4297,Binder.java,is quite easier than in the arbitrary binding annotation case we just saw.,0,0,summary
4298,Binder.java,"however, remember that",0,0,summary
4299,Binder.java,these names will live in a single flat namespace with all the other names used in your,0,0,summary
4300,Binder.java,application.,0,0,summary
4301,Binder.java,pre,0,0,summary
4302,Binder.java,constructor t lonector getlonectorfromserviceimplviareflection,0,0,summary
4303,Binder.java,bind serviceimpl^class,0,0,summary
4306,Binder.java,implementation.,0,0,summary
4307,Binder.java,it means that we do not need to place @literal @ inject on any of the,0,0,summary
4308,Binder.java,constructors and that guice treats the provided constructor as though it were annotated so.,0,0,summary
4309,Binder.java,it is,0,0,summary
4310,Binder.java,useful for cases where you cannot modify existing classes and is a bit simpler than using a,0,0,summary
4311,Binder.java,@link provider .,0,0,summary
4312,Binder.java,p the above list of examples is far from exhaustive.,0,0,summary
4313,Binder.java,if you can think of how the concepts of one,0,0,summary
4314,Binder.java,"example might coexist with the concepts from another, you can most likely weave the two together.",0,0,summary
4315,Binder.java,"if the two concepts make no sense with each other, you most likely won t be able to do it.",0,0,summary
4316,Binder.java,in a,0,0,summary
4318,Binder.java,"runtime, as soon as you try to create your injector.",0,0,summary
4319,Binder.java,"p the other methods of binder such as @link #bindscope , @link #bindinterceptor , @link",0,0,summary
4320,Binder.java,"#install , @link #requeststaticinjection , @link #adderror and @link #currentstage are not",0,0,summary
4321,Binder.java,"part of the binding edsl you can learn how to use these in the usual way, from the method",0,0,summary
4322,Binder.java,documentation.,0,0,summary
4323,Binder.java,@author crazybob@google^com bob lee,0,0,summary
4324,Binder.java,@author jessewilson@google^com jesse wilson,0,0,summary
4325,Binder.java,@author kevinb@google^com kevin bourrillion,0,0,summary
5120,VScrollTable.java,dom^client.blurevent,0,0,summary
5121,VScrollTable.java,non javadoc,1,0,summary
5124,VScrollTable.java,to detect if the first visible,0,0,summary
5125,VScrollTable.java,these are used when jumping between pages when pressing home and end,1,0,summary
5126,VScrollTable.java,changes to manage mousedown and mouseup,0,0,summary
5127,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,1,0,summary
5128,VScrollTable.java,lost .,0,0,summary
5129,VScrollTable.java,example itabpanel just set contained components invisible and back,1,0,summary
5130,VScrollTable.java,when changing tabs.,0,0,summary
5131,VScrollTable.java,updates first visible row for the case we cannot wait,1,0,summary
5132,VScrollTable.java,this method has logic which rows needs to be requested from server when,0,0,summary
5133,VScrollTable.java,user scrolls.,1,0,summary
5134,VScrollTable.java,non javadoc,0,0,summary
5135,VScrollTable.java,@see,1,0,summary
5136,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,0,0,summary
5137,VScrollTable.java,dom^client.focusevent,1,0,summary
5138,VScrollTable.java,non javadoc,0,0,summary
5139,VScrollTable.java,@see,1,0,summary
5140,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,0,0,summary
5141,VScrollTable.java,dom^client.blurevent,1,0,summary
5142,VScrollTable.java,non javadoc,0,0,summary
5144,VScrollTable.java,for internal use only.,1,0,summary
5147,VScrollTable.java,access to touchcontextprovider.,0,0,summary
5148,VScrollTable.java,has to be public to give tableconnector,1,0,summary
5150,VScrollTable.java,@since 72,0,0,summary
5151,VScrollTable.java,@author vaadin ltd,1,0,summary
5152,VScrollTable.java,to detect if the first visible,0,0,summary
5153,VScrollTable.java,these are used when jumping between pages when pressing home and end,1,0,summary
5154,VScrollTable.java,changes to manage mousedown and mouseup,0,0,summary
5155,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,1,0,summary
5156,VScrollTable.java,lost .,0,0,summary
5157,VScrollTable.java,example itabpanel just set contained components invisible and back,1,0,summary
5158,VScrollTable.java,when changing tabs.,0,0,summary
5159,VScrollTable.java,updates first visible row for the case we cannot wait,1,0,summary
5160,VScrollTable.java,this method has logic which rows needs to be requested from server when,0,0,summary
5161,VScrollTable.java,user scrolls.,1,0,summary
5162,VScrollTable.java,non javadoc,0,0,summary
5163,VScrollTable.java,@see,1,0,summary
5164,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,0,0,summary
5165,VScrollTable.java,dom^client.focusevent,1,0,summary
5166,VScrollTable.java,non javadoc,0,0,summary
5167,VScrollTable.java,@see,1,0,summary
5168,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,0,0,summary
5169,VScrollTable.java,dom^client.blurevent,1,0,summary
5170,VScrollTable.java,non javadoc,0,0,summary
5172,VScrollTable.java,used to recall the position of an open context menu if we need to close,1,0,summary
5175,VScrollTable.java,for internal use only.,0,0,summary
5177,VScrollTable.java,to detect if the first visible,1,0,summary
5178,VScrollTable.java,these are used when jumping between pages when pressing home and end,0,0,summary
5179,VScrollTable.java,changes to manage mousedown and mouseup,1,0,summary
5180,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,0,0,summary
5181,VScrollTable.java,lost .,1,0,summary
5182,VScrollTable.java,example itabpanel just set contained components invisible and back,0,0,summary
5183,VScrollTable.java,when changing tabs.,1,0,summary
5184,VScrollTable.java,updates first visible row for the case we cannot wait,0,0,summary
5185,VScrollTable.java,this method has logic which rows needs to be requested from server when,1,0,summary
5186,VScrollTable.java,user scrolls.,0,0,summary
5187,VScrollTable.java,non javadoc,1,0,summary
5188,VScrollTable.java,@see,0,0,summary
5189,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,1,0,summary
5190,VScrollTable.java,dom^client.focusevent,0,0,summary
5191,VScrollTable.java,non javadoc,1,0,summary
5192,VScrollTable.java,@see,0,0,summary
5193,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,1,0,summary
5194,VScrollTable.java,dom^client.blurevent,0,0,summary
5195,VScrollTable.java,non javadoc,1,0,summary
5197,VScrollTable.java,for internal use only.,0,0,summary
5199,VScrollTable.java,to detect if the first visible,1,0,summary
5200,VScrollTable.java,these are used when jumping between pages when pressing home and end,0,0,summary
5201,VScrollTable.java,changes to manage mousedown and mouseup,1,0,summary
5202,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,0,0,summary
5203,VScrollTable.java,lost .,1,0,summary
5204,VScrollTable.java,example itabpanel just set contained components invisible and back,0,0,summary
5205,VScrollTable.java,when changing tabs.,1,0,summary
5206,VScrollTable.java,updates first visible row for the case we cannot wait,0,0,summary
5207,VScrollTable.java,this method has logic which rows needs to be requested from server when,1,0,summary
5208,VScrollTable.java,user scrolls.,0,0,summary
5209,VScrollTable.java,non javadoc,1,0,summary
5210,VScrollTable.java,@see,0,0,summary
5211,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,1,0,summary
5212,VScrollTable.java,dom^client.focusevent,0,0,summary
5213,VScrollTable.java,non javadoc,1,0,summary
5214,VScrollTable.java,@see,0,0,summary
5215,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,1,0,summary
5216,VScrollTable.java,dom^client.blurevent,0,0,summary
5217,VScrollTable.java,non javadoc,1,0,summary
5220,VScrollTable.java,reordering disabled and clicking on it resets sorting.,0,0,summary
5221,VScrollTable.java,to detect if the first visible,1,0,summary
5222,VScrollTable.java,these are used when jumping between pages when pressing home and end,0,0,summary
5223,VScrollTable.java,changes to manage mousedown and mouseup,1,0,summary
5224,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,0,0,summary
5225,VScrollTable.java,lost .,1,0,summary
5226,VScrollTable.java,example itabpanel just set contained components invisible and back,0,0,summary
5227,VScrollTable.java,when changing tabs.,1,0,summary
5228,VScrollTable.java,updates first visible row for the case we cannot wait,0,0,summary
5229,VScrollTable.java,this method has logic which rows needs to be requested from server when,1,0,summary
5230,VScrollTable.java,user scrolls.,0,0,summary
5231,VScrollTable.java,non javadoc,1,0,summary
5232,VScrollTable.java,@see,0,0,summary
5233,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,1,0,summary
5234,VScrollTable.java,dom^client.focusevent,0,0,summary
5235,VScrollTable.java,non javadoc,1,0,summary
5236,VScrollTable.java,@see,0,0,summary
5237,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,1,0,summary
5238,VScrollTable.java,dom^client.blurevent,0,0,summary
5239,VScrollTable.java,non javadoc,1,0,summary
5242,VScrollTable.java,to detect if the first visible,0,0,summary
5243,VScrollTable.java,these are used when jumping between pages when pressing home and end,1,0,summary
5244,VScrollTable.java,changes to manage mousedown and mouseup,0,0,summary
5245,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,1,0,summary
5246,VScrollTable.java,lost .,0,0,summary
5247,VScrollTable.java,example itabpanel just set contained components invisible and back,1,0,summary
5248,VScrollTable.java,when changing tabs.,0,0,summary
5249,VScrollTable.java,updates first visible row for the case we cannot wait,1,0,summary
5250,VScrollTable.java,this method has logic which rows needs to be requested from server when,0,0,summary
5251,VScrollTable.java,user scrolls.,1,0,summary
5252,VScrollTable.java,non javadoc,0,0,summary
5253,VScrollTable.java,@see,1,0,summary
5254,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,0,0,summary
5255,VScrollTable.java,dom^client.focusevent,1,0,summary
5256,VScrollTable.java,non javadoc,0,0,summary
5257,VScrollTable.java,@see,1,0,summary
5258,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,0,0,summary
5259,VScrollTable.java,dom^client.blurevent,1,0,summary
5260,VScrollTable.java,non javadoc,0,0,summary
5263,VScrollTable.java,reordering disabled and clicking on it resets sorting.,1,0,summary
5264,VScrollTable.java,to detect if the first visible,0,0,summary
5265,VScrollTable.java,these are used when jumping between pages when pressing home and end,1,0,summary
5266,VScrollTable.java,changes to manage mousedown and mouseup,0,0,summary
5267,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,1,0,summary
5268,VScrollTable.java,lost .,0,0,summary
5269,VScrollTable.java,example itabpanel just set contained components invisible and back,1,0,summary
5270,VScrollTable.java,when changing tabs.,0,0,summary
5271,VScrollTable.java,updates first visible row for the case we cannot wait,1,0,summary
5272,VScrollTable.java,this method has logic which rows needs to be requested from server when,0,0,summary
5273,VScrollTable.java,user scrolls.,1,0,summary
5274,VScrollTable.java,non javadoc,0,0,summary
5275,VScrollTable.java,@see,1,0,summary
5276,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,0,0,summary
5277,VScrollTable.java,dom^client.focusevent,1,0,summary
5278,VScrollTable.java,non javadoc,0,0,summary
5279,VScrollTable.java,@see,1,0,summary
5280,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,0,0,summary
5281,VScrollTable.java,dom^client.blurevent,1,0,summary
5282,VScrollTable.java,non javadoc,0,0,summary
5285,VScrollTable.java,to detect if the first visible,1,0,summary
5286,VScrollTable.java,these are used when jumping between pages when pressing home and end,0,0,summary
5287,VScrollTable.java,changes to manage mousedown and mouseup,1,0,summary
5288,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,0,0,summary
5289,VScrollTable.java,lost .,1,0,summary
5290,VScrollTable.java,example itabpanel just set contained components invisible and back,0,0,summary
5291,VScrollTable.java,when changing tabs.,1,0,summary
5292,VScrollTable.java,updates first visible row for the case we cannot wait,0,0,summary
5293,VScrollTable.java,this method has logic which rows needs to be requested from server when,1,0,summary
5294,VScrollTable.java,user scrolls.,0,0,summary
5295,VScrollTable.java,non javadoc,1,0,summary
5296,VScrollTable.java,@see,0,0,summary
5297,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,1,0,summary
5298,VScrollTable.java,dom^client.focusevent,0,0,summary
5299,VScrollTable.java,non javadoc,1,0,summary
5300,VScrollTable.java,@see,0,0,summary
5301,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,1,0,summary
5302,VScrollTable.java,dom^client.blurevent,0,0,summary
5303,VScrollTable.java,non javadoc,1,0,summary
5305,VScrollTable.java,this panel can only contain vscrolltablerow type of widgets.,0,0,summary
5306,VScrollTable.java,this,1,0,summary
5307,VScrollTable.java,"simulates very large table, keeping spacers which take room of",0,0,summary
5308,VScrollTable.java,unrendered rows.,1,0,summary
5366,VTextArea.java,@author vaadin ltd.,0,0,summary
5371,VUpload.java,@author vaadin ltd,1,0,summary
5377,Window.java,p,0,0,summary
5378,Window.java,the contents of a window is set using @link #setcontent component or by,1,0,summary
5379,Window.java,"using the @link #window string, component constructor.",0,0,summary
5380,Window.java,p,1,0,summary
5381,Window.java,p,0,0,summary
5382,Window.java,a window can be positioned on the screen using absolute coordinates pixels,1,0,summary
5383,Window.java,or set to be centered using @link #center,0,0,summary
5384,Window.java,p,1,0,summary
5385,Window.java,p,0,0,summary
5386,Window.java,the caption is displayed in the window header.,1,0,summary
5387,Window.java,p,0,0,summary
5388,Window.java,p,1,0,summary
5389,Window.java,"in vaadin versions prior to 70.0, window was also used as application level",0,0,summary
5390,Window.java,windows.,1,0,summary
5391,Window.java,this function is now covered by the @link ui class.,0,0,summary
5392,Window.java,p,1,0,summary
5393,Window.java,@author vaadin ltd.,0,0,summary
5394,Window.java,@since 30,1,0,summary
5395,Window.java,non javadoc,0,0,summary
5396,Window.java,@see com^vaadin.ui^panel#paintcontent com^vaadin.server^painttarget,1,0,summary
5397,Window.java,non javadoc,0,0,summary
5398,Window.java,"@see com^vaadin.ui^panel#changevariables java^lang.object, java^util.map",1,0,summary
5399,Window.java,event which is fired when the window order position is changed.,0,0,summary
5400,Window.java,@see ui^windoworderupdateevent,1,0,summary
5401,Window.java,@author vaadin ltd,0,0,summary
5402,Window.java,non javadoc,1,0,summary
5403,Window.java,@see com^vaadin.ui^panel#paintcontent com^vaadin.server^painttarget,0,0,summary
5404,Window.java,non javadoc,0,0,summary
5405,Window.java,"@see com^vaadin.ui^panel#changevariables java^lang.object, java^util.map",0,0,summary
5406,Window.java,an interface used for listening to window order change events.,0,0,summary
5408,Window.java,non javadoc,0,0,summary
5409,Window.java,@see com^vaadin.ui^panel#paintcontent com^vaadin.server^painttarget,0,0,summary
5410,Window.java,non javadoc,0,0,summary
5411,Window.java,"@see com^vaadin.ui^panel#changevariables java^lang.object, java^util.map",0,0,summary
5412,Window.java,an interface used for listening to window close events.,0,0,summary
5413,Window.java,add the,0,0,summary
5414,Window.java,closelistener to a window and,0,0,summary
5415,Window.java,@link closelistener#windowclose closeevent will be called whenever the,0,0,summary
5416,Window.java,user closes the window.,0,0,summary
5417,Window.java,p,0,0,summary
5420,Window.java,p,0,0,summary
5421,Window.java,non javadoc,0,0,summary
5422,Window.java,@see com^vaadin.ui^panel#paintcontent com^vaadin.server^painttarget,0,0,summary
5423,Window.java,non javadoc,0,0,summary
5424,Window.java,"@see com^vaadin.ui^panel#changevariables java^lang.object, java^util.map",0,0,summary
5426,Window.java,@author vaadin ltd,0,0,summary
5428,Window.java,non javadoc,0,0,summary
5429,Window.java,@see com^vaadin.ui^panel#paintcontent com^vaadin.server^painttarget,0,0,summary
5430,Window.java,non javadoc,0,0,summary
5431,Window.java,"@see com^vaadin.ui^panel#changevariables java^lang.object, java^util.map",0,0,summary
5432,Window.java,an interface used for listening to window maximize restore events.,0,0,summary
5433,Window.java,add,0,0,summary
5434,Window.java,the windowmodechangelistener to a window and,0,0,summary
5435,Window.java,@link windowmodechangelistener#windowmodechanged windowmodechangeevent,0,0,summary
5436,Window.java,will be called whenever the window is maximized,0,0,summary
5437,Window.java,@link windowmode#maximized or restored @link windowmode#normal .,0,0,summary
5438,Window.java,non javadoc,0,0,summary
5439,Window.java,@see com^vaadin.ui^panel#paintcontent com^vaadin.server^painttarget,0,0,summary
5440,Window.java,non javadoc,0,0,summary
5441,Window.java,"@see com^vaadin.ui^panel#changevariables java^lang.object, java^util.map",0,0,summary
5442,Window.java,resize events are fired whenever the client side fires a resize event,0,0,summary
5443,Window.java,eg the browser window is resized .,0,0,summary
5444,Window.java,the frequency may vary across,0,0,summary
5445,Window.java,browsers.,0,0,summary
5446,Window.java,non javadoc,0,0,summary
5447,Window.java,@see com^vaadin.ui^panel#paintcontent com^vaadin.server^painttarget,0,0,summary
5448,Window.java,non javadoc,0,0,summary
5449,Window.java,"@see com^vaadin.ui^panel#changevariables java^lang.object, java^util.map",0,0,summary
5452,Window.java,non javadoc,0,0,summary
5453,Window.java,@see com^vaadin.ui^panel#paintcontent com^vaadin.server^painttarget,0,0,summary
5454,Window.java,non javadoc,0,0,summary
5455,Window.java,"@see com^vaadin.ui^panel#changevariables java^lang.object, java^util.map",0,0,summary
5456,Window.java,a @link shortcutlistener specifically made to define a keyboard,0,0,summary
5457,Window.java,shortcut that closes the window.,0,0,summary
5458,Window.java,pre,0,0,summary
5459,Window.java,code,0,0,summary
5460,Window.java,within the window using helper,0,0,summary
5462,Window.java,or globally,0,0,summary
5463,Window.java,"getui ^addaction new window^closeshortcut window, keycode^escape",0,0,summary
5464,Window.java,code,0,0,summary
5465,Window.java,pre,0,0,summary
5520,XhrConnectionError.java,@since 76,0,0,summary
5521,XhrConnectionError.java,@author vaadin ltd,0,0,summary
4527,AbstractFocusable.java,@since 76,0,0,summary
4528,AbstractFocusable.java,@author vaadin ltd,0,0,summary
4534,AbstractMultiSelectState.java,@author vaadin ltd,0,0,summary
4535,AbstractMultiSelectState.java,@since 80,0,0,summary
4543,AbstractProperty.java,@since 66,0,0,summary
4544,AbstractProperty.java,"@deprecated as of 80, replaced by @link valueprovider , @link setter , see",0,0,summary
4545,AbstractProperty.java,@link binder,0,0,summary
4546,AbstractProperty.java,legacypropertyhelper has been removed in vaadin 8 events,0,0,summary
4547,AbstractProperty.java,an code event code object specifying the property whose read only,0,0,summary
4548,AbstractProperty.java,status has been changed.,0,0,summary
4549,AbstractProperty.java,legacypropertyhelper has been removed in vaadin 8 events,0,0,summary
4567,AbstractSingleComponentContainerState.java,@since 80,0,0,summary
4572,AdjacentElementsWithTooltipsTest.java,@author vaadin ltd,0,0,summary
4577,ApplicationConfiguration.java,@since 70,0,0,summary
4579,ApplicationConfiguration.java,@since 70,0,0,summary
4585,BootstrapPageResponse.java,the bootstrap page,0,0,summary
4586,BootstrapPageResponse.java,contains of the full dom of the html document as well as the http headers,0,0,summary
4587,BootstrapPageResponse.java,that will be included in the corresponding http response.,0,0,summary
4588,BootstrapPageResponse.java,@author vaadin ltd,0,0,summary
4589,BootstrapPageResponse.java,@since 70.0,0,0,summary
4597,ButtonRenderer.java,the value of the,0,0,summary
4598,ButtonRenderer.java,corresponding property is used as the caption.,0,0,summary
4599,ButtonRenderer.java,click listeners can be added,0,0,summary
4600,ButtonRenderer.java,"to the renderer, invoked when any of the rendered buttons is clicked.",0,0,summary
4601,ButtonRenderer.java,@since 74,0,0,summary
4602,ButtonRenderer.java,@author vaadin ltd,0,0,summary
4611,ClientRpcWriter.java,@author vaadin ltd,0,0,summary
4612,ClientRpcWriter.java,@since 71,0,0,summary
4617,ColorPickerServerRpc.java,@since 70.0,0,0,summary
4621,ComboBoxState.java,@since 70,0,0,summary
4627,DeclarativeValueProvider.java,@param t,0,0,summary
4628,DeclarativeValueProvider.java,item type,0,0,summary
4634,DoubleRangeValidator.java,@author vaadin ltd.,0,0,summary
4635,DoubleRangeValidator.java,@since 80,0,0,summary
4642,FooterDoubleClickHandler.java,@since 74,0,0,summary
4643,FooterDoubleClickHandler.java,@author vaadin ltd,0,0,summary
4650,Grid.java,@author vaadin ltd,0,0,summary
4651,Grid.java,@since 80,0,0,summary
4652,Grid.java,@param t,0,0,summary
4653,Grid.java,the grid bean type,0,0,summary
4654,Grid.java,header and footer,0,0,summary
4658,Grid.java,@param t,0,0,summary
4659,Grid.java,the grid bean type,0,0,summary
4660,Grid.java,header and footer,0,0,summary
4661,Grid.java,selection mode representing the built in selection models in grid.,0,0,summary
4663,Grid.java,these enums can be used in @link grid#setselectionmode selectionmode,0,0,summary
4665,Grid.java,@see grid#setselectionmode selectionmode,0,0,summary
4666,Grid.java,@see grid#setselectionmodel gridselectionmodel,0,0,summary
4667,Grid.java,header and footer,0,0,summary
4669,Grid.java,header and footer,0,0,summary
4672,Grid.java,header and footer,0,0,summary
4674,Grid.java,@param t,0,0,summary
4675,Grid.java,the grid bean type,0,0,summary
4676,Grid.java,header and footer,0,0,summary
4679,Grid.java,usage,0,0,summary
4680,Grid.java,pre,0,0,summary
4681,Grid.java,grid^addcontextclicklistener event &gt notification^show,0,0,summary
4682,Grid.java,gridcontextclickevent&lt person&gt event ^getitem clicked,0,0,summary
4683,Grid.java,pre,0,0,summary
4684,Grid.java,@param t,0,0,summary
4685,Grid.java,the grid bean type,0,0,summary
4686,Grid.java,header and footer,0,0,summary
4687,Grid.java,an event that is fired when a column s visibility changes.,0,0,summary
4688,Grid.java,@since 75.0,0,0,summary
4689,Grid.java,header and footer,0,0,summary
4690,Grid.java,a helper base class for creating extensions for the grid component.,0,0,summary
4691,Grid.java,@param t,0,0,summary
4692,Grid.java,header and footer,0,0,summary
4693,Grid.java,class for managing visible details rows.,0,0,summary
4694,Grid.java,@param t,0,0,summary
4695,Grid.java,the grid bean type,0,0,summary
4696,Grid.java,header and footer,0,0,summary
4699,Grid.java,@param t,0,0,summary
4700,Grid.java,the grid bean type,0,0,summary
4734,GridSelectionModel.java,selectionmodel should extend @link abstractgridextension .,0,0,summary
4735,GridSelectionModel.java,@author vaadin ltd,0,0,summary
4737,GridSelectionModel.java,@param t,0,0,summary
4738,GridSelectionModel.java,the grid bean type,0,0,summary
4739,GridSelectionModel.java,@see abstractselectionmodel,0,0,summary
4740,GridSelectionModel.java,@see singleselectionmodel,0,0,summary
4741,GridSelectionModel.java,@see multiselectionmodel,0,0,summary
4751,HeaderRow.java,@author vaadin ltd,0,0,summary
4752,HeaderRow.java,@since 80,0,0,summary
4761,InternalContainerAnnotationForJS.java,@author vaadin ltd,0,0,summary
4762,InternalContainerAnnotationForJS.java,@since 80,0,0,summary
4768,MyPickerConnector.java,"https vaadin^com wiki wiki main widget%20styling%20using%20only%20css,",0,0,summary
4769,MyPickerConnector.java,https,0,0,summary
4770,MyPickerConnector.java,vaadin^com wiki wiki main lightweight%20calculations%20of%20widget%20l,0,0,summary
4772,MyPickerConnector.java,@author vaadin ltd,0,0,summary
4773,MyPickerConnector.java,@since 70.0,0,0,summary
4782,NotEmptyValidatorTest.java,@author vaadin ltd,0,0,summary
4790,PopupView.java,@author vaadin ltd.,0,0,summary
4791,PopupView.java,constructors,0,0,summary
4792,PopupView.java,methods inherited from abstractcomponentcontainer.,0,0,summary
4793,PopupView.java,these are unnecessary,0,0,summary
4794,PopupView.java,but mandatory .,0,0,summary
4795,PopupView.java,most of them are not supported in this implementation.,0,0,summary
4801,PopupView.java,constructors,0,0,summary
4802,PopupView.java,methods inherited from abstractcomponentcontainer.,0,0,summary
4803,PopupView.java,these are unnecessary,0,0,summary
4804,PopupView.java,but mandatory .,0,0,summary
4805,PopupView.java,most of them are not supported in this implementation.,0,0,summary
4806,PopupView.java,this event is received by the popupvisibilitylisteners when the,0,0,summary
4807,PopupView.java,visibility of the popup changes.,0,0,summary
4808,PopupView.java,you can get the new visibility directly,0,0,summary
4809,PopupView.java,"with @link #ispopupvisible , or get the popupview that produced the",0,0,summary
4810,PopupView.java,event with @link #getpopupview .,0,0,summary
4811,PopupView.java,constructors,0,0,summary
4812,PopupView.java,methods inherited from abstractcomponentcontainer.,0,0,summary
4813,PopupView.java,these are unnecessary,0,0,summary
4814,PopupView.java,but mandatory .,0,0,summary
4815,PopupView.java,most of them are not supported in this implementation.,0,0,summary
4816,PopupView.java,defines a listener that can receive a popupvisibilityevent when the,0,0,summary
4817,PopupView.java,visibility of the popup changes.,0,0,summary
4849,PortletDummyRequestHandler.java,@author vaadin ltd,0,0,summary
4850,PortletDummyRequestHandler.java,@since 71,0,0,summary
4855,QueryBuilder.java,"@deprecated as of 80, no replacement available.",0,0,summary
4858,RequiredTextFieldTest.java,@author vaadin ltd,0,0,summary
4867,RpcDataProviderExtension.java,@since 74,0,0,summary
4868,RpcDataProviderExtension.java,@author vaadin ltd,0,0,summary
4869,RpcDataProviderExtension.java,"@deprecated as of 80, no replacement available.",0,0,summary
4871,RpcDataProviderExtension.java,@since 76,0,0,summary
4886,RpcDataProviderExtension.java,"@see grid#addvaluechangelistener com^vaadin.v7^data.container, object, object",0,0,summary
4887,RpcDataProviderExtension.java,"grid#addvaluechangelistener container, object, object",0,0,summary
4888,RpcDataProviderExtension.java,@see grid#valuechangelisteners,0,0,summary
4903,SelectAllEvent.java,@since 74,0,0,summary
4904,SelectAllEvent.java,@author vaadin ltd,0,0,summary
4905,SelectAllEvent.java,@param t,0,0,summary
4906,SelectAllEvent.java,the type of the rows in grid,0,0,summary
4917,ShouldWriteDataDelegate.java,@see designcontext#shouldwritedata component,0,0,summary
4918,ShouldWriteDataDelegate.java,@since 75.0,0,0,summary
4919,ShouldWriteDataDelegate.java,@author vaadin ltd,0,0,summary
4929,SimpleGridUI.java,@author vaadin ltd,0,0,summary
4931,SpacerVisibilityChangedEvent.java,event fired when a spacer element is hidden or shown in escalator.,0,0,summary
4932,SpacerVisibilityChangedEvent.java,@author vaadin ltd,0,0,summary
4933,SpacerVisibilityChangedEvent.java,@since 77.13,0,0,summary
4938,TargetDetailsImpl.java,@since 63,0,0,summary
4939,TargetDetailsImpl.java,@deprecated replaced in 81 by @link dropevent#gettransferdata string,0,0,summary
4946,UnknownExtensionConnector.java,@since 77.4,0,0,summary
4947,UnknownExtensionConnector.java,@author vaadin ltd,0,0,summary
4955,VaadinPortlet.java,@author vaadin ltd,0,0,summary
4958,VaadinPortlet.java,base class for portlet requests that need access to http servlet,0,0,summary
4962,VaadinPortlet.java,portlet request for liferay.,0,0,summary
4965,VaadinPortlet.java,portlet request for gatein.,0,0,summary
4968,VaadinPortlet.java,portlet request for websphere portal.,0,0,summary
4971,VaadinPortlet.java,portlet request for websphere portal.,0,0,summary
4974,VaadinPortlet.java,@author vaadin ltd,0,0,summary
4975,VaadinPortlet.java,@deprecated as of 70.,0,0,summary
4976,VaadinPortlet.java,this is no longer used and only provided for,0,0,summary
4977,VaadinPortlet.java,backwards compatibility.,0,0,summary
4978,VaadinPortlet.java,each @link requesthandler can,0,0,summary
4979,VaadinPortlet.java,individually decide whether it wants to handle a request or,0,0,summary
4980,VaadinPortlet.java,not.,0,0,summary
4999,VaadinServiceInitListener.java,listener instances are by default discovered and instantiated using,0,0,summary
5000,VaadinServiceInitListener.java,@link serviceloader .,0,0,summary
5001,VaadinServiceInitListener.java,this means that all implementations must have a,0,0,summary
5002,VaadinServiceInitListener.java,zero argument constructor and the fully qualified name of the implementation,0,0,summary
5003,VaadinServiceInitListener.java,class must be listed on a separate line in a,0,0,summary
5004,VaadinServiceInitListener.java,meta inf services com^vaadin.server^vaadinserviceinitlistener file present in,0,0,summary
5005,VaadinServiceInitListener.java,the jar file containing the implementation class.,0,0,summary
5007,VaadinServiceInitListener.java,"integrations for specific runtime environments, such as osgi or spring, might",0,0,summary
5008,VaadinServiceInitListener.java,also provide other ways of discovering listeners.,0,0,summary
5009,VaadinServiceInitListener.java,@since 80,0,0,summary
5010,VaadinServiceInitListener.java,@author vaadin ltd,0,0,summary
5029,VLazyInitItemIdentifiers.java,@author vaadin ltd,0,0,summary
5030,VLazyInitItemIdentifiers.java,@deprecated replaced in 81 with,0,0,summary
5031,VLazyInitItemIdentifiers.java,ragovercriteria string and,0,0,summary
5032,VLazyInitItemIdentifiers.java,@link droptargetextension#setdropcriteria string,0,0,summary
5050,VScrollTable.java,in vscrolltable we listen to scroll events.,0,0,summary
5051,VScrollTable.java,on horizontal scrolling we also,0,0,summary
5052,VScrollTable.java,update tableheads scroll position which has its scrollbars hidden.,0,0,summary
5053,VScrollTable.java,on,0,0,summary
5054,VScrollTable.java,vertical scroll events we will check if we are reaching the end of area where,0,0,summary
5055,VScrollTable.java,we have rows rendered and,0,0,summary
5056,VScrollTable.java,todo implement unregistering for child components in cells,0,0,summary
5057,VScrollTable.java,to detect if the first visible,0,0,summary
5058,VScrollTable.java,these are used when jumping between pages when pressing home and end,0,0,summary
5059,VScrollTable.java,changes to manage mousedown and mouseup,0,0,summary
5060,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,0,0,summary
5061,VScrollTable.java,lost .,0,0,summary
5062,VScrollTable.java,example itabpanel just set contained components invisible and back,0,0,summary
5063,VScrollTable.java,when changing tabs.,0,0,summary
5064,VScrollTable.java,updates first visible row for the case we cannot wait,0,0,summary
5065,VScrollTable.java,this method has logic which rows needs to be requested from server when,0,0,summary
5066,VScrollTable.java,user scrolls.,0,0,summary
5067,VScrollTable.java,non javadoc,0,0,summary
5068,VScrollTable.java,@see,0,0,summary
5069,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,0,0,summary
5070,VScrollTable.java,dom^client.focusevent,0,0,summary
5071,VScrollTable.java,non javadoc,0,0,summary
5072,VScrollTable.java,@see,0,0,summary
5073,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,0,0,summary
5074,VScrollTable.java,dom^client.blurevent,0,0,summary
5075,VScrollTable.java,non javadoc,0,0,summary
5077,VScrollTable.java,simple interface for parts of the table capable of owning a context menu.,0,0,summary
5078,VScrollTable.java,@since 72,0,0,summary
5079,VScrollTable.java,@author vaadin ltd,0,0,summary
5080,VScrollTable.java,to detect if the first visible,0,0,summary
5081,VScrollTable.java,these are used when jumping between pages when pressing home and end,0,0,summary
5082,VScrollTable.java,changes to manage mousedown and mouseup,0,0,summary
5083,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,0,0,summary
5084,VScrollTable.java,lost .,0,0,summary
5085,VScrollTable.java,example itabpanel just set contained components invisible and back,0,0,summary
5086,VScrollTable.java,when changing tabs.,0,0,summary
5087,VScrollTable.java,updates first visible row for the case we cannot wait,0,0,summary
5088,VScrollTable.java,this method has logic which rows needs to be requested from server when,0,0,summary
5089,VScrollTable.java,user scrolls.,0,0,summary
5090,VScrollTable.java,non javadoc,0,0,summary
5091,VScrollTable.java,@see,0,0,summary
5092,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,0,0,summary
5093,VScrollTable.java,dom^client.focusevent,0,0,summary
5094,VScrollTable.java,non javadoc,0,0,summary
5095,VScrollTable.java,@see,0,0,summary
5096,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,0,0,summary
5097,VScrollTable.java,dom^client.blurevent,0,0,summary
5098,VScrollTable.java,non javadoc,0,0,summary
5100,VScrollTable.java,handles showing context menu on long press from a touch screen.,0,0,summary
5101,VScrollTable.java,@since 72,0,0,summary
5102,VScrollTable.java,@author vaadin ltd,0,0,summary
5103,VScrollTable.java,to detect if the first visible,0,0,summary
5104,VScrollTable.java,these are used when jumping between pages when pressing home and end,0,0,summary
5105,VScrollTable.java,changes to manage mousedown and mouseup,0,0,summary
5106,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,0,0,summary
5107,VScrollTable.java,lost .,0,0,summary
5108,VScrollTable.java,example itabpanel just set contained components invisible and back,0,0,summary
5109,VScrollTable.java,when changing tabs.,0,0,summary
5110,VScrollTable.java,updates first visible row for the case we cannot wait,0,0,summary
5111,VScrollTable.java,this method has logic which rows needs to be requested from server when,0,0,summary
5112,VScrollTable.java,user scrolls.,0,0,summary
5113,VScrollTable.java,non javadoc,0,0,summary
5114,VScrollTable.java,@see,0,0,summary
5115,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,0,0,summary
5116,VScrollTable.java,dom^client.focusevent,0,0,summary
5117,VScrollTable.java,non javadoc,0,0,summary
5118,VScrollTable.java,@see,0,0,summary
5119,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,0,0,summary
1,Abfss.java,azure blob file system implementation of abstractfilesystem.,0,0,Ownership
2,Abfss.java,this impl delegates to the old filesystem,1,0,Ownership
1028,TestConnCache.java,this class tests the client connection caching in a single node,0,0,Ownership
5,AbstractContractGetFileStatusTest.java,test getfilestatus and related listing operations.,1,0,Ownership
6,AbstractContractGetFileStatusTest.java,the tree parameters.,0,0,Ownership
7,AbstractContractGetFileStatusTest.java,kept small to avoid killing object store test runs too much.,1,0,Ownership
8,AbstractContractGetFileStatusTest.java,accept everything.,0,0,Ownership
1032,TestCustomOauthTokenProvider.java,test custom oauth token providers.,1,0,Ownership
9,AbstractContractGetFileStatusTest.java,the tree parameters.,0,0,Ownership
10,AbstractContractGetFileStatusTest.java,kept small to avoid killing object store test runs too much.,1,0,Ownership
11,AbstractContractGetFileStatusTest.java,accept nothing.,0,0,Ownership
1035,TestCustomOauthTokenProvider.java,instead this just checks that the creation works and that everything,1,0,Ownership
12,AbstractContractGetFileStatusTest.java,the tree parameters.,0,0,Ownership
1036,TestCustomOauthTokenProvider.java,is propagated.,1,0,Ownership
13,AbstractContractGetFileStatusTest.java,kept small to avoid killing object store test runs too much.,0,0,Ownership
14,AbstractContractGetFileStatusTest.java,path filter which only expects paths whose final name element,1,0,Ownership
15,AbstractContractGetFileStatusTest.java,equals the @code match field.,0,0,Ownership
16,AbstractContractGetFileStatusTest.java,the tree parameters.,1,0,Ownership
17,AbstractContractGetFileStatusTest.java,kept small to avoid killing object store test runs too much.,0,0,Ownership
18,AbstractContractGetFileStatusTest.java,a filesystem filter which exposes the protected method,1,0,Ownership
1042,TestDataDrivenDBInputFormat.java,test aspects of datadrivendbinputformat,0,0,Ownership
19,AbstractContractGetFileStatusTest.java,"@link #listlocatedstatus path, pathfilter .",1,0,Ownership
1047,TestEditLogFileOutputStream.java,test the editlogfileoutputstream,0,0,Ownership
1049,TestFederationPolicyUtils.java,unit test for @link federationpolicyutils .,1,0,Ownership
1052,TestFileSizeCountTask.java,unit test for file size count task.,0,0,Ownership
1054,TestHandler.java,tests handler interface.,1,0,Ownership
1056,TestHDFSServerPorts.java,this test checks correctness of port usage by hdfs components,0,0,Ownership
1057,TestHDFSServerPorts.java,"namenode, datanode, secondarynamenode and backupnode.",1,0,Ownership
1058,TestHDFSServerPorts.java,the correct behavior is br when a specific port is provided the server must either start on that port or fail by throwing @link java^net.bindexception .,0,0,Ownership
1059,TestHDFSServerPorts.java,br,1,0,Ownership
1060,TestHDFSServerPorts.java,if the port 0 ephemeral then the server should choose a free port and start on it.,0,0,Ownership
1066,TestKeyInputStream.java,tests @link keyinputstream .,1,0,Ownership
44,AbstractS3ACommitterFactory.java,dynamically create the output committer based on subclass type and settings.,0,0,Ownership
1069,TestMetricsVisitor.java,test the metric visitor interface,1,0,Ownership
1071,TestNativeAzureFileSystemUploadLogic.java,"tests for the upload, buffering and flush logic in wasb.",0,0,Ownership
1072,TestNativeAzureFileSystemUploadLogic.java,just an arbitrary number so that the values i write have a predictable,1,0,Ownership
1073,TestNativeAzureFileSystemUploadLogic.java,various scenarios to test in how often we flush data while uploading.,0,0,Ownership
53,ApplicationConstants.java,the type of launch for the container.,1,0,Ownership
1077,TestOmMultipartKeyInfoCodec.java,this class tests ommultipartkeyinfocodec.,0,0,Ownership
54,ApplicationConstants.java,environment for applications.,1,0,Ownership
1079,TestOMVolumeRequest.java,base test class for volume request.,0,0,Ownership
1082,TestOzoneNativeAuthorizer.java,test class for @link ozonenativeauthorizer .,1,0,Ownership
61,ApplicationStateData.java,contains all the state data that needs to be stored persistently for an application,0,0,Ownership
1085,TestProtoBufRpc.java,test for testing protocol buffer based rpc mechanism.,1,0,Ownership
1086,TestProtoBufRpc.java,this test depends on test^proto definition of types in src test proto,0,0,Ownership
1087,TestProtoBufRpc.java,and protobuf service definition from src test test rpc service^proto,1,0,Ownership
66,AutoInputFormat.java,it can currently handle text and sequence files.,0,0,Ownership
1091,TestRDBStore.java,rdbstore tests.,1,0,Ownership
1093,TestRegistrySecurityHelper.java,test for registry security operations,0,0,Ownership
70,BalancingPolicy.java,balancing policy.,1,0,Ownership
74,BalancingPolicy.java,cluster is balanced if each node is balanced.,0,0,Ownership
75,BalancingPolicy.java,cluster is balanced if each pool in each node is balanced.,1,0,Ownership
1099,TestRouterWebServiceUtil.java,test class to validate routerwebserviceutil methods.,0,0,Ownership
1101,TestS3BucketManager.java,tests for s3 bucket manager.,1,0,Ownership
1104,TestSaveNamespace.java,test various failure scenarios during savenamespace operation.,0,0,Ownership
81,BaseRouterWebServicesTest.java,base class for all the routerrmadminservice test cases.,1,0,Ownership
1105,TestSaveNamespace.java,cases covered,0,0,Ownership
1106,TestSaveNamespace.java,ol,1,0,Ownership
1107,TestSaveNamespace.java,li recover from failure while saving into the second storage directory li,0,0,Ownership
1108,TestSaveNamespace.java,li recover from failure while moving current into lastcheckpoint^tmp li,1,0,Ownership
1109,TestSaveNamespace.java,li recover from failure while moving lastcheckpoint^tmp into,0,0,Ownership
86,BatchedRequests.java,a grouping of scheduling requests which are sent to the placementalgorithm,1,0,Ownership
1110,TestSaveNamespace.java,previous^checkpoint li,0,0,Ownership
87,BatchedRequests.java,to place as a batch.,1,0,Ownership
1111,TestSaveNamespace.java,li recover from failure while rolling edits file li,0,0,Ownership
88,BatchedRequests.java,the placement algorithm tends to give more optimal,1,0,Ownership
1112,TestSaveNamespace.java,ol,0,0,Ownership
89,BatchedRequests.java,placements if more requests are batched together.,1,0,Ownership
90,BatchedRequests.java,placementalgorithmoutput attempt the number of times the requests in this,0,0,Ownership
91,BatchedRequests.java,iterator type.,1,0,Ownership
98,BlockPlacementStatusWithNodeGroup.java,an implementation of @see blockplacementstatus for,0,0,Ownership
1122,TestSCMDatanodeHeartbeatDispatcher.java,this class tests the behavior of scmdatanodeheartbeatdispatcher.,1,0,Ownership
1124,TestSequenceFile.java,support for flat files of binary key value pairs.,0,0,Ownership
103,BlocksMap.java,this class maintains the map from a block to its metadata.,1,0,Ownership
1127,TestSeveralNameNodes.java,test that we can start several and run with namenodes on the same minicluster,0,0,Ownership
104,BlocksMap.java,block s metadata currently includes blockcollection it belongs to and,1,0,Ownership
105,BlocksMap.java,the datanodes that store the block.,0,0,Ownership
1130,TestSwiftFileSystemContract.java,this is the full filesystem contract test which requires the,1,0,Ownership
1131,TestSwiftFileSystemContract.java,default config set up to point to a filesystem.,0,0,Ownership
1132,TestSwiftFileSystemContract.java,some of the tests override the base class tests these,1,0,Ownership
109,BlockUtils.java,utils functions to help block functions.,0,0,Ownership
1133,TestSwiftFileSystemContract.java,"are where swiftfs does not implement those features, or",1,0,Ownership
1134,TestSwiftFileSystemContract.java,when the behavior of swiftfs does not match the normal,0,0,Ownership
1135,TestSwiftFileSystemContract.java,contract which normally means that directories and equal files,1,0,Ownership
1136,TestSwiftFileSystemContract.java,are being treated as equal.,0,0,Ownership
116,CapacitySchedulerPlanFollower.java,this class implements a @link planfollower .,1,0,Ownership
117,CapacitySchedulerPlanFollower.java,"this is invoked on a timer, and",0,0,Ownership
118,CapacitySchedulerPlanFollower.java,it is in charge to publish the state of the @link plan s to the underlying,1,0,Ownership
119,CapacitySchedulerPlanFollower.java,@link capacityscheduler .,0,0,Ownership
120,CapacitySchedulerPlanFollower.java,"this implementation does so, by",1,0,Ownership
1144,TestTaskCommit.java,special committer that does not cleanup temporary files in,0,0,Ownership
121,CapacitySchedulerPlanFollower.java,"adding removing resizing leaf queues in the scheduler, thus affecting the",1,0,Ownership
1145,TestTaskCommit.java,aborttask,0,0,Ownership
122,CapacitySchedulerPlanFollower.java,dynamic behavior of the scheduler in a way that is consistent with the,1,0,Ownership
1146,TestTaskCommit.java,the framework s fileoutputcommitter cleans up any temporary,0,0,Ownership
123,CapacitySchedulerPlanFollower.java,content of the plan.,1,0,Ownership
1147,TestTaskCommit.java,files left behind in aborttask.,0,0,Ownership
124,CapacitySchedulerPlanFollower.java,it also updates the plan s view on how much resources,1,0,Ownership
1148,TestTaskCommit.java,we want the test case to,0,0,Ownership
125,CapacitySchedulerPlanFollower.java,are available in the cluster.,1,0,Ownership
1149,TestTaskCommit.java,find these files and hence short circuit aborttask.,0,0,Ownership
126,CapacitySchedulerPlanFollower.java,"this implementation of planfollower is relatively stateless, and it can",1,0,Ownership
1150,TestTaskCommit.java,special committer that always requires commit.,0,0,Ownership
127,CapacitySchedulerPlanFollower.java,synchronize schedulers and plans that have arbitrary changes performing set,1,0,Ownership
128,CapacitySchedulerPlanFollower.java,differences among existing queues .,0,0,Ownership
129,CapacitySchedulerPlanFollower.java,this makes it resilient to frequency of,1,0,Ownership
130,CapacitySchedulerPlanFollower.java,"synchronization, and rm restart issues no catch up is necessary .",0,0,Ownership
1158,TestTaskContext.java,tests context api and @link statusreporter#getprogress via @link taskattemptcontext#getprogress api .,1,0,Ownership
1161,TestTopCLI.java,test class for topcli.,0,0,Ownership
1163,TestUpgradeDomainBlockPlacementPolicy.java,end to end test case for upgrade domain,1,0,Ownership
1164,TestUpgradeDomainBlockPlacementPolicy.java,the test configs upgrade domain for nodes via admin json,0,0,Ownership
1165,TestUpgradeDomainBlockPlacementPolicy.java,config file and put some nodes to decommission state.,1,0,Ownership
1166,TestUpgradeDomainBlockPlacementPolicy.java,the test then verifies replicas are placed on the nodes that,0,0,Ownership
1167,TestUpgradeDomainBlockPlacementPolicy.java,satisfy the upgrade domain policy.,1,0,Ownership
1173,TextInputFormat.java,an @link inputformat for plain text files.,0,0,Ownership
1174,TextInputFormat.java,files are broken into lines.,1,0,Ownership
151,Classpath.java,the output likely will include wildcards in the classpath.,0,0,Ownership
1175,TextInputFormat.java,either linefeed or carriage return are used to signal end of line.,1,0,Ownership
1178,TextInputFormat.java,.,0,0,Ownership
156,Classpath.java,this is useful in situations where wildcard syntax isn t usable.,1,0,Ownership
157,Classpath.java,"with the jar argument, it writes the classpath as a manifest in a jar file.",0,0,Ownership
1186,TimelineDataToRetrieve.java,encapsulates information regarding which data to retrieve for each entity,1,0,Ownership
1187,TimelineDataToRetrieve.java,while querying.,0,0,Ownership
1188,TimelineDataToRetrieve.java,br,1,0,Ownership
1189,TimelineDataToRetrieve.java,data to retrieve contains the following br,0,0,Ownership
1190,TimelineDataToRetrieve.java,ul,1,0,Ownership
1191,TimelineDataToRetrieve.java,li b confstoretrieve b used for deciding which configs to return,0,0,Ownership
1192,TimelineDataToRetrieve.java,in response.,1,0,Ownership
1193,TimelineDataToRetrieve.java,this is represented as a @link timelinefilterlist object,0,0,Ownership
1194,TimelineDataToRetrieve.java,containing @link timelineprefixfilter objects.,1,0,Ownership
1195,TimelineDataToRetrieve.java,these can either be,0,0,Ownership
172,ComparableVersion.java,code source of this file http grepcode^com file repo1^maven.org maven2 org^apache.maven maven artifact 31.1 org apache maven artifact versioning comparableversion^java modifications made on top of the source 1.,1,0,Ownership
1196,TimelineDataToRetrieve.java,exact config keys or prefixes which are then compared against config,0,0,Ownership
173,ComparableVersion.java,changed package org^apache.maven^artifact.versioning to package org^apache.hadoop^util 2.,1,0,Ownership
175,ComparableVersion.java,generic implementation of version comparison.,0,0,Ownership
1199,TimelineDataToRetrieve.java,"or empty, all configurations will be fetched if fieldstoretrieve",1,0,Ownership
176,ComparableVersion.java,p features,0,0,Ownership
1200,TimelineDataToRetrieve.java,contains @link field#configs or @link field#all .,1,0,Ownership
177,ComparableVersion.java,ul,0,0,Ownership
1202,TimelineDataToRetrieve.java,confused with configfilters which is used to decide which entities to,1,0,Ownership
1203,TimelineDataToRetrieve.java,return instead.,0,0,Ownership
1204,TimelineDataToRetrieve.java,li,1,0,Ownership
1206,TimelineDataToRetrieve.java,in response.,0,0,Ownership
1207,TimelineDataToRetrieve.java,this is represented as a @link timelinefilterlist object,1,0,Ownership
1208,TimelineDataToRetrieve.java,containing @link timelineprefixfilter objects.,0,0,Ownership
1209,TimelineDataToRetrieve.java,these can either be,1,0,Ownership
1210,TimelineDataToRetrieve.java,exact metric ids or prefixes which are then compared against metric,0,0,Ownership
188,ComparableVersion.java,li code milestone code or code m code li,1,0,Ownership
189,ComparableVersion.java,li code rc code or code cr code li,0,0,Ownership
1213,TimelineDataToRetrieve.java,"or empty, all metrics will be fetched if fieldstoretrieve contains",1,0,Ownership
190,ComparableVersion.java,li code snapshot code li,0,0,Ownership
191,ComparableVersion.java,li code the empty string code or code ga code or code final code li,1,0,Ownership
192,ComparableVersion.java,li code sp code li,0,0,Ownership
1216,TimelineDataToRetrieve.java,with metricfilters which is used to decide which entities to return,1,0,Ownership
193,ComparableVersion.java,ul,0,0,Ownership
1217,TimelineDataToRetrieve.java,instead.,1,0,Ownership
194,ComparableVersion.java,"unknown qualifiers are considered after known qualifiers, with lexical order always case insensitive ,",0,0,Ownership
1218,TimelineDataToRetrieve.java,li,1,0,Ownership
195,ComparableVersion.java,li,0,0,Ownership
197,ComparableVersion.java,li,1,0,Ownership
1222,TimelineDataToRetrieve.java,"namely entity id, entity type and entity created time.",0,0,Ownership
199,ComparableVersion.java,@see a href https cwiki^apache.org confluence display mavenold versioning versioning on maven wiki a,1,0,Ownership
1223,TimelineDataToRetrieve.java,all fields will,0,0,Ownership
200,ComparableVersion.java,represents a numeric item in the version item list.,1,0,Ownership
201,ComparableVersion.java,"represents a string in the version item list, usually a qualifier.",0,0,Ownership
1225,TimelineDataToRetrieve.java,li,1,0,Ownership
202,ComparableVersion.java,represents a version list item.,0,0,Ownership
203,ComparableVersion.java,this class is used both for the global item list and for sub lists which start,1,0,Ownership
204,ComparableVersion.java,with number in the version specification .,0,0,Ownership
1228,TimelineDataToRetrieve.java,number of metrics to return.,1,0,Ownership
1229,TimelineDataToRetrieve.java,this parameter is ignored if metrics are not to,0,0,Ownership
1230,TimelineDataToRetrieve.java,be fetched.,1,0,Ownership
1231,TimelineDataToRetrieve.java,li,0,0,Ownership
1233,TimelineDataToRetrieve.java,be retrieved.,1,0,Ownership
1235,TimelineDataToRetrieve.java,li,0,0,Ownership
1237,TimelineDataToRetrieve.java,be retrieved.,1,0,Ownership
1239,TimelineDataToRetrieve.java,li,0,0,Ownership
1240,TimelineDataToRetrieve.java,ul,1,0,Ownership
239,ConfigurationException.java,exception to throw in case of a configuration problem.,0,0,Ownership
245,CpuTimeTracker.java,utility for sampling and computing cpu usage.,1,0,Ownership
248,DBProfile.java,user visible configs based rocksdb tuning page.,0,0,Ownership
249,DBProfile.java,documentation for options.,1,0,Ownership
250,DBProfile.java,p,0,0,Ownership
251,DBProfile.java,https github^com facebook rocksdb blob master include rocksdb options^h,1,0,Ownership
252,DBProfile.java,p,0,0,Ownership
253,DBProfile.java,most tuning parameters are based on this url.,1,0,Ownership
254,DBProfile.java,p,0,0,Ownership
255,DBProfile.java,https github^com facebook rocksdb wiki setup options and basic tuning,1,0,Ownership
271,DefaultAnonymizingRumenSerializer.java,default rumen json serializer.,0,0,Ownership
273,DelegatingSSLSocketFactory.java,a @link sslsocketfactory that can delegate to various ssl implementations.,1,0,Ownership
274,DelegatingSSLSocketFactory.java,"specifically, either openssl or jsse can be used.",0,0,Ownership
275,DelegatingSSLSocketFactory.java,openssl offers better,1,0,Ownership
276,DelegatingSSLSocketFactory.java,performance than jsse and is made available via the,0,0,Ownership
277,DelegatingSSLSocketFactory.java,a href https github^com wildfly wildfly openssl wildlfy openssl a,1,0,Ownership
278,DelegatingSSLSocketFactory.java,library.,0,0,Ownership
279,DelegatingSSLSocketFactory.java,p,1,0,Ownership
280,DelegatingSSLSocketFactory.java,the factory has several different modes of operation,0,0,Ownership
281,DelegatingSSLSocketFactory.java,ul,1,0,Ownership
282,DelegatingSSLSocketFactory.java,li openssl uses the wildly openssl library to delegate to the,0,0,Ownership
283,DelegatingSSLSocketFactory.java,system installed openssl.,1,0,Ownership
284,DelegatingSSLSocketFactory.java,if the wildfly openssl integration is not,0,0,Ownership
285,DelegatingSSLSocketFactory.java,"properly setup, an exception is thrown.",1,0,Ownership
286,DelegatingSSLSocketFactory.java,li,0,0,Ownership
289,DelegatingSSLSocketFactory.java,li,0,0,Ownership
291,DelegatingSSLSocketFactory.java,it disables the gcm cipher when running on java 8.,0,0,Ownership
292,DelegatingSSLSocketFactory.java,li,0,0,Ownership
295,DelegatingSSLSocketFactory.java,li,0,0,Ownership
296,DelegatingSSLSocketFactory.java,ul,0,0,Ownership
297,DelegatingSSLSocketFactory.java,p,0,0,Ownership
301,DelegatingSSLSocketFactory.java,p,0,0,Ownership
302,DelegatingSSLSocketFactory.java,default jsse is not truly the the default jsse implementation because,0,0,Ownership
303,DelegatingSSLSocketFactory.java,the gcm cipher is disabled when running on java 8.,0,0,Ownership
304,DelegatingSSLSocketFactory.java,"however, the name",0,0,Ownership
305,DelegatingSSLSocketFactory.java,was not changed in order to preserve backwards compatibility.,0,0,Ownership
306,DelegatingSSLSocketFactory.java,"instead,",0,0,Ownership
307,DelegatingSSLSocketFactory.java,a new mode called default jsse with gcm delegates to the default jsse,0,0,Ownership
308,DelegatingSSLSocketFactory.java,implementation with no changes to the list of enabled ciphers.,0,0,Ownership
309,DelegatingSSLSocketFactory.java,p,0,0,Ownership
1348,TimelineStorageMonitor.java,this abstract class is for monitoring health of timeline storage.,0,0,Ownership
1352,TonyRuntimeFactory.java,implementation of runtimefactory with tony runtime,0,0,Ownership
1355,TypedEvent.java,basic event implementation to implement custom events.,0,0,Ownership
1356,TypedEvent.java,@param t,0,0,Ownership
1360,UniformSizeInputFormat.java,"uniformsizeinputformat extends the inputformat class, to produce",0,0,Ownership
1361,UniformSizeInputFormat.java,input splits for distcp.,0,0,Ownership
1362,UniformSizeInputFormat.java,it looks at the copy listing and groups the contents into input splits such,0,0,Ownership
1363,UniformSizeInputFormat.java,that the total number of bytes to be copied for each input split is,0,0,Ownership
1364,UniformSizeInputFormat.java,uniform.,0,0,Ownership
1370,Utils.java,a utility class.,0,0,Ownership
1371,Utils.java,it provides,0,0,Ownership
1372,Utils.java,a path filter utility to filter out output part files in the output dir,0,0,Ownership
1373,Utils.java,this class filters output part files from the given directory,0,0,Ownership
1374,Utils.java,it does not accept files with filenames logs and success.,0,0,Ownership
1375,Utils.java,this can be used to list paths of output directory as follows,0,0,Ownership
352,DelegationTokenIdentifier.java,a delegation token identifier that is specific to hdfs.,0,0,Ownership
1376,Utils.java,"path filelist fileutil^stat2paths fs^liststatus outdir,",0,0,Ownership
1377,Utils.java,new outputfilesfilter,0,0,Ownership
1378,Utils.java,this class filters log files from directory given,0,0,Ownership
1379,Utils.java,it doesnt accept paths having logs.,0,0,Ownership
1380,Utils.java,this can be used to list paths of output directory as follows,0,0,Ownership
1381,Utils.java,"path filelist fileutil^stat2paths fs^liststatus outdir,",0,0,Ownership
1382,Utils.java,new outputlogfilter,0,0,Ownership
362,DfsServlet.java,a base class for the servlets in dfs.,0,0,Ownership
364,DiskBalancerCluster.java,diskbalancercluster represents the nodes that we are working against.,0,0,Ownership
365,DiskBalancerCluster.java,p,0,0,Ownership
366,DiskBalancerCluster.java,please note,0,0,Ownership
367,DiskBalancerCluster.java,semantics of inclusionlist and exclusionlists.,0,0,Ownership
368,DiskBalancerCluster.java,p,0,0,Ownership
369,DiskBalancerCluster.java,if a non empty inclusionlist is specified then the diskbalancer assumes that,0,0,Ownership
370,DiskBalancerCluster.java,the user is only interested in processing that list of nodes.,0,0,Ownership
371,DiskBalancerCluster.java,this node list,0,0,Ownership
372,DiskBalancerCluster.java,is checked against the exclusionlist and only the nodes in inclusionlist but,0,0,Ownership
373,DiskBalancerCluster.java,not in exclusionlist is processed.,0,0,Ownership
374,DiskBalancerCluster.java,p,0,0,Ownership
375,DiskBalancerCluster.java,"if inclusionlist is empty, then we assume that all live nodes in the nodes is",0,0,Ownership
376,DiskBalancerCluster.java,to be processed by diskbalancer.,0,0,Ownership
1400,VolumeSet.java,volumeset to manage hdds volumes in a datanode.,0,0,Ownership
377,DiskBalancerCluster.java,in that case diskbalancer will avoid any,0,0,Ownership
378,DiskBalancerCluster.java,nodes specified in the exclusionlist but will process all nodes in the,0,0,Ownership
379,DiskBalancerCluster.java,cluster.,0,0,Ownership
1403,WritableComparator.java,a comparator for @link writablecomparable s.,0,0,Ownership
380,DiskBalancerCluster.java,p,0,0,Ownership
1404,WritableComparator.java,p this base implementation uses the natural ordering.,0,0,Ownership
381,DiskBalancerCluster.java,"in other words, an empty inclusionlist is means all the nodes otherwise",0,0,Ownership
1405,WritableComparator.java,to define alternate,0,0,Ownership
382,DiskBalancerCluster.java,only a given list is processed and exclusionlist is always honored.,0,0,Ownership
1406,WritableComparator.java,"orderings, override @link #compare writablecomparable,writablecomparable .",0,0,Ownership
1407,WritableComparator.java,p one may optimize compare intensive operations by overriding,0,0,Ownership
1408,WritableComparator.java,"@link #compare byte ,int,int,byte ,int,int .",0,0,Ownership
1409,WritableComparator.java,static utility methods are,0,0,Ownership
1410,WritableComparator.java,provided to assist in optimized implementations of this method.,0,0,Ownership
401,DistributedSchedulingAllocateRequest.java,"object used by the application master when distributed scheduling is enabled,",0,0,Ownership
1430,YarnAuthorizationProvider.java,an implementation of the interface will provide authorization related,0,0,Ownership
1431,YarnAuthorizationProvider.java,information and enforce permission check.,0,0,Ownership
408,DockerKillCommand.java,encapsulates the docker kill command and its command line arguments.,0,0,Ownership
1432,YarnAuthorizationProvider.java,it is excepted that any of the,0,0,Ownership
1433,YarnAuthorizationProvider.java,methods defined in this interface should be non blocking call and should not,0,0,Ownership
410,EditLogTailer.java,editlogtailer represents a thread which periodically reads from edits,0,0,Ownership
1434,YarnAuthorizationProvider.java,involve expensive computation as these method could be invoked in rpc.,0,0,Ownership
411,EditLogTailer.java,journals and applies the transactions contained within to a given,0,0,Ownership
412,EditLogTailer.java,fsnamesystem.,0,0,Ownership
413,EditLogTailer.java,the thread which does the actual work of tailing edits journals and,0,0,Ownership
414,EditLogTailer.java,applying the transactions to the fsns.,0,0,Ownership
415,EditLogTailer.java,manage the active namenode proxy .,0,0,Ownership
416,EditLogTailer.java,this cannot just be the a single proxy since we could,0,0,Ownership
417,EditLogTailer.java,"failover across a number of namenodes, rather than just between an active and a standby.",0,0,Ownership
418,EditLogTailer.java,p,0,0,Ownership
419,EditLogTailer.java,we lazily get a proxy to one of the configured namenodes and attempt to make the request,0,0,Ownership
1443,YarnServiceJobSubmitter.java,submit a job to cluster.,0,0,Ownership
420,EditLogTailer.java,against it.,0,0,Ownership
421,EditLogTailer.java,"if it doesn t succeed, either because the proxy failed to be created or the request",0,0,Ownership
422,EditLogTailer.java,"failed, we try the next nn in the list.",0,0,Ownership
423,EditLogTailer.java,we try this up to the configuration maximum number of,0,0,Ownership
424,EditLogTailer.java,retries before throwing up our hands.,0,0,Ownership
425,EditLogTailer.java,a working proxy is retained across attempts since we,0,0,Ownership
426,EditLogTailer.java,expect the active namenode to switch rarely.,0,0,Ownership
427,EditLogTailer.java,p,0,0,Ownership
428,EditLogTailer.java,this mechanism is b very bad b for cases where we care about being i fast i it just,0,0,Ownership
429,EditLogTailer.java,blindly goes and tries namenodes.,0,0,Ownership
450,ErasureCodingPolicyManager.java,this manages erasure coding policies predefined and activated in the system.,0,0,Ownership
451,ErasureCodingPolicyManager.java,it loads customized policies and syncs with persisted ones in,0,0,Ownership
452,ErasureCodingPolicyManager.java,namenode image.,0,0,Ownership
453,ErasureCodingPolicyManager.java,this class is instantiated by the fsnamesystem.,0,0,Ownership
459,EventWatcher.java,event watcher the re send a message after timeout.,0,0,Ownership
461,EventWatcher.java,event watcher will send the tracked payload event after a timeout period,0,0,Ownership
462,EventWatcher.java,unless a confirmation from the original event completion event is arrived.,0,0,Ownership
463,EventWatcher.java,@param timeout payload the type of the events which are tracked.,0,0,Ownership
464,EventWatcher.java,@param completion payload the type of event which could cancel the,0,0,Ownership
465,EventWatcher.java,tracking.,0,0,Ownership
477,FairOrderingPolicy.java,an orderingpolicy which orders schedulableentities for fairness see,0,0,Ownership
478,FairOrderingPolicy.java,fairscheduler,0,0,Ownership
479,FairOrderingPolicy.java,"fairsharepolicy , generally, processes with lesser usage are lesser.",0,0,Ownership
480,FairOrderingPolicy.java,if,0,0,Ownership
481,FairOrderingPolicy.java,sizedbasedweight is set to true then an application with high demand,0,0,Ownership
482,FairOrderingPolicy.java,may be prioritized ahead of an application with less usage.,0,0,Ownership
483,FairOrderingPolicy.java,this,0,0,Ownership
484,FairOrderingPolicy.java,"is to offset the tendency to favor small apps, which could result in",0,0,Ownership
486,FairOrderingPolicy.java,"continuously optional, default false",0,0,Ownership
500,FederationPolicyException.java,generic policy exception.,0,0,Ownership
506,FederationStateStoreInvalidInputException.java,"exception thrown by the @code federationmembershipstatestoreinputvalidator ,",0,0,Ownership
511,FileSystemApplicationHistoryStore.java,file system implementation of @link applicationhistorystore .,0,0,Ownership
516,FileSystemApplicationHistoryStore.java,@link #applicationstarted applicationstartdata is supposed to,0,0,Ownership
517,FileSystemApplicationHistoryStore.java,be invoked first when writing any history data of one application and it will,0,0,Ownership
518,FileSystemApplicationHistoryStore.java,"open a file, while @link #applicationfinished applicationfinishdata is",0,0,Ownership
519,FileSystemApplicationHistoryStore.java,supposed to be last writing operation and will close the file.,0,0,Ownership
531,FsConstants.java,filesystem related constants.,0,0,Ownership
537,GetNamespaceInfoResponse.java,api response for listing hdfs namespaces present in the state store.,0,0,Ownership
554,HadoopIllegalArgumentException.java,indicates that a method has been passed illegal or invalid argument.,0,0,Ownership
560,HashResolver.java,order the destinations based on consistent hashing.,0,0,Ownership
562,HttpHeaderConfigurations.java,responsible to keep all abfs http headers here.,0,0,Ownership
564,IDataLoader.java,an idataloader loads data on demand,0,0,Ownership
566,InconsistentS3ClientFactory.java,s3 client factory used for testing with eventual consistency fault injection.,0,0,Ownership
567,InconsistentS3ClientFactory.java,this client is for testing i only i it is in the production,0,0,Ownership
568,InconsistentS3ClientFactory.java,@code hadoop aws module to enable integration tests to use this,0,0,Ownership
569,InconsistentS3ClientFactory.java,just by editing the hadoop configuration used to bring up the client.,0,0,Ownership
574,InfoKeyHandler.java,executes info object.,0,0,Ownership
579,ITestAbfsReadWriteAndSeek.java,"test read, write and seek.",0,0,Ownership
584,ITestAzureNativeContractSeek.java,contract test.,0,0,Ownership
588,ITestCommitOperations.java,this is done with an inconsistent client.,0,0,Ownership
591,ITestListPerformance.java,test list performance.,0,0,Ownership
593,ITestS3Select.java,test the s3 select feature with some basic sql commands.,0,0,Ownership
594,ITestS3Select.java,executed if the destination store declares its support for the feature.,0,0,Ownership
600,KerberosDelegationTokenAuthenticator.java,the code kerberosdelegationtokenauthenticator code provides support for,0,0,Ownership
601,KerberosDelegationTokenAuthenticator.java,kerberos spnego authentication mechanism and support for hadoop delegation,0,0,Ownership
602,KerberosDelegationTokenAuthenticator.java,token operations.,0,0,Ownership
604,KerberosDelegationTokenAuthenticator.java,it falls back to the @link pseudodelegationtokenauthenticator if the http,0,0,Ownership
605,KerberosDelegationTokenAuthenticator.java,endpoint does not trigger a spnego authentication,0,0,Ownership
613,LocalizationStatusPBImpl.java,pb impl of @link localizationstatus .,0,0,Ownership
616,LocatedFileStatus.java,this class defines a filestatus that includes a file s block locations.,0,0,Ownership
618,LoggedTask.java,a @link loggedtask represents a hadoop task that is part of a hadoop job.,0,0,Ownership
619,LoggedTask.java,"it knows about the pssibly empty sequence of attempts, its i o footprint,",0,0,Ownership
620,LoggedTask.java,and its runtime.,0,0,Ownership
621,LoggedTask.java,all of the public methods are simply accessors for the instance variables we,0,0,Ownership
622,LoggedTask.java,want to write out in the json files.,0,0,Ownership
629,LogParserUtil.java,common utility functions for @link logparser .,0,0,Ownership
632,LogWebService.java,support only atsv2 client only.,0,0,Ownership
634,LRUCacheHashMap.java,lru cache with a configurable maximum cache size and access order.,0,0,Ownership
637,MapContext.java,the context that is given to the @link mapper .,0,0,Ownership
638,MapContext.java,@param keyin the key input type to the mapper,0,0,Ownership
639,MapContext.java,@param valuein the value input type to the mapper,0,0,Ownership
640,MapContext.java,@param keyout the key output type from the mapper,0,0,Ownership
641,MapContext.java,@param valueout the value output type from the mapper,0,0,Ownership
649,MetaBlockAlreadyExists.java,exception meta block with the same name already exists.,0,0,Ownership
651,MetricsCache.java,a metrics cache for sinks that don t support sparse updates.,0,0,Ownership
652,MetricsCache.java,cached record,0,0,Ownership
656,NativeBatchProcessor.java,"used to create channel, transfer data and command between java and native",0,0,Ownership
658,NativeSingleLineParser.java,this sample parser will parse the sample log and extract the resource,0,0,Ownership
659,NativeSingleLineParser.java,skyline.,0,0,Ownership
660,NativeSingleLineParser.java,p the expected log format is normalizedjobname numinstances submittime,0,0,Ownership
661,NativeSingleLineParser.java,starttime endtime jobinstancename memusage coreusage,0,0,Ownership
669,Nfs3Status.java,success or error status is reported in nfs3 responses.,0,0,Ownership
671,Node2ObjectsMap.java,this data structure maintains the list of containers that is on a datanode.,0,0,Ownership
672,Node2ObjectsMap.java,this information is built from the dn container reports.,0,0,Ownership
677,NodeUpdateType.java,p,0,0,Ownership
682,NullOutputFormat.java,consume all outputs and put them in dev null.,0,0,Ownership
685,OMNodeDetails.java,this class stores om node details.,0,0,Ownership
686,OMNodeDetails.java,builder class for omnodedetails.,0,0,Ownership
690,OpportunisticContainersStatusPBImpl.java,protocol buffer implementation of opportunisticcontainersstatus.,0,0,Ownership
692,OzoneObj.java,class representing an unique ozone object.,0,0,Ownership
693,OzoneObj.java,ozone objects supported for acl.,0,0,Ownership
694,OzoneObj.java,ozone objects supported for acl.,0,0,Ownership
697,Parser.java,a class for parsing outputs,0,0,Ownership
699,PartialOutputCommitter.java,interface for an @link org^apache.hadoop^mapreduce.outputcommitter,0,0,Ownership
703,PartitionResourcesInfo.java,this class represents queue user resource usage info for a given partition,0,0,Ownership
709,ProcessIdFileReader.java,helper functionality to read the pid from a file.,0,0,Ownership
711,QuasiMonteCarlo.java,a map reduce program that estimates the value of pi,0,0,Ownership
712,QuasiMonteCarlo.java,using a quasi monte carlo qmc method.,0,0,Ownership
713,QuasiMonteCarlo.java,arbitrary integrals can be approximated numerically by qmc methods.,0,0,Ownership
714,QuasiMonteCarlo.java,"in this example,",0,0,Ownership
715,QuasiMonteCarlo.java,"we use a qmc method to approximate the integral i int s f x dx ,",0,0,Ownership
716,QuasiMonteCarlo.java,"where s 0,1 ^2 is a unit square,",0,0,Ownership
717,QuasiMonteCarlo.java,"x x 1,x 2 is a 2 dimensional point,",0,0,Ownership
718,QuasiMonteCarlo.java,"and f is a function describing the inscribed circle of the square s ,",0,0,Ownership
719,QuasiMonteCarlo.java,"f x 1 if 2x 1 1 ^2 2x 2 1 ^2 &lt 1 and f x 0 , otherwise.",0,0,Ownership
720,QuasiMonteCarlo.java,it is easy to see that pi is equal to 4i .,0,0,Ownership
721,QuasiMonteCarlo.java,so an approximation of pi is obtained once i is evaluated numerically.,0,0,Ownership
722,QuasiMonteCarlo.java,there are better methods for computing pi.,0,0,Ownership
723,QuasiMonteCarlo.java,we emphasize numerical approximation of arbitrary integrals in this example.,0,0,Ownership
724,QuasiMonteCarlo.java,"for computing many digits of pi, consider using bbp.",0,0,Ownership
725,QuasiMonteCarlo.java,the implementation is discussed below.,0,0,Ownership
726,QuasiMonteCarlo.java,mapper,0,0,Ownership
727,QuasiMonteCarlo.java,generate points in a unit square,0,0,Ownership
728,QuasiMonteCarlo.java,and then count points inside outside of the inscribed circle of the square.,0,0,Ownership
729,QuasiMonteCarlo.java,reducer,0,0,Ownership
741,QuasiMonteCarlo.java,generate points in a unit square,0,0,Ownership
742,QuasiMonteCarlo.java,and then count points inside outside of the inscribed circle of the square.,0,0,Ownership
775,Query.java,check if a record matches a query.,0,0,Ownership
776,Query.java,the query is usually a partial record.,0,0,Ownership
777,Query.java,@param t type of the record to query.,0,0,Ownership
781,QueueName.java,represents a queue name.,0,0,Ownership
783,RandomKeyGenerator.java,data generator tool to generate as much keys as possible.,0,0,Ownership
784,RandomKeyGenerator.java,wrapper to hold ozone keyvalidate entry.,0,0,Ownership
785,RandomKeyGenerator.java,validates the write done in ozone cluster.,0,0,Ownership
789,ReencryptionUpdater.java,"class for finalizing re encrypt edek operations, by updating file xattrs with",0,0,Ownership
791,ReencryptionUpdater.java,p,0,0,Ownership
792,ReencryptionUpdater.java,the tasks are submitted by reencryptionhandler.,0,0,Ownership
793,ReencryptionUpdater.java,p,0,0,Ownership
794,ReencryptionUpdater.java,"it is assumed only 1 updater will be running, since updating file xattrs",0,0,Ownership
795,ReencryptionUpdater.java,"requires namespace write lock, and performance gain from multi threading",0,0,Ownership
796,ReencryptionUpdater.java,is limited.,0,0,Ownership
797,ReencryptionUpdater.java,class to track re encryption submissions of a single zone.,0,0,Ownership
798,ReencryptionUpdater.java,it contains,0,0,Ownership
799,ReencryptionUpdater.java,"all the submitted futures, and statistics about how far the futures are",0,0,Ownership
800,ReencryptionUpdater.java,processed.,0,0,Ownership
801,ReencryptionUpdater.java,class representing the task for one batch of a re encryption command.,0,0,Ownership
802,ReencryptionUpdater.java,it,0,0,Ownership
803,ReencryptionUpdater.java,also contains statistics about how far this single batch has been executed.,0,0,Ownership
804,ReencryptionUpdater.java,class that encapsulates re encryption details of a file.,0,0,Ownership
830,RegistryInternalConstants.java,internal constants for the registry.,0,0,Ownership
831,RegistryInternalConstants.java,these are the things which aren t visible to users.,0,0,Ownership
834,RegistryOperations.java,registry operations,0,0,Ownership
837,ResourceBlacklistRequest.java,@link resourceblacklistrequest encapsulates the list of resource names which should be added or removed from the em blacklist em of resources for the application.,0,0,Ownership
838,ResourceBlacklistRequest.java,@see resourcerequest,0,0,Ownership
839,ResourceBlacklistRequest.java,@see applicationmasterprotocol#allocate org^apache.hadoop^yarn.api^protocolrecords.allocaterequest,0,0,Ownership
844,ResourceRequestsJsonVerifications.java,performs value verifications on,0,0,Ownership
845,ResourceRequestsJsonVerifications.java,@link org^apache.hadoop^yarn.server^resourcemanager.webapp^dao.resourcerequestinfo,0,0,Ownership
846,ResourceRequestsJsonVerifications.java,objects against the values of @link resourcerequest .,0,0,Ownership
847,ResourceRequestsJsonVerifications.java,with the help of the,0,0,Ownership
848,ResourceRequestsJsonVerifications.java,"@link builder , users can also make verifications of the custom resource",0,0,Ownership
849,ResourceRequestsJsonVerifications.java,types and its values.,0,0,Ownership
850,ResourceRequestsJsonVerifications.java,builder class for @link resourcerequestsjsonverifications .,0,0,Ownership
868,RMAdminRequestInterceptor.java,"defines the contract to be implemented by the request intercepter classes,",0,0,Ownership
873,RSLegacyRawErasureCoderFactory.java,a raw coder factory for the legacy raw reed solomon coder in java.,0,0,Ownership
876,SafeModeException.java,client cannot modified namespace until the safe mode is off.,0,0,Ownership
878,SchedulerQueueManager.java,context of the queues in scheduler.,0,0,Ownership
880,SequenceFileRecordReader.java,an @link recordreader for @link sequencefile s.,0,0,Ownership
883,ShellBasedUnixGroupsMapping.java,a simple shell based implementation of @link groupmappingserviceprovider that exec s the code groups code shell command to fetch the group,0,0,Ownership
887,StandardSocketFactory.java,specialized socketfactory to create sockets with a socks proxy,0,0,Ownership
889,StateStoreFileSystemImpl.java,@link statestoredriver implementation based on a filesystem.,0,0,Ownership
898,StreamBaseRecordReader.java,shared functionality for hadoopstreaming formats.,0,0,Ownership
899,StreamBaseRecordReader.java,a custom reader can be,0,0,Ownership
900,StreamBaseRecordReader.java,defined to be a recordreader with the constructor below and is selected with,0,0,Ownership
901,StreamBaseRecordReader.java,the option bin hadoopstreaming inputreader .,0,0,Ownership
902,StreamBaseRecordReader.java,@see streamxmlrecordreader,0,0,Ownership
909,StructureGenerator.java,this program generates a random namespace structure with the following,0,0,Ownership
910,StructureGenerator.java,constraints,0,0,Ownership
911,StructureGenerator.java,1,0,0,Ownership
912,StructureGenerator.java,"the number of subdirectories is a random number in minwidth, maxwidth .",0,0,Ownership
913,StructureGenerator.java,2,0,0,Ownership
914,StructureGenerator.java,"the maximum depth of each subdirectory is a random number 2 maxdepth 3, maxdepth .",0,0,Ownership
915,StructureGenerator.java,3,0,0,Ownership
916,StructureGenerator.java,files are randomly placed in the empty directories.,0,0,Ownership
917,StructureGenerator.java,the size of each,0,0,Ownership
918,StructureGenerator.java,file follows gaussian distribution.,0,0,Ownership
919,StructureGenerator.java,the generated namespace structure is described by two files in the output,0,0,Ownership
920,StructureGenerator.java,directory.,0,0,Ownership
922,StructureGenerator.java,each line of the second file contains,0,0,Ownership
923,StructureGenerator.java,"the full name of a file and its size, separated by a blank.",0,0,Ownership
924,StructureGenerator.java,the synopsis of the command is,0,0,Ownership
925,StructureGenerator.java,java structuregenerator,0,0,Ownership
926,StructureGenerator.java,maxdepth maxdepth maximum depth of the directory tree default is 5.,0,0,Ownership
927,StructureGenerator.java,minwidth minwidth minimum number of subdirectories per directories default is 1,0,0,Ownership
928,StructureGenerator.java,maxwidth maxwidth maximum number of subdirectories per directories default is 5,0,0,Ownership
929,StructureGenerator.java,numoffiles #offiles the total number of files default is 10.,0,0,Ownership
930,StructureGenerator.java,avgfilesize avgfilesizeinblocks average size of blocks default is 1.,0,0,Ownership
931,StructureGenerator.java,outdir outdir output directory default is the current directory.,0,0,Ownership
932,StructureGenerator.java,seed seed random number generator seed default is the current time.,0,0,Ownership
933,StructureGenerator.java,in memory representation of a directory in memory representation of a file,0,0,Ownership
960,SwiftBadRequestException.java,thrown to indicate that data locality can t be calculated or requested path is incorrect.,0,0,Ownership
961,SwiftBadRequestException.java,data locality can t be calculated if openstack swift version is old.,0,0,Ownership
964,SwiftRestClient.java,this implements the client side of the swift rest api.,0,0,Ownership
971,SwiftRestClient.java,get the current operation statistics.,0,0,Ownership
972,SwiftRestClient.java,@return a snapshot of the statistics,0,0,Ownership
973,SwiftRestClient.java,base class for all swift rest operations.,0,0,Ownership
974,SwiftRestClient.java,@param m request,0,0,Ownership
975,SwiftRestClient.java,@param r result,0,0,Ownership
976,SwiftRestClient.java,get the current operation statistics.,0,0,Ownership
977,SwiftRestClient.java,@return a snapshot of the statistics,0,0,Ownership
981,SwiftRestClient.java,get the current operation statistics.,0,0,Ownership
982,SwiftRestClient.java,@return a snapshot of the statistics,0,0,Ownership
983,SwiftRestClient.java,generate an auth message.,0,0,Ownership
984,SwiftRestClient.java,@param r response,0,0,Ownership
985,SwiftRestClient.java,get the current operation statistics.,0,0,Ownership
986,SwiftRestClient.java,@return a snapshot of the statistics,0,0,Ownership
987,SwiftRestClient.java,create operation.,0,0,Ownership
989,SwiftRestClient.java,get the current operation statistics.,0,0,Ownership
990,SwiftRestClient.java,@return a snapshot of the statistics,0,0,Ownership
991,SwiftRestClient.java,delete operation.,0,0,Ownership
992,SwiftRestClient.java,@param r,0,0,Ownership
1015,TableConfig.java,class that maintains table configuration.,0,0,Ownership
1017,TestAddBlock.java,test addblockop is written and read correctly,0,0,Ownership
1020,TestAdlContractDeleteLive.java,test delete contract test.,0,0,Ownership
1022,TestAdlContractSeekLive.java,test seek operation on adl file system.,0,0,Ownership
1536,KVStore.java,kvstore instances are thread safe for both reads and writes.,0,0,Ownership
1537,KVStore.java,p,1,0,Ownership
1445,ChunkFetchSuccess.java,response to @link chunkfetchrequest when a chunk exists and has been successfully fetched.,0,0,Ownership
1573,LevelDB.java,implementation of kvstore that uses leveldb as the underlying data store.,1,0,Ownership
1448,ChunkFetchSuccess.java,"similarly, the client side decoding will reuse the netty bytebuf as the buffer.",0,0,Ownership
1576,LocalDiskShuffleDataIO.java,implementation of the @link shuffledataio plugin system that replicates the local shuffle,1,0,Ownership
1577,LocalDiskShuffleDataIO.java,storage and index file functionality that has historically been used from spark 24 and earlier.,0,0,Ownership
1451,ExecutorPlugin.java,a plugin which can be automatically instantiated within each spark executor.,1,0,Ownership
1581,MessageWithHeader.java,a wrapper message that holds two separate pieces a header and a body .,0,0,Ownership
1584,RemoveBlocks.java,request to remove a set of blocks.,1,0,Ownership
1586,StreamHandle.java,identifier for a fixed number of chunks to read from a stream created by an open blocks,0,0,Ownership
1587,StreamHandle.java,message.,1,0,Ownership
1588,StreamHandle.java,this is used by @link org^apache.spark^network.shuffle^oneforoneblockfetcher .,0,0,Ownership
1592,TBoolColumn.java,"the set of fields this struct contains, along with convenience methods for finding and manipulating them.",1,0,Ownership
1594,UploadBlockStream.java,"a request to upload a block, which the destination should receive as a stream.",0,0,Ownership
1595,UploadBlockStream.java,the actual block data is not contained here.,1,0,Ownership
1596,UploadBlockStream.java,it will be passed to the streamcallbackwithid,0,0,Ownership
1469,FlatMapFunction.java,a function that returns zero or more output records from each input record.,1,0,Ownership
1597,UploadBlockStream.java,that is returned from rpchandler^receivestream,0,0,Ownership
1471,JavaRecord.java,java bean class to be used with the example javasqlnetworkwordcount.,1,0,Ownership
1473,JavaStreamingTestExample.java,"perform streaming testing using welch s 2 sample t test on a stream of data, where the data",0,0,Ownership
1474,JavaStreamingTestExample.java,stream arrives as text files in a directory.,1,0,Ownership
1475,JavaStreamingTestExample.java,stops when the two groups are statistically,0,0,Ownership
1476,JavaStreamingTestExample.java,significant p value 005 or after a user specified timeout in number of batches is exceeded.,1,0,Ownership
1477,JavaStreamingTestExample.java,"the rows of the text files must be in the form boolean, double .",0,0,Ownership
1478,JavaStreamingTestExample.java,for example,1,0,Ownership
1479,JavaStreamingTestExample.java,"false, 392",0,0,Ownership
1480,JavaStreamingTestExample.java,"true, 9932",1,0,Ownership
1481,JavaStreamingTestExample.java,usage,0,0,Ownership
1482,JavaStreamingTestExample.java,javastreamingtestexample datadir batchduration numbatchestimeout,0,0,Ownership
1483,JavaStreamingTestExample.java,to run on your local machine using the directory datadir with 5 seconds between each batch and,0,0,Ownership
1484,JavaStreamingTestExample.java,"a timeout after 100 insignificant batches, call",0,0,Ownership
1485,JavaStreamingTestExample.java,bin run example mllib^javastreamingtestexample datadir 5 100,0,0,Ownership
1486,JavaStreamingTestExample.java,as you add text files to datadir the significance test wil continually update every,0,0,Ownership
1487,JavaStreamingTestExample.java,batchduration seconds until the test becomes significant p value 005 or the number of,0,0,Ownership
1488,JavaStreamingTestExample.java,batches processed exceeds numbatchestimeout .,0,0,Ownership
1505,KVStore.java,abstraction for a local key value store for storing app data.,0,0,Ownership
1506,KVStore.java,p,0,0,Ownership
1507,KVStore.java,there are two main features provided by the implementations of this interface,0,0,Ownership
1508,KVStore.java,p,0,0,Ownership
1509,KVStore.java,h3 serialization h3,0,0,Ownership
1510,KVStore.java,p,0,0,Ownership
1511,KVStore.java,"if the underlying data store requires serialization, data will be serialized to and deserialized",0,0,Ownership
1512,KVStore.java,"using a @link kvstoreserializer , which can be customized by the application.",0,0,Ownership
1513,KVStore.java,the serializer is,0,0,Ownership
1514,KVStore.java,"based on jackson, so it supports all the jackson annotations for controlling the serialization of",0,0,Ownership
1515,KVStore.java,app defined types.,0,0,Ownership
1516,KVStore.java,p,0,0,Ownership
1517,KVStore.java,p,0,0,Ownership
1518,KVStore.java,data is also automatically compressed to save disk space.,0,0,Ownership
1519,KVStore.java,p,0,0,Ownership
1520,KVStore.java,h3 automatic key management h3,0,0,Ownership
1521,KVStore.java,p,0,0,Ownership
1522,KVStore.java,"when using the built in key management, the implementation will automatically create unique",0,0,Ownership
1523,KVStore.java,keys for each type written to the store.,0,0,Ownership
1524,KVStore.java,"keys are based on the type name, and always start",0,0,Ownership
1525,KVStore.java,with the prefix character so that it s easy to use both manual and automatic key,0,0,Ownership
1526,KVStore.java,management apis without conflicts .,0,0,Ownership
1527,KVStore.java,p,0,0,Ownership
1528,KVStore.java,p,0,0,Ownership
1529,KVStore.java,another feature of automatic key management is indexing by annotating fields or methods of,0,0,Ownership
1530,KVStore.java,"objects written to the store with @link kvindex , indices are created to sort the data",0,0,Ownership
1531,KVStore.java,by the values of those properties.,0,0,Ownership
1532,KVStore.java,this makes it possible to provide sorting without having,0,0,Ownership
1533,KVStore.java,to load all instances of those types from the store.,0,0,Ownership
1534,KVStore.java,p,0,0,Ownership
1535,KVStore.java,p,0,0,Ownership
2048,ICodeReaderFactory.java,@noreference this interface is not intended to be referenced by clients.,0,0,Ownership
2055,ICPointerType.java,@noimplement this interface is not intended to be implemented by clients.,1,0,Ownership
2058,ICPPAliasTemplateInstance.java,represents an instance of an alias template 145.7 .,0,0,Ownership
2059,ICPPAliasTemplateInstance.java,@since 55,1,0,Ownership
2060,ICPPAliasTemplateInstance.java,@noextend this interface is not intended to be extended by clients.,0,0,Ownership
2061,ICPPAliasTemplateInstance.java,@noimplement this interface is not intended to be implemented by clients.,1,0,Ownership
2066,ICPPASTLinkageSpecification.java,this interface represents a linkage specification.,0,0,Ownership
2067,ICPPASTLinkageSpecification.java,eg extern c .,1,0,Ownership
2068,ICPPASTLinkageSpecification.java,@noextend this interface is not intended to be extended by clients.,0,0,Ownership
2069,ICPPASTLinkageSpecification.java,@noimplement this interface is not intended to be implemented by clients.,1,0,Ownership
2074,ICPPASTVirtSpecifier.java,a virt specifier at the end of a function declaration.,0,0,Ownership
2075,ICPPASTVirtSpecifier.java,"there are two virt specifiers, final and override .",1,0,Ownership
2076,ICPPASTVirtSpecifier.java,@noimplement this interface is not intended to be implemented by clients.,0,0,Ownership
2077,ICPPASTVirtSpecifier.java,@noextend this interface is not intended to be extended by clients.,1,0,Ownership
2078,ICPPASTVirtSpecifier.java,@since 57,0,0,Ownership
2085,ICPPPointerToMemberType.java,@noimplement this interface is not intended to be implemented by clients.,1,0,Ownership
2090,ICSourceNotFoundDescription.java,an instance is usually provided by an adapter.,0,0,Ownership
2093,IDsfDebugServicesFactory.java,a factory to create dsf services.,1,0,Ownership
2096,IDsfDebugServicesFactory.java,@since 11,0,0,Ownership
2100,IGDBTraceControl.java,the tracecontrol service provides access to the debugger tracing functionality.,1,0,Ownership
2101,IGDBTraceControl.java,it is used to do such things as start and stop tracing.,0,0,Ownership
2102,IGDBTraceControl.java,@since 30,1,0,Ownership
2103,IGDBTraceControl.java,gdb specific part,0,0,Ownership
2104,IGDBTraceControl.java,marker interface for a context on which trace operations can be performed,1,0,Ownership
2105,IGDBTraceControl.java,gdb specific part,0,0,Ownership
2106,IGDBTraceControl.java,specific trace record context.,1,0,Ownership
2107,IGDBTraceControl.java,it describes tracing data.,0,0,Ownership
2108,IGDBTraceControl.java,gdb specific part,1,0,Ownership
2109,IGDBTraceControl.java,this is the model data interface that corresponds to itracerecorddmcontext.,0,0,Ownership
2110,IGDBTraceControl.java,gdb specific part,1,0,Ownership
2111,IGDBTraceControl.java,trace events,0,0,Ownership
2112,IGDBTraceControl.java,gdb specific part @since 44,1,0,Ownership
2127,IInclude.java,represents an include declaration in a c translation unit.,0,0,Ownership
2128,IInclude.java,@noextend this interface is not intended to be extended by clients.,1,0,Ownership
2129,IInclude.java,@noimplement this interface is not intended to be implemented by clients.,0,0,Ownership
2136,IMacroEntry.java,@noextend this interface is not intended to be extended by clients.,1,0,Ownership
2137,IMacroEntry.java,@noimplement this interface is not intended to be implemented by clients.,0,0,Ownership
2140,IMIBackend.java,service for controlling the back end process.,1,0,Ownership
2141,IMIBackend.java,@since 11,0,0,Ownership
2142,IMIBackend.java,event indicating that the back end process has started or terminated.,1,0,Ownership
2146,IMSASTDeclspecList.java,"represents a microsoft attribute specifier, introduced by declspec.",0,0,Ownership
2147,IMSASTDeclspecList.java,@since 66,1,0,Ownership
2148,IMSASTDeclspecList.java,@noextend this interface is not intended to be extended by clients.,0,0,Ownership
2149,IMSASTDeclspecList.java,@noimplement this interface is not intended to be implemented by clients.,1,0,Ownership
2154,INodeFactory.java,control flow graph node factory,0,0,Ownership
2155,INodeFactory.java,@noextend this interface is not intended to be extended by clients.,1,0,Ownership
2161,IPropertyChangeParticipant.java,p,0,0,Ownership
2162,IPropertyChangeParticipant.java,clients may implement this interface.,1,0,Ownership
2163,IPropertyChangeParticipant.java,p,0,0,Ownership
2164,IPropertyChangeParticipant.java,@since 50,1,0,Ownership
2172,IRefreshAllTarget.java,@since 11,0,0,Ownership
2175,IRegisters2.java,service extension of iregisters to manage user defined register groups,1,0,Ownership
2176,IRegisters2.java,@since 26,0,0,Ownership
2179,IScannerInfoConsoleParser.java,parses a line of command output looking for scanner info entries.,1,0,Ownership
2185,ITestItem.java,@noextend this interface is not intended to be extended by clients.,0,0,Ownership
2186,ITestItem.java,@noimplement this interface is not intended to be implemented by clients.,1,0,Ownership
2187,ITestItem.java,represents status of the test item.,0,0,Ownership
2195,IViewInMemory.java,provides the ability to view a variable in the memory view.,1,0,Ownership
2196,IViewInMemory.java,@since 74,0,0,Ownership
2199,LanguageSettingsProvidersSerializer.java,helper class handling serialization and notifications for language settings entries @link iclanguagesettingentry .,1,0,Ownership
2200,LanguageSettingsProvidersSerializer.java,those are for readability of xml only,0,0,Ownership
2201,LanguageSettingsProvidersSerializer.java,dummy class to represent ill defined provider.,1,0,Ownership
2202,LanguageSettingsProvidersSerializer.java,those are for readability of xml only,0,0,Ownership
2204,LanguageSettingsProvidersSerializer.java,those are for readability of xml only,1,0,Ownership
2205,LanguageSettingsProvidersSerializer.java,wrapper for workspace providers to ensure level of indirection.,0,0,Ownership
2209,LanguageSettingsProvidersSerializer.java,those are for readability of xml only,1,0,Ownership
2210,LanguageSettingsProvidersSerializer.java,language settings change event implementation.,0,0,Ownership
2219,MachOBinaryParserPage.java,@noextend this class is not intended to be subclassed by clients.,1,0,Ownership
2221,ManageConfigRunner.java,@noextend this class is not intended to be subclassed by clients.,0,0,Ownership
2223,MIAsyncErrorProcessor.java,in some cases gdb reports exec commands failure after the ^running event is fired.,1,0,Ownership
2237,MIAsyncErrorProcessor.java,this class handles these type of situations by firing mierrorevent when such an error appears.,0,0,Ownership
2238,MIAsyncErrorProcessor.java,@since 53,1,0,Ownership
2246,MIBreakpointsSynchronizer.java,p,0,0,Ownership
2247,MIBreakpointsSynchronizer.java,"bug 530377 prior to fixing 530377, events that arrived from gdb faster than",1,0,Ownership
2248,MIBreakpointsSynchronizer.java,dsf eclipse fully processed them could cause the state within the,0,0,Ownership
2249,MIBreakpointsSynchronizer.java,synchronizer and manager to become corrupt.,1,0,Ownership
2250,MIBreakpointsSynchronizer.java,this would happen because it,0,0,Ownership
2251,MIBreakpointsSynchronizer.java,"takes multiple dsf stages to complete handling 1 event, so the handling of",1,0,Ownership
2252,MIBreakpointsSynchronizer.java,the next event would become intermingled.,0,0,Ownership
2253,MIBreakpointsSynchronizer.java,that violated many assumptions in,1,0,Ownership
2254,MIBreakpointsSynchronizer.java,the code that the code run in the respective requestmonitor would be on the,0,0,Ownership
2255,MIBreakpointsSynchronizer.java,same state.,1,0,Ownership
2256,MIBreakpointsSynchronizer.java,this is an unsuprising assumption based on the general idea of,0,0,Ownership
2257,MIBreakpointsSynchronizer.java,dsf as not requiring the normal synchronization primitives as everything is,1,0,Ownership
2258,MIBreakpointsSynchronizer.java,single threaded.,0,0,Ownership
2259,MIBreakpointsSynchronizer.java,"to resolve this problem, there is some code",1,0,Ownership
2260,MIBreakpointsSynchronizer.java,@link #queueevent breakpointevent that ensures each event is fully,0,0,Ownership
2261,MIBreakpointsSynchronizer.java,processed before the next event starts processing.,1,0,Ownership
2262,MIBreakpointsSynchronizer.java,@since 42,0,0,Ownership
2263,MIBreakpointsSynchronizer.java,catchpoint expressions gdb tracepoint commands,1,0,Ownership
2264,MIBreakpointsSynchronizer.java,class to store an event that needs to be performed by the synchronizer,0,0,Ownership
2265,MIBreakpointsSynchronizer.java,@see mibreakpointssynchronizer class documentation for design comments,1,0,Ownership
2287,MIDataListRegisterNames.java,data list register names regno,0,0,Ownership
2288,MIDataListRegisterNames.java,show a list of register names for the current target.,1,0,Ownership
2301,MIEnvironmentDirectory.java,environment directory r pathdir,0,0,Ownership
2302,MIEnvironmentDirectory.java,add directory pathdir to beginning of search path for source files.,1,0,Ownership
2303,MIEnvironmentDirectory.java,r will first reset the path to its default,0,0,Ownership
2309,MIReverseDebugEnabler.java,@since 42,1,0,Ownership
2313,MIStack.java,provide the data.,0,0,Ownership
2314,MIStack.java,sub classes must supply the miarg object.,1,0,Ownership
2315,MIStack.java,class to track stack depth and debug frames for our internal cache,0,0,Ownership
2316,MIStack.java,"a map of threadid framescacheinfo, that can be cleared based on a context.",1,0,Ownership
2317,MIStack.java,we use this cache for a few reasons,0,0,Ownership
2318,MIStack.java,br,1,0,Ownership
2319,MIStack.java,"first, two commands such as",0,0,Ownership
2320,MIStack.java,pre,1,0,Ownership
2321,MIStack.java,stack info depth 11,0,0,Ownership
2322,MIStack.java,stack info depth 2,1,0,Ownership
2323,MIStack.java,pre,0,0,Ownership
2324,MIStack.java,would both be sent to gdb because the command cache sees them as different.,1,0,Ownership
2325,MIStack.java,this cache allows us to know that if we already asked for a stack depth,0,0,Ownership
2326,MIStack.java,we can potentially re use the answer.,1,0,Ownership
2327,MIStack.java,br,0,0,Ownership
2328,MIStack.java,the same concept is applicable for the stack list frames command with different limits.,1,0,Ownership
2329,MIStack.java,"also, the stack depth can be deduced from the frames list, so we don t need to ask gdb for it again.",0,0,Ownership
2330,MIStack.java,p,1,0,Ownership
2331,MIStack.java,the second reason is that gdb is unreliable when it comes to returning frames.,0,0,Ownership
2332,MIStack.java,the mi protocol only allows to reply,1,0,Ownership
2333,MIStack.java,with data or with error.,0,0,Ownership
2334,MIStack.java,"when gdb is unwinding sometimes it gets both, and while the console cli protocol has no",1,0,Ownership
2335,MIStack.java,"problem with that, for mi, gdb replies randomly, sometimes with data, sometimes with error.",0,0,Ownership
2336,MIStack.java,if we cache the valid data,1,0,Ownership
2337,MIStack.java,it will eliminate the issue with invalid data on subsequent invocations.,0,0,Ownership
2338,MIStack.java,we don t cache errors.,1,0,Ownership
2339,MIStack.java,base class for the iframedmdata object that uses an miframe object to,0,0,Ownership
2340,MIStack.java,provide the data.,1,0,Ownership
2341,MIStack.java,sub classes must provide the miframe object,0,0,Ownership
2372,MIThreadCreatedEvent.java,this can only be detected by gdb mi after gdb 68.,1,0,Ownership
2374,MIThreadGroupAddedEvent.java,"thread group added,id i1",0,0,Ownership
2375,MIThreadGroupAddedEvent.java,this can only be detected by gdb mi with gdb 72.,1,0,Ownership
2376,MIThreadGroupAddedEvent.java,@since 51,0,0,Ownership
2380,MultiCfgContributedEnvironment.java,@noextend this class is not intended to be subclassed by clients.,1,0,Ownership
2382,MultiLaunchConfigurationTabGroup.java,tab group for launch group.,0,0,Ownership
2383,MultiLaunchConfigurationTabGroup.java,"@deprecated see bug 517722, launch groups are now part of platform.",1,0,Ownership
2387,PDOMDependencyGenerator.java,@noextend this class is not intended to be subclassed by clients.,0,0,Ownership
2388,PDOMDependencyGenerator.java,@noinstantiate this class is not intended to be instantiated by clients.,1,0,Ownership
2392,PDOMMacroReferenceName.java,"represents declarations, definitions and references to bindings, except for macros.",0,0,Ownership
2397,ProblemMarkerManager.java,visitors used to filter the element delta changes,1,0,Ownership
2401,ProcessLauncher.java,this class implements external process launching for internal builder.,0,0,Ownership
2407,ProcStatParser.java,@see also http www^linuxhowtos.org system procstat^htm,1,0,Ownership
2410,QtPDOMNameIndex.java,a data structure for storing lists of pdomnames that are indexed by a string key.,0,0,Ownership
2411,QtPDOMNameIndex.java,"this is equivalent to the java type map string, list pdomname .",1,0,Ownership
2424,ReturnCheckerTest.java,test for @see returncheckertest class,0,0,Ownership
2431,RulerColumnDescriptor.java,instances can be obtained from a @link rulercolumnregistry .,1,0,Ownership
2432,RulerColumnDescriptor.java,@since 72,0,0,Ownership
2433,RulerColumnDescriptor.java,@noinstantiate this class is not intended to be instantiated by clients.,1,0,Ownership
2440,SCDOptionsEnum.java,enumeration class for scanner configuration affecting command line options,0,0,Ownership
2445,SourceLookupTest.java,tests that interaction with source lookups works as expected.,1,0,Ownership
2446,SourceLookupTest.java,p,0,0,Ownership
2450,SourceLookupTest.java,"located in the @link #build path directory, but it is now located in the",1,0,Ownership
2451,SourceLookupTest.java,@link basetestcase#source path directory.,0,0,Ownership
2452,SourceLookupTest.java,p,1,0,Ownership
2453,SourceLookupTest.java,the wild card in sourcelookup ^exe can be one of the following to cover the,0,0,Ownership
2454,SourceLookupTest.java,different effective types of source lookups that need to be done depending on,1,0,Ownership
2455,SourceLookupTest.java,how the program was compiled.,0,0,Ownership
2456,SourceLookupTest.java,each of these options produces different debug,1,0,Ownership
2457,SourceLookupTest.java,information about where to find the source file.,0,0,Ownership
2458,SourceLookupTest.java,see the makefile for more,1,0,Ownership
2459,SourceLookupTest.java,information.,0,0,Ownership
2460,SourceLookupTest.java,ul,0,0,Ownership
2461,SourceLookupTest.java,li b ac b absolute and canonical path no .,0,0,Ownership
2462,SourceLookupTest.java,.,0,0,Ownership
2463,SourceLookupTest.java,in path passed to gcc,0,0,Ownership
2464,SourceLookupTest.java,li,0,0,Ownership
2466,SourceLookupTest.java,.,0,0,Ownership
2467,SourceLookupTest.java,in path passed to gcc,0,0,Ownership
2468,SourceLookupTest.java,li,0,0,Ownership
2470,SourceLookupTest.java,.,0,0,Ownership
2471,SourceLookupTest.java,in path passed to gcc,0,0,Ownership
2472,SourceLookupTest.java,li,0,0,Ownership
2474,SourceLookupTest.java,.,0,0,Ownership
2475,SourceLookupTest.java,in path passed to gcc,0,0,Ownership
2476,SourceLookupTest.java,li,0,0,Ownership
2478,SourceLookupTest.java,ul,0,0,Ownership
2479,SourceLookupTest.java,"in addition, there can also be a b dwarf2 b in the name.",0,0,Ownership
2480,SourceLookupTest.java,that means it is,0,0,Ownership
2481,SourceLookupTest.java,"designed to run with gdb 74, see comment in makefile for olddwarfflags.",0,0,Ownership
2482,SourceLookupTest.java,p,0,0,Ownership
2483,SourceLookupTest.java,the result of the variations on compilation arguments means that some of the,0,0,Ownership
2484,SourceLookupTest.java,tests are parameterised.,0,0,Ownership
2485,SourceLookupTest.java,p,0,0,Ownership
2486,SourceLookupTest.java,some of the cdt source lookup features require newer versions of gdb than,0,0,Ownership
2487,SourceLookupTest.java,"others, therefore the relevant tests use assumegdbversion methods to be",0,0,Ownership
2488,SourceLookupTest.java,skipped when appropriate.,0,0,Ownership
2531,SpellEvent.java,spell event fired for words detected by a spell check iterator.,0,0,Ownership
2533,StandardCElementLabelProvider.java,celementlabelprovider that respects settings from the appearance preference page.,0,0,Ownership
2534,StandardCElementLabelProvider.java,triggers a viewer update when a preference changes.,0,0,Ownership
2535,StandardCElementLabelProvider.java,@deprecated use @link appearanceawarelabelprovider instead.,0,0,Ownership
2539,StringDialogField.java,dialog field containing a label and a text control.,0,0,Ownership
2544,ToggleDynamicPrintfAdapter.java,toggles a dynamic printf in a c c editor.,0,0,Ownership
2545,ToggleDynamicPrintfAdapter.java,@since 75,0,0,Ownership
2548,TracepointActionsPropertyPage.java,property page for tracepoint actions,0,0,Ownership
2549,TracepointActionsPropertyPage.java,@since 21,0,0,Ownership
2552,TracingConsole.java,a console that is used to print traces.,0,0,Ownership
2553,TracingConsole.java,the console is attached to a launch.,0,0,Ownership
2558,TracingConsole.java,@since 21,0,0,Ownership
2559,TracingConsole.java,this class was moved from package org^eclipse.cdt^dsf.gdb^internal.ui^tracing,0,0,Ownership
2579,TriggerCellModifier.java,cell modifier used to edit the trigger value.,0,0,Ownership
2581,TypedCDTViewerFilter.java,see org^eclipse.cdt^internal.ui^dialogs.typedviewerfilter,0,0,Ownership
2582,TypedCDTViewerFilter.java,@noextend this class is not intended to be subclassed by clients.,0,0,Ownership
2585,UncallCommandHandler.java,command handler to trigger an uncall operation,0,0,Ownership
2586,UncallCommandHandler.java,@since 70,0,0,Ownership
2589,UPCKeyword.java,enumeration of keywords that upc adds to c99.,0,0,Ownership
2593,UPCLanguage.java,"implementation of the ilanguage extension point, adds upc as a language to cdt.",0,0,Ownership
2597,VMHasChildrenUpdate.java,helper class implementation of the @link ihaschildrenupdate update object.,0,0,Ownership
2598,VMHasChildrenUpdate.java,@see vmviewerupdate,0,0,Ownership
2599,VMHasChildrenUpdate.java,@since 10,0,0,Ownership
2603,WhiteSpaceOptions.java,manage code formatter white space options on a higher level.,0,0,Ownership
2604,WhiteSpaceOptions.java,preview snippets.,0,0,Ownership
2605,WhiteSpaceOptions.java,"private void createbeforeellipsis map workingvalues, innernode parent createoption parent, workingvalues, formattermessages^whitespaceoptions vararg parameter, defaultcodeformatterconstants^formatter insert space before ellipsis, vararg parameter preview private void createafterellipsis map workingvalues, innernode parent createoption parent, workingvalues, formattermessages^whitespaceoptions vararg parameter, defaultcodeformatterconstants^formatter insert space after ellipsis, vararg parameter preview syntax element tree private innernode createreturntree map workingvalues, innernode parent final innernode root new innernode parent, workingvalues, formattermessages^whitespaceoptions return createoption root, workingvalues, formattermessages^whitespacetabpage before parenthesized expressions, defaultcodeformatterconstants^formatter insert space before parenthesized expression in return, return preview return root private innernode createthrowtree map workingvalues, innernode parent final innernode root new innernode parent, workingvalues, formattermessages^whitespaceoptions throw createoption root, workingvalues, formattermessages^whitespacetabpage before parenthesized expressions, defaultcodeformatterconstants^formatter insert space before parenthesized expression in throw, throw preview return root",0,0,Ownership
2606,WhiteSpaceOptions.java,represents a node in the options tree.,0,0,Ownership
2607,WhiteSpaceOptions.java,preview snippets.,0,0,Ownership
2608,WhiteSpaceOptions.java,"private void createbeforeellipsis map workingvalues, innernode parent createoption parent, workingvalues, formattermessages^whitespaceoptions vararg parameter, defaultcodeformatterconstants^formatter insert space before ellipsis, vararg parameter preview private void createafterellipsis map workingvalues, innernode parent createoption parent, workingvalues, formattermessages^whitespaceoptions vararg parameter, defaultcodeformatterconstants^formatter insert space after ellipsis, vararg parameter preview syntax element tree private innernode createreturntree map workingvalues, innernode parent final innernode root new innernode parent, workingvalues, formattermessages^whitespaceoptions return createoption root, workingvalues, formattermessages^whitespacetabpage before parenthesized expressions, defaultcodeformatterconstants^formatter insert space before parenthesized expression in return, return preview return root private innernode createthrowtree map workingvalues, innernode parent final innernode root new innernode parent, workingvalues, formattermessages^whitespaceoptions throw createoption root, workingvalues, formattermessages^whitespacetabpage before parenthesized expressions, defaultcodeformatterconstants^formatter insert space before parenthesized expression in throw, throw preview return root",0,0,Ownership
2609,WhiteSpaceOptions.java,a node representing a group of options in the tree.,0,0,Ownership
2610,WhiteSpaceOptions.java,preview snippets.,0,0,Ownership
2611,WhiteSpaceOptions.java,"private void createbeforeellipsis map workingvalues, innernode parent createoption parent, workingvalues, formattermessages^whitespaceoptions vararg parameter, defaultcodeformatterconstants^formatter insert space before ellipsis, vararg parameter preview private void createafterellipsis map workingvalues, innernode parent createoption parent, workingvalues, formattermessages^whitespaceoptions vararg parameter, defaultcodeformatterconstants^formatter insert space after ellipsis, vararg parameter preview syntax element tree private innernode createreturntree map workingvalues, innernode parent final innernode root new innernode parent, workingvalues, formattermessages^whitespaceoptions return createoption root, workingvalues, formattermessages^whitespacetabpage before parenthesized expressions, defaultcodeformatterconstants^formatter insert space before parenthesized expression in return, return preview return root private innernode createthrowtree map workingvalues, innernode parent final innernode root new innernode parent, workingvalues, formattermessages^whitespaceoptions throw createoption root, workingvalues, formattermessages^whitespacetabpage before parenthesized expressions, defaultcodeformatterconstants^formatter insert space before parenthesized expression in throw, throw preview return root",0,0,Ownership
2612,WhiteSpaceOptions.java,a node representing a concrete white space option in the tree.,0,0,Ownership
2623,WordIgnoreProposal.java,proposal to ignore the word during the current editing session.,0,0,Ownership
2625,WorkingCopyTests.java,contains unit test cases for working copies.,0,0,Ownership
1607,AbstractCPropertyTab.java,"in this case, we ll able to use",0,0,Ownership
1608,AbstractCPropertyTab.java,a lot of utility methods via provider link.,0,0,Ownership
1609,AbstractCPropertyTab.java,"in particular, it allows to get current project,",0,0,Ownership
1610,AbstractCPropertyTab.java,configuration etc see icpropertyprovider interface.,0,0,Ownership
1611,AbstractCPropertyTab.java,a standard way to create buttons ins edit del etc,0,0,Ownership
1612,AbstractCPropertyTab.java,and to handle their events see buttonpressed int,0,0,Ownership
1613,AbstractCPropertyTab.java,several utility methods to create widgets in the,0,0,Ownership
1614,AbstractCPropertyTab.java,"uniform manner setuplabel , setuptext etc .",0,0,Ownership
1615,AbstractCPropertyTab.java,means to handle control messages which are the main,0,0,Ownership
1616,AbstractCPropertyTab.java,communication way for new cdt model pages and tabs.,0,0,Ownership
1631,AbstractTrialUndoActionProvider.java,action for a null rule,0,0,Ownership
1634,AddBreakpointRulerAction.java,ruler action to add breakpoint with a dialog properties.,0,0,Ownership
1636,AddLineBreakpointActionDelegate.java,a delegate for the add line breakpoint action.,0,0,Ownership
1638,AddLineBreakpointActionDelegate.java,initially derived from addfunctionbreakpointactiondelegate,0,0,Ownership
1641,AddMemoryBlocks.java,adds memory blocks to the memory view.,0,0,Ownership
1642,AddMemoryBlocks.java,p,0,0,Ownership
1650,AddMemoryBlocks.java,p,0,0,Ownership
1651,AddMemoryBlocks.java,@since 32,0,0,Ownership
1652,AddMemoryBlocks.java,"in order to avoid duplicating the addmemoryblocks method one version for expressions, one for memory space address, we pass in a an opaque parameter and let the logic within addmemoryblocks differentiate where needed via isinstanceof request object used to get the memory spaces",0,0,Ownership
1662,AllTemplateEngineTests.java,the test suite will execute all the testcases added to the suite.,0,0,Ownership
1663,AllTemplateEngineTests.java,@since 40,0,0,Ownership
1667,AutoconfMacroParameterListValidator.java,this class provides the macro call parameter parsing for the autoconf editor hover,0,0,Ownership
1668,AutoconfMacroParameterListValidator.java,it is modified from the cdt class cparameterlistvalidator,0,0,Ownership
1673,AutotoolsProblemMarkerInfo.java,@noextend this class is not intended to be subclassed by clients.,0,0,Ownership
1675,BindingClassifierTest.java,tests for @link bindingclassifier .,0,0,Ownership
1678,C99BuildASTParserAction.java,semantic actions called by the c99 parser to build an ast.,0,0,Ownership
1682,CConfigurationDescriptionCache.java,cconfigurationdescriptioncache is a proxy class for serialization of configuration description data.,0,0,Ownership
1685,CConfigurationDescriptionCache.java,ol,0,0,Ownership
1686,CConfigurationDescriptionCache.java,li initialization,0,0,Ownership
1687,CConfigurationDescriptionCache.java,ul,0,0,Ownership
1688,CConfigurationDescriptionCache.java,li after eclipse started a project is being opened.,0,0,Ownership
1689,CConfigurationDescriptionCache.java,a new cconfigurationdescriptioncache is created,0,0,Ownership
1690,CConfigurationDescriptionCache.java,"with cconfigurationdescriptioncache icstorageelement storage, cprojectdescription parent constructor.",0,0,Ownership
1691,CConfigurationDescriptionCache.java,li any clients needed icconfigurationdescription get cconfigurationdescription using constructor,0,0,Ownership
1692,CConfigurationDescriptionCache.java,"cconfigurationdescription cconfigurationdata data, string buildsystemid, icdataproxycontainer cr",0,0,Ownership
1693,CConfigurationDescriptionCache.java,where the cconfigurationdescriptioncache is passed as data.,0,0,Ownership
1694,CConfigurationDescriptionCache.java,the reference to cache is kept in field fcfgcache.,0,0,Ownership
1695,CConfigurationDescriptionCache.java,"li fcfgcache is used to getspecsettings cconfigurationspecsettings, after that fcfgcache is set to null.",0,0,Ownership
1696,CConfigurationDescriptionCache.java,ul,0,0,Ownership
1697,CConfigurationDescriptionCache.java,li user enters project properties settings,0,0,Ownership
1698,CConfigurationDescriptionCache.java,ul,0,0,Ownership
1699,CConfigurationDescriptionCache.java,li another cconfigurationdescription settings configuration created using the same constructor setting fcfgcache,0,0,Ownership
1700,CConfigurationDescriptionCache.java,to the cconfigurationdescriptioncache.,0,0,Ownership
1701,CConfigurationDescriptionCache.java,ul,0,0,Ownership
1702,CConfigurationDescriptionCache.java,li user changes settings in the settings configuration cconfigurationdescription and saves it,0,0,Ownership
1703,CConfigurationDescriptionCache.java,ul,0,0,Ownership
1704,CConfigurationDescriptionCache.java,li new cconfigurationdescriptioncache is created from the cconfigurationdescription via constructor,0,0,Ownership
1705,CConfigurationDescriptionCache.java,"cconfigurationdescriptioncache icconfigurationdescription basedescription, .",0,0,Ownership
1706,CConfigurationDescriptionCache.java,where,0,0,Ownership
1707,CConfigurationDescriptionCache.java,basedescription is saved as fbasedescription.,0,0,Ownership
1708,CConfigurationDescriptionCache.java,li cconfigurationdescriptioncache^applydata .,0,0,Ownership
1709,CConfigurationDescriptionCache.java,is used to persist the data.,0,0,Ownership
1710,CConfigurationDescriptionCache.java,at that point,0,0,Ownership
1712,CConfigurationDescriptionCache.java,ul,0,0,Ownership
1713,CConfigurationDescriptionCache.java,ol,0,0,Ownership
1714,CConfigurationDescriptionCache.java,@see icconfigurationdescription,0,0,Ownership
1715,CConfigurationDescriptionCache.java,@see cconfigurationdescription,0,0,Ownership
1716,CConfigurationDescriptionCache.java,@see cprojectdescriptionevent,0,0,Ownership
1755,CDebugModelPresentation.java,@see idebugmodelpresentation,0,0,Ownership
1757,CElementDelta.java,@see icelementdelta,0,0,Ownership
1759,ClangToolChain.java,the clang toolchain.,0,0,Ownership
1766,CommonBuildTab.java,common utilities for core build launch configuration tabs.,0,0,Ownership
1767,CommonBuildTab.java,@since 91,0,0,Ownership
1770,ContainerTabModel.java,@since 12.1,0,0,Ownership
1774,CoreBuildGenericLaunchConfigProvider.java,core launch configuration provider used by generic target types.,0,0,Ownership
1775,CoreBuildGenericLaunchConfigProvider.java,@since 83,0,0,Ownership
1778,CPPASTProblem.java,c specific implementation allows actions to visit the problem.,0,0,Ownership
1780,CPPASTReferenceOperator.java,reference operator for declarators.,0,0,Ownership
1784,CPPDeferredFunction.java,a compiler would resolve it during instantiation.,0,0,Ownership
1787,CPPImplicitVariable.java,represents a variable implicitly created in c code.,0,0,Ownership
1788,CPPImplicitVariable.java,for example the initializer of a structured binding decomposition dcl^struct.bind,0,0,Ownership
1789,CPPImplicitVariable.java,"code auto first, second decomposed code",0,0,Ownership
1790,CPPImplicitVariable.java,the code initializerevaluation code has to be supplied.,0,0,Ownership
1798,CPropertyTester.java,a property tester that determines if a file is an executable or a c c project.,0,0,Ownership
1800,CUIPreferenceInitializer.java,this class implements the setting of the cui initial preference store settings.,0,0,Ownership
1801,CUIPreferenceInitializer.java,@noextend this class is not intended to be subclassed by clients.,0,0,Ownership
1808,DefaultEnvironmentContextInfo.java,the default implementation of the icontextinfo used by the environment variable provider,0,0,Ownership
1809,DefaultEnvironmentContextInfo.java,"used to represent the configuration, project, workspace and eclipse environment contexts",0,0,Ownership
1810,DefaultEnvironmentContextInfo.java,@since 30,0,0,Ownership
1823,DisplayDsfExecutor.java,@since 10,0,0,Ownership
1828,DocCommentOwnerBlock.java,project property page for setting documentation comment owner.,0,0,Ownership
1829,DocCommentOwnerBlock.java,em this class is not intended for use outside of cdt em,0,0,Ownership
1830,DocCommentOwnerBlock.java,@noextend this class is not intended to be subclassed by clients.,0,0,Ownership
1831,DocCommentOwnerBlock.java,@noinstantiate this class is not intended to be instantiated by clients.,0,0,Ownership
1840,DsfDebugUITools.java,@since 11,0,0,Ownership
1842,DummyPage.java,this class is just to replace a category reference in org^eclipse.cdt^ui that we exclude because we do not bring in the org^eclipse.cdt^managedbuild.ui plug in.,0,0,Ownership
1847,ElementNumberFormatsContribution.java,@since 22,0,0,Ownership
1850,FindStdLibPath.java,the purpose is to find a path where stdc library is located.,0,0,Ownership
1851,FindStdLibPath.java,currently the shell script is only for linux.,0,0,Ownership
1855,FoldingConfigurationBlock.java,configures c editor folding preferences.,0,0,Ownership
1856,FoldingConfigurationBlock.java,@since 30,0,0,Ownership
1859,FormattedValueTests.java,tests to verify the operation of formattedvaluesvmutil,0,0,Ownership
1860,FormattedValueTests.java,@since 22,0,0,Ownership
1861,FormattedValueTests.java,helper class that stores some element paths and nodes using a certain format,0,0,Ownership
1865,GCCKeywords.java,@noextend this interface is not intended to be extended by clients.,0,0,Ownership
1866,GCCKeywords.java,@noinstantiate this class is not intended to be instantiated by clients.,0,0,Ownership
1869,GDBControl_7_12.java,need a new finallaunchsequence for gdb 712,0,0,Ownership
1870,GDBControl_7_12.java,@since 52,0,0,Ownership
1873,GdbExpressionVMProvider.java,a specialization of expressionvmprovider that uses a gdb specific variable vm,0,0,Ownership
1875,GdbExpressionVMProvider.java,"to understand why this is necessary, see gdbvariablevmnode.",0,0,Ownership
1879,GDBSourceLookup.java,default implementation of @link igdbsourcelookup,0,0,Ownership
1880,GDBSourceLookup.java,@since 50,0,0,Ownership
1885,GnuMakefileGenerator.java,@since 12,0,0,Ownership
1886,GnuMakefileGenerator.java,@noinstantiate this class is not intended to be instantiated by clients.,0,0,Ownership
1887,GnuMakefileGenerator.java,string constants for makefile contents and messages private static final string auto dep comment ^autodeps non nls 1 private static final string message managedmakebuilder^message non nls 1 private static final string build error message ^error non nls 1 private static final string dep incl comment ^module.dep^includes non nls 1 private static final string mod incl comment ^module.make^includes non nls 1 private itool buildtools private boolean buildtoolsused private imanagedbuildinfo info private set outputextensionsset maps of macro names string to values list dependency file variables private vector dependencymakefiles ipath s relative to the top build directory or absolute,0,0,Ownership
1888,GnuMakefileGenerator.java,imanagedbuildermakefilegenerator m e t h o d s,0,0,Ownership
1889,GnuMakefileGenerator.java,m a k e f i l e s p o p u l a t i o n m e t h o d s,0,0,Ownership
1890,GnuMakefileGenerator.java,m a i n makefile m a k e f i l e m e t h o d s,0,0,Ownership
1891,GnuMakefileGenerator.java,s o u r c e s sources^mk m a k e f i l e m e t h o d s,0,0,Ownership
1892,GnuMakefileGenerator.java,f r a g m e n t subdir^mk m a k e f i l e m e t h o d s,0,0,Ownership
1893,GnuMakefileGenerator.java,m a k e f i l eg e n e r a t i o n c o m m o n m e t h o d s,0,0,Ownership
1894,GnuMakefileGenerator.java,adds a macro addition prefix to a map of macro names to entries.,0,0,Ownership
1895,GnuMakefileGenerator.java,entry prefixes look like,0,0,Ownership
1896,GnuMakefileGenerator.java,c srcs,0,0,Ownership
1897,GnuMakefileGenerator.java,"addprefix root ,",0,0,Ownership
1898,GnuMakefileGenerator.java,r e s o u r c e v i s i t o r m e t h o d s,0,0,Ownership
1899,GnuMakefileGenerator.java,o t h e r m e t h o d s,0,0,Ownership
1900,GnuMakefileGenerator.java,"process a string denoting a filepath in a way compatible for gnu make rules, handling",0,0,Ownership
1901,GnuMakefileGenerator.java,windows drive letters and whitespace appropriately.,0,0,Ownership
1902,GnuMakefileGenerator.java,p p,0,0,Ownership
1903,GnuMakefileGenerator.java,the context these paths appear in is on the right hand side of a rule header.,0,0,Ownership
1904,GnuMakefileGenerator.java,ie,0,0,Ownership
1905,GnuMakefileGenerator.java,p p,0,0,Ownership
1906,GnuMakefileGenerator.java,target dep1 dep2 dep3,0,0,Ownership
1907,GnuMakefileGenerator.java,p,0,0,Ownership
1908,GnuMakefileGenerator.java,@param path the string denoting the path to process,0,0,Ownership
1909,GnuMakefileGenerator.java,@throws nullpointerexception is path is null,0,0,Ownership
1910,GnuMakefileGenerator.java,@return a suitable make rule compatible path,0,0,Ownership
1912,GnuMakefileGenerator.java,what resources have been changed.,0,0,Ownership
1913,GnuMakefileGenerator.java,the logic is very simple.,0,0,Ownership
1914,GnuMakefileGenerator.java,if a,0,0,Ownership
1916,GnuMakefileGenerator.java,in which they are located are dirty so the makefile fragments for them,0,0,Ownership
1917,GnuMakefileGenerator.java,have to be regenerated.,0,0,Ownership
1918,GnuMakefileGenerator.java,p,0,0,Ownership
1920,GnuMakefileGenerator.java,itself.,0,0,Ownership
1921,GnuMakefileGenerator.java,we are relying on make to do the right things when confronted,0,0,Ownership
1922,GnuMakefileGenerator.java,with a dependency on a moved header file.,0,0,Ownership
1923,GnuMakefileGenerator.java,"that said, make will treat",0,0,Ownership
1924,GnuMakefileGenerator.java,the missing header file in a dependency rule as a target it has to build,0,0,Ownership
1925,GnuMakefileGenerator.java,unless told otherwise.,0,0,Ownership
1926,GnuMakefileGenerator.java,these dummy targets are added to the makefile,0,0,Ownership
1927,GnuMakefileGenerator.java,to avoid a missing target error.,0,0,Ownership
1928,GnuMakefileGenerator.java,string constants for makefile contents and messages private static final string auto dep comment ^autodeps non nls 1 private static final string message managedmakebuilder^message non nls 1 private static final string build error message ^error non nls 1 private static final string dep incl comment ^module.dep^includes non nls 1 private static final string mod incl comment ^module.make^includes non nls 1 private itool buildtools private boolean buildtoolsused private imanagedbuildinfo info private set outputextensionsset maps of macro names string to values list dependency file variables private vector dependencymakefiles ipath s relative to the top build directory or absolute,0,0,Ownership
1929,GnuMakefileGenerator.java,imanagedbuildermakefilegenerator m e t h o d s,0,0,Ownership
1930,GnuMakefileGenerator.java,m a k e f i l e s p o p u l a t i o n m e t h o d s,0,0,Ownership
1931,GnuMakefileGenerator.java,m a i n makefile m a k e f i l e m e t h o d s,0,0,Ownership
1932,GnuMakefileGenerator.java,s o u r c e s sources^mk m a k e f i l e m e t h o d s,0,0,Ownership
1933,GnuMakefileGenerator.java,f r a g m e n t subdir^mk m a k e f i l e m e t h o d s,0,0,Ownership
1934,GnuMakefileGenerator.java,m a k e f i l eg e n e r a t i o n c o m m o n m e t h o d s,0,0,Ownership
1935,GnuMakefileGenerator.java,adds a macro addition prefix to a map of macro names to entries.,0,0,Ownership
1936,GnuMakefileGenerator.java,entry prefixes look like,0,0,Ownership
1937,GnuMakefileGenerator.java,c srcs,0,0,Ownership
1938,GnuMakefileGenerator.java,"addprefix root ,",0,0,Ownership
1939,GnuMakefileGenerator.java,r e s o u r c e v i s i t o r m e t h o d s,0,0,Ownership
1940,GnuMakefileGenerator.java,o t h e r m e t h o d s,0,0,Ownership
1941,GnuMakefileGenerator.java,"process a string denoting a filepath in a way compatible for gnu make rules, handling",0,0,Ownership
1942,GnuMakefileGenerator.java,windows drive letters and whitespace appropriately.,0,0,Ownership
1943,GnuMakefileGenerator.java,p p,0,0,Ownership
1944,GnuMakefileGenerator.java,the context these paths appear in is on the right hand side of a rule header.,0,0,Ownership
1945,GnuMakefileGenerator.java,ie,0,0,Ownership
1946,GnuMakefileGenerator.java,p p,0,0,Ownership
1947,GnuMakefileGenerator.java,target dep1 dep2 dep3,0,0,Ownership
1948,GnuMakefileGenerator.java,p,0,0,Ownership
1949,GnuMakefileGenerator.java,@param path the string denoting the path to process,0,0,Ownership
1950,GnuMakefileGenerator.java,@throws nullpointerexception is path is null,0,0,Ownership
1951,GnuMakefileGenerator.java,@return a suitable make rule compatible path,0,0,Ownership
1952,GnuMakefileGenerator.java,this class is used to recursively walk the project and determine which,0,0,Ownership
1953,GnuMakefileGenerator.java,modules contribute buildable source files.,0,0,Ownership
2024,GroupDebugContextsCommandHandler.java,command handler to trigger grouping of debug contexts operation.,0,0,Ownership
2025,GroupDebugContextsCommandHandler.java,@since 71,0,0,Ownership
2028,IBHistoryAction.java,action used for the include browser forward backward buttons,0,0,Ownership
2030,IBuildObject.java,@noextend this class is not intended to be subclassed by clients.,0,0,Ownership
2031,IBuildObject.java,@noimplement this interface is not intended to be implemented by clients.,0,0,Ownership
2036,ICLanguageSettingPathEntry.java,see interface hierarchy for more specifics.,0,0,Ownership
2041,ICLibraryFileEntry.java,see @link icsettingentry#library file .,0,0,Ownership
2047,ICodeReaderFactory.java,@deprecated replaced by @link includefilecontentprovider,0,0,Ownership
3074,CloseablesTest.java,unit tests for @link closeables .,0,0,Ownership
3075,CloseablesTest.java,"p checks proper closing behavior, and ensures that ioexceptions on closeable^close are not",1,0,Ownership
3076,CloseablesTest.java,propagated out from the @link closeables#close method if @code swallowexception is true.,0,0,Ownership
3082,CollectionTestSuiteBuilder.java,concrete instantiation of @link abstractcollectiontestsuitebuilder for testing collections that,1,0,Ownership
3083,CollectionTestSuiteBuilder.java,do not have a more specific tester like @link listtestsuitebuilder or @link,0,0,Ownership
3084,CollectionTestSuiteBuilder.java,settestsuitebuilder .,1,0,Ownership
4115,SortedSetNavigationTester.java,a generic junit test which tests operations on a sortedset.,0,0,Ownership
4116,SortedSetNavigationTester.java,can t be invoked directly please see,1,0,Ownership
4117,SortedSetNavigationTester.java,@code sortedsettestsuitebuilder .,0,0,Ownership
3095,ConflictingRequirementsException.java,thrown when requirements on a tester method or class conflict with each other.,1,0,Ownership
3099,CountingOutputStream.java,an outputstream that counts the number of bytes written.,0,0,Ownership
3101,CountingOutputStream.java,@since 10,1,0,Ownership
4126,SubscriberTest.java,tests for @link subscriber .,0,0,Ownership
3105,DescendingMultiset.java,a skeleton implementation of a descending multiset.,1,0,Ownership
3106,DescendingMultiset.java,only needs @code forwardmultiset and,0,0,Ownership
3107,DescendingMultiset.java,@code entryiterator .,1,0,Ownership
4134,TesterRequirements.java,encapsulates the constraints that a class under test must satisfy in order for a tester method to,0,0,Ownership
4135,TesterRequirements.java,be run against that class.,1,0,Ownership
3113,EqualsTester.java,tester for equals and hashcode methods of a class.,0,0,Ownership
3114,EqualsTester.java,p the simplest use case is,1,0,Ownership
3115,EqualsTester.java,pre,0,0,Ownership
3117,EqualsTester.java,pre,1,0,Ownership
3118,EqualsTester.java,"p this tests @code foo^equals foo , @code foo^equals null , and a few other operations.",0,0,Ownership
4143,WrappingScheduledExecutorService.java,an abstract @code scheduledexecutorservice that allows subclasses to @linkplain,1,0,Ownership
3119,EqualsTester.java,"p for more extensive testing, add multiple equality groups.",0,0,Ownership
4144,WrappingScheduledExecutorService.java,#wraptask callable wrap tasks before they are submitted to the underlying executor.,1,0,Ownership
3120,EqualsTester.java,each group should contain objects,0,0,Ownership
4145,WrappingScheduledExecutorService.java,p note that task wrapping may occur even if the task is never executed.,1,0,Ownership
3121,EqualsTester.java,that are equal to each other but unequal to the objects in any other group.,0,0,Ownership
3122,EqualsTester.java,for example,1,0,Ownership
3123,EqualsTester.java,pre,0,0,Ownership
3124,EqualsTester.java,new equalstester,1,0,Ownership
3125,EqualsTester.java,"addequalitygroup new user page , new user page",0,0,Ownership
3126,EqualsTester.java,addequalitygroup new user sergey,1,0,Ownership
3127,EqualsTester.java,testequals,0,0,Ownership
3128,EqualsTester.java,pre,1,0,Ownership
3129,EqualsTester.java,p this tests,0,0,Ownership
3130,EqualsTester.java,ul,1,0,Ownership
3131,EqualsTester.java,li comparing each object against itself returns true,0,0,Ownership
3133,EqualsTester.java,li comparing each object against an instance of an incompatible class returns false,1,0,Ownership
3134,EqualsTester.java,li comparing each pair of objects within the same equality group returns true,0,0,Ownership
3135,EqualsTester.java,li comparing each pair of objects from different equality groups returns false,1,0,Ownership
3136,EqualsTester.java,li the hash codes of any two equal objects are equal,0,0,Ownership
3137,EqualsTester.java,ul,1,0,Ownership
3140,EqualsTester.java,ul,0,0,Ownership
3146,EqualsTester.java,ul,1,0,Ownership
3149,EqualsTester.java,@since 100,0,0,Ownership
3150,EqualsTester.java,class used to test whether equals correctly handles an instance of an incompatible class.,1,0,Ownership
3151,EqualsTester.java,"since it is a private inner class, the invoker can never pass in an instance to the tester",0,0,Ownership
3182,FeatureSpecificTestSuiteBuilder.java,"creates, based on your criteria, a junit test suite that exhaustively tests the object generated",1,0,Ownership
3183,FeatureSpecificTestSuiteBuilder.java,"by a g, selecting appropriate tests by matching them against specified features.",0,0,Ownership
3184,FeatureSpecificTestSuiteBuilder.java,@param b the concrete type of this builder the self type .,1,0,Ownership
3185,FeatureSpecificTestSuiteBuilder.java,all the builder methods of this,0,0,Ownership
3186,FeatureSpecificTestSuiteBuilder.java,"class such as @link #named return this type, so that builder methods of more derived",1,0,Ownership
3188,FeatureSpecificTestSuiteBuilder.java,@param g the type of the generator to be passed to testers in the generated test suite.,0,0,Ownership
3189,FeatureSpecificTestSuiteBuilder.java,an,1,0,Ownership
3191,FeatureSpecificTestSuiteBuilder.java,information required to parameterize the test.,0,0,Ownership
3205,ForwardingBlockingDequeTest.java,test for @link forwardingblockingdeque,1,0,Ownership
3209,ForwardingImmutableSet.java,gwt implementation of @link immutableset that forwards to another @code set implementation.,0,0,Ownership
3214,ForwardingQueueTest.java,tests for @code forwardingqueue .,1,0,Ownership
3220,GwtTestSuite.java,runs all gwt tests.,0,0,Ownership
3221,GwtTestSuite.java,grouping them into a suite is much faster than running each as a one test,1,0,Ownership
3222,GwtTestSuite.java,"suite, as the per suite setup is expensive.",0,0,Ownership
3226,HashFunctionEnum.java,an enum that contains all of the known hash functions.,1,0,Ownership
3230,HostAndPort.java,an immutable representation of a host and port.,0,0,Ownership
3231,HostAndPort.java,p example usage,1,0,Ownership
3232,HostAndPort.java,pre,0,0,Ownership
3233,HostAndPort.java,hostandport hp hostandport^fromstring 2001 db8 1,1,0,Ownership
3235,HostAndPort.java,requirebracketsforipv6,0,0,Ownership
3236,HostAndPort.java,hp^gethost returns 2001 db8 1,1,0,Ownership
3237,HostAndPort.java,hp^getport returns 80,0,0,Ownership
3238,HostAndPort.java,hp^tostring returns 2001 db8 1 80,1,0,Ownership
3239,HostAndPort.java,pre,0,0,Ownership
3240,HostAndPort.java,p here are some examples of recognized formats,1,0,Ownership
3241,HostAndPort.java,ul,0,0,Ownership
3242,HostAndPort.java,li example^com,1,0,Ownership
3244,HostAndPort.java,li 1920.21,0,0,Ownership
3246,HostAndPort.java,li 2001 db8 1 @link #gethost omits brackets,1,0,Ownership
3247,HostAndPort.java,li 2001 db8 1 80 @link #gethost omits brackets,0,0,Ownership
3248,HostAndPort.java,li 2001 db8 1 use @link #requirebracketsforipv6 to prohibit this,1,0,Ownership
3249,HostAndPort.java,ul,0,0,Ownership
3250,HostAndPort.java,"p note that this is not an exhaustive list, because these methods are only concerned with",1,0,Ownership
3251,HostAndPort.java,"brackets, colons, and port numbers.",0,0,Ownership
3253,HostAndPort.java,caller s responsibility.,1,0,Ownership
3255,HostAndPort.java,@since 100,0,0,Ownership
3282,ImmutableSetHashFloodingDetectionBenchmark.java,benchmark of implementations of @link immutableset#hashfloodingdetected object .,1,0,Ownership
3285,ImmutableTable_CustomFieldSerializerBase.java,this class contains static utility methods for writing @link immutabletable gwt field,0,0,Ownership
3286,ImmutableTable_CustomFieldSerializerBase.java,serializers.,1,0,Ownership
3287,ImmutableTable_CustomFieldSerializerBase.java,serializers should delegate to @link #serialize and @link #instantiate .,0,0,Ownership
3293,LazyStackTraceBenchmark.java,quick and dirty benchmark of @link throwables#lazystacktrace throwable .,1,0,Ownership
3294,LazyStackTraceBenchmark.java,we benchmark a caller,0,0,Ownership
3295,LazyStackTraceBenchmark.java,finder implementation that might be used in a logging framework.,1,0,Ownership
3300,LongMathBenchmark.java,benchmarks for the non rounding methods of @code longmath .,0,0,Ownership
3304,MapPutAllTester.java,a generic junit test which tests @code putall operations on a map.,1,0,Ownership
3306,MapPutAllTester.java,please see @link com^google.common^collect.testing^maptestsuitebuilder .,0,0,Ownership
3313,MapSerializationTester.java,basic serialization test for maps.,1,0,Ownership
3317,MultimapBuilder.java,a builder for a multimap implementation that allows customization of the backing map and value,0,0,Ownership
3318,MultimapBuilder.java,collection implementations used in a particular multimap.,1,0,Ownership
3319,MultimapBuilder.java,p this can be used to easily configure multimap data structure implementations not provided,0,0,Ownership
3320,MultimapBuilder.java,"explicitly in @code com^google.common^collect , for example",1,0,Ownership
3321,MultimapBuilder.java,pre @code,0,0,Ownership
3322,MultimapBuilder.java,"listmultimap string, integer treelistmultimap",1,0,Ownership
3323,MultimapBuilder.java,multimapbuilder^treekeys ^arraylistvalues ^build,0,0,Ownership
3324,MultimapBuilder.java,"setmultimap integer, myenum hashenummultimap",1,0,Ownership
3325,MultimapBuilder.java,multimapbuilder^hashkeys ^enumsetvalues myenum^class ^build,0,0,Ownership
3326,MultimapBuilder.java,pre,1,0,Ownership
3327,MultimapBuilder.java,p @code multimapbuilder instances are immutable.,0,0,Ownership
3328,MultimapBuilder.java,invoking a configuration method has no effect,1,0,Ownership
3329,MultimapBuilder.java,on the receiving instance you must store and use the new builder instance it returns instead.,0,0,Ownership
3330,MultimapBuilder.java,"p the generated multimaps are serializable if the key and value types are serializable, unless",1,0,Ownership
3331,MultimapBuilder.java,stated otherwise in one of the configuration methods.,0,0,Ownership
3333,MultimapBuilder.java,@param k0 an upper bound on the key type of the generated multimap.,1,0,Ownership
3334,MultimapBuilder.java,@param v0 an upper bound on the value type of the generated multimap.,0,0,Ownership
3335,MultimapBuilder.java,@since 160,1,0,Ownership
3336,MultimapBuilder.java,leaving k and v as upper bounds rather than the actual key and value types allows type,0,0,Ownership
3337,MultimapBuilder.java,parameters to be left implicit more often.,1,0,Ownership
3338,MultimapBuilder.java,cachebuilder uses the same technique.,0,0,Ownership
3339,MultimapBuilder.java,an intermediate stage in a @link multimapbuilder in which the key value collection map,1,0,Ownership
3340,MultimapBuilder.java,"implementation has been specified, but the value collection implementation has not.",0,0,Ownership
3341,MultimapBuilder.java,@param k0 the upper bound on the key type of the generated multimap.,1,0,Ownership
3342,MultimapBuilder.java,@since 160,0,0,Ownership
3343,MultimapBuilder.java,leaving k and v as upper bounds rather than the actual key and value types allows type,1,0,Ownership
3344,MultimapBuilder.java,parameters to be left implicit more often.,0,0,Ownership
3345,MultimapBuilder.java,cachebuilder uses the same technique.,1,0,Ownership
3346,MultimapBuilder.java,a specialization of @link multimapbuilder that generates @link listmultimap instances.,0,0,Ownership
3347,MultimapBuilder.java,@since 160,1,0,Ownership
3348,MultimapBuilder.java,leaving k and v as upper bounds rather than the actual key and value types allows type,0,0,Ownership
3349,MultimapBuilder.java,parameters to be left implicit more often.,1,0,Ownership
3350,MultimapBuilder.java,cachebuilder uses the same technique.,0,0,Ownership
3352,MultimapBuilder.java,@since 160,1,0,Ownership
3353,MultimapBuilder.java,leaving k and v as upper bounds rather than the actual key and value types allows type,0,0,Ownership
3354,MultimapBuilder.java,parameters to be left implicit more often.,1,0,Ownership
3355,MultimapBuilder.java,cachebuilder uses the same technique.,0,0,Ownership
3357,MultimapBuilder.java,@since 160,1,0,Ownership
3390,MultimapBuilderTest.java,tests for @link multimapbuilder .,0,0,Ownership
3394,NullsLastOrdering_CustomFieldSerializer.java,this class implements the gwt serialization of @link nullslastordering .,1,0,Ownership
3398,ObjectCountHashMap.java,objectcounthashmap is an implementation of @code abstractobjectcountmap that uses arrays to,0,0,Ownership
3399,ObjectCountHashMap.java,store key objects and count values.,1,0,Ownership
3400,ObjectCountHashMap.java,comparing to using a traditional @code hashmap,0,0,Ownership
3401,ObjectCountHashMap.java,"implementation which stores keys and count values as map entries, @code objectcounthashmap",1,0,Ownership
3402,ObjectCountHashMap.java,minimizes object allocation and reduces memory footprint.,0,0,Ownership
3403,ObjectCountHashMap.java,"p in the absence of element deletions, this will iterate over elements in insertion order.",1,0,Ownership
3410,PeekingIterator.java,an iterator that supports a one element lookahead while iterating.,0,0,Ownership
3411,PeekingIterator.java,p see the guava user guide article on a href,1,0,Ownership
3412,PeekingIterator.java,https github^com google guava wiki collectionhelpersexplained#peekingiterator @code,0,0,Ownership
3413,PeekingIterator.java,peekingiterator a .,1,0,Ownership
3422,Preconditions.java,static convenience methods that help a method or constructor check whether it was invoked,0,0,Ownership
3423,Preconditions.java,"correctly that is, whether its i preconditions i were met .",1,0,Ownership
3424,Preconditions.java,"p if the precondition is not met, the @code preconditions method throws an unchecked exception",0,0,Ownership
3425,Preconditions.java,"of a specified type, which helps the method in which the exception was thrown communicate that",1,0,Ownership
3426,Preconditions.java,its caller has made a mistake.,0,0,Ownership
3427,Preconditions.java,this allows constructs such as,1,0,Ownership
3428,Preconditions.java,pre @code,0,0,Ownership
3429,Preconditions.java,public static double sqrt double value,1,0,Ownership
3430,Preconditions.java,if value 0,0,0,Ownership
3431,Preconditions.java,throw new illegalargumentexception input is negative value,1,0,Ownership
3432,Preconditions.java,calculate square root,0,0,Ownership
3433,Preconditions.java,pre,1,0,Ownership
3434,Preconditions.java,p to be replaced with the more compact,0,0,Ownership
3435,Preconditions.java,pre @code,1,0,Ownership
3436,Preconditions.java,public static double sqrt double value,0,0,Ownership
3437,Preconditions.java,"checkargument value 0, input is negative %s , value",1,0,Ownership
3438,Preconditions.java,calculate square root,0,0,Ownership
3439,Preconditions.java,pre,1,0,Ownership
3440,Preconditions.java,"p so that a hypothetical bad caller of this method, such as",0,0,Ownership
3441,Preconditions.java,pre @code,1,0,Ownership
3442,Preconditions.java,void examplebadcaller,0,0,Ownership
3443,Preconditions.java,double d sqrt 10,1,0,Ownership
3444,Preconditions.java,pre,0,0,Ownership
3445,Preconditions.java,p would be flagged as having called @code sqrt with an illegal argument.,1,0,Ownership
3446,Preconditions.java,h3 performance h3,0,0,Ownership
3447,Preconditions.java,p avoid passing message arguments that are expensive to compute your code will always compute,1,0,Ownership
3448,Preconditions.java,"them, even though they usually won t be needed.",0,0,Ownership
3449,Preconditions.java,"if you have such arguments, use the conventional",1,0,Ownership
3450,Preconditions.java,if throw idiom instead.,0,0,Ownership
3451,Preconditions.java,"p depending on your message arguments, memory may be allocated for boxing and varargs array",1,0,Ownership
3452,Preconditions.java,creation.,0,0,Ownership
3453,Preconditions.java,"however, the methods of this class have a large number of overloads that prevent such",1,0,Ownership
3454,Preconditions.java,allocations in many common cases.,0,0,Ownership
3455,Preconditions.java,"p the message string is not formatted unless the exception will be thrown, so the cost of the",1,0,Ownership
3456,Preconditions.java,string formatting itself should not be a concern.,0,0,Ownership
3457,Preconditions.java,"p as with any performance concerns, you should consider profiling your code in a production",1,0,Ownership
3458,Preconditions.java,environment if possible before spending a lot of effort on tweaking a particular element.,0,0,Ownership
3459,Preconditions.java,h3 other types of preconditions h3,1,0,Ownership
3460,Preconditions.java,p not every type of precondition failure is supported by these methods.,0,0,Ownership
3461,Preconditions.java,continue to throw,1,0,Ownership
3462,Preconditions.java,standard jdk exceptions such as @link java^util.nosuchelementexception or @link,0,0,Ownership
3463,Preconditions.java,unsupportedoperationexception in the situations they are intended for.,1,0,Ownership
3464,Preconditions.java,h3 non preconditions h3,0,0,Ownership
3465,Preconditions.java,p it is of course possible to use the methods of this class to check for invalid conditions,1,0,Ownership
3466,Preconditions.java,which are i not the caller s fault i .,0,0,Ownership
3467,Preconditions.java,doing so is b not recommended b because it is,1,0,Ownership
3468,Preconditions.java,misleading to future readers of the code and of stack traces.,0,0,Ownership
3469,Preconditions.java,see a,1,0,Ownership
3470,Preconditions.java,href https github^com google guava wiki conditionalfailuresexplained conditional failures,0,0,Ownership
3471,Preconditions.java,explained a in the guava user guide for more advice.,1,0,Ownership
3472,Preconditions.java,"notably, @link verify offers assertions",0,0,Ownership
3473,Preconditions.java,similar to those in this class for non precondition checks.,1,0,Ownership
3474,Preconditions.java,h3 @code java^util.objects^requirenonnull h3,0,0,Ownership
3475,Preconditions.java,p projects which use @code com^google.common should generally avoid the use of @link,1,0,Ownership
3476,Preconditions.java,java^util.objects#requirenonnull object .,0,0,Ownership
3477,Preconditions.java,"instead, use whichever of @link",1,0,Ownership
3478,Preconditions.java,#checknotnull object or @link verify#verifynotnull object is appropriate to the situation.,0,0,Ownership
3479,Preconditions.java,the same goes for the message accepting overloads.,1,0,Ownership
3480,Preconditions.java,h3 only @code %s is supported h3,0,0,Ownership
3481,Preconditions.java,p @code preconditions uses @link strings#lenientformat to format error message template,1,0,Ownership
3482,Preconditions.java,strings.,0,0,Ownership
3483,Preconditions.java,"this only supports the @code %s specifier, not the full range of @link",1,0,Ownership
3484,Preconditions.java,java^util.formatter specifiers.,0,0,Ownership
3485,Preconditions.java,"however, note that if the number of arguments does not match the",1,0,Ownership
3486,Preconditions.java,"number of occurrences of @code %s in the format string, @code preconditions will still",0,0,Ownership
3487,Preconditions.java,"behave as expected, and will still include all argument values in the error message the message",1,0,Ownership
3488,Preconditions.java,will simply not be formatted exactly as intended.,0,0,Ownership
3489,Preconditions.java,h3 more information h3,1,0,Ownership
3490,Preconditions.java,p see the guava user guide on a,0,0,Ownership
3491,Preconditions.java,href https github^com google guava wiki preconditionsexplained using @code,1,0,Ownership
3492,Preconditions.java,preconditions a .,0,0,Ownership
3494,Preconditions.java,@since 20,1,0,Ownership
3580,RegularImmutableList_CustomFieldSerializer.java,this class implements the gwt serialization of @link regularimmutablelist .,0,0,Ownership
3585,ReserializingTestCollectionGenerator.java,reserializes the sets created by another test set generator.,1,0,Ownership
3590,Resources.java,provides utility methods for working with resources in the classpath.,0,0,Ownership
3594,Resources.java,p all method parameters must be non null unless documented otherwise.,1,0,Ownership
3598,Resources.java,@since 10,0,0,Ownership
3599,Resources.java,a byte source that reads from a url using @link url#openstream .,1,0,Ownership
3607,SmoothRateLimiter.java,"how is the ratelimiter designed, and why?",0,0,Ownership
3608,SmoothRateLimiter.java,"the primary feature of a ratelimiter is its stable rate , the maximum rate that is should",1,0,Ownership
3609,SmoothRateLimiter.java,allow at normal conditions.,0,0,Ownership
3610,SmoothRateLimiter.java,"this is enforced by throttling incoming requests as needed, ie",1,0,Ownership
3611,SmoothRateLimiter.java,"compute, for an incoming request, the appropriate throttle time, and make the calling thread",0,0,Ownership
3612,SmoothRateLimiter.java,wait as much.,1,0,Ownership
3613,SmoothRateLimiter.java,the simplest way to maintain a rate of qps is to keep the timestamp of the last granted,0,0,Ownership
3614,SmoothRateLimiter.java,"request, and ensure that 1 qps seconds have elapsed since then.",1,0,Ownership
3615,SmoothRateLimiter.java,"for example, for a rate of",0,0,Ownership
3616,SmoothRateLimiter.java,"qps 5 5 tokens per second , if we ensure that a request isn t granted earlier than 200ms after",1,0,Ownership
3617,SmoothRateLimiter.java,"the last one, then we achieve the intended rate.",0,0,Ownership
3618,SmoothRateLimiter.java,if a request comes and the last request was,1,0,Ownership
3619,SmoothRateLimiter.java,"granted only 100ms ago, then we wait for another 100ms.",0,0,Ownership
3620,SmoothRateLimiter.java,"at this rate, serving 15 fresh permits",1,0,Ownership
3621,SmoothRateLimiter.java,ie for an acquire 15 request naturally takes 3 seconds.,0,0,Ownership
3622,SmoothRateLimiter.java,it is important to realize that such a ratelimiter has a very superficial memory of the past,1,0,Ownership
3623,SmoothRateLimiter.java,it only remembers the last request.,0,0,Ownership
3624,SmoothRateLimiter.java,what if the ratelimiter was unused for a long period of,1,0,Ownership
3625,SmoothRateLimiter.java,"time, then a request arrived and was immediately granted?",0,0,Ownership
3626,SmoothRateLimiter.java,this ratelimiter would immediately,1,0,Ownership
3627,SmoothRateLimiter.java,forget about that past underutilization.,0,0,Ownership
3628,SmoothRateLimiter.java,this may result in either underutilization or,1,0,Ownership
3629,SmoothRateLimiter.java,"overflow, depending on the real world consequences of not using the expected rate.",0,0,Ownership
3630,SmoothRateLimiter.java,past underutilization could mean that excess resources are available.,1,0,Ownership
3631,SmoothRateLimiter.java,"then, the ratelimiter",0,0,Ownership
3632,SmoothRateLimiter.java,"should speed up for a while, to take advantage of these resources.",1,0,Ownership
3633,SmoothRateLimiter.java,this is important when the,0,0,Ownership
3634,SmoothRateLimiter.java,"rate is applied to networking limiting bandwidth , where past underutilization typically",1,0,Ownership
3635,SmoothRateLimiter.java,"translates to almost empty buffers , which can be filled immediately.",0,0,Ownership
3636,SmoothRateLimiter.java,"on the other hand, past underutilization could mean that the server responsible for handling",1,0,Ownership
3637,SmoothRateLimiter.java,"the request has become less ready for future requests , ie its caches become stale, and",0,0,Ownership
3638,SmoothRateLimiter.java,requests become more likely to trigger expensive operations a more extreme case of this,1,0,Ownership
3639,SmoothRateLimiter.java,"example is when a server has just booted, and it is mostly busy with getting itself up to",0,0,Ownership
3640,SmoothRateLimiter.java,speed .,1,0,Ownership
3641,SmoothRateLimiter.java,"to deal with such scenarios, we add an extra dimension, that of past underutilization ,",0,0,Ownership
3642,SmoothRateLimiter.java,modeled by storedpermits variable.,1,0,Ownership
3643,SmoothRateLimiter.java,"this variable is zero when there is no underutilization,",0,0,Ownership
3644,SmoothRateLimiter.java,"and it can grow up to maxstoredpermits, for sufficiently large underutilization.",1,0,Ownership
3645,SmoothRateLimiter.java,"so, the",0,0,Ownership
3646,SmoothRateLimiter.java,"requested permits, by an invocation acquire permits , are served from",1,0,Ownership
3647,SmoothRateLimiter.java,stored permits if available,0,0,Ownership
3648,SmoothRateLimiter.java,fresh permits for any remaining permits,1,0,Ownership
3649,SmoothRateLimiter.java,how this works is best explained with an example,0,0,Ownership
3650,SmoothRateLimiter.java,"for a ratelimiter that produces 1 token per second, every second that goes by with the",1,0,Ownership
3651,SmoothRateLimiter.java,"ratelimiter being unused, we increase storedpermits by 1.",0,0,Ownership
3652,SmoothRateLimiter.java,say we leave the ratelimiter unused,1,0,Ownership
3653,SmoothRateLimiter.java,"for 10 seconds ie, we expected a request at time x, but we are at time x 10 seconds before",0,0,Ownership
2630,AbstractCollectionTester.java,base class for collection testers.,0,0,Ownership
3654,SmoothRateLimiter.java,"a request actually arrives this is also related to the point made in the last paragraph , thus",0,0,Ownership
2631,AbstractCollectionTester.java,@param e the element type of the collection to be tested.,0,0,Ownership
3655,SmoothRateLimiter.java,storedpermits becomes 100 assuming maxstoredpermits 100 .,0,0,Ownership
3656,SmoothRateLimiter.java,"at that point, a request of",0,0,Ownership
3657,SmoothRateLimiter.java,acquire 3 arrives.,0,0,Ownership
3658,SmoothRateLimiter.java,"we serve this request out of storedpermits, and reduce that to 70 how",0,0,Ownership
3659,SmoothRateLimiter.java,this is translated to throttling time is discussed later .,0,0,Ownership
2636,AbstractListeningExecutorService.java,abstract @link listeningexecutorservice implementation that creates @link listenablefuture,0,0,Ownership
3660,SmoothRateLimiter.java,"immediately after, assume that an",0,0,Ownership
2637,AbstractListeningExecutorService.java,instances for each @link runnable and @link callable submitted to it.,0,0,Ownership
3661,SmoothRateLimiter.java,acquire 10 request arriving.,0,0,Ownership
2638,AbstractListeningExecutorService.java,these tasks are run,0,0,Ownership
3662,SmoothRateLimiter.java,"we serve the request partly from storedpermits, using all the",0,0,Ownership
2639,AbstractListeningExecutorService.java,with the abstract @link #execute execute runnable method.,0,0,Ownership
3663,SmoothRateLimiter.java,"remaining 70 permits, and the remaining 30, we serve them by fresh permits produced by the",0,0,Ownership
2640,AbstractListeningExecutorService.java,"p in addition to @link #execute , subclasses must implement all methods related to shutdown and",0,0,Ownership
3664,SmoothRateLimiter.java,rate limiter.,0,0,Ownership
2641,AbstractListeningExecutorService.java,termination.,0,0,Ownership
3665,SmoothRateLimiter.java,we already know how much time it takes to serve 3 fresh permits if the rate is,0,0,Ownership
3666,SmoothRateLimiter.java,"1 token per second , then this will take 3 seconds.",0,0,Ownership
2643,AbstractListeningExecutorService.java,@since 140,0,0,Ownership
3667,SmoothRateLimiter.java,but what does it mean to serve 7 stored,0,0,Ownership
3668,SmoothRateLimiter.java,permits?,0,0,Ownership
3669,SmoothRateLimiter.java,"as explained above, there is no unique answer.",0,0,Ownership
3670,SmoothRateLimiter.java,if we are primarily interested to deal,0,0,Ownership
3671,SmoothRateLimiter.java,"with underutilization, then we want stored permits to be given out faster than fresh ones,",0,0,Ownership
3672,SmoothRateLimiter.java,because underutilization free resources for the taking.,0,0,Ownership
3673,SmoothRateLimiter.java,if we are primarily interested to,0,0,Ownership
3674,SmoothRateLimiter.java,"deal with overflow, then stored permits could be given out slower than fresh ones.",0,0,Ownership
3675,SmoothRateLimiter.java,"thus, we",0,0,Ownership
2652,AbstractLoadingCache.java,this class provides a skeletal implementation of the @code cache interface to minimize the,0,0,Ownership
3676,SmoothRateLimiter.java,require a different in each case function that translates storedpermits to throttling time.,0,0,Ownership
2653,AbstractLoadingCache.java,effort required to implement this interface.,0,0,Ownership
3677,SmoothRateLimiter.java,"this role is played by storedpermitstowaittime double storedpermits, double permitstotake .",0,0,Ownership
2654,AbstractLoadingCache.java,"p to implement a cache, the programmer needs only to extend this class and provide an",0,0,Ownership
3678,SmoothRateLimiter.java,the,0,0,Ownership
3679,SmoothRateLimiter.java,underlying model is a continuous function mapping storedpermits from 00 to maxstoredpermits,0,0,Ownership
2656,AbstractLoadingCache.java,@link,0,0,Ownership
3681,SmoothRateLimiter.java,storedpermits,0,0,Ownership
3682,SmoothRateLimiter.java,essentially measure unused time we spend unused time buying storing permits.,0,0,Ownership
3683,SmoothRateLimiter.java,rate is,0,0,Ownership
3684,SmoothRateLimiter.java,"permits time , thus 1 rate time permits .",0,0,Ownership
3685,SmoothRateLimiter.java,"thus, 1 rate time permits times",0,0,Ownership
2662,AbstractLoadingCache.java,all other methods throw,0,0,Ownership
3688,SmoothRateLimiter.java,of requested permits.,0,0,Ownership
2665,AbstractLoadingCache.java,@since 110,0,0,Ownership
3697,SmoothRateLimiter.java,this guarantees that we handle,0,0,Ownership
3701,SmoothRateLimiter.java,integrals .,0,0,Ownership
3704,SmoothRateLimiter.java,cost as fresh ones 1 qps is the cost for each .,0,0,Ownership
2681,AbstractMultimap.java,"a skeleton @code multimap implementation, not necessarily in terms of a @code map .",0,0,Ownership
2685,AbstractMultimapTester.java,superclass for all @code multimap testers.,0,0,Ownership
3709,SmoothRateLimiter.java,underutilization.,0,0,Ownership
2689,AbstractSortedKeySortedSetMultimap.java,basic implementation of a @link sortedsetmultimap with a sorted key set.,0,0,Ownership
3713,SmoothRateLimiter.java,"last, but not least consider a ratelimiter with rate of 1 permit per second, currently",0,0,Ownership
2690,AbstractSortedKeySortedSetMultimap.java,p this superclass allows @code treemultimap to override methods to return navigable set and,0,0,Ownership
3714,SmoothRateLimiter.java,"completely unused, and an expensive acquire 100 request comes.",0,0,Ownership
2691,AbstractSortedKeySortedSetMultimap.java,"map types in non gwt only, while gwt code will inherit the sortedmap sortedset overrides.",0,0,Ownership
3715,SmoothRateLimiter.java,it would be nonsensical to just,0,0,Ownership
3717,SmoothRateLimiter.java,why wait without doing anything?,0,0,Ownership
3718,SmoothRateLimiter.java,a much,0,0,Ownership
3720,SmoothRateLimiter.java,"instead , and postpone subsequent requests as needed.",0,0,Ownership
2697,ArbitraryInstances.java,"supplies an arbitrary default instance for a wide range of types, often useful in testing",0,0,Ownership
2698,ArbitraryInstances.java,utilities.,0,0,Ownership
3722,SmoothRateLimiter.java,"task immediately, and postpone by 100 seconds future requests, thus we allow for work to get",0,0,Ownership
2699,ArbitraryInstances.java,"p covers arrays, enums and common types defined in @code java^lang , @code java^lang.reflect ,",0,0,Ownership
2700,ArbitraryInstances.java,"@code java^io , @code java^nio , @code java^math , @code java^util , @code",0,0,Ownership
3724,SmoothRateLimiter.java,this has important consequences it means that the ratelimiter doesn t remember the time of the,0,0,Ownership
2701,ArbitraryInstances.java,"java^util.concurrent , @code java^util.regex , @code com^google.common^base , @code",0,0,Ownership
3725,SmoothRateLimiter.java,"last request, but it remembers the expected time of the next request.",0,0,Ownership
2702,ArbitraryInstances.java,com^google.common^collect and @code com^google.common^primitives .,0,0,Ownership
3726,SmoothRateLimiter.java,this also enables,0,0,Ownership
2703,ArbitraryInstances.java,"in addition, if the type",0,0,Ownership
3727,SmoothRateLimiter.java,us to tell immediately see tryacquire timeout whether a particular timeout is enough to get,0,0,Ownership
2704,ArbitraryInstances.java,"exposes at least one public static final constant of the same type, one of the constants will be",0,0,Ownership
3728,SmoothRateLimiter.java,"us to the point of the next scheduling time, since we always maintain that.",0,0,Ownership
2705,ArbitraryInstances.java,used or if the class exposes a public parameter less constructor then it will be new d and,0,0,Ownership
3729,SmoothRateLimiter.java,and what we mean by,0,0,Ownership
2706,ArbitraryInstances.java,returned.,0,0,Ownership
3730,SmoothRateLimiter.java,an unused ratelimiter is also defined by that notion when we observe that the,0,0,Ownership
2707,ArbitraryInstances.java,p all default instances returned by @link #get are generics safe.,0,0,Ownership
3731,SmoothRateLimiter.java,"expected arrival time of the next request is actually in the past, then the difference now",0,0,Ownership
2708,ArbitraryInstances.java,clients won t get type,0,0,Ownership
3732,SmoothRateLimiter.java,"past is the amount of time that the ratelimiter was formally unused, and it is that amount of",0,0,Ownership
2709,ArbitraryInstances.java,"errors for using @code get comparator^class as a @code comparator foo , for example.",0,0,Ownership
3733,SmoothRateLimiter.java,time which we translate to storedpermits.,0,0,Ownership
2710,ArbitraryInstances.java,immutable empty instances are returned for collection types @code for string @code 0 for,0,0,Ownership
3734,SmoothRateLimiter.java,we increase storedpermits with the amount of permits,0,0,Ownership
2711,ArbitraryInstances.java,number types reasonable default instance for other stateless types.,0,0,Ownership
3735,SmoothRateLimiter.java,that would have been produced in that idle time .,0,0,Ownership
2712,ArbitraryInstances.java,"for mutable types, a fresh",0,0,Ownership
3736,SmoothRateLimiter.java,"so, if rate 1 permit per second, and",0,0,Ownership
2713,ArbitraryInstances.java,instance is created each time @code get is called.,0,0,Ownership
3737,SmoothRateLimiter.java,"arrivals come exactly one second after the previous, then storedpermits is never increased",0,0,Ownership
3738,SmoothRateLimiter.java,we would only increase it for arrivals later than the expected one second.,0,0,Ownership
3739,SmoothRateLimiter.java,the time when the next request no matter its size will be granted.,0,0,Ownership
2716,ArbitraryInstances.java,@since 120,0,0,Ownership
3740,SmoothRateLimiter.java,"after granting a request,",0,0,Ownership
3741,SmoothRateLimiter.java,this is pushed further in the future.,0,0,Ownership
3742,SmoothRateLimiter.java,large requests push this further than small requests.,0,0,Ownership
3743,SmoothRateLimiter.java,this implements the following function where coldinterval coldfactor stableinterval.,0,0,Ownership
3744,SmoothRateLimiter.java,pre,0,0,Ownership
3745,SmoothRateLimiter.java,^ throttling,0,0,Ownership
3746,SmoothRateLimiter.java,cold,0,0,Ownership
3747,SmoothRateLimiter.java,interval .,0,0,Ownership
3748,SmoothRateLimiter.java,warmup period is the area of the trapezoid between,0,0,Ownership
3749,SmoothRateLimiter.java,thresholdpermits and maxpermits,0,0,Ownership
3750,SmoothRateLimiter.java,stable warm .,0,0,Ownership
3751,SmoothRateLimiter.java,interval .,0,0,Ownership
3752,SmoothRateLimiter.java,up .,0,0,Ownership
3753,SmoothRateLimiter.java,period.,0,0,Ownership
3754,SmoothRateLimiter.java,0 storedpermits,0,0,Ownership
3755,SmoothRateLimiter.java,0 thresholdpermits maxpermits,0,0,Ownership
3756,SmoothRateLimiter.java,pre,0,0,Ownership
3757,SmoothRateLimiter.java,"before going into the details of this particular function, let s keep in mind the basics",0,0,Ownership
3758,SmoothRateLimiter.java,ol,0,0,Ownership
3759,SmoothRateLimiter.java,li the state of the ratelimiter storedpermits is a vertical line in this figure.,0,0,Ownership
3760,SmoothRateLimiter.java,"li when the ratelimiter is not used, this goes right up to maxpermits",0,0,Ownership
3761,SmoothRateLimiter.java,"li when the ratelimiter is used, this goes left down to zero , since if we have",0,0,Ownership
3762,SmoothRateLimiter.java,"storedpermits, we serve from those first",0,0,Ownership
3763,SmoothRateLimiter.java,"li when unused , we go right at a constant rate!",0,0,Ownership
3764,SmoothRateLimiter.java,the rate at which we move to the right is,0,0,Ownership
3766,SmoothRateLimiter.java,this ensures that the time it takes to go from 0 to,0,0,Ownership
3768,SmoothRateLimiter.java,"li when used , the time it takes, as explained in the introductory class note, is equal to",0,0,Ownership
3769,SmoothRateLimiter.java,"the integral of our function, between x permits and x k permits, assuming we want to",0,0,Ownership
2746,ArrayListMultimapGwtSerializationDependencies.java,a dummy superclass to support gwt serialization of the element types of an @link,0,0,Ownership
3770,SmoothRateLimiter.java,spend k saved permits.,0,0,Ownership
2747,ArrayListMultimapGwtSerializationDependencies.java,arraylistmultimap .,0,0,Ownership
3771,SmoothRateLimiter.java,ol,0,0,Ownership
2748,ArrayListMultimapGwtSerializationDependencies.java,the gwt supersource for this class contains a field for each type.,0,0,Ownership
3772,SmoothRateLimiter.java,"p in summary, the time it takes to move to the left spend k permits , is equal to the area of",0,0,Ownership
2749,ArrayListMultimapGwtSerializationDependencies.java,"p for details about this hack, see @link gwtserializationdependencies , which takes the same",0,0,Ownership
3773,SmoothRateLimiter.java,the function of width k.,0,0,Ownership
2750,ArrayListMultimapGwtSerializationDependencies.java,approach but with a subclass rather than a superclass.,0,0,Ownership
3774,SmoothRateLimiter.java,"p assuming we have saturated demand, the time to go from maxpermits to thresholdpermits is",0,0,Ownership
3775,SmoothRateLimiter.java,equal to warmupperiod.,0,0,Ownership
3776,SmoothRateLimiter.java,and the time to go from thresholdpermits to 0 is warmupperiod 2.,0,0,Ownership
3777,SmoothRateLimiter.java,the,0,0,Ownership
3778,SmoothRateLimiter.java,reason that this is warmupperiod 2 is to maintain the behavior of the original implementation,0,0,Ownership
3779,SmoothRateLimiter.java,where coldfactor was hard coded as 3.,0,0,Ownership
3780,SmoothRateLimiter.java,p it remains to calculate thresholdspermits and maxpermits.,0,0,Ownership
2757,AtomicDoubleArrayTest.java,source,0,0,Ownership
2758,AtomicDoubleArrayTest.java,http gee^cs.oswego^edu cgi bin viewcvs^cgi jsr166 src test tck jsr166e atomicdoublearraytest^java?revision 113,0,0,Ownership
3782,SmoothRateLimiter.java,li the time to go from thresholdpermits to 0 is equal to the integral of the function,0,0,Ownership
2759,AtomicDoubleArrayTest.java,modified to adapt to guava coding conventions,0,0,Ownership
3783,SmoothRateLimiter.java,between 0 and thresholdpermits.,0,0,Ownership
2760,AtomicDoubleArrayTest.java,unit test for @link atomicdoublearray .,0,0,Ownership
3784,SmoothRateLimiter.java,this is thresholdpermits stableintervals.,0,0,Ownership
3787,SmoothRateLimiter.java,therefore,0,0,Ownership
2765,BaseEncodingBenchmark.java,benchmark for @code baseencoding performance.,0,0,Ownership
3789,SmoothRateLimiter.java,thresholdpermits 05 warmupperiod stableinterval,0,0,Ownership
2767,BloomFilter.java,a bloom filter for instances of @code t .,0,0,Ownership
3791,SmoothRateLimiter.java,li the time to go from maxpermits to thresholdpermits is equal to the integral of the,0,0,Ownership
2768,BloomFilter.java,a bloom filter offers an approximate containment test,0,0,Ownership
3792,SmoothRateLimiter.java,function between thresholdpermits and maxpermits.,0,0,Ownership
2769,BloomFilter.java,"with one sided error if it claims that an element is contained in it, this might be in error,",0,0,Ownership
3793,SmoothRateLimiter.java,this is the area of the pictured,0,0,Ownership
2770,BloomFilter.java,"but if it claims that an element is i not i contained in it, then this is definitely true.",0,0,Ownership
3794,SmoothRateLimiter.java,"trapezoid, and it is equal to 05 stableinterval coldinterval maxpermits",0,0,Ownership
2771,BloomFilter.java,"p if you are unfamiliar with bloom filters, this nice a",0,0,Ownership
3795,SmoothRateLimiter.java,thresholdpermits .,0,0,Ownership
2772,BloomFilter.java,href http llimllib^github.com bloomfilter tutorial tutorial a may help you understand how,0,0,Ownership
2773,BloomFilter.java,they work.,0,0,Ownership
2774,BloomFilter.java,p the false positive probability @code fpp of a bloom filter is defined as the probability,0,0,Ownership
3798,SmoothRateLimiter.java,maxpermits thresholdpermits 2 warmupperiod stableinterval coldinterval,0,0,Ownership
2775,BloomFilter.java,that @linkplain #mightcontain object will erroneously return @code true for an object that,0,0,Ownership
2776,BloomFilter.java,has not actually been put in the @code bloomfilter .,0,0,Ownership
2777,BloomFilter.java,p bloom filters are serializable.,0,0,Ownership
3801,SmoothRateLimiter.java,"how is the ratelimiter designed, and why?",0,0,Ownership
2778,BloomFilter.java,they also support a more compact serial representation via the,0,0,Ownership
3802,SmoothRateLimiter.java,"the primary feature of a ratelimiter is its stable rate , the maximum rate that is should",0,0,Ownership
2779,BloomFilter.java,@link #writeto and @link #readfrom methods.,0,0,Ownership
3803,SmoothRateLimiter.java,allow at normal conditions.,0,0,Ownership
2780,BloomFilter.java,both serialized forms will continue to be,0,0,Ownership
3804,SmoothRateLimiter.java,"this is enforced by throttling incoming requests as needed, ie",0,0,Ownership
2781,BloomFilter.java,supported by future versions of this library.,0,0,Ownership
3805,SmoothRateLimiter.java,"compute, for an incoming request, the appropriate throttle time, and make the calling thread",0,0,Ownership
2782,BloomFilter.java,"however, serial forms generated by newer versions",0,0,Ownership
3806,SmoothRateLimiter.java,wait as much.,0,0,Ownership
2783,BloomFilter.java,"of the code may not be readable by older versions of the code eg, a serialized bloom filter",0,0,Ownership
3807,SmoothRateLimiter.java,the simplest way to maintain a rate of qps is to keep the timestamp of the last granted,0,0,Ownership
2784,BloomFilter.java,generated today may i not i be readable by a binary that was compiled 6 months ago .,0,0,Ownership
3808,SmoothRateLimiter.java,"request, and ensure that 1 qps seconds have elapsed since then.",0,0,Ownership
2785,BloomFilter.java,"p as of guava 230, this class is thread safe and lock free.",0,0,Ownership
3809,SmoothRateLimiter.java,"for example, for a rate of",0,0,Ownership
2786,BloomFilter.java,it internally uses atomics and,0,0,Ownership
3810,SmoothRateLimiter.java,"qps 5 5 tokens per second , if we ensure that a request isn t granted earlier than 200ms after",0,0,Ownership
2787,BloomFilter.java,compare and swap to ensure correctness when multiple threads are used to access it.,0,0,Ownership
3811,SmoothRateLimiter.java,"the last one, then we achieve the intended rate.",0,0,Ownership
2788,BloomFilter.java,@param t the type of instances that the @code bloomfilter accepts,0,0,Ownership
3812,SmoothRateLimiter.java,if a request comes and the last request was,0,0,Ownership
3813,SmoothRateLimiter.java,"granted only 100ms ago, then we wait for another 100ms.",0,0,Ownership
3814,SmoothRateLimiter.java,"at this rate, serving 15 fresh permits",0,0,Ownership
2791,BloomFilter.java,@since 110 thread safe since 230,0,0,Ownership
3815,SmoothRateLimiter.java,ie for an acquire 15 request naturally takes 3 seconds.,0,0,Ownership
2792,BloomFilter.java,"cheat sheet m total bits n expected insertions b m n, bits per insertion p expected false positive probability 1 optimal k b ln2 2 p 1 e ^ kn m ^k 3 for optimal k p 2 ^ k 06185^b 4 for optimal k m nlnp ln2 ^ 2",0,0,Ownership
3816,SmoothRateLimiter.java,it is important to realize that such a ratelimiter has a very superficial memory of the past,0,0,Ownership
2793,BloomFilter.java,"a strategy to translate t instances, to @code numhashfunctions bit indexes.",0,0,Ownership
3817,SmoothRateLimiter.java,it only remembers the last request.,0,0,Ownership
2794,BloomFilter.java,p implementations should be collections of pure functions ie stateless .,0,0,Ownership
3818,SmoothRateLimiter.java,what if the ratelimiter was unused for a long period of,0,0,Ownership
3819,SmoothRateLimiter.java,"time, then a request arrived and was immediately granted?",0,0,Ownership
3820,SmoothRateLimiter.java,this ratelimiter would immediately,0,0,Ownership
3821,SmoothRateLimiter.java,forget about that past underutilization.,0,0,Ownership
3822,SmoothRateLimiter.java,this may result in either underutilization or,0,0,Ownership
3823,SmoothRateLimiter.java,"overflow, depending on the real world consequences of not using the expected rate.",0,0,Ownership
3824,SmoothRateLimiter.java,past underutilization could mean that excess resources are available.,0,0,Ownership
3825,SmoothRateLimiter.java,"then, the ratelimiter",0,0,Ownership
3826,SmoothRateLimiter.java,"should speed up for a while, to take advantage of these resources.",0,0,Ownership
3827,SmoothRateLimiter.java,this is important when the,0,0,Ownership
3828,SmoothRateLimiter.java,"rate is applied to networking limiting bandwidth , where past underutilization typically",0,0,Ownership
3829,SmoothRateLimiter.java,"translates to almost empty buffers , which can be filled immediately.",0,0,Ownership
3830,SmoothRateLimiter.java,"on the other hand, past underutilization could mean that the server responsible for handling",0,0,Ownership
3831,SmoothRateLimiter.java,"the request has become less ready for future requests , ie its caches become stale, and",0,0,Ownership
3832,SmoothRateLimiter.java,requests become more likely to trigger expensive operations a more extreme case of this,0,0,Ownership
3833,SmoothRateLimiter.java,"example is when a server has just booted, and it is mostly busy with getting itself up to",0,0,Ownership
3834,SmoothRateLimiter.java,speed .,0,0,Ownership
3835,SmoothRateLimiter.java,"to deal with such scenarios, we add an extra dimension, that of past underutilization ,",0,0,Ownership
3836,SmoothRateLimiter.java,modeled by storedpermits variable.,0,0,Ownership
3837,SmoothRateLimiter.java,"this variable is zero when there is no underutilization,",0,0,Ownership
3838,SmoothRateLimiter.java,"and it can grow up to maxstoredpermits, for sufficiently large underutilization.",0,0,Ownership
3839,SmoothRateLimiter.java,"so, the",0,0,Ownership
3840,SmoothRateLimiter.java,"requested permits, by an invocation acquire permits , are served from",0,0,Ownership
3841,SmoothRateLimiter.java,stored permits if available,0,0,Ownership
3842,SmoothRateLimiter.java,fresh permits for any remaining permits,0,0,Ownership
3843,SmoothRateLimiter.java,how this works is best explained with an example,0,0,Ownership
3844,SmoothRateLimiter.java,"for a ratelimiter that produces 1 token per second, every second that goes by with the",0,0,Ownership
3845,SmoothRateLimiter.java,"ratelimiter being unused, we increase storedpermits by 1.",0,0,Ownership
3846,SmoothRateLimiter.java,say we leave the ratelimiter unused,0,0,Ownership
3847,SmoothRateLimiter.java,"for 10 seconds ie, we expected a request at time x, but we are at time x 10 seconds before",0,0,Ownership
3848,SmoothRateLimiter.java,"a request actually arrives this is also related to the point made in the last paragraph , thus",0,0,Ownership
3849,SmoothRateLimiter.java,storedpermits becomes 100 assuming maxstoredpermits 100 .,0,0,Ownership
3850,SmoothRateLimiter.java,"at that point, a request of",0,0,Ownership
3851,SmoothRateLimiter.java,acquire 3 arrives.,0,0,Ownership
3852,SmoothRateLimiter.java,"we serve this request out of storedpermits, and reduce that to 70 how",0,0,Ownership
3853,SmoothRateLimiter.java,this is translated to throttling time is discussed later .,0,0,Ownership
3854,SmoothRateLimiter.java,"immediately after, assume that an",0,0,Ownership
3855,SmoothRateLimiter.java,acquire 10 request arriving.,0,0,Ownership
2832,CacheBuilder.java,a builder of @link loadingcache and @link cache instances having any combination of the,0,0,Ownership
3856,SmoothRateLimiter.java,"we serve the request partly from storedpermits, using all the",0,0,Ownership
2833,CacheBuilder.java,following features,0,0,Ownership
3857,SmoothRateLimiter.java,"remaining 70 permits, and the remaining 30, we serve them by fresh permits produced by the",0,0,Ownership
2834,CacheBuilder.java,ul,0,0,Ownership
3858,SmoothRateLimiter.java,rate limiter.,0,0,Ownership
2835,CacheBuilder.java,li automatic loading of entries into the cache,0,0,Ownership
3859,SmoothRateLimiter.java,we already know how much time it takes to serve 3 fresh permits if the rate is,0,0,Ownership
2836,CacheBuilder.java,li least recently used eviction when a maximum size is exceeded,0,0,Ownership
3860,SmoothRateLimiter.java,"1 token per second , then this will take 3 seconds.",0,0,Ownership
2837,CacheBuilder.java,"li time based expiration of entries, measured since last access or last write",0,0,Ownership
3861,SmoothRateLimiter.java,but what does it mean to serve 7 stored,0,0,Ownership
2838,CacheBuilder.java,li keys automatically wrapped in @linkplain weakreference weak references,0,0,Ownership
3862,SmoothRateLimiter.java,permits?,0,0,Ownership
2839,CacheBuilder.java,li values automatically wrapped in @linkplain weakreference weak or @linkplain,0,0,Ownership
3863,SmoothRateLimiter.java,"as explained above, there is no unique answer.",0,0,Ownership
2840,CacheBuilder.java,softreference soft references,0,0,Ownership
3864,SmoothRateLimiter.java,if we are primarily interested to deal,0,0,Ownership
2841,CacheBuilder.java,li notification of evicted or otherwise removed entries,0,0,Ownership
3865,SmoothRateLimiter.java,"with underutilization, then we want stored permits to be given out faster than fresh ones,",0,0,Ownership
3866,SmoothRateLimiter.java,because underutilization free resources for the taking.,0,0,Ownership
2843,CacheBuilder.java,ul,0,0,Ownership
3867,SmoothRateLimiter.java,if we are primarily interested to,0,0,Ownership
2844,CacheBuilder.java,p these features are all optional caches can be created using all or none of them.,0,0,Ownership
3868,SmoothRateLimiter.java,"deal with overflow, then stored permits could be given out slower than fresh ones.",0,0,Ownership
2845,CacheBuilder.java,by default,0,0,Ownership
3869,SmoothRateLimiter.java,"thus, we",0,0,Ownership
2846,CacheBuilder.java,cache instances created by @code cachebuilder will not perform any type of eviction.,0,0,Ownership
3870,SmoothRateLimiter.java,require a different in each case function that translates storedpermits to throttling time.,0,0,Ownership
2847,CacheBuilder.java,p usage example,0,0,Ownership
3871,SmoothRateLimiter.java,"this role is played by storedpermitstowaittime double storedpermits, double permitstotake .",0,0,Ownership
2848,CacheBuilder.java,pre @code,0,0,Ownership
3872,SmoothRateLimiter.java,the,0,0,Ownership
2849,CacheBuilder.java,"loadingcache key, graph graphs cachebuilder^newbuilder",0,0,Ownership
3873,SmoothRateLimiter.java,underlying model is a continuous function mapping storedpermits from 00 to maxstoredpermits,0,0,Ownership
2850,CacheBuilder.java,maximumsize 10000,0,0,Ownership
2851,CacheBuilder.java,expireafterwrite duration^ofminutes 10,0,0,Ownership
3875,SmoothRateLimiter.java,storedpermits,0,0,Ownership
2852,CacheBuilder.java,removallistener my listener,0,0,Ownership
3876,SmoothRateLimiter.java,essentially measure unused time we spend unused time buying storing permits.,0,0,Ownership
2853,CacheBuilder.java,build,0,0,Ownership
3877,SmoothRateLimiter.java,rate is,0,0,Ownership
2854,CacheBuilder.java,"new cacheloader key, graph",0,0,Ownership
3878,SmoothRateLimiter.java,"permits time , thus 1 rate time permits .",0,0,Ownership
2855,CacheBuilder.java,public graph load key key throws anyexception,0,0,Ownership
3879,SmoothRateLimiter.java,"thus, 1 rate time permits times",0,0,Ownership
2856,CacheBuilder.java,return createexpensivegraph key,0,0,Ownership
2857,CacheBuilder.java,pre,0,0,Ownership
2858,CacheBuilder.java,"p or equivalently,",0,0,Ownership
3882,SmoothRateLimiter.java,of requested permits.,0,0,Ownership
2859,CacheBuilder.java,pre @code,0,0,Ownership
2860,CacheBuilder.java,in real life this would come from a command line flag or config file,0,0,Ownership
2863,CacheBuilder.java,removallistener my listener,0,0,Ownership
2864,CacheBuilder.java,build,0,0,Ownership
2865,CacheBuilder.java,"new cacheloader key, graph",0,0,Ownership
2866,CacheBuilder.java,public graph load key key throws anyexception,0,0,Ownership
2867,CacheBuilder.java,return createexpensivegraph key,0,0,Ownership
3891,SmoothRateLimiter.java,this guarantees that we handle,0,0,Ownership
2868,CacheBuilder.java,pre,0,0,Ownership
2869,CacheBuilder.java,p the returned cache is implemented as a hash table with similar performance characteristics to,0,0,Ownership
2870,CacheBuilder.java,@link concurrenthashmap .,0,0,Ownership
2871,CacheBuilder.java,it implements all optional operations of the @link loadingcache and,0,0,Ownership
3895,SmoothRateLimiter.java,integrals .,0,0,Ownership
2872,CacheBuilder.java,@link cache interfaces.,0,0,Ownership
2873,CacheBuilder.java,the @code asmap view and its collection views have i weakly,0,0,Ownership
2874,CacheBuilder.java,consistent iterators i .,0,0,Ownership
3898,SmoothRateLimiter.java,cost as fresh ones 1 qps is the cost for each .,0,0,Ownership
2875,CacheBuilder.java,"this means that they are safe for concurrent use, but if other threads",0,0,Ownership
2876,CacheBuilder.java,"modify the cache after the iterator is created, it is undefined which of these changes, if any,",0,0,Ownership
2877,CacheBuilder.java,are reflected in that iterator.,0,0,Ownership
2878,CacheBuilder.java,these iterators never throw @link,0,0,Ownership
2879,CacheBuilder.java,concurrentmodificationexception .,0,0,Ownership
3903,SmoothRateLimiter.java,underutilization.,0,0,Ownership
2880,CacheBuilder.java,"p b note b by default, the returned cache uses equality comparisons the @link",0,0,Ownership
2881,CacheBuilder.java,object#equals equals method to determine equality for keys or values.,0,0,Ownership
2882,CacheBuilder.java,"however, if @link",0,0,Ownership
2883,CacheBuilder.java,"#weakkeys was specified, the cache uses identity @code comparisons instead for keys.",0,0,Ownership
3907,SmoothRateLimiter.java,"last, but not least consider a ratelimiter with rate of 1 permit per second, currently",0,0,Ownership
2884,CacheBuilder.java,"likewise, if @link #weakvalues or @link #softvalues was specified, the cache uses identity",0,0,Ownership
3908,SmoothRateLimiter.java,"completely unused, and an expensive acquire 100 request comes.",0,0,Ownership
2885,CacheBuilder.java,comparisons for values.,0,0,Ownership
3909,SmoothRateLimiter.java,it would be nonsensical to just,0,0,Ownership
2886,CacheBuilder.java,p entries are automatically evicted from the cache when any of @linkplain #maximumsize long,0,0,Ownership
2887,CacheBuilder.java,"maximumsize , @linkplain #maximumweight long maximumweight , @linkplain #expireafterwrite",0,0,Ownership
3911,SmoothRateLimiter.java,why wait without doing anything?,0,0,Ownership
2888,CacheBuilder.java,"expireafterwrite , @linkplain #expireafteraccess expireafteraccess , @linkplain #weakkeys",0,0,Ownership
3912,SmoothRateLimiter.java,a much,0,0,Ownership
2889,CacheBuilder.java,"weakkeys , @linkplain #weakvalues weakvalues , or @linkplain #softvalues softvalues are",0,0,Ownership
2890,CacheBuilder.java,requested.,0,0,Ownership
3914,SmoothRateLimiter.java,"instead , and postpone subsequent requests as needed.",0,0,Ownership
2891,CacheBuilder.java,p if @linkplain #maximumsize long maximumsize or @linkplain #maximumweight long,0,0,Ownership
2892,CacheBuilder.java,maximumweight is requested entries may be evicted on each cache modification.,0,0,Ownership
3916,SmoothRateLimiter.java,"task immediately, and postpone by 100 seconds future requests, thus we allow for work to get",0,0,Ownership
2893,CacheBuilder.java,p if @linkplain #expireafterwrite expireafterwrite or @linkplain #expireafteraccess,0,0,Ownership
2894,CacheBuilder.java,"expireafteraccess is requested entries may be evicted on each cache modification, on occasional",0,0,Ownership
3918,SmoothRateLimiter.java,this has important consequences it means that the ratelimiter doesn t remember the time of the,0,0,Ownership
2895,CacheBuilder.java,"cache accesses, or on calls to @link cache#cleanup .",0,0,Ownership
3919,SmoothRateLimiter.java,"last request, but it remembers the expected time of the next request.",0,0,Ownership
2896,CacheBuilder.java,expired entries may be counted by @link,0,0,Ownership
3920,SmoothRateLimiter.java,this also enables,0,0,Ownership
2897,CacheBuilder.java,"cache#size , but will never be visible to read or write operations.",0,0,Ownership
3921,SmoothRateLimiter.java,us to tell immediately see tryacquire timeout whether a particular timeout is enough to get,0,0,Ownership
2898,CacheBuilder.java,"p if @linkplain #weakkeys weakkeys , @linkplain #weakvalues weakvalues , or @linkplain",0,0,Ownership
3922,SmoothRateLimiter.java,"us to the point of the next scheduling time, since we always maintain that.",0,0,Ownership
3923,SmoothRateLimiter.java,and what we mean by,0,0,Ownership
2900,CacheBuilder.java,be reclaimed by the garbage collector.,0,0,Ownership
3924,SmoothRateLimiter.java,an unused ratelimiter is also defined by that notion when we observe that the,0,0,Ownership
2901,CacheBuilder.java,entries with reclaimed keys or values may be removed from,0,0,Ownership
3925,SmoothRateLimiter.java,"expected arrival time of the next request is actually in the past, then the difference now",0,0,Ownership
2902,CacheBuilder.java,"the cache on each cache modification, on occasional cache accesses, or on calls to @link",0,0,Ownership
3926,SmoothRateLimiter.java,"past is the amount of time that the ratelimiter was formally unused, and it is that amount of",0,0,Ownership
2903,CacheBuilder.java,"cache#cleanup such entries may be counted in @link cache#size , but will never be visible to",0,0,Ownership
3927,SmoothRateLimiter.java,time which we translate to storedpermits.,0,0,Ownership
2904,CacheBuilder.java,read or write operations.,0,0,Ownership
3928,SmoothRateLimiter.java,we increase storedpermits with the amount of permits,0,0,Ownership
2905,CacheBuilder.java,p certain cache configurations will result in the accrual of periodic maintenance tasks which,0,0,Ownership
3929,SmoothRateLimiter.java,that would have been produced in that idle time .,0,0,Ownership
2906,CacheBuilder.java,"will be performed during write operations, or during occasional read operations in the absence of",0,0,Ownership
3930,SmoothRateLimiter.java,"so, if rate 1 permit per second, and",0,0,Ownership
2907,CacheBuilder.java,writes.,0,0,Ownership
3931,SmoothRateLimiter.java,"arrivals come exactly one second after the previous, then storedpermits is never increased",0,0,Ownership
2908,CacheBuilder.java,"the @link cache#cleanup method of the returned cache will also perform maintenance, but",0,0,Ownership
3932,SmoothRateLimiter.java,we would only increase it for arrivals later than the expected one second.,0,0,Ownership
2909,CacheBuilder.java,calling it should not be necessary with a high throughput cache.,0,0,Ownership
3933,SmoothRateLimiter.java,the time when the next request no matter its size will be granted.,0,0,Ownership
2910,CacheBuilder.java,only caches built with,0,0,Ownership
3934,SmoothRateLimiter.java,"after granting a request,",0,0,Ownership
2911,CacheBuilder.java,"@linkplain #removallistener removallistener , @linkplain #expireafterwrite expireafterwrite ,",0,0,Ownership
3935,SmoothRateLimiter.java,this is pushed further in the future.,0,0,Ownership
2912,CacheBuilder.java,"@linkplain #expireafteraccess expireafteraccess , @linkplain #weakkeys weakkeys , @linkplain",0,0,Ownership
3936,SmoothRateLimiter.java,large requests push this further than small requests.,0,0,Ownership
2913,CacheBuilder.java,"#weakvalues weakvalues , or @linkplain #softvalues softvalues perform periodic maintenance.",0,0,Ownership
3937,SmoothRateLimiter.java,"this implements a bursty ratelimiter, where storedpermits are translated to zero throttling.",0,0,Ownership
3938,SmoothRateLimiter.java,the maximum number of permits that can be saved when the ratelimiter is unused is defined in,0,0,Ownership
2915,CacheBuilder.java,retain all the configuration properties of the original cache.,0,0,Ownership
3939,SmoothRateLimiter.java,"terms of time, in this sense if a ratelimiter is 2qps, and this time is specified as 10",0,0,Ownership
2916,CacheBuilder.java,note that the serialized form does,0,0,Ownership
3940,SmoothRateLimiter.java,"seconds, we can save up to 2 10 20 permits.",0,0,Ownership
2917,CacheBuilder.java,"i not i include cache contents, but only configuration.",0,0,Ownership
2918,CacheBuilder.java,p see the guava user guide article on a,0,0,Ownership
2919,CacheBuilder.java,href https github^com google guava wiki cachesexplained caching a for a higher level,0,0,Ownership
2920,CacheBuilder.java,explanation.,0,0,Ownership
2922,CacheBuilder.java,this is,0,0,Ownership
2923,CacheBuilder.java,normally @code object unless it is constrained by using a method like @code,0,0,Ownership
2924,CacheBuilder.java,#removallistener,0,0,Ownership
2926,CacheBuilder.java,this is,0,0,Ownership
2927,CacheBuilder.java,normally @code object unless it is constrained by using a method like @code,0,0,Ownership
2928,CacheBuilder.java,#removallistener,0,0,Ownership
2931,CacheBuilder.java,@since 100,0,0,Ownership
3040,CacheLoaderTest.java,unit tests for @link cacheloader .,0,0,Ownership
3046,ClassToInstanceMap.java,"a map, each entry of which maps a java a href http tinyurl^com 2cmwkz raw type a to an",0,0,Ownership
3047,ClassToInstanceMap.java,instance of that type.,0,0,Ownership
3048,ClassToInstanceMap.java,"in addition to implementing @code map , the additional type safe",0,0,Ownership
3049,ClassToInstanceMap.java,operations @link #putinstance and @link #getinstance are available.,0,0,Ownership
3050,ClassToInstanceMap.java,"p like any other @code map class, object , this map may contain entries for primitive types,",0,0,Ownership
3051,ClassToInstanceMap.java,and a primitive type and its corresponding wrapper type may map to different values.,0,0,Ownership
3052,ClassToInstanceMap.java,p see the guava user guide article on a href,0,0,Ownership
3053,ClassToInstanceMap.java,https github^com google guava wiki newcollectiontypesexplained#classtoinstancemap @code,0,0,Ownership
3054,ClassToInstanceMap.java,classtoinstancemap a .,0,0,Ownership
3055,ClassToInstanceMap.java,"p to map a generic type to an instance of that type, use @link",0,0,Ownership
3056,ClassToInstanceMap.java,com^google.common^reflect.typetoinstancemap instead.,0,0,Ownership
3057,ClassToInstanceMap.java,@param b the common supertype that all entries must share often this is simply @link object,0,0,Ownership
3059,ClassToInstanceMap.java,@since 20,0,0,Ownership
4151,AbstractModule.java,a support class for @link module s which reduces repetition and results in a more readable,0,0,Ownership
4152,AbstractModule.java,configuration.,1,0,Ownership
4153,AbstractModule.java,"simply extend this class, implement @link #configure , and call the inherited",0,0,Ownership
4154,AbstractModule.java,methods which mirror those found in @link binder .,1,0,Ownership
4155,AbstractModule.java,for example,0,0,Ownership
4156,AbstractModule.java,pre,1,0,Ownership
4157,AbstractModule.java,public class mymodule extends abstractmodule,0,0,Ownership
4158,AbstractModule.java,protected void configure,1,0,Ownership
4159,AbstractModule.java,bind service^class ^to serviceimpl^class ^in singleton^class,0,0,Ownership
4160,AbstractModule.java,bind creditcardpaymentservice^class,1,0,Ownership
4161,AbstractModule.java,bind paymentservice^class ^to creditcardpaymentservice^class,0,0,Ownership
4162,AbstractModule.java,bindconstant ^annotatedwith names^named port ^to 8080,1,0,Ownership
4163,AbstractModule.java,pre,0,0,Ownership
4179,Binder.java,collects configuration information primarily i bindings i which will be used to create an,1,0,Ownership
4180,Binder.java,@link injector .,0,0,Ownership
4181,Binder.java,guice provides this object to your application s @link module implementors so,1,0,Ownership
4182,Binder.java,they may each contribute their own bindings and other registrations.,0,0,Ownership
4183,Binder.java,h3 the guice binding edsl h3,1,0,Ownership
4184,Binder.java,"guice uses an i embedded domain specific language i , or edsl, to help you create bindings",0,0,Ownership
4185,Binder.java,simply and readably.,1,0,Ownership
4188,Binder.java,javadocs b .,0,0,Ownership
4189,Binder.java,"instead, you should consult the series of examples below.",1,0,Ownership
4190,Binder.java,"to save space, these",0,0,Ownership
4191,Binder.java,"examples omit the opening @code binder , just as you will if your module extends @link",1,0,Ownership
4192,Binder.java,abstractmodule .,0,0,Ownership
4193,Binder.java,pre,1,0,Ownership
4196,Binder.java,does not change guice s default behavior.,0,0,Ownership
4198,Binder.java,@link module class to serve as an explicit i manifest i for the services it provides.,1,0,Ownership
4199,Binder.java,"also,",0,0,Ownership
4201,Binder.java,given explicitly.,1,0,Ownership
4202,Binder.java,pre,0,0,Ownership
4204,Binder.java,specifies that a request for a @code service instance with no binding annotations should be,1,0,Ownership
4205,Binder.java,treated as if it were a request for a @code serviceimpl instance.,0,0,Ownership
4206,Binder.java,this i overrides i the,1,0,Ownership
4207,Binder.java,function of any @link implementedby @implementedby or @link providedby @providedby,0,0,Ownership
4208,Binder.java,"annotations found on @code service , since guice will have already moved on to @code",1,0,Ownership
4209,Binder.java,serviceimpl before it reaches the point when it starts looking for these annotations.,0,0,Ownership
4210,Binder.java,pre,1,0,Ownership
4212,Binder.java,"in this example, @code serviceprovider must extend or implement @code provider service .",0,0,Ownership
4213,Binder.java,this,1,0,Ownership
4214,Binder.java,binding specifies that guice should resolve an unannotated injection request for @code service,0,0,Ownership
4215,Binder.java,"by first resolving an instance of @code serviceprovider in the regular way, then calling @link",1,0,Ownership
4216,Binder.java,provider#get get on the resulting provider instance to obtain the @code service instance.,0,0,Ownership
4217,Binder.java,"p the @link provider you use here does not have to be a factory that is, a provider which",1,0,Ownership
4473,DefaultMethodInterceptionTest.java,tests for interception of default methods.,0,0,Ownership
4218,Binder.java,always i creates i each instance it provides.,1,0,Ownership
4475,DefaultMethodInterceptionTest.java,interface with a default method annotated to be intercepted.,0,0,Ownership
4220,Binder.java,follow.,1,0,Ownership
4476,DefaultMethodInterceptionTest.java,foo implementation that does not override the default method.,0,0,Ownership
4221,Binder.java,you can then use guice s concept of @link scope scopes to guide when creation should,1,0,Ownership
4477,DefaultMethodInterceptionTest.java,a base class defining a method with the same signature as foo s default method.,0,0,Ownership
4222,Binder.java,happen letting guice work for you .,1,0,Ownership
4478,DefaultMethodInterceptionTest.java,foo implementation that should use superclass method rather than default method.,0,0,Ownership
4223,Binder.java,pre,1,0,Ownership
4226,Binder.java,@code @red .,0,0,Ownership
4227,Binder.java,if your module also includes bindings for particular i values i of the,1,0,Ownership
4229,Binder.java,of @code @red that have no exact match in the bindings.,0,0,Ownership
4230,Binder.java,pre,1,0,Ownership
4231,Binder.java,bind serviceimpl^class ^in singleton^class,0,0,Ownership
4487,Element.java,an internal binding annotation applied to each element in a multibinding.,0,0,Ownership
4232,Binder.java,"or, alternatively",0,0,Ownership
4488,Element.java,all elements are,0,0,Ownership
4489,Element.java,assigned a globally unique id to allow different modules to contribute multibindings,0,0,Ownership
4234,Binder.java,either of these statements places the @code serviceimpl class into singleton scope.,0,0,Ownership
4490,Element.java,independently.,0,0,Ownership
4235,Binder.java,guice will,0,0,Ownership
4236,Binder.java,create only one instance of @code serviceimpl and will reuse it for all injection requests of,0,0,Ownership
4238,Binder.java,note that it is still possible to bind another instance of @code serviceimpl if the,0,0,Ownership
4240,Binder.java,guice is not overly,0,0,Ownership
4242,Binder.java,with i enabling i your application to share only one instance if that s all you tell guice you,0,0,Ownership
4243,Binder.java,need.,0,0,Ownership
4245,Binder.java,an annotation on the @code serviceimpl class.,0,0,Ownership
4246,Binder.java,"p besides @link singleton @link scopes#singleton , there are servlet specific scopes",0,0,Ownership
4502,ManagedFilterPipeline.java,"central routing dispatch class handles lifecycle of managed filters, and delegates to the servlet",0,0,Ownership
4247,Binder.java,"available in @code com^google.inject^servlet.servletscopes , and your modules can contribute",0,0,Ownership
4503,ManagedFilterPipeline.java,pipeline.,0,0,Ownership
4248,Binder.java,their own custom scopes for use here as well.,0,0,Ownership
4249,Binder.java,pre,0,0,Ownership
4250,Binder.java,bind new typeliteral&lt paymentservice&lt creditcard,0,0,Ownership
4508,PrivateElementProcessor,handles @code binder^newprivatebinder elements.,0,0,Ownership
4253,Binder.java,it tells guice how to,0,0,Ownership
4254,Binder.java,honor an injection request for an element of type @code paymentservice creditcard .,0,0,Ownership
4255,Binder.java,the class,0,0,Ownership
4256,Binder.java,@code creditcardpaymentservice must implement the @code paymentservice creditcard interface.,0,0,Ownership
4257,Binder.java,"guice cannot currently bind or inject a generic type, such as @code set e all type parameters",0,0,Ownership
4258,Binder.java,must be fully specified.,0,0,Ownership
4514,SpiUtils.java,utilities for testing the multibinder & mapbinder extension spi.,0,0,Ownership
4259,Binder.java,pre,0,0,Ownership
4260,Binder.java,bind service^class ^toinstance new serviceimpl,0,0,Ownership
4261,Binder.java,"or, alternatively",0,0,Ownership
4518,SpiUtils.java,the kind of binding.,0,0,Ownership
4519,SpiUtils.java,the result of the binding.,0,0,Ownership
4265,Binder.java,@code service injection requests.,0,0,Ownership
4266,Binder.java,"when the @link injector is created, it will automatically",0,0,Ownership
4268,Binder.java,serviceimpl is simply ignored.,0,0,Ownership
4270,Binder.java,that you can t control.,0,0,Ownership
4271,Binder.java,pre,0,0,Ownership
4273,Binder.java,sets up a constant binding.,0,0,Ownership
4274,Binder.java,constant injections must always be annotated.,0,0,Ownership
4275,Binder.java,when a constant,0,0,Ownership
4276,Binder.java,"binding s value is a string, it is eligible for conversion to all primitive types, to @link",0,0,Ownership
4277,Binder.java,"enum#valueof class, string all enums , and to @link class#forname class literals .",0,0,Ownership
4278,Binder.java,conversions,0,0,Ownership
4279,Binder.java,"for other types can be configured using @link #converttotypes matcher, typeconverter",0,0,Ownership
4280,Binder.java,converttotypes .,0,0,Ownership
4281,Binder.java,pre,0,0,Ownership
4282,Binder.java,@literal @ color red color red a member variable field,0,0,Ownership
4283,Binder.java,red mymodule^class.getdeclaredfield red ^getannotation color^class,0,0,Ownership
4285,Binder.java,if your binding annotation has parameters you can apply different bindings to different specific,0,0,Ownership
4286,Binder.java,values of your annotation.,0,0,Ownership
4287,Binder.java,getting your hands on the right instance of the annotation is a bit of,0,0,Ownership
4288,Binder.java,"a pain one approach, shown above, is to apply a prototype annotation to a field in your module",0,0,Ownership
4290,Binder.java,pre,0,0,Ownership
4291,Binder.java,bind service^class,0,0,Ownership
4292,Binder.java,annotatedwith names^named blue,0,0,Ownership
4294,Binder.java,"differentiating by names is a common enough use case that we provided a standard annotation,",0,0,Ownership
4295,Binder.java,@link com^google.inject^name.named @named .,0,0,Ownership
4296,Binder.java,"because of guice s library support, binding by name",0,0,Ownership
4297,Binder.java,is quite easier than in the arbitrary binding annotation case we just saw.,0,0,Ownership
4298,Binder.java,"however, remember that",0,0,Ownership
4299,Binder.java,these names will live in a single flat namespace with all the other names used in your,0,0,Ownership
4300,Binder.java,application.,0,0,Ownership
4301,Binder.java,pre,0,0,Ownership
4302,Binder.java,constructor t lonector getlonectorfromserviceimplviareflection,0,0,Ownership
4303,Binder.java,bind serviceimpl^class,0,0,Ownership
4306,Binder.java,implementation.,0,0,Ownership
4307,Binder.java,it means that we do not need to place @literal @ inject on any of the,0,0,Ownership
4308,Binder.java,constructors and that guice treats the provided constructor as though it were annotated so.,0,0,Ownership
4309,Binder.java,it is,0,0,Ownership
4310,Binder.java,useful for cases where you cannot modify existing classes and is a bit simpler than using a,0,0,Ownership
4311,Binder.java,@link provider .,0,0,Ownership
4312,Binder.java,p the above list of examples is far from exhaustive.,0,0,Ownership
4313,Binder.java,if you can think of how the concepts of one,0,0,Ownership
4314,Binder.java,"example might coexist with the concepts from another, you can most likely weave the two together.",0,0,Ownership
4315,Binder.java,"if the two concepts make no sense with each other, you most likely won t be able to do it.",0,0,Ownership
4316,Binder.java,in a,0,0,Ownership
4318,Binder.java,"runtime, as soon as you try to create your injector.",0,0,Ownership
4319,Binder.java,"p the other methods of binder such as @link #bindscope , @link #bindinterceptor , @link",0,0,Ownership
4320,Binder.java,"#install , @link #requeststaticinjection , @link #adderror and @link #currentstage are not",0,0,Ownership
4321,Binder.java,"part of the binding edsl you can learn how to use these in the usual way, from the method",0,0,Ownership
4322,Binder.java,documentation.,0,0,Ownership
5120,VScrollTable.java,dom^client.blurevent,0,0,Ownership
5121,VScrollTable.java,non javadoc,1,0,Ownership
5124,VScrollTable.java,to detect if the first visible,0,0,Ownership
5125,VScrollTable.java,these are used when jumping between pages when pressing home and end,1,0,Ownership
5126,VScrollTable.java,changes to manage mousedown and mouseup,0,0,Ownership
5127,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,1,0,Ownership
5128,VScrollTable.java,lost .,0,0,Ownership
5129,VScrollTable.java,example itabpanel just set contained components invisible and back,1,0,Ownership
5130,VScrollTable.java,when changing tabs.,0,0,Ownership
5131,VScrollTable.java,updates first visible row for the case we cannot wait,1,0,Ownership
5132,VScrollTable.java,this method has logic which rows needs to be requested from server when,0,0,Ownership
5133,VScrollTable.java,user scrolls.,1,0,Ownership
5134,VScrollTable.java,non javadoc,0,0,Ownership
5135,VScrollTable.java,@see,1,0,Ownership
5136,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,0,0,Ownership
5137,VScrollTable.java,dom^client.focusevent,1,0,Ownership
5138,VScrollTable.java,non javadoc,0,0,Ownership
5139,VScrollTable.java,@see,1,0,Ownership
5140,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,0,0,Ownership
5141,VScrollTable.java,dom^client.blurevent,1,0,Ownership
5142,VScrollTable.java,non javadoc,0,0,Ownership
5144,VScrollTable.java,for internal use only.,1,0,Ownership
5146,VScrollTable.java,overwrites onbrowserevent function on focusablescrollpanel to give event,0,0,Ownership
5147,VScrollTable.java,access to touchcontextprovider.,1,0,Ownership
5148,VScrollTable.java,has to be public to give tableconnector,0,0,Ownership
5150,VScrollTable.java,@since 72,1,0,Ownership
5152,VScrollTable.java,to detect if the first visible,0,0,Ownership
5153,VScrollTable.java,these are used when jumping between pages when pressing home and end,1,0,Ownership
5154,VScrollTable.java,changes to manage mousedown and mouseup,0,0,Ownership
5155,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,1,0,Ownership
5156,VScrollTable.java,lost .,0,0,Ownership
5157,VScrollTable.java,example itabpanel just set contained components invisible and back,1,0,Ownership
5158,VScrollTable.java,when changing tabs.,0,0,Ownership
5159,VScrollTable.java,updates first visible row for the case we cannot wait,1,0,Ownership
5160,VScrollTable.java,this method has logic which rows needs to be requested from server when,0,0,Ownership
5161,VScrollTable.java,user scrolls.,1,0,Ownership
5162,VScrollTable.java,non javadoc,0,0,Ownership
5163,VScrollTable.java,@see,1,0,Ownership
5164,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,0,0,Ownership
5165,VScrollTable.java,dom^client.focusevent,1,0,Ownership
5166,VScrollTable.java,non javadoc,0,0,Ownership
5167,VScrollTable.java,@see,1,0,Ownership
5168,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,0,0,Ownership
5169,VScrollTable.java,dom^client.blurevent,1,0,Ownership
5170,VScrollTable.java,non javadoc,0,0,Ownership
5172,VScrollTable.java,used to recall the position of an open context menu if we need to close,1,0,Ownership
5175,VScrollTable.java,for internal use only.,0,0,Ownership
5177,VScrollTable.java,to detect if the first visible,1,0,Ownership
5178,VScrollTable.java,these are used when jumping between pages when pressing home and end,0,0,Ownership
5179,VScrollTable.java,changes to manage mousedown and mouseup,1,0,Ownership
5180,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,0,0,Ownership
5181,VScrollTable.java,lost .,1,0,Ownership
5182,VScrollTable.java,example itabpanel just set contained components invisible and back,0,0,Ownership
5183,VScrollTable.java,when changing tabs.,1,0,Ownership
5184,VScrollTable.java,updates first visible row for the case we cannot wait,0,0,Ownership
5185,VScrollTable.java,this method has logic which rows needs to be requested from server when,1,0,Ownership
5186,VScrollTable.java,user scrolls.,0,0,Ownership
5187,VScrollTable.java,non javadoc,1,0,Ownership
5188,VScrollTable.java,@see,0,0,Ownership
5189,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,1,0,Ownership
5190,VScrollTable.java,dom^client.focusevent,0,0,Ownership
5191,VScrollTable.java,non javadoc,1,0,Ownership
5192,VScrollTable.java,@see,0,0,Ownership
5193,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,1,0,Ownership
5194,VScrollTable.java,dom^client.blurevent,0,0,Ownership
5195,VScrollTable.java,non javadoc,1,0,Ownership
5197,VScrollTable.java,for internal use only.,0,0,Ownership
5199,VScrollTable.java,to detect if the first visible,1,0,Ownership
5200,VScrollTable.java,these are used when jumping between pages when pressing home and end,0,0,Ownership
5201,VScrollTable.java,changes to manage mousedown and mouseup,1,0,Ownership
5202,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,0,0,Ownership
5203,VScrollTable.java,lost .,1,0,Ownership
5204,VScrollTable.java,example itabpanel just set contained components invisible and back,0,0,Ownership
5205,VScrollTable.java,when changing tabs.,1,0,Ownership
5206,VScrollTable.java,updates first visible row for the case we cannot wait,0,0,Ownership
5207,VScrollTable.java,this method has logic which rows needs to be requested from server when,1,0,Ownership
5208,VScrollTable.java,user scrolls.,0,0,Ownership
5209,VScrollTable.java,non javadoc,1,0,Ownership
5210,VScrollTable.java,@see,0,0,Ownership
5211,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,1,0,Ownership
5212,VScrollTable.java,dom^client.focusevent,0,0,Ownership
5213,VScrollTable.java,non javadoc,1,0,Ownership
5214,VScrollTable.java,@see,0,0,Ownership
5215,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,1,0,Ownership
5216,VScrollTable.java,dom^client.blurevent,0,0,Ownership
5217,VScrollTable.java,non javadoc,1,0,Ownership
5220,VScrollTable.java,reordering disabled and clicking on it resets sorting.,0,0,Ownership
5221,VScrollTable.java,to detect if the first visible,1,0,Ownership
5222,VScrollTable.java,these are used when jumping between pages when pressing home and end,0,0,Ownership
5223,VScrollTable.java,changes to manage mousedown and mouseup,1,0,Ownership
5224,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,0,0,Ownership
5225,VScrollTable.java,lost .,1,0,Ownership
5226,VScrollTable.java,example itabpanel just set contained components invisible and back,0,0,Ownership
5227,VScrollTable.java,when changing tabs.,1,0,Ownership
5228,VScrollTable.java,updates first visible row for the case we cannot wait,0,0,Ownership
5229,VScrollTable.java,this method has logic which rows needs to be requested from server when,1,0,Ownership
5230,VScrollTable.java,user scrolls.,0,0,Ownership
5231,VScrollTable.java,non javadoc,1,0,Ownership
5232,VScrollTable.java,@see,0,0,Ownership
5233,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,1,0,Ownership
5234,VScrollTable.java,dom^client.focusevent,0,0,Ownership
5235,VScrollTable.java,non javadoc,1,0,Ownership
5236,VScrollTable.java,@see,0,0,Ownership
5237,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,1,0,Ownership
5238,VScrollTable.java,dom^client.blurevent,0,0,Ownership
5239,VScrollTable.java,non javadoc,1,0,Ownership
5242,VScrollTable.java,to detect if the first visible,0,0,Ownership
5243,VScrollTable.java,these are used when jumping between pages when pressing home and end,1,0,Ownership
5244,VScrollTable.java,changes to manage mousedown and mouseup,0,0,Ownership
5245,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,1,0,Ownership
5246,VScrollTable.java,lost .,0,0,Ownership
5247,VScrollTable.java,example itabpanel just set contained components invisible and back,1,0,Ownership
5248,VScrollTable.java,when changing tabs.,0,0,Ownership
5249,VScrollTable.java,updates first visible row for the case we cannot wait,1,0,Ownership
5250,VScrollTable.java,this method has logic which rows needs to be requested from server when,0,0,Ownership
5251,VScrollTable.java,user scrolls.,1,0,Ownership
5252,VScrollTable.java,non javadoc,0,0,Ownership
5253,VScrollTable.java,@see,1,0,Ownership
5254,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,0,0,Ownership
5255,VScrollTable.java,dom^client.focusevent,1,0,Ownership
5256,VScrollTable.java,non javadoc,0,0,Ownership
5257,VScrollTable.java,@see,1,0,Ownership
5258,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,0,0,Ownership
5259,VScrollTable.java,dom^client.blurevent,1,0,Ownership
5260,VScrollTable.java,non javadoc,0,0,Ownership
5263,VScrollTable.java,reordering disabled and clicking on it resets sorting.,1,0,Ownership
5264,VScrollTable.java,to detect if the first visible,0,0,Ownership
5265,VScrollTable.java,these are used when jumping between pages when pressing home and end,1,0,Ownership
5266,VScrollTable.java,changes to manage mousedown and mouseup,0,0,Ownership
5267,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,1,0,Ownership
5268,VScrollTable.java,lost .,0,0,Ownership
5269,VScrollTable.java,example itabpanel just set contained components invisible and back,1,0,Ownership
5270,VScrollTable.java,when changing tabs.,0,0,Ownership
5271,VScrollTable.java,updates first visible row for the case we cannot wait,1,0,Ownership
5272,VScrollTable.java,this method has logic which rows needs to be requested from server when,0,0,Ownership
5273,VScrollTable.java,user scrolls.,1,0,Ownership
5274,VScrollTable.java,non javadoc,0,0,Ownership
5275,VScrollTable.java,@see,1,0,Ownership
5276,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,0,0,Ownership
5277,VScrollTable.java,dom^client.focusevent,1,0,Ownership
5278,VScrollTable.java,non javadoc,0,0,Ownership
5279,VScrollTable.java,@see,1,0,Ownership
5280,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,0,0,Ownership
5281,VScrollTable.java,dom^client.blurevent,1,0,Ownership
5282,VScrollTable.java,non javadoc,0,0,Ownership
5285,VScrollTable.java,to detect if the first visible,1,0,Ownership
5286,VScrollTable.java,these are used when jumping between pages when pressing home and end,0,0,Ownership
5287,VScrollTable.java,changes to manage mousedown and mouseup,1,0,Ownership
5288,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,0,0,Ownership
5289,VScrollTable.java,lost .,1,0,Ownership
5290,VScrollTable.java,example itabpanel just set contained components invisible and back,0,0,Ownership
5291,VScrollTable.java,when changing tabs.,1,0,Ownership
5292,VScrollTable.java,updates first visible row for the case we cannot wait,0,0,Ownership
5293,VScrollTable.java,this method has logic which rows needs to be requested from server when,1,0,Ownership
5294,VScrollTable.java,user scrolls.,0,0,Ownership
5295,VScrollTable.java,non javadoc,1,0,Ownership
5296,VScrollTable.java,@see,0,0,Ownership
5297,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,1,0,Ownership
5298,VScrollTable.java,dom^client.focusevent,0,0,Ownership
5299,VScrollTable.java,non javadoc,1,0,Ownership
5300,VScrollTable.java,@see,0,0,Ownership
5301,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,1,0,Ownership
5302,VScrollTable.java,dom^client.blurevent,0,0,Ownership
5303,VScrollTable.java,non javadoc,1,0,Ownership
5305,VScrollTable.java,this panel can only contain vscrolltablerow type of widgets.,0,0,Ownership
5306,VScrollTable.java,this,1,0,Ownership
5307,VScrollTable.java,"simulates very large table, keeping spacers which take room of",0,0,Ownership
5308,VScrollTable.java,unrendered rows.,1,0,Ownership
5362,VTextArea.java,this class represents a multiline textfield textarea .,0,0,Ownership
5373,Window.java,a component that represents a floating popup window that can be added to a,1,0,Ownership
5374,Window.java,@link ui .,0,0,Ownership
5375,Window.java,a window is added to a @code ui using,1,0,Ownership
5376,Window.java,@link ui#addwindow window .,0,0,Ownership
5377,Window.java,p,1,0,Ownership
5378,Window.java,the contents of a window is set using @link #setcontent component or by,0,0,Ownership
5379,Window.java,"using the @link #window string, component constructor.",1,0,Ownership
5380,Window.java,p,0,0,Ownership
5381,Window.java,p,1,0,Ownership
5382,Window.java,a window can be positioned on the screen using absolute coordinates pixels,0,0,Ownership
5383,Window.java,or set to be centered using @link #center,1,0,Ownership
5384,Window.java,p,0,0,Ownership
5385,Window.java,p,1,0,Ownership
5386,Window.java,the caption is displayed in the window header.,0,0,Ownership
5387,Window.java,p,1,0,Ownership
5388,Window.java,p,0,0,Ownership
5389,Window.java,"in vaadin versions prior to 70.0, window was also used as application level",1,0,Ownership
5390,Window.java,windows.,0,0,Ownership
5391,Window.java,this function is now covered by the @link ui class.,1,0,Ownership
5392,Window.java,p,0,0,Ownership
5394,Window.java,@since 30,1,0,Ownership
5395,Window.java,non javadoc,0,0,Ownership
5396,Window.java,@see com^vaadin.ui^panel#paintcontent com^vaadin.server^painttarget,1,0,Ownership
5397,Window.java,non javadoc,0,0,Ownership
5398,Window.java,"@see com^vaadin.ui^panel#changevariables java^lang.object, java^util.map",1,0,Ownership
5399,Window.java,event which is fired when the window order position is changed.,0,0,Ownership
5400,Window.java,@see ui^windoworderupdateevent,1,0,Ownership
5402,Window.java,non javadoc,0,0,Ownership
5403,Window.java,@see com^vaadin.ui^panel#paintcontent com^vaadin.server^painttarget,1,0,Ownership
5404,Window.java,non javadoc,0,0,Ownership
5405,Window.java,"@see com^vaadin.ui^panel#changevariables java^lang.object, java^util.map",1,0,Ownership
5406,Window.java,an interface used for listening to window order change events.,0,0,Ownership
5408,Window.java,non javadoc,1,0,Ownership
5409,Window.java,@see com^vaadin.ui^panel#paintcontent com^vaadin.server^painttarget,0,0,Ownership
5410,Window.java,non javadoc,1,0,Ownership
5411,Window.java,"@see com^vaadin.ui^panel#changevariables java^lang.object, java^util.map",0,0,Ownership
5412,Window.java,an interface used for listening to window close events.,1,0,Ownership
5413,Window.java,add the,0,0,Ownership
5414,Window.java,closelistener to a window and,1,0,Ownership
5415,Window.java,@link closelistener#windowclose closeevent will be called whenever the,0,0,Ownership
5416,Window.java,user closes the window.,1,0,Ownership
5417,Window.java,p,0,0,Ownership
5420,Window.java,p,1,0,Ownership
5421,Window.java,non javadoc,0,0,Ownership
5422,Window.java,@see com^vaadin.ui^panel#paintcontent com^vaadin.server^painttarget,0,0,Ownership
5423,Window.java,non javadoc,0,0,Ownership
5424,Window.java,"@see com^vaadin.ui^panel#changevariables java^lang.object, java^util.map",0,0,Ownership
5428,Window.java,non javadoc,0,0,Ownership
5429,Window.java,@see com^vaadin.ui^panel#paintcontent com^vaadin.server^painttarget,0,0,Ownership
5430,Window.java,non javadoc,0,0,Ownership
5431,Window.java,"@see com^vaadin.ui^panel#changevariables java^lang.object, java^util.map",0,0,Ownership
5432,Window.java,an interface used for listening to window maximize restore events.,0,0,Ownership
5433,Window.java,add,0,0,Ownership
5434,Window.java,the windowmodechangelistener to a window and,0,0,Ownership
5435,Window.java,@link windowmodechangelistener#windowmodechanged windowmodechangeevent,0,0,Ownership
5436,Window.java,will be called whenever the window is maximized,0,0,Ownership
5437,Window.java,@link windowmode#maximized or restored @link windowmode#normal .,0,0,Ownership
5438,Window.java,non javadoc,0,0,Ownership
5439,Window.java,@see com^vaadin.ui^panel#paintcontent com^vaadin.server^painttarget,0,0,Ownership
5440,Window.java,non javadoc,0,0,Ownership
5441,Window.java,"@see com^vaadin.ui^panel#changevariables java^lang.object, java^util.map",0,0,Ownership
5442,Window.java,resize events are fired whenever the client side fires a resize event,0,0,Ownership
5443,Window.java,eg the browser window is resized .,0,0,Ownership
5444,Window.java,the frequency may vary across,0,0,Ownership
5445,Window.java,browsers.,0,0,Ownership
5446,Window.java,non javadoc,0,0,Ownership
5447,Window.java,@see com^vaadin.ui^panel#paintcontent com^vaadin.server^painttarget,0,0,Ownership
5448,Window.java,non javadoc,0,0,Ownership
5449,Window.java,"@see com^vaadin.ui^panel#changevariables java^lang.object, java^util.map",0,0,Ownership
5452,Window.java,non javadoc,0,0,Ownership
5453,Window.java,@see com^vaadin.ui^panel#paintcontent com^vaadin.server^painttarget,0,0,Ownership
5454,Window.java,non javadoc,0,0,Ownership
5455,Window.java,"@see com^vaadin.ui^panel#changevariables java^lang.object, java^util.map",0,0,Ownership
5456,Window.java,a @link shortcutlistener specifically made to define a keyboard,0,0,Ownership
5457,Window.java,shortcut that closes the window.,0,0,Ownership
5458,Window.java,pre,0,0,Ownership
5459,Window.java,code,0,0,Ownership
5460,Window.java,within the window using helper,0,0,Ownership
5462,Window.java,or globally,0,0,Ownership
5463,Window.java,"getui ^addaction new window^closeshortcut window, keycode^escape",0,0,Ownership
5464,Window.java,code,0,0,Ownership
5465,Window.java,pre,0,0,Ownership
5518,XhrConnectionError.java,xhrconnectionerror provides detail about an error which occurred during an,0,0,Ownership
5519,XhrConnectionError.java,xhr request to the server.,0,0,Ownership
5520,XhrConnectionError.java,@since 76,0,0,Ownership
4524,AbstractFocusable.java,an abstract base class for focusable components.,0,0,Ownership
4527,AbstractFocusable.java,@since 76,0,0,Ownership
4533,AbstractMultiSelectState.java,shared state for @code abstractmultiselect .,0,0,Ownership
4535,AbstractMultiSelectState.java,@since 80,0,0,Ownership
4540,AbstractProperty.java,abstract base class for @link property implementations.,0,0,Ownership
4541,AbstractProperty.java,handles listener management for @link valuechangelistener s and,0,0,Ownership
4542,AbstractProperty.java,@link readonlystatuschangelistener s.,0,0,Ownership
4543,AbstractProperty.java,@since 66,0,0,Ownership
4544,AbstractProperty.java,"@deprecated as of 80, replaced by @link valueprovider , @link setter , see",0,0,Ownership
4545,AbstractProperty.java,@link binder,0,0,Ownership
4546,AbstractProperty.java,legacypropertyhelper has been removed in vaadin 8 events,0,0,Ownership
4547,AbstractProperty.java,an code event code object specifying the property whose read only,0,0,Ownership
4548,AbstractProperty.java,status has been changed.,0,0,Ownership
4549,AbstractProperty.java,legacypropertyhelper has been removed in vaadin 8 events,0,0,Ownership
4566,AbstractSingleComponentContainerState.java,default shared state implementation for abstractsinglecomponentcontainer.,0,0,Ownership
4567,AbstractSingleComponentContainerState.java,@since 80,0,0,Ownership
4575,ApplicationConfiguration.java,helper class for reading configuration options from the bootstap,0,0,Ownership
4577,ApplicationConfiguration.java,@since 70,0,0,Ownership
4578,ApplicationConfiguration.java,wraps a native javascript object containing fields for an error message.,0,0,Ownership
4579,ApplicationConfiguration.java,@since 70,0,0,Ownership
4584,BootstrapPageResponse.java,a representation of a bootstrap page being generated.,0,0,Ownership
4585,BootstrapPageResponse.java,the bootstrap page,0,0,Ownership
4586,BootstrapPageResponse.java,contains of the full dom of the html document as well as the http headers,0,0,Ownership
4587,BootstrapPageResponse.java,that will be included in the corresponding http response.,0,0,Ownership
4589,BootstrapPageResponse.java,@since 70.0,0,0,Ownership
4596,ButtonRenderer.java,a renderer that displays a button with a textual caption.,0,0,Ownership
4597,ButtonRenderer.java,the value of the,0,0,Ownership
4598,ButtonRenderer.java,corresponding property is used as the caption.,0,0,Ownership
4599,ButtonRenderer.java,click listeners can be added,0,0,Ownership
4600,ButtonRenderer.java,"to the renderer, invoked when any of the rendered buttons is clicked.",0,0,Ownership
4601,ButtonRenderer.java,@since 74,0,0,Ownership
4610,ClientRpcWriter.java,serializes @link clientrpc client rpc invocations to json.,0,0,Ownership
4612,ClientRpcWriter.java,@since 71,0,0,Ownership
4616,ColorPickerServerRpc.java,rpc interface for abstractcolorpicker.,0,0,Ownership
4617,ColorPickerServerRpc.java,@since 70.0,0,0,Ownership
4620,ComboBoxState.java,shared state for the combobox component.,0,0,Ownership
4621,ComboBoxState.java,@since 70,0,0,Ownership
4624,DeclarativeValueProvider.java,value provider class for declarative support.,0,0,Ownership
4626,DeclarativeValueProvider.java,provides a straightforward mapping between an item and its value.,0,0,Ownership
4627,DeclarativeValueProvider.java,@param t,0,0,Ownership
4628,DeclarativeValueProvider.java,item type,0,0,Ownership
4633,DoubleRangeValidator.java,validator for validating that a @link double is inside a given range.,0,0,Ownership
4635,DoubleRangeValidator.java,@since 80,0,0,Ownership
4640,FooterDoubleClickHandler.java,handler for @link griddoubleclickevent s that happen in the footer of the,0,0,Ownership
4641,FooterDoubleClickHandler.java,grid.,0,0,Ownership
4642,FooterDoubleClickHandler.java,@since 74,0,0,Ownership
4649,Grid.java,a grid component for displaying tabular data.,0,0,Ownership
4651,Grid.java,@since 80,0,0,Ownership
4652,Grid.java,@param t,0,0,Ownership
4653,Grid.java,the grid bean type,0,0,Ownership
4654,Grid.java,header and footer,0,0,Ownership
4658,Grid.java,@param t,0,0,Ownership
4659,Grid.java,the grid bean type,0,0,Ownership
4660,Grid.java,header and footer,0,0,Ownership
4661,Grid.java,selection mode representing the built in selection models in grid.,0,0,Ownership
4663,Grid.java,these enums can be used in @link grid#setselectionmode selectionmode,0,0,Ownership
4665,Grid.java,@see grid#setselectionmode selectionmode,0,0,Ownership
4666,Grid.java,@see grid#setselectionmodel gridselectionmodel,0,0,Ownership
4667,Grid.java,header and footer,0,0,Ownership
4669,Grid.java,header and footer,0,0,Ownership
4672,Grid.java,header and footer,0,0,Ownership
4674,Grid.java,@param t,0,0,Ownership
4675,Grid.java,the grid bean type,0,0,Ownership
4676,Grid.java,header and footer,0,0,Ownership
4679,Grid.java,usage,0,0,Ownership
4680,Grid.java,pre,0,0,Ownership
4681,Grid.java,grid^addcontextclicklistener event &gt notification^show,0,0,Ownership
4682,Grid.java,gridcontextclickevent&lt person&gt event ^getitem clicked,0,0,Ownership
4683,Grid.java,pre,0,0,Ownership
4684,Grid.java,@param t,0,0,Ownership
4685,Grid.java,the grid bean type,0,0,Ownership
4686,Grid.java,header and footer,0,0,Ownership
4687,Grid.java,an event that is fired when a column s visibility changes.,0,0,Ownership
4688,Grid.java,@since 75.0,0,0,Ownership
4689,Grid.java,header and footer,0,0,Ownership
4690,Grid.java,a helper base class for creating extensions for the grid component.,0,0,Ownership
4691,Grid.java,@param t,0,0,Ownership
4692,Grid.java,header and footer,0,0,Ownership
4693,Grid.java,class for managing visible details rows.,0,0,Ownership
4694,Grid.java,@param t,0,0,Ownership
4695,Grid.java,the grid bean type,0,0,Ownership
4696,Grid.java,header and footer,0,0,Ownership
4699,Grid.java,@param t,0,0,Ownership
4700,Grid.java,the grid bean type,0,0,Ownership
4731,GridManyColumnsV7.java,test ui for grid initial rendering performance profiling.,0,0,Ownership
4733,GridSelectionModel.java,the server side interface that controls grid s selection state.,0,0,Ownership
4734,GridSelectionModel.java,selectionmodel should extend @link abstractgridextension .,0,0,Ownership
4737,GridSelectionModel.java,@param t,0,0,Ownership
4738,GridSelectionModel.java,the grid bean type,0,0,Ownership
4739,GridSelectionModel.java,@see abstractselectionmodel,0,0,Ownership
4740,GridSelectionModel.java,@see singleselectionmodel,0,0,Ownership
4741,GridSelectionModel.java,@see multiselectionmodel,0,0,Ownership
4750,HeaderRow.java,a header row in a grid.,0,0,Ownership
4752,HeaderRow.java,@since 80,0,0,Ownership
4756,InternalContainerAnnotationForJS.java,annotation enabling using multiple @link javascript @javascript,0,0,Ownership
4757,InternalContainerAnnotationForJS.java,annotations.,0,0,Ownership
4762,InternalContainerAnnotationForJS.java,@since 80,0,0,Ownership
4767,MyPickerConnector.java,mini tutorial code for,0,0,Ownership
4768,MyPickerConnector.java,"https vaadin^com wiki wiki main widget%20styling%20using%20only%20css,",0,0,Ownership
4769,MyPickerConnector.java,https,0,0,Ownership
4770,MyPickerConnector.java,vaadin^com wiki wiki main lightweight%20calculations%20of%20widget%20l,0,0,Ownership
4773,MyPickerConnector.java,@since 70.0,0,0,Ownership
4784,PopupView.java,a component for displaying a two different views to data.,0,0,Ownership
4785,PopupView.java,the minimized view,0,0,Ownership
4786,PopupView.java,"is normally used to render the component, and when it is clicked the full",0,0,Ownership
4787,PopupView.java,view is displayed on a popup.,0,0,Ownership
4788,PopupView.java,the inner class @link popupview^content is,0,0,Ownership
4789,PopupView.java,used to deliver contents to this component.,0,0,Ownership
4791,PopupView.java,constructors,0,0,Ownership
4792,PopupView.java,methods inherited from abstractcomponentcontainer.,0,0,Ownership
4793,PopupView.java,these are unnecessary,0,0,Ownership
4794,PopupView.java,but mandatory .,0,0,Ownership
4795,PopupView.java,most of them are not supported in this implementation.,0,0,Ownership
4801,PopupView.java,constructors,0,0,Ownership
4802,PopupView.java,methods inherited from abstractcomponentcontainer.,0,0,Ownership
4803,PopupView.java,these are unnecessary,0,0,Ownership
4804,PopupView.java,but mandatory .,0,0,Ownership
4805,PopupView.java,most of them are not supported in this implementation.,0,0,Ownership
4806,PopupView.java,this event is received by the popupvisibilitylisteners when the,0,0,Ownership
4807,PopupView.java,visibility of the popup changes.,0,0,Ownership
4808,PopupView.java,you can get the new visibility directly,0,0,Ownership
4809,PopupView.java,"with @link #ispopupvisible , or get the popupview that produced the",0,0,Ownership
4810,PopupView.java,event with @link #getpopupview .,0,0,Ownership
4811,PopupView.java,constructors,0,0,Ownership
4812,PopupView.java,methods inherited from abstractcomponentcontainer.,0,0,Ownership
4813,PopupView.java,these are unnecessary,0,0,Ownership
4814,PopupView.java,but mandatory .,0,0,Ownership
4815,PopupView.java,most of them are not supported in this implementation.,0,0,Ownership
4816,PopupView.java,defines a listener that can receive a popupvisibilityevent when the,0,0,Ownership
4817,PopupView.java,visibility of the popup changes.,0,0,Ownership
4847,PortletDummyRequestHandler.java,request handler which provides a dummy html response to any resource request,0,0,Ownership
4848,PortletDummyRequestHandler.java,with the resource id dummy.,0,0,Ownership
4850,PortletDummyRequestHandler.java,@since 71,0,0,Ownership
4855,QueryBuilder.java,"@deprecated as of 80, no replacement available.",0,0,Ownership
4857,RequiredTextFieldTest.java,test for ^v required style,0,0,Ownership
4861,RpcDataProviderExtension.java,provides vaadin server side container data source to a,0,0,Ownership
4862,RpcDataProviderExtension.java,@link com^vaadin.v7^client.connectors^gridconnector gridconnector .,0,0,Ownership
4863,RpcDataProviderExtension.java,this is currently,0,0,Ownership
4864,RpcDataProviderExtension.java,implemented as an extension hardcoded to support a specific connector type.,0,0,Ownership
4867,RpcDataProviderExtension.java,@since 74,0,0,Ownership
4869,RpcDataProviderExtension.java,"@deprecated as of 80, no replacement available.",0,0,Ownership
4870,RpcDataProviderExtension.java,class for keeping track of current items and valuechangelisteners.,0,0,Ownership
4871,RpcDataProviderExtension.java,@since 76,0,0,Ownership
4886,RpcDataProviderExtension.java,"@see grid#addvaluechangelistener com^vaadin.v7^data.container, object, object",0,0,Ownership
4887,RpcDataProviderExtension.java,"grid#addvaluechangelistener container, object, object",0,0,Ownership
4888,RpcDataProviderExtension.java,@see grid#valuechangelisteners,0,0,Ownership
4901,SelectAllEvent.java,"a select all event, fired by the grid when it needs all rows in data source",0,0,Ownership
4902,SelectAllEvent.java,"to be selected, or when all rows have been selected and are now deselected.",0,0,Ownership
4903,SelectAllEvent.java,@since 74,0,0,Ownership
4905,SelectAllEvent.java,@param t,0,0,Ownership
4906,SelectAllEvent.java,the type of the rows in grid,0,0,Ownership
4915,ShouldWriteDataDelegate.java,delegate used by @link designcontext to determine whether container data,0,0,Ownership
4916,ShouldWriteDataDelegate.java,should be written out for a component.,0,0,Ownership
4917,ShouldWriteDataDelegate.java,@see designcontext#shouldwritedata component,0,0,Ownership
4918,ShouldWriteDataDelegate.java,@since 75.0,0,0,Ownership
4931,SpacerVisibilityChangedEvent.java,event fired when a spacer element is hidden or shown in escalator.,0,0,Ownership
4933,SpacerVisibilityChangedEvent.java,@since 77.13,0,0,Ownership
4937,TargetDetailsImpl.java,a hashmap backed implementation of @link targetdetails for termina^^^n.,0,0,Ownership
4938,TargetDetailsImpl.java,@since 63,0,0,Ownership
4939,TargetDetailsImpl.java,@deprecated replaced in 81 by @link dropevent#gettransferdata string,0,0,Ownership
4944,UnknownExtensionConnector.java,connector used as a placeholder for extensions that are not present in the,0,0,Ownership
4945,UnknownExtensionConnector.java,widgetset.,0,0,Ownership
4946,UnknownExtensionConnector.java,@since 77.4,0,0,Ownership
4952,VaadinPortlet.java,portlet 20 base class.,0,0,Ownership
4953,VaadinPortlet.java,this replaces the servlet in servlet portlet 10,0,0,Ownership
4954,VaadinPortlet.java,deployments and handles various portlet requests from the browser.,0,0,Ownership
4958,VaadinPortlet.java,base class for portlet requests that need access to http servlet,0,0,Ownership
4962,VaadinPortlet.java,portlet request for liferay.,0,0,Ownership
4965,VaadinPortlet.java,portlet request for gatein.,0,0,Ownership
4968,VaadinPortlet.java,portlet request for websphere portal.,0,0,Ownership
4971,VaadinPortlet.java,portlet request for websphere portal.,0,0,Ownership
4975,VaadinPortlet.java,@deprecated as of 70.,0,0,Ownership
4976,VaadinPortlet.java,this is no longer used and only provided for,0,0,Ownership
4977,VaadinPortlet.java,backwards compatibility.,0,0,Ownership
4978,VaadinPortlet.java,each @link requesthandler can,0,0,Ownership
4979,VaadinPortlet.java,individually decide whether it wants to handle a request or,0,0,Ownership
4980,VaadinPortlet.java,not.,0,0,Ownership
4995,VaadinServiceInitListener.java,listener for @link vaadinservice initialization events.,0,0,Ownership
4996,VaadinServiceInitListener.java,the listener can,0,0,Ownership
4997,VaadinServiceInitListener.java,add listeners and request handlers the service.,0,0,Ownership
4999,VaadinServiceInitListener.java,listener instances are by default discovered and instantiated using,0,0,Ownership
5000,VaadinServiceInitListener.java,@link serviceloader .,0,0,Ownership
5001,VaadinServiceInitListener.java,this means that all implementations must have a,0,0,Ownership
5002,VaadinServiceInitListener.java,zero argument constructor and the fully qualified name of the implementation,0,0,Ownership
5003,VaadinServiceInitListener.java,class must be listed on a separate line in a,0,0,Ownership
5004,VaadinServiceInitListener.java,meta inf services com^vaadin.server^vaadinserviceinitlistener file present in,0,0,Ownership
5005,VaadinServiceInitListener.java,the jar file containing the implementation class.,0,0,Ownership
5007,VaadinServiceInitListener.java,"integrations for specific runtime environments, such as osgi or spring, might",0,0,Ownership
5008,VaadinServiceInitListener.java,also provide other ways of discovering listeners.,0,0,Ownership
5009,VaadinServiceInitListener.java,@since 80,0,0,Ownership
5025,VGridLayout.java,private helper class.,0,0,Ownership
5030,VLazyInitItemIdentifiers.java,@deprecated replaced in 81 with,0,0,Ownership
5031,VLazyInitItemIdentifiers.java,ragovercriteria string and,0,0,Ownership
5032,VLazyInitItemIdentifiers.java,@link droptargetextension#setdropcriteria string,0,0,Ownership
5038,VScrollTable.java,vscrolltable is a flowpanel having two widgets in it tablehead component,0,0,Ownership
5039,VScrollTable.java,scrollpanel,0,0,Ownership
5040,VScrollTable.java,"tablehead contains table s header and widgets logic for resizing,",0,0,Ownership
5041,VScrollTable.java,reordering and hiding columns.,0,0,Ownership
5042,VScrollTable.java,scrollpanel contains vscrolltablebody object which handles content.,0,0,Ownership
5043,VScrollTable.java,to save,0,0,Ownership
5044,VScrollTable.java,"some bandwidth and to improve clients responsiveness with loads of data, in",0,0,Ownership
5045,VScrollTable.java,vscrolltablebody all rows are not necessary rendered.,0,0,Ownership
5046,VScrollTable.java,there are spacers in,0,0,Ownership
5047,VScrollTable.java,vscrolltablebody to use the exact same space as non rendered rows would use.,0,0,Ownership
5048,VScrollTable.java,this way we can use seamlessly traditional scrollbars and scrolling to fetch,0,0,Ownership
5049,VScrollTable.java,more rows instead of paging .,0,0,Ownership
5050,VScrollTable.java,in vscrolltable we listen to scroll events.,0,0,Ownership
5051,VScrollTable.java,on horizontal scrolling we also,0,0,Ownership
5052,VScrollTable.java,update tableheads scroll position which has its scrollbars hidden.,0,0,Ownership
5053,VScrollTable.java,on,0,0,Ownership
5054,VScrollTable.java,vertical scroll events we will check if we are reaching the end of area where,0,0,Ownership
5055,VScrollTable.java,we have rows rendered and,0,0,Ownership
5056,VScrollTable.java,todo implement unregistering for child components in cells,0,0,Ownership
5057,VScrollTable.java,to detect if the first visible,0,0,Ownership
5058,VScrollTable.java,these are used when jumping between pages when pressing home and end,0,0,Ownership
5059,VScrollTable.java,changes to manage mousedown and mouseup,0,0,Ownership
5060,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,0,0,Ownership
5061,VScrollTable.java,lost .,0,0,Ownership
5062,VScrollTable.java,example itabpanel just set contained components invisible and back,0,0,Ownership
5063,VScrollTable.java,when changing tabs.,0,0,Ownership
5064,VScrollTable.java,updates first visible row for the case we cannot wait,0,0,Ownership
5065,VScrollTable.java,this method has logic which rows needs to be requested from server when,0,0,Ownership
5066,VScrollTable.java,user scrolls.,0,0,Ownership
5067,VScrollTable.java,non javadoc,0,0,Ownership
5068,VScrollTable.java,@see,0,0,Ownership
5069,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,0,0,Ownership
5070,VScrollTable.java,dom^client.focusevent,0,0,Ownership
5071,VScrollTable.java,non javadoc,0,0,Ownership
5072,VScrollTable.java,@see,0,0,Ownership
5073,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,0,0,Ownership
5074,VScrollTable.java,dom^client.blurevent,0,0,Ownership
5075,VScrollTable.java,non javadoc,0,0,Ownership
5077,VScrollTable.java,simple interface for parts of the table capable of owning a context menu.,0,0,Ownership
5078,VScrollTable.java,@since 72,0,0,Ownership
5080,VScrollTable.java,to detect if the first visible,0,0,Ownership
5081,VScrollTable.java,these are used when jumping between pages when pressing home and end,0,0,Ownership
5082,VScrollTable.java,changes to manage mousedown and mouseup,0,0,Ownership
5083,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,0,0,Ownership
5084,VScrollTable.java,lost .,0,0,Ownership
5085,VScrollTable.java,example itabpanel just set contained components invisible and back,0,0,Ownership
5086,VScrollTable.java,when changing tabs.,0,0,Ownership
5087,VScrollTable.java,updates first visible row for the case we cannot wait,0,0,Ownership
5088,VScrollTable.java,this method has logic which rows needs to be requested from server when,0,0,Ownership
5089,VScrollTable.java,user scrolls.,0,0,Ownership
5090,VScrollTable.java,non javadoc,0,0,Ownership
5091,VScrollTable.java,@see,0,0,Ownership
5092,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,0,0,Ownership
5093,VScrollTable.java,dom^client.focusevent,0,0,Ownership
5094,VScrollTable.java,non javadoc,0,0,Ownership
5095,VScrollTable.java,@see,0,0,Ownership
5096,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,0,0,Ownership
5097,VScrollTable.java,dom^client.blurevent,0,0,Ownership
5098,VScrollTable.java,non javadoc,0,0,Ownership
5100,VScrollTable.java,handles showing context menu on long press from a touch screen.,0,0,Ownership
5101,VScrollTable.java,@since 72,0,0,Ownership
5103,VScrollTable.java,to detect if the first visible,0,0,Ownership
5104,VScrollTable.java,these are used when jumping between pages when pressing home and end,0,0,Ownership
5105,VScrollTable.java,changes to manage mousedown and mouseup,0,0,Ownership
5106,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,0,0,Ownership
5107,VScrollTable.java,lost .,0,0,Ownership
5108,VScrollTable.java,example itabpanel just set contained components invisible and back,0,0,Ownership
5109,VScrollTable.java,when changing tabs.,0,0,Ownership
5110,VScrollTable.java,updates first visible row for the case we cannot wait,0,0,Ownership
5111,VScrollTable.java,this method has logic which rows needs to be requested from server when,0,0,Ownership
5112,VScrollTable.java,user scrolls.,0,0,Ownership
5113,VScrollTable.java,non javadoc,0,0,Ownership
5114,VScrollTable.java,@see,0,0,Ownership
5115,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,0,0,Ownership
5116,VScrollTable.java,dom^client.focusevent,0,0,Ownership
5117,VScrollTable.java,non javadoc,0,0,Ownership
5118,VScrollTable.java,@see,0,0,Ownership
5119,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,0,0,Ownership
1,Abfss.java,azure blob file system implementation of abstractfilesystem.,0,0,Expand
1028,TestConnCache.java,this class tests the client connection caching in a single node,1,0,Expand
5,AbstractContractGetFileStatusTest.java,test getfilestatus and related listing operations.,0,0,Expand
1032,TestCustomOauthTokenProvider.java,test custom oauth token providers.,1,0,Expand
1042,TestDataDrivenDBInputFormat.java,test aspects of datadrivendbinputformat,0,0,Expand
531,FsConstants.java,filesystem related constants.,1,0,Expand
1047,TestEditLogFileOutputStream.java,test the editlogfileoutputstream,0,0,Expand
537,GetNamespaceInfoResponse.java,api response for listing hdfs namespaces present in the state store.,1,0,Expand
1049,TestFederationPolicyUtils.java,unit test for @link federationpolicyutils .,0,0,Expand
1052,TestFileSizeCountTask.java,unit test for file size count task.,1,0,Expand
1054,TestHandler.java,tests handler interface.,0,0,Expand
1056,TestHDFSServerPorts.java,this test checks correctness of port usage by hdfs components,1,0,Expand
1057,TestHDFSServerPorts.java,"namenode, datanode, secondarynamenode and backupnode.",0,0,Expand
554,HadoopIllegalArgumentException.java,indicates that a method has been passed illegal or invalid argument.,1,0,Expand
1066,TestKeyInputStream.java,tests @link keyinputstream .,0,0,Expand
1069,TestMetricsVisitor.java,test the metric visitor interface,1,0,Expand
1071,TestNativeAzureFileSystemUploadLogic.java,"tests for the upload, buffering and flush logic in wasb.",0,0,Expand
560,HashResolver.java,order the destinations based on consistent hashing.,1,0,Expand
1073,TestNativeAzureFileSystemUploadLogic.java,various scenarios to test in how often we flush data while uploading.,0,0,Expand
564,IDataLoader.java,an idataloader loads data on demand,1,0,Expand
1077,TestOmMultipartKeyInfoCodec.java,this class tests ommultipartkeyinfocodec.,0,0,Expand
566,InconsistentS3ClientFactory.java,s3 client factory used for testing with eventual consistency fault injection.,1,0,Expand
567,InconsistentS3ClientFactory.java,this client is for testing i only i it is in the production,0,0,Expand
1079,TestOMVolumeRequest.java,base test class for volume request.,1,0,Expand
568,InconsistentS3ClientFactory.java,@code hadoop aws module to enable integration tests to use this,0,0,Expand
569,InconsistentS3ClientFactory.java,just by editing the hadoop configuration used to bring up the client.,1,0,Expand
1082,TestOzoneNativeAuthorizer.java,test class for @link ozonenativeauthorizer .,0,0,Expand
61,ApplicationStateData.java,contains all the state data that needs to be stored persistently for an application,1,0,Expand
1085,TestProtoBufRpc.java,test for testing protocol buffer based rpc mechanism.,0,0,Expand
574,InfoKeyHandler.java,executes info object.,1,0,Expand
579,ITestAbfsReadWriteAndSeek.java,"test read, write and seek.",0,0,Expand
1091,TestRDBStore.java,rdbstore tests.,1,0,Expand
1093,TestRegistrySecurityHelper.java,test for registry security operations,0,0,Expand
70,BalancingPolicy.java,balancing policy.,1,0,Expand
584,ITestAzureNativeContractSeek.java,contract test.,0,0,Expand
74,BalancingPolicy.java,cluster is balanced if each node is balanced.,1,0,Expand
75,BalancingPolicy.java,cluster is balanced if each pool in each node is balanced.,0,0,Expand
1099,TestRouterWebServiceUtil.java,test class to validate routerwebserviceutil methods.,1,0,Expand
588,ITestCommitOperations.java,this is done with an inconsistent client.,0,0,Expand
1101,TestS3BucketManager.java,tests for s3 bucket manager.,1,0,Expand
591,ITestListPerformance.java,test list performance.,0,0,Expand
1104,TestSaveNamespace.java,test various failure scenarios during savenamespace operation.,1,0,Expand
81,BaseRouterWebServicesTest.java,base class for all the routerrmadminservice test cases.,0,0,Expand
593,ITestS3Select.java,test the s3 select feature with some basic sql commands.,1,0,Expand
86,BatchedRequests.java,a grouping of scheduling requests which are sent to the placementalgorithm,0,0,Expand
87,BatchedRequests.java,to place as a batch.,1,0,Expand
600,KerberosDelegationTokenAuthenticator.java,the code kerberosdelegationtokenauthenticator code provides support for,0,0,Expand
601,KerberosDelegationTokenAuthenticator.java,kerberos spnego authentication mechanism and support for hadoop delegation,1,0,Expand
90,BatchedRequests.java,placementalgorithmoutput attempt the number of times the requests in this,0,0,Expand
602,KerberosDelegationTokenAuthenticator.java,token operations.,1,0,Expand
91,BatchedRequests.java,iterator type.,0,0,Expand
98,BlockPlacementStatusWithNodeGroup.java,an implementation of @see blockplacementstatus for,1,0,Expand
1122,TestSCMDatanodeHeartbeatDispatcher.java,this class tests the behavior of scmdatanodeheartbeatdispatcher.,0,0,Expand
613,LocalizationStatusPBImpl.java,pb impl of @link localizationstatus .,1,0,Expand
103,BlocksMap.java,this class maintains the map from a block to its metadata.,0,0,Expand
616,LocatedFileStatus.java,this class defines a filestatus that includes a file s block locations.,1,0,Expand
618,LoggedTask.java,a @link loggedtask represents a hadoop task that is part of a hadoop job.,0,0,Expand
1130,TestSwiftFileSystemContract.java,this is the full filesystem contract test which requires the,1,0,Expand
1131,TestSwiftFileSystemContract.java,default config set up to point to a filesystem.,0,0,Expand
1132,TestSwiftFileSystemContract.java,some of the tests override the base class tests these,1,0,Expand
109,BlockUtils.java,utils functions to help block functions.,0,0,Expand
621,LoggedTask.java,all of the public methods are simply accessors for the instance variables we,1,0,Expand
1133,TestSwiftFileSystemContract.java,"are where swiftfs does not implement those features, or",0,0,Expand
622,LoggedTask.java,want to write out in the json files.,1,0,Expand
1134,TestSwiftFileSystemContract.java,when the behavior of swiftfs does not match the normal,0,0,Expand
1135,TestSwiftFileSystemContract.java,contract which normally means that directories and equal files,1,0,Expand
1136,TestSwiftFileSystemContract.java,are being treated as equal.,0,0,Expand
116,CapacitySchedulerPlanFollower.java,this class implements a @link planfollower .,1,0,Expand
117,CapacitySchedulerPlanFollower.java,"this is invoked on a timer, and",0,0,Expand
629,LogParserUtil.java,common utility functions for @link logparser .,1,0,Expand
118,CapacitySchedulerPlanFollower.java,it is in charge to publish the state of the @link plan s to the underlying,0,0,Expand
119,CapacitySchedulerPlanFollower.java,@link capacityscheduler .,1,0,Expand
632,LogWebService.java,support only atsv2 client only.,0,0,Expand
1144,TestTaskCommit.java,special committer that does not cleanup temporary files in,1,0,Expand
1145,TestTaskCommit.java,aborttask,0,0,Expand
1146,TestTaskCommit.java,the framework s fileoutputcommitter cleans up any temporary,1,0,Expand
1147,TestTaskCommit.java,files left behind in aborttask.,0,0,Expand
1148,TestTaskCommit.java,we want the test case to,1,0,Expand
637,MapContext.java,the context that is given to the @link mapper .,0,0,Expand
1149,TestTaskCommit.java,find these files and hence short circuit aborttask.,1,0,Expand
126,CapacitySchedulerPlanFollower.java,"this implementation of planfollower is relatively stateless, and it can",0,0,Expand
638,MapContext.java,@param keyin the key input type to the mapper,1,0,Expand
1150,TestTaskCommit.java,special committer that always requires commit.,0,0,Expand
127,CapacitySchedulerPlanFollower.java,synchronize schedulers and plans that have arbitrary changes performing set,1,0,Expand
639,MapContext.java,@param valuein the value input type to the mapper,0,0,Expand
128,CapacitySchedulerPlanFollower.java,differences among existing queues .,1,0,Expand
640,MapContext.java,@param keyout the key output type from the mapper,0,0,Expand
129,CapacitySchedulerPlanFollower.java,this makes it resilient to frequency of,1,0,Expand
641,MapContext.java,@param valueout the value output type from the mapper,0,0,Expand
130,CapacitySchedulerPlanFollower.java,"synchronization, and rm restart issues no catch up is necessary .",1,0,Expand
1158,TestTaskContext.java,tests context api and @link statusreporter#getprogress via @link taskattemptcontext#getprogress api .,0,0,Expand
649,MetaBlockAlreadyExists.java,exception meta block with the same name already exists.,1,0,Expand
1161,TestTopCLI.java,test class for topcli.,0,0,Expand
651,MetricsCache.java,a metrics cache for sinks that don t support sparse updates.,1,0,Expand
1163,TestUpgradeDomainBlockPlacementPolicy.java,end to end test case for upgrade domain,0,0,Expand
656,NativeBatchProcessor.java,"used to create channel, transfer data and command between java and native",1,0,Expand
658,NativeSingleLineParser.java,this sample parser will parse the sample log and extract the resource,0,0,Expand
659,NativeSingleLineParser.java,skyline.,1,0,Expand
1173,TextInputFormat.java,an @link inputformat for plain text files.,0,0,Expand
1174,TextInputFormat.java,files are broken into lines.,1,0,Expand
669,Nfs3Status.java,success or error status is reported in nfs3 responses.,0,0,Expand
671,Node2ObjectsMap.java,this data structure maintains the list of containers that is on a datanode.,1,0,Expand
1187,TimelineDataToRetrieve.java,while querying.,0,0,Expand
1188,TimelineDataToRetrieve.java,br,1,0,Expand
1191,TimelineDataToRetrieve.java,li b confstoretrieve b used for deciding which configs to return,0,0,Expand
1193,TimelineDataToRetrieve.java,this is represented as a @link timelinefilterlist object,1,0,Expand
1194,TimelineDataToRetrieve.java,containing @link timelineprefixfilter objects.,0,0,Expand
172,ComparableVersion.java,code source of this file http grepcode^com file repo1^maven.org maven2 org^apache.maven maven artifact 31.1 org apache maven artifact versioning comparableversion^java modifications made on top of the source 1.,1,0,Expand
173,ComparableVersion.java,changed package org^apache.maven^artifact.versioning to package org^apache.hadoop^util 2.,0,0,Expand
685,OMNodeDetails.java,this class stores om node details.,1,0,Expand
686,OMNodeDetails.java,builder class for omnodedetails.,0,0,Expand
175,ComparableVersion.java,generic implementation of version comparison.,1,0,Expand
176,ComparableVersion.java,p features,0,0,Expand
1200,TimelineDataToRetrieve.java,contains @link field#configs or @link field#all .,1,0,Expand
177,ComparableVersion.java,ul,0,0,Expand
690,OpportunisticContainersStatusPBImpl.java,protocol buffer implementation of opportunisticcontainersstatus.,1,0,Expand
692,OzoneObj.java,class representing an unique ozone object.,0,0,Expand
1207,TimelineDataToRetrieve.java,this is represented as a @link timelinefilterlist object,1,0,Expand
1208,TimelineDataToRetrieve.java,containing @link timelineprefixfilter objects.,0,0,Expand
697,Parser.java,a class for parsing outputs,1,0,Expand
699,PartialOutputCommitter.java,interface for an @link org^apache.hadoop^mapreduce.outputcommitter,0,0,Expand
188,ComparableVersion.java,li code milestone code or code m code li,1,0,Expand
189,ComparableVersion.java,li code rc code or code cr code li,0,0,Expand
190,ComparableVersion.java,li code snapshot code li,1,0,Expand
191,ComparableVersion.java,li code the empty string code or code ga code or code final code li,0,0,Expand
703,PartitionResourcesInfo.java,this class represents queue user resource usage info for a given partition,1,0,Expand
192,ComparableVersion.java,li code sp code li,0,0,Expand
193,ComparableVersion.java,ul,0,0,Expand
194,ComparableVersion.java,"unknown qualifiers are considered after known qualifiers, with lexical order always case insensitive ,",0,0,Expand
195,ComparableVersion.java,li,0,0,Expand
197,ComparableVersion.java,li,0,0,Expand
709,ProcessIdFileReader.java,helper functionality to read the pid from a file.,0,0,Expand
199,ComparableVersion.java,@see a href https cwiki^apache.org confluence display mavenold versioning versioning on maven wiki a,0,0,Expand
711,QuasiMonteCarlo.java,a map reduce program that estimates the value of pi,0,0,Expand
200,ComparableVersion.java,represents a numeric item in the version item list.,0,0,Expand
201,ComparableVersion.java,"represents a string in the version item list, usually a qualifier.",0,0,Expand
202,ComparableVersion.java,represents a version list item.,0,0,Expand
714,QuasiMonteCarlo.java,"in this example,",0,0,Expand
203,ComparableVersion.java,this class is used both for the global item list and for sub lists which start,0,0,Expand
715,QuasiMonteCarlo.java,"we use a qmc method to approximate the integral i int s f x dx ,",0,0,Expand
204,ComparableVersion.java,with number in the version specification .,0,0,Expand
716,QuasiMonteCarlo.java,"where s 0,1 ^2 is a unit square,",0,0,Expand
717,QuasiMonteCarlo.java,"x x 1,x 2 is a 2 dimensional point,",0,0,Expand
718,QuasiMonteCarlo.java,"and f is a function describing the inscribed circle of the square s ,",0,0,Expand
719,QuasiMonteCarlo.java,"f x 1 if 2x 1 1 ^2 2x 2 1 ^2 &lt 1 and f x 0 , otherwise.",0,0,Expand
720,QuasiMonteCarlo.java,it is easy to see that pi is equal to 4i .,0,0,Expand
721,QuasiMonteCarlo.java,so an approximation of pi is obtained once i is evaluated numerically.,0,0,Expand
239,ConfigurationException.java,exception to throw in case of a configuration problem.,0,0,Expand
245,CpuTimeTracker.java,utility for sampling and computing cpu usage.,0,0,Expand
248,DBProfile.java,user visible configs based rocksdb tuning page.,0,0,Expand
249,DBProfile.java,documentation for options.,0,0,Expand
250,DBProfile.java,p,0,0,Expand
251,DBProfile.java,https github^com facebook rocksdb blob master include rocksdb options^h,0,0,Expand
252,DBProfile.java,p,0,0,Expand
253,DBProfile.java,most tuning parameters are based on this url.,0,0,Expand
254,DBProfile.java,p,0,0,Expand
255,DBProfile.java,https github^com facebook rocksdb wiki setup options and basic tuning,0,0,Expand
775,Query.java,check if a record matches a query.,0,0,Expand
777,Query.java,@param t type of the record to query.,0,0,Expand
781,QueueName.java,represents a queue name.,0,0,Expand
271,DefaultAnonymizingRumenSerializer.java,default rumen json serializer.,0,0,Expand
783,RandomKeyGenerator.java,data generator tool to generate as much keys as possible.,0,0,Expand
273,DelegatingSSLSocketFactory.java,a @link sslsocketfactory that can delegate to various ssl implementations.,0,0,Expand
789,ReencryptionUpdater.java,"class for finalizing re encrypt edek operations, by updating file xattrs with",0,0,Expand
279,DelegatingSSLSocketFactory.java,p,0,0,Expand
280,DelegatingSSLSocketFactory.java,the factory has several different modes of operation,0,0,Expand
792,ReencryptionUpdater.java,the tasks are submitted by reencryptionhandler.,0,0,Expand
281,DelegatingSSLSocketFactory.java,ul,0,0,Expand
282,DelegatingSSLSocketFactory.java,li openssl uses the wildly openssl library to delegate to the,0,0,Expand
283,DelegatingSSLSocketFactory.java,system installed openssl.,0,0,Expand
284,DelegatingSSLSocketFactory.java,if the wildfly openssl integration is not,0,0,Expand
285,DelegatingSSLSocketFactory.java,"properly setup, an exception is thrown.",0,0,Expand
286,DelegatingSSLSocketFactory.java,li,0,0,Expand
289,DelegatingSSLSocketFactory.java,li,0,0,Expand
801,ReencryptionUpdater.java,class representing the task for one batch of a re encryption command.,0,0,Expand
802,ReencryptionUpdater.java,it,0,0,Expand
291,DelegatingSSLSocketFactory.java,it disables the gcm cipher when running on java 8.,0,0,Expand
803,ReencryptionUpdater.java,also contains statistics about how far this single batch has been executed.,0,0,Expand
292,DelegatingSSLSocketFactory.java,li,0,0,Expand
804,ReencryptionUpdater.java,class that encapsulates re encryption details of a file.,0,0,Expand
295,DelegatingSSLSocketFactory.java,li,0,0,Expand
296,DelegatingSSLSocketFactory.java,ul,0,0,Expand
297,DelegatingSSLSocketFactory.java,p,0,0,Expand
301,DelegatingSSLSocketFactory.java,p,0,0,Expand
302,DelegatingSSLSocketFactory.java,default jsse is not truly the the default jsse implementation because,0,0,Expand
303,DelegatingSSLSocketFactory.java,the gcm cipher is disabled when running on java 8.,0,0,Expand
304,DelegatingSSLSocketFactory.java,"however, the name",0,0,Expand
305,DelegatingSSLSocketFactory.java,was not changed in order to preserve backwards compatibility.,0,0,Expand
306,DelegatingSSLSocketFactory.java,"instead,",0,0,Expand
307,DelegatingSSLSocketFactory.java,a new mode called default jsse with gcm delegates to the default jsse,0,0,Expand
308,DelegatingSSLSocketFactory.java,implementation with no changes to the list of enabled ciphers.,0,0,Expand
309,DelegatingSSLSocketFactory.java,p,0,0,Expand
830,RegistryInternalConstants.java,internal constants for the registry.,0,0,Expand
831,RegistryInternalConstants.java,these are the things which aren t visible to users.,0,0,Expand
834,RegistryOperations.java,registry operations,0,0,Expand
1348,TimelineStorageMonitor.java,this abstract class is for monitoring health of timeline storage.,0,0,Expand
837,ResourceBlacklistRequest.java,@link resourceblacklistrequest encapsulates the list of resource names which should be added or removed from the em blacklist em of resources for the application.,0,0,Expand
838,ResourceBlacklistRequest.java,@see resourcerequest,0,0,Expand
839,ResourceBlacklistRequest.java,@see applicationmasterprotocol#allocate org^apache.hadoop^yarn.api^protocolrecords.allocaterequest,0,0,Expand
1352,TonyRuntimeFactory.java,implementation of runtimefactory with tony runtime,0,0,Expand
1355,TypedEvent.java,basic event implementation to implement custom events.,0,0,Expand
844,ResourceRequestsJsonVerifications.java,performs value verifications on,0,0,Expand
1356,TypedEvent.java,@param t,0,0,Expand
845,ResourceRequestsJsonVerifications.java,@link org^apache.hadoop^yarn.server^resourcemanager.webapp^dao.resourcerequestinfo,0,0,Expand
846,ResourceRequestsJsonVerifications.java,objects against the values of @link resourcerequest .,0,0,Expand
1360,UniformSizeInputFormat.java,"uniformsizeinputformat extends the inputformat class, to produce",0,0,Expand
1361,UniformSizeInputFormat.java,input splits for distcp.,0,0,Expand
850,ResourceRequestsJsonVerifications.java,builder class for @link resourcerequestsjsonverifications .,0,0,Expand
1370,Utils.java,a utility class.,0,0,Expand
1371,Utils.java,it provides,0,0,Expand
1372,Utils.java,a path filter utility to filter out output part files in the output dir,0,0,Expand
1375,Utils.java,this can be used to list paths of output directory as follows,0,0,Expand
1376,Utils.java,"path filelist fileutil^stat2paths fs^liststatus outdir,",0,0,Expand
1377,Utils.java,new outputfilesfilter,0,0,Expand
868,RMAdminRequestInterceptor.java,"defines the contract to be implemented by the request intercepter classes,",0,0,Expand
1380,Utils.java,this can be used to list paths of output directory as follows,0,0,Expand
1381,Utils.java,"path filelist fileutil^stat2paths fs^liststatus outdir,",0,0,Expand
1382,Utils.java,new outputlogfilter,0,0,Expand
873,RSLegacyRawErasureCoderFactory.java,a raw coder factory for the legacy raw reed solomon coder in java.,0,0,Expand
362,DfsServlet.java,a base class for the servlets in dfs.,0,0,Expand
364,DiskBalancerCluster.java,diskbalancercluster represents the nodes that we are working against.,0,0,Expand
876,SafeModeException.java,client cannot modified namespace until the safe mode is off.,0,0,Expand
878,SchedulerQueueManager.java,context of the queues in scheduler.,0,0,Expand
880,SequenceFileRecordReader.java,an @link recordreader for @link sequencefile s.,0,0,Expand
883,ShellBasedUnixGroupsMapping.java,a simple shell based implementation of @link groupmappingserviceprovider that exec s the code groups code shell command to fetch the group,0,0,Expand
887,StandardSocketFactory.java,specialized socketfactory to create sockets with a socks proxy,0,0,Expand
1400,VolumeSet.java,volumeset to manage hdds volumes in a datanode.,0,0,Expand
889,StateStoreFileSystemImpl.java,@link statestoredriver implementation based on a filesystem.,0,0,Expand
1403,WritableComparator.java,a comparator for @link writablecomparable s.,0,0,Expand
1407,WritableComparator.java,p one may optimize compare intensive operations by overriding,0,0,Expand
1408,WritableComparator.java,"@link #compare byte ,int,int,byte ,int,int .",0,0,Expand
1409,WritableComparator.java,static utility methods are,0,0,Expand
898,StreamBaseRecordReader.java,shared functionality for hadoopstreaming formats.,0,0,Expand
1410,WritableComparator.java,provided to assist in optimized implementations of this method.,0,0,Expand
899,StreamBaseRecordReader.java,a custom reader can be,0,0,Expand
900,StreamBaseRecordReader.java,defined to be a recordreader with the constructor below and is selected with,0,0,Expand
901,StreamBaseRecordReader.java,the option bin hadoopstreaming inputreader .,0,0,Expand
902,StreamBaseRecordReader.java,@see streamxmlrecordreader,0,0,Expand
401,DistributedSchedulingAllocateRequest.java,"object used by the application master when distributed scheduling is enabled,",0,0,Expand
1430,YarnAuthorizationProvider.java,an implementation of the interface will provide authorization related,0,0,Expand
1431,YarnAuthorizationProvider.java,information and enforce permission check.,0,0,Expand
408,DockerKillCommand.java,encapsulates the docker kill command and its command line arguments.,0,0,Expand
410,EditLogTailer.java,editlogtailer represents a thread which periodically reads from edits,0,0,Expand
411,EditLogTailer.java,journals and applies the transactions contained within to a given,0,0,Expand
412,EditLogTailer.java,fsnamesystem.,0,0,Expand
924,StructureGenerator.java,the synopsis of the command is,0,0,Expand
925,StructureGenerator.java,java structuregenerator,0,0,Expand
926,StructureGenerator.java,maxdepth maxdepth maximum depth of the directory tree default is 5.,0,0,Expand
415,EditLogTailer.java,manage the active namenode proxy .,0,0,Expand
927,StructureGenerator.java,minwidth minwidth minimum number of subdirectories per directories default is 1,0,0,Expand
416,EditLogTailer.java,this cannot just be the a single proxy since we could,0,0,Expand
928,StructureGenerator.java,maxwidth maxwidth maximum number of subdirectories per directories default is 5,0,0,Expand
417,EditLogTailer.java,"failover across a number of namenodes, rather than just between an active and a standby.",0,0,Expand
929,StructureGenerator.java,numoffiles #offiles the total number of files default is 10.,0,0,Expand
418,EditLogTailer.java,p,0,0,Expand
419,EditLogTailer.java,we lazily get a proxy to one of the configured namenodes and attempt to make the request,0,0,Expand
1443,YarnServiceJobSubmitter.java,submit a job to cluster.,0,0,Expand
420,EditLogTailer.java,against it.,0,0,Expand
932,StructureGenerator.java,seed seed random number generator seed default is the current time.,0,0,Expand
421,EditLogTailer.java,"if it doesn t succeed, either because the proxy failed to be created or the request",0,0,Expand
933,StructureGenerator.java,in memory representation of a directory in memory representation of a file,0,0,Expand
422,EditLogTailer.java,"failed, we try the next nn in the list.",0,0,Expand
423,EditLogTailer.java,we try this up to the configuration maximum number of,0,0,Expand
424,EditLogTailer.java,retries before throwing up our hands.,0,0,Expand
425,EditLogTailer.java,a working proxy is retained across attempts since we,0,0,Expand
426,EditLogTailer.java,expect the active namenode to switch rarely.,0,0,Expand
427,EditLogTailer.java,p,0,0,Expand
428,EditLogTailer.java,this mechanism is b very bad b for cases where we care about being i fast i it just,0,0,Expand
429,EditLogTailer.java,blindly goes and tries namenodes.,0,0,Expand
960,SwiftBadRequestException.java,thrown to indicate that data locality can t be calculated or requested path is incorrect.,0,0,Expand
961,SwiftBadRequestException.java,data locality can t be calculated if openstack swift version is old.,0,0,Expand
450,ErasureCodingPolicyManager.java,this manages erasure coding policies predefined and activated in the system.,0,0,Expand
964,SwiftRestClient.java,this implements the client side of the swift rest api.,0,0,Expand
453,ErasureCodingPolicyManager.java,this class is instantiated by the fsnamesystem.,0,0,Expand
459,EventWatcher.java,event watcher the re send a message after timeout.,0,0,Expand
971,SwiftRestClient.java,get the current operation statistics.,0,0,Expand
972,SwiftRestClient.java,@return a snapshot of the statistics,0,0,Expand
461,EventWatcher.java,event watcher will send the tracked payload event after a timeout period,0,0,Expand
973,SwiftRestClient.java,base class for all swift rest operations.,0,0,Expand
462,EventWatcher.java,unless a confirmation from the original event completion event is arrived.,0,0,Expand
974,SwiftRestClient.java,@param m request,0,0,Expand
463,EventWatcher.java,@param timeout payload the type of the events which are tracked.,0,0,Expand
975,SwiftRestClient.java,@param r result,0,0,Expand
464,EventWatcher.java,@param completion payload the type of event which could cancel the,0,0,Expand
976,SwiftRestClient.java,get the current operation statistics.,0,0,Expand
465,EventWatcher.java,tracking.,0,0,Expand
977,SwiftRestClient.java,@return a snapshot of the statistics,0,0,Expand
981,SwiftRestClient.java,get the current operation statistics.,0,0,Expand
982,SwiftRestClient.java,@return a snapshot of the statistics,0,0,Expand
983,SwiftRestClient.java,generate an auth message.,0,0,Expand
984,SwiftRestClient.java,@param r response,0,0,Expand
985,SwiftRestClient.java,get the current operation statistics.,0,0,Expand
986,SwiftRestClient.java,@return a snapshot of the statistics,0,0,Expand
987,SwiftRestClient.java,create operation.,0,0,Expand
477,FairOrderingPolicy.java,an orderingpolicy which orders schedulableentities for fairness see,0,0,Expand
989,SwiftRestClient.java,get the current operation statistics.,0,0,Expand
478,FairOrderingPolicy.java,fairscheduler,0,0,Expand
990,SwiftRestClient.java,@return a snapshot of the statistics,0,0,Expand
479,FairOrderingPolicy.java,"fairsharepolicy , generally, processes with lesser usage are lesser.",0,0,Expand
991,SwiftRestClient.java,delete operation.,0,0,Expand
480,FairOrderingPolicy.java,if,0,0,Expand
992,SwiftRestClient.java,@param r,0,0,Expand
481,FairOrderingPolicy.java,sizedbasedweight is set to true then an application with high demand,0,0,Expand
482,FairOrderingPolicy.java,may be prioritized ahead of an application with less usage.,0,0,Expand
483,FairOrderingPolicy.java,this,0,0,Expand
484,FairOrderingPolicy.java,"is to offset the tendency to favor small apps, which could result in",0,0,Expand
486,FairOrderingPolicy.java,"continuously optional, default false",0,0,Expand
500,FederationPolicyException.java,generic policy exception.,0,0,Expand
1015,TableConfig.java,class that maintains table configuration.,0,0,Expand
506,FederationStateStoreInvalidInputException.java,"exception thrown by the @code federationmembershipstatestoreinputvalidator ,",0,0,Expand
1020,TestAdlContractDeleteLive.java,test delete contract test.,0,0,Expand
1022,TestAdlContractSeekLive.java,test seek operation on adl file system.,0,0,Expand
511,FileSystemApplicationHistoryStore.java,file system implementation of @link applicationhistorystore .,0,0,Expand
1473,JavaStreamingTestExample.java,"perform streaming testing using welch s 2 sample t test on a stream of data, where the data",0,0,Expand
1474,JavaStreamingTestExample.java,stream arrives as text files in a directory.,1,0,Expand
1475,JavaStreamingTestExample.java,stops when the two groups are statistically,0,0,Expand
1476,JavaStreamingTestExample.java,significant p value 005 or after a user specified timeout in number of batches is exceeded.,1,0,Expand
1481,JavaStreamingTestExample.java,usage,0,0,Expand
1482,JavaStreamingTestExample.java,javastreamingtestexample datadir batchduration numbatchestimeout,1,0,Expand
1483,JavaStreamingTestExample.java,to run on your local machine using the directory datadir with 5 seconds between each batch and,0,0,Expand
1484,JavaStreamingTestExample.java,"a timeout after 100 insignificant batches, call",1,0,Expand
1485,JavaStreamingTestExample.java,bin run example mllib^javastreamingtestexample datadir 5 100,0,0,Expand
1486,JavaStreamingTestExample.java,as you add text files to datadir the significance test wil continually update every,1,0,Expand
1487,JavaStreamingTestExample.java,batchduration seconds until the test becomes significant p value 005 or the number of,0,0,Expand
1488,JavaStreamingTestExample.java,batches processed exceeds numbatchestimeout .,1,0,Expand
1505,KVStore.java,abstraction for a local key value store for storing app data.,0,0,Expand
1445,ChunkFetchSuccess.java,response to @link chunkfetchrequest when a chunk exists and has been successfully fetched.,0,0,Expand
1573,LevelDB.java,implementation of kvstore that uses leveldb as the underlying data store.,0,0,Expand
1576,LocalDiskShuffleDataIO.java,implementation of the @link shuffledataio plugin system that replicates the local shuffle,0,0,Expand
1577,LocalDiskShuffleDataIO.java,storage and index file functionality that has historically been used from spark 24 and earlier.,0,0,Expand
1451,ExecutorPlugin.java,a plugin which can be automatically instantiated within each spark executor.,0,0,Expand
1581,MessageWithHeader.java,a wrapper message that holds two separate pieces a header and a body .,0,0,Expand
1584,RemoveBlocks.java,request to remove a set of blocks.,0,0,Expand
1586,StreamHandle.java,identifier for a fixed number of chunks to read from a stream created by an open blocks,0,0,Expand
1587,StreamHandle.java,message.,0,0,Expand
1588,StreamHandle.java,this is used by @link org^apache.spark^network.shuffle^oneforoneblockfetcher .,0,0,Expand
1592,TBoolColumn.java,"the set of fields this struct contains, along with convenience methods for finding and manipulating them.",0,0,Expand
1594,UploadBlockStream.java,"a request to upload a block, which the destination should receive as a stream.",0,0,Expand
1469,FlatMapFunction.java,a function that returns zero or more output records from each input record.,0,0,Expand
1471,JavaRecord.java,java bean class to be used with the example javasqlnetworkwordcount.,0,0,Expand
2048,ICodeReaderFactory.java,@noreference this interface is not intended to be referenced by clients.,0,0,Expand
2055,ICPointerType.java,@noimplement this interface is not intended to be implemented by clients.,1,0,Expand
2058,ICPPAliasTemplateInstance.java,represents an instance of an alias template 145.7 .,0,0,Expand
2059,ICPPAliasTemplateInstance.java,@since 55,1,0,Expand
2060,ICPPAliasTemplateInstance.java,@noextend this interface is not intended to be extended by clients.,0,0,Expand
2061,ICPPAliasTemplateInstance.java,@noimplement this interface is not intended to be implemented by clients.,1,0,Expand
2066,ICPPASTLinkageSpecification.java,this interface represents a linkage specification.,0,0,Expand
2067,ICPPASTLinkageSpecification.java,eg extern c .,1,0,Expand
2579,TriggerCellModifier.java,cell modifier used to edit the trigger value.,0,0,Expand
2068,ICPPASTLinkageSpecification.java,@noextend this interface is not intended to be extended by clients.,1,0,Expand
2069,ICPPASTLinkageSpecification.java,@noimplement this interface is not intended to be implemented by clients.,0,0,Expand
2581,TypedCDTViewerFilter.java,see org^eclipse.cdt^internal.ui^dialogs.typedviewerfilter,1,0,Expand
2582,TypedCDTViewerFilter.java,@noextend this class is not intended to be subclassed by clients.,0,0,Expand
2585,UncallCommandHandler.java,command handler to trigger an uncall operation,1,0,Expand
2074,ICPPASTVirtSpecifier.java,a virt specifier at the end of a function declaration.,0,0,Expand
2586,UncallCommandHandler.java,@since 70,1,0,Expand
2076,ICPPASTVirtSpecifier.java,@noimplement this interface is not intended to be implemented by clients.,0,0,Expand
2077,ICPPASTVirtSpecifier.java,@noextend this interface is not intended to be extended by clients.,1,0,Expand
2589,UPCKeyword.java,enumeration of keywords that upc adds to c99.,0,0,Expand
2078,ICPPASTVirtSpecifier.java,@since 57,1,0,Expand
2590,UPCKeyword.java,@author mike kucera,0,0,Expand
2593,UPCLanguage.java,"implementation of the ilanguage extension point, adds upc as a language to cdt.",1,0,Expand
2594,UPCLanguage.java,@author mike kucera,0,0,Expand
2085,ICPPPointerToMemberType.java,@noimplement this interface is not intended to be implemented by clients.,1,0,Expand
2597,VMHasChildrenUpdate.java,helper class implementation of the @link ihaschildrenupdate update object.,0,0,Expand
2598,VMHasChildrenUpdate.java,@see vmviewerupdate,1,0,Expand
2599,VMHasChildrenUpdate.java,@since 10,0,0,Expand
2603,WhiteSpaceOptions.java,manage code formatter white space options on a higher level.,1,0,Expand
2604,WhiteSpaceOptions.java,preview snippets.,0,0,Expand
2093,IDsfDebugServicesFactory.java,a factory to create dsf services.,1,0,Expand
2605,WhiteSpaceOptions.java,"private void createbeforeellipsis map workingvalues, innernode parent createoption parent, workingvalues, formattermessages^whitespaceoptions vararg parameter, defaultcodeformatterconstants^formatter insert space before ellipsis, vararg parameter preview private void createafterellipsis map workingvalues, innernode parent createoption parent, workingvalues, formattermessages^whitespaceoptions vararg parameter, defaultcodeformatterconstants^formatter insert space after ellipsis, vararg parameter preview syntax element tree private innernode createreturntree map workingvalues, innernode parent final innernode root new innernode parent, workingvalues, formattermessages^whitespaceoptions return createoption root, workingvalues, formattermessages^whitespacetabpage before parenthesized expressions, defaultcodeformatterconstants^formatter insert space before parenthesized expression in return, return preview return root private innernode createthrowtree map workingvalues, innernode parent final innernode root new innernode parent, workingvalues, formattermessages^whitespaceoptions throw createoption root, workingvalues, formattermessages^whitespacetabpage before parenthesized expressions, defaultcodeformatterconstants^formatter insert space before parenthesized expression in throw, throw preview return root",0,0,Expand
2606,WhiteSpaceOptions.java,represents a node in the options tree.,1,0,Expand
2607,WhiteSpaceOptions.java,preview snippets.,0,0,Expand
2096,IDsfDebugServicesFactory.java,@since 11,1,0,Expand
2608,WhiteSpaceOptions.java,"private void createbeforeellipsis map workingvalues, innernode parent createoption parent, workingvalues, formattermessages^whitespaceoptions vararg parameter, defaultcodeformatterconstants^formatter insert space before ellipsis, vararg parameter preview private void createafterellipsis map workingvalues, innernode parent createoption parent, workingvalues, formattermessages^whitespaceoptions vararg parameter, defaultcodeformatterconstants^formatter insert space after ellipsis, vararg parameter preview syntax element tree private innernode createreturntree map workingvalues, innernode parent final innernode root new innernode parent, workingvalues, formattermessages^whitespaceoptions return createoption root, workingvalues, formattermessages^whitespacetabpage before parenthesized expressions, defaultcodeformatterconstants^formatter insert space before parenthesized expression in return, return preview return root private innernode createthrowtree map workingvalues, innernode parent final innernode root new innernode parent, workingvalues, formattermessages^whitespaceoptions throw createoption root, workingvalues, formattermessages^whitespacetabpage before parenthesized expressions, defaultcodeformatterconstants^formatter insert space before parenthesized expression in throw, throw preview return root",0,0,Expand
2609,WhiteSpaceOptions.java,a node representing a group of options in the tree.,1,0,Expand
2610,WhiteSpaceOptions.java,preview snippets.,0,0,Expand
2611,WhiteSpaceOptions.java,"private void createbeforeellipsis map workingvalues, innernode parent createoption parent, workingvalues, formattermessages^whitespaceoptions vararg parameter, defaultcodeformatterconstants^formatter insert space before ellipsis, vararg parameter preview private void createafterellipsis map workingvalues, innernode parent createoption parent, workingvalues, formattermessages^whitespaceoptions vararg parameter, defaultcodeformatterconstants^formatter insert space after ellipsis, vararg parameter preview syntax element tree private innernode createreturntree map workingvalues, innernode parent final innernode root new innernode parent, workingvalues, formattermessages^whitespaceoptions return createoption root, workingvalues, formattermessages^whitespacetabpage before parenthesized expressions, defaultcodeformatterconstants^formatter insert space before parenthesized expression in return, return preview return root private innernode createthrowtree map workingvalues, innernode parent final innernode root new innernode parent, workingvalues, formattermessages^whitespaceoptions throw createoption root, workingvalues, formattermessages^whitespacetabpage before parenthesized expressions, defaultcodeformatterconstants^formatter insert space before parenthesized expression in throw, throw preview return root",1,0,Expand
2100,IGDBTraceControl.java,the tracecontrol service provides access to the debugger tracing functionality.,0,0,Expand
2612,WhiteSpaceOptions.java,a node representing a concrete white space option in the tree.,1,0,Expand
2101,IGDBTraceControl.java,it is used to do such things as start and stop tracing.,0,0,Expand
2102,IGDBTraceControl.java,@since 30,1,0,Expand
2623,WordIgnoreProposal.java,proposal to ignore the word during the current editing session.,0,0,Expand
2625,WorkingCopyTests.java,contains unit test cases for working copies.,1,0,Expand
1607,AbstractCPropertyTab.java,"in this case, we ll able to use",0,0,Expand
1608,AbstractCPropertyTab.java,a lot of utility methods via provider link.,1,0,Expand
1609,AbstractCPropertyTab.java,"in particular, it allows to get current project,",0,0,Expand
1610,AbstractCPropertyTab.java,configuration etc see icpropertyprovider interface.,1,0,Expand
1611,AbstractCPropertyTab.java,a standard way to create buttons ins edit del etc,0,0,Expand
1612,AbstractCPropertyTab.java,and to handle their events see buttonpressed int,1,0,Expand
1613,AbstractCPropertyTab.java,several utility methods to create widgets in the,0,0,Expand
1614,AbstractCPropertyTab.java,"uniform manner setuplabel , setuptext etc .",1,0,Expand
1615,AbstractCPropertyTab.java,means to handle control messages which are the main,0,0,Expand
2127,IInclude.java,represents an include declaration in a c translation unit.,1,0,Expand
1616,AbstractCPropertyTab.java,communication way for new cdt model pages and tabs.,0,0,Expand
2128,IInclude.java,@noextend this interface is not intended to be extended by clients.,1,0,Expand
2129,IInclude.java,@noimplement this interface is not intended to be implemented by clients.,0,0,Expand
2136,IMacroEntry.java,@noextend this interface is not intended to be extended by clients.,1,0,Expand
2137,IMacroEntry.java,@noimplement this interface is not intended to be implemented by clients.,0,0,Expand
2140,IMIBackend.java,service for controlling the back end process.,1,0,Expand
2141,IMIBackend.java,@since 11,0,0,Expand
1634,AddBreakpointRulerAction.java,ruler action to add breakpoint with a dialog properties.,1,0,Expand
2146,IMSASTDeclspecList.java,"represents a microsoft attribute specifier, introduced by declspec.",0,0,Expand
2147,IMSASTDeclspecList.java,@since 66,1,0,Expand
1636,AddLineBreakpointActionDelegate.java,a delegate for the add line breakpoint action.,0,0,Expand
2148,IMSASTDeclspecList.java,@noextend this interface is not intended to be extended by clients.,1,0,Expand
2149,IMSASTDeclspecList.java,@noimplement this interface is not intended to be implemented by clients.,0,0,Expand
1641,AddMemoryBlocks.java,adds memory blocks to the memory view.,1,0,Expand
2154,INodeFactory.java,control flow graph node factory,0,0,Expand
2155,INodeFactory.java,@noextend this interface is not intended to be extended by clients.,1,0,Expand
2161,IPropertyChangeParticipant.java,p,0,0,Expand
2162,IPropertyChangeParticipant.java,clients may implement this interface.,1,0,Expand
1651,AddMemoryBlocks.java,@since 32,0,0,Expand
2163,IPropertyChangeParticipant.java,p,1,0,Expand
1652,AddMemoryBlocks.java,"in order to avoid duplicating the addmemoryblocks method one version for expressions, one for memory space address, we pass in a an opaque parameter and let the logic within addmemoryblocks differentiate where needed via isinstanceof request object used to get the memory spaces",0,0,Expand
2164,IPropertyChangeParticipant.java,@since 50,1,0,Expand
2172,IRefreshAllTarget.java,@since 11,0,0,Expand
1663,AllTemplateEngineTests.java,@since 40,1,0,Expand
2175,IRegisters2.java,service extension of iregisters to manage user defined register groups,0,0,Expand
2176,IRegisters2.java,@since 26,1,0,Expand
1667,AutoconfMacroParameterListValidator.java,this class provides the macro call parameter parsing for the autoconf editor hover,0,0,Expand
2179,IScannerInfoConsoleParser.java,parses a line of command output looking for scanner info entries.,1,0,Expand
2180,IScannerInfoConsoleParser.java,@author vhirsl,0,0,Expand
1669,AutoconfMacroParameterListValidator.java,@author jjohnstn,1,0,Expand
1673,AutotoolsProblemMarkerInfo.java,@noextend this class is not intended to be subclassed by clients.,0,0,Expand
2185,ITestItem.java,@noextend this interface is not intended to be extended by clients.,1,0,Expand
2186,ITestItem.java,@noimplement this interface is not intended to be implemented by clients.,0,0,Expand
1675,BindingClassifierTest.java,tests for @link bindingclassifier .,1,0,Expand
2187,ITestItem.java,represents status of the test item.,0,0,Expand
1678,C99BuildASTParserAction.java,semantic actions called by the c99 parser to build an ast.,1,0,Expand
1679,C99BuildASTParserAction.java,@author mike kucera,0,0,Expand
1682,CConfigurationDescriptionCache.java,cconfigurationdescriptioncache is a proxy class for serialization of configuration description data.,1,0,Expand
2195,IViewInMemory.java,provides the ability to view a variable in the memory view.,0,0,Expand
2196,IViewInMemory.java,@since 74,1,0,Expand
1685,CConfigurationDescriptionCache.java,ol,0,0,Expand
1686,CConfigurationDescriptionCache.java,li initialization,1,0,Expand
1687,CConfigurationDescriptionCache.java,ul,0,0,Expand
2199,LanguageSettingsProvidersSerializer.java,helper class handling serialization and notifications for language settings entries @link iclanguagesettingentry .,1,0,Expand
1688,CConfigurationDescriptionCache.java,li after eclipse started a project is being opened.,0,0,Expand
2200,LanguageSettingsProvidersSerializer.java,those are for readability of xml only,1,0,Expand
1689,CConfigurationDescriptionCache.java,a new cconfigurationdescriptioncache is created,0,0,Expand
2201,LanguageSettingsProvidersSerializer.java,dummy class to represent ill defined provider.,1,0,Expand
1690,CConfigurationDescriptionCache.java,"with cconfigurationdescriptioncache icstorageelement storage, cprojectdescription parent constructor.",0,0,Expand
2202,LanguageSettingsProvidersSerializer.java,those are for readability of xml only,1,0,Expand
1691,CConfigurationDescriptionCache.java,li any clients needed icconfigurationdescription get cconfigurationdescription using constructor,0,0,Expand
1692,CConfigurationDescriptionCache.java,"cconfigurationdescription cconfigurationdata data, string buildsystemid, icdataproxycontainer cr",1,0,Expand
2204,LanguageSettingsProvidersSerializer.java,those are for readability of xml only,0,0,Expand
1693,CConfigurationDescriptionCache.java,where the cconfigurationdescriptioncache is passed as data.,1,0,Expand
2205,LanguageSettingsProvidersSerializer.java,wrapper for workspace providers to ensure level of indirection.,0,0,Expand
1694,CConfigurationDescriptionCache.java,the reference to cache is kept in field fcfgcache.,1,0,Expand
1695,CConfigurationDescriptionCache.java,"li fcfgcache is used to getspecsettings cconfigurationspecsettings, after that fcfgcache is set to null.",0,0,Expand
1696,CConfigurationDescriptionCache.java,ul,1,0,Expand
1697,CConfigurationDescriptionCache.java,li user enters project properties settings,0,0,Expand
2209,LanguageSettingsProvidersSerializer.java,those are for readability of xml only,1,0,Expand
1698,CConfigurationDescriptionCache.java,ul,0,0,Expand
2210,LanguageSettingsProvidersSerializer.java,language settings change event implementation.,1,0,Expand
1699,CConfigurationDescriptionCache.java,li another cconfigurationdescription settings configuration created using the same constructor setting fcfgcache,0,0,Expand
1700,CConfigurationDescriptionCache.java,to the cconfigurationdescriptioncache.,1,0,Expand
1701,CConfigurationDescriptionCache.java,ul,0,0,Expand
1702,CConfigurationDescriptionCache.java,li user changes settings in the settings configuration cconfigurationdescription and saves it,1,0,Expand
1703,CConfigurationDescriptionCache.java,ul,0,0,Expand
1704,CConfigurationDescriptionCache.java,li new cconfigurationdescriptioncache is created from the cconfigurationdescription via constructor,1,0,Expand
1705,CConfigurationDescriptionCache.java,"cconfigurationdescriptioncache icconfigurationdescription basedescription, .",0,0,Expand
1706,CConfigurationDescriptionCache.java,where,1,0,Expand
1707,CConfigurationDescriptionCache.java,basedescription is saved as fbasedescription.,0,0,Expand
2219,MachOBinaryParserPage.java,@noextend this class is not intended to be subclassed by clients.,1,0,Expand
1708,CConfigurationDescriptionCache.java,li cconfigurationdescriptioncache^applydata .,0,0,Expand
1709,CConfigurationDescriptionCache.java,is used to persist the data.,1,0,Expand
2221,ManageConfigRunner.java,@noextend this class is not intended to be subclassed by clients.,0,0,Expand
1710,CConfigurationDescriptionCache.java,at that point,1,0,Expand
2223,MIAsyncErrorProcessor.java,in some cases gdb reports exec commands failure after the ^running event is fired.,0,0,Expand
1712,CConfigurationDescriptionCache.java,ul,1,0,Expand
1713,CConfigurationDescriptionCache.java,ol,0,0,Expand
1714,CConfigurationDescriptionCache.java,@see icconfigurationdescription,1,0,Expand
1715,CConfigurationDescriptionCache.java,@see cconfigurationdescription,0,0,Expand
1716,CConfigurationDescriptionCache.java,@see cprojectdescriptionevent,1,0,Expand
2237,MIAsyncErrorProcessor.java,this class handles these type of situations by firing mierrorevent when such an error appears.,0,0,Expand
2238,MIAsyncErrorProcessor.java,@since 53,1,0,Expand
2246,MIBreakpointsSynchronizer.java,p,0,0,Expand
2247,MIBreakpointsSynchronizer.java,"bug 530377 prior to fixing 530377, events that arrived from gdb faster than",1,0,Expand
2248,MIBreakpointsSynchronizer.java,dsf eclipse fully processed them could cause the state within the,0,0,Expand
2249,MIBreakpointsSynchronizer.java,synchronizer and manager to become corrupt.,1,0,Expand
2250,MIBreakpointsSynchronizer.java,this would happen because it,0,0,Expand
2251,MIBreakpointsSynchronizer.java,"takes multiple dsf stages to complete handling 1 event, so the handling of",1,0,Expand
2252,MIBreakpointsSynchronizer.java,the next event would become intermingled.,0,0,Expand
2253,MIBreakpointsSynchronizer.java,that violated many assumptions in,1,0,Expand
2254,MIBreakpointsSynchronizer.java,the code that the code run in the respective requestmonitor would be on the,0,0,Expand
2255,MIBreakpointsSynchronizer.java,same state.,1,0,Expand
2256,MIBreakpointsSynchronizer.java,this is an unsuprising assumption based on the general idea of,0,0,Expand
2257,MIBreakpointsSynchronizer.java,dsf as not requiring the normal synchronization primitives as everything is,1,0,Expand
2258,MIBreakpointsSynchronizer.java,single threaded.,0,0,Expand
2259,MIBreakpointsSynchronizer.java,"to resolve this problem, there is some code",1,0,Expand
2260,MIBreakpointsSynchronizer.java,@link #queueevent breakpointevent that ensures each event is fully,0,0,Expand
2261,MIBreakpointsSynchronizer.java,processed before the next event starts processing.,0,0,Expand
2262,MIBreakpointsSynchronizer.java,@since 42,0,0,Expand
1755,CDebugModelPresentation.java,@see idebugmodelpresentation,0,0,Expand
1757,CElementDelta.java,@see icelementdelta,0,0,Expand
1759,ClangToolChain.java,the clang toolchain.,0,0,Expand
1762,ClangToolChain.java,@author dschaefer,0,0,Expand
1766,CommonBuildTab.java,common utilities for core build launch configuration tabs.,0,0,Expand
1767,CommonBuildTab.java,@since 91,0,0,Expand
1770,ContainerTabModel.java,@since 12.1,0,0,Expand
1771,ContainerTabModel.java,@author jjohnstn,0,0,Expand
1774,CoreBuildGenericLaunchConfigProvider.java,core launch configuration provider used by generic target types.,0,0,Expand
1775,CoreBuildGenericLaunchConfigProvider.java,@since 83,0,0,Expand
2287,MIDataListRegisterNames.java,data list register names regno,0,0,Expand
2288,MIDataListRegisterNames.java,show a list of register names for the current target.,0,0,Expand
1778,CPPASTProblem.java,c specific implementation allows actions to visit the problem.,0,0,Expand
1780,CPPASTReferenceOperator.java,reference operator for declarators.,0,0,Expand
1787,CPPImplicitVariable.java,represents a variable implicitly created in c code.,0,0,Expand
1788,CPPImplicitVariable.java,for example the initializer of a structured binding decomposition dcl^struct.bind,0,0,Expand
1789,CPPImplicitVariable.java,"code auto first, second decomposed code",0,0,Expand
2301,MIEnvironmentDirectory.java,environment directory r pathdir,0,0,Expand
1790,CPPImplicitVariable.java,the code initializerevaluation code has to be supplied.,0,0,Expand
2302,MIEnvironmentDirectory.java,add directory pathdir to beginning of search path for source files.,0,0,Expand
2303,MIEnvironmentDirectory.java,r will first reset the path to its default,0,0,Expand
2309,MIReverseDebugEnabler.java,@since 42,0,0,Expand
1798,CPropertyTester.java,a property tester that determines if a file is an executable or a c c project.,0,0,Expand
1800,CUIPreferenceInitializer.java,this class implements the setting of the cui initial preference store settings.,0,0,Expand
1801,CUIPreferenceInitializer.java,@noextend this class is not intended to be subclassed by clients.,0,0,Expand
2313,MIStack.java,provide the data.,0,0,Expand
2314,MIStack.java,sub classes must supply the miarg object.,0,0,Expand
2316,MIStack.java,"a map of threadid framescacheinfo, that can be cleared based on a context.",0,0,Expand
2317,MIStack.java,we use this cache for a few reasons,0,0,Expand
2318,MIStack.java,br,0,0,Expand
2319,MIStack.java,"first, two commands such as",0,0,Expand
1808,DefaultEnvironmentContextInfo.java,the default implementation of the icontextinfo used by the environment variable provider,0,0,Expand
2320,MIStack.java,pre,0,0,Expand
1809,DefaultEnvironmentContextInfo.java,"used to represent the configuration, project, workspace and eclipse environment contexts",0,0,Expand
2321,MIStack.java,stack info depth 11,0,0,Expand
1810,DefaultEnvironmentContextInfo.java,@since 30,0,0,Expand
2322,MIStack.java,stack info depth 2,0,0,Expand
2323,MIStack.java,pre,0,0,Expand
2324,MIStack.java,would both be sent to gdb because the command cache sees them as different.,0,0,Expand
2325,MIStack.java,this cache allows us to know that if we already asked for a stack depth,0,0,Expand
2326,MIStack.java,we can potentially re use the answer.,0,0,Expand
2327,MIStack.java,br,0,0,Expand
2328,MIStack.java,the same concept is applicable for the stack list frames command with different limits.,0,0,Expand
2329,MIStack.java,"also, the stack depth can be deduced from the frames list, so we don t need to ask gdb for it again.",0,0,Expand
2330,MIStack.java,p,0,0,Expand
2331,MIStack.java,the second reason is that gdb is unreliable when it comes to returning frames.,0,0,Expand
2332,MIStack.java,the mi protocol only allows to reply,0,0,Expand
2333,MIStack.java,with data or with error.,0,0,Expand
2334,MIStack.java,"when gdb is unwinding sometimes it gets both, and while the console cli protocol has no",0,0,Expand
1823,DisplayDsfExecutor.java,@since 10,0,0,Expand
2335,MIStack.java,"problem with that, for mi, gdb replies randomly, sometimes with data, sometimes with error.",0,0,Expand
2336,MIStack.java,if we cache the valid data,0,0,Expand
2337,MIStack.java,it will eliminate the issue with invalid data on subsequent invocations.,0,0,Expand
2338,MIStack.java,we don t cache errors.,0,0,Expand
2339,MIStack.java,base class for the iframedmdata object that uses an miframe object to,0,0,Expand
1828,DocCommentOwnerBlock.java,project property page for setting documentation comment owner.,0,0,Expand
2340,MIStack.java,provide the data.,0,0,Expand
1829,DocCommentOwnerBlock.java,em this class is not intended for use outside of cdt em,0,0,Expand
2341,MIStack.java,sub classes must provide the miframe object,0,0,Expand
1830,DocCommentOwnerBlock.java,@noextend this class is not intended to be subclassed by clients.,0,0,Expand
1831,DocCommentOwnerBlock.java,@noinstantiate this class is not intended to be instantiated by clients.,0,0,Expand
1836,DOMGCCParserExtensionTestSuite.java,@author jcamelon,0,0,Expand
1838,DOMParserTestSuite.java,@author jcamelon,0,0,Expand
1840,DsfDebugUITools.java,@since 11,0,0,Expand
1842,DummyPage.java,this class is just to replace a category reference in org^eclipse.cdt^ui that we exclude because we do not bring in the org^eclipse.cdt^managedbuild.ui plug in.,0,0,Expand
1847,ElementNumberFormatsContribution.java,@since 22,0,0,Expand
1850,FindStdLibPath.java,the purpose is to find a path where stdc library is located.,0,0,Expand
1851,FindStdLibPath.java,currently the shell script is only for linux.,0,0,Expand
1855,FoldingConfigurationBlock.java,configures c editor folding preferences.,0,0,Expand
1856,FoldingConfigurationBlock.java,@since 30,0,0,Expand
1859,FormattedValueTests.java,tests to verify the operation of formattedvaluesvmutil,0,0,Expand
1860,FormattedValueTests.java,@since 22,0,0,Expand
2372,MIThreadCreatedEvent.java,this can only be detected by gdb mi after gdb 68.,0,0,Expand
2375,MIThreadGroupAddedEvent.java,this can only be detected by gdb mi with gdb 72.,0,0,Expand
2376,MIThreadGroupAddedEvent.java,@since 51,0,0,Expand
1865,GCCKeywords.java,@noextend this interface is not intended to be extended by clients.,0,0,Expand
1866,GCCKeywords.java,@noinstantiate this class is not intended to be instantiated by clients.,0,0,Expand
2380,MultiCfgContributedEnvironment.java,@noextend this class is not intended to be subclassed by clients.,0,0,Expand
1869,GDBControl_7_12.java,need a new finallaunchsequence for gdb 712,0,0,Expand
1870,GDBControl_7_12.java,@since 52,0,0,Expand
2382,MultiLaunchConfigurationTabGroup.java,tab group for launch group.,0,0,Expand
2383,MultiLaunchConfigurationTabGroup.java,"@deprecated see bug 517722, launch groups are now part of platform.",0,0,Expand
1873,GdbExpressionVMProvider.java,a specialization of expressionvmprovider that uses a gdb specific variable vm,0,0,Expand
2386,PDOMDependencyGenerator.java,@author doug schaefer,0,0,Expand
1875,GdbExpressionVMProvider.java,"to understand why this is necessary, see gdbvariablevmnode.",0,0,Expand
2387,PDOMDependencyGenerator.java,@noextend this class is not intended to be subclassed by clients.,0,0,Expand
2388,PDOMDependencyGenerator.java,@noinstantiate this class is not intended to be instantiated by clients.,0,0,Expand
1879,GDBSourceLookup.java,default implementation of @link igdbsourcelookup,0,0,Expand
1880,GDBSourceLookup.java,@since 50,0,0,Expand
2392,PDOMMacroReferenceName.java,"represents declarations, definitions and references to bindings, except for macros.",0,0,Expand
1885,GnuMakefileGenerator.java,@since 12,0,0,Expand
1886,GnuMakefileGenerator.java,@noinstantiate this class is not intended to be instantiated by clients.,0,0,Expand
1887,GnuMakefileGenerator.java,string constants for makefile contents and messages private static final string auto dep comment ^autodeps non nls 1 private static final string message managedmakebuilder^message non nls 1 private static final string build error message ^error non nls 1 private static final string dep incl comment ^module.dep^includes non nls 1 private static final string mod incl comment ^module.make^includes non nls 1 private itool buildtools private boolean buildtoolsused private imanagedbuildinfo info private set outputextensionsset maps of macro names string to values list dependency file variables private vector dependencymakefiles ipath s relative to the top build directory or absolute,0,0,Expand
1888,GnuMakefileGenerator.java,imanagedbuildermakefilegenerator m e t h o d s,0,0,Expand
1889,GnuMakefileGenerator.java,m a k e f i l e s p o p u l a t i o n m e t h o d s,0,0,Expand
2401,ProcessLauncher.java,this class implements external process launching for internal builder.,0,0,Expand
1890,GnuMakefileGenerator.java,m a i n makefile m a k e f i l e m e t h o d s,0,0,Expand
1891,GnuMakefileGenerator.java,s o u r c e s sources^mk m a k e f i l e m e t h o d s,0,0,Expand
1892,GnuMakefileGenerator.java,f r a g m e n t subdir^mk m a k e f i l e m e t h o d s,0,0,Expand
1893,GnuMakefileGenerator.java,m a k e f i l eg e n e r a t i o n c o m m o n m e t h o d s,0,0,Expand
2405,ProcStatParser.java,@author marc dumais,0,0,Expand
1894,GnuMakefileGenerator.java,adds a macro addition prefix to a map of macro names to entries.,0,0,Expand
1895,GnuMakefileGenerator.java,entry prefixes look like,0,0,Expand
2407,ProcStatParser.java,@see also http www^linuxhowtos.org system procstat^htm,0,0,Expand
1896,GnuMakefileGenerator.java,c srcs,0,0,Expand
1897,GnuMakefileGenerator.java,"addprefix root ,",0,0,Expand
1898,GnuMakefileGenerator.java,r e s o u r c e v i s i t o r m e t h o d s,0,0,Expand
2410,QtPDOMNameIndex.java,a data structure for storing lists of pdomnames that are indexed by a string key.,0,0,Expand
1899,GnuMakefileGenerator.java,o t h e r m e t h o d s,0,0,Expand
1900,GnuMakefileGenerator.java,"process a string denoting a filepath in a way compatible for gnu make rules, handling",0,0,Expand
1901,GnuMakefileGenerator.java,windows drive letters and whitespace appropriately.,0,0,Expand
1902,GnuMakefileGenerator.java,p p,0,0,Expand
2414,RenameCSourceFolderChange.java,@author ee4 graf ifs,0,0,Expand
1903,GnuMakefileGenerator.java,the context these paths appear in is on the right hand side of a rule header.,0,0,Expand
1904,GnuMakefileGenerator.java,ie,0,0,Expand
1905,GnuMakefileGenerator.java,p p,0,0,Expand
1906,GnuMakefileGenerator.java,target dep1 dep2 dep3,0,0,Expand
1907,GnuMakefileGenerator.java,p,0,0,Expand
1908,GnuMakefileGenerator.java,@param path the string denoting the path to process,0,0,Expand
1909,GnuMakefileGenerator.java,@throws nullpointerexception is path is null,0,0,Expand
1910,GnuMakefileGenerator.java,@return a suitable make rule compatible path,0,0,Expand
1912,GnuMakefileGenerator.java,what resources have been changed.,0,0,Expand
2424,ReturnCheckerTest.java,test for @see returncheckertest class,0,0,Expand
1913,GnuMakefileGenerator.java,the logic is very simple.,0,0,Expand
1914,GnuMakefileGenerator.java,if a,0,0,Expand
1916,GnuMakefileGenerator.java,in which they are located are dirty so the makefile fragments for them,0,0,Expand
1917,GnuMakefileGenerator.java,have to be regenerated.,0,0,Expand
1918,GnuMakefileGenerator.java,p,0,0,Expand
2431,RulerColumnDescriptor.java,instances can be obtained from a @link rulercolumnregistry .,0,0,Expand
1920,GnuMakefileGenerator.java,itself.,0,0,Expand
2432,RulerColumnDescriptor.java,@since 72,0,0,Expand
1921,GnuMakefileGenerator.java,we are relying on make to do the right things when confronted,0,0,Expand
2433,RulerColumnDescriptor.java,@noinstantiate this class is not intended to be instantiated by clients.,0,0,Expand
1922,GnuMakefileGenerator.java,with a dependency on a moved header file.,0,0,Expand
1923,GnuMakefileGenerator.java,"that said, make will treat",0,0,Expand
1924,GnuMakefileGenerator.java,the missing header file in a dependency rule as a target it has to build,0,0,Expand
1925,GnuMakefileGenerator.java,unless told otherwise.,0,0,Expand
1926,GnuMakefileGenerator.java,these dummy targets are added to the makefile,0,0,Expand
1927,GnuMakefileGenerator.java,to avoid a missing target error.,0,0,Expand
1928,GnuMakefileGenerator.java,string constants for makefile contents and messages private static final string auto dep comment ^autodeps non nls 1 private static final string message managedmakebuilder^message non nls 1 private static final string build error message ^error non nls 1 private static final string dep incl comment ^module.dep^includes non nls 1 private static final string mod incl comment ^module.make^includes non nls 1 private itool buildtools private boolean buildtoolsused private imanagedbuildinfo info private set outputextensionsset maps of macro names string to values list dependency file variables private vector dependencymakefiles ipath s relative to the top build directory or absolute,0,0,Expand
2440,SCDOptionsEnum.java,enumeration class for scanner configuration affecting command line options,0,0,Expand
1929,GnuMakefileGenerator.java,imanagedbuildermakefilegenerator m e t h o d s,0,0,Expand
2441,SCDOptionsEnum.java,@author vhirsl,0,0,Expand
1930,GnuMakefileGenerator.java,m a k e f i l e s p o p u l a t i o n m e t h o d s,0,0,Expand
1931,GnuMakefileGenerator.java,m a i n makefile m a k e f i l e m e t h o d s,0,0,Expand
1932,GnuMakefileGenerator.java,s o u r c e s sources^mk m a k e f i l e m e t h o d s,0,0,Expand
1933,GnuMakefileGenerator.java,f r a g m e n t subdir^mk m a k e f i l e m e t h o d s,0,0,Expand
2445,SourceLookupTest.java,tests that interaction with source lookups works as expected.,0,0,Expand
1934,GnuMakefileGenerator.java,m a k e f i l eg e n e r a t i o n c o m m o n m e t h o d s,0,0,Expand
1935,GnuMakefileGenerator.java,adds a macro addition prefix to a map of macro names to entries.,0,0,Expand
1936,GnuMakefileGenerator.java,entry prefixes look like,0,0,Expand
1937,GnuMakefileGenerator.java,c srcs,0,0,Expand
1938,GnuMakefileGenerator.java,"addprefix root ,",0,0,Expand
2450,SourceLookupTest.java,"located in the @link #build path directory, but it is now located in the",0,0,Expand
1939,GnuMakefileGenerator.java,r e s o u r c e v i s i t o r m e t h o d s,0,0,Expand
2451,SourceLookupTest.java,@link basetestcase#source path directory.,0,0,Expand
1940,GnuMakefileGenerator.java,o t h e r m e t h o d s,0,0,Expand
1941,GnuMakefileGenerator.java,"process a string denoting a filepath in a way compatible for gnu make rules, handling",0,0,Expand
2453,SourceLookupTest.java,the wild card in sourcelookup ^exe can be one of the following to cover the,0,0,Expand
1942,GnuMakefileGenerator.java,windows drive letters and whitespace appropriately.,0,0,Expand
2454,SourceLookupTest.java,different effective types of source lookups that need to be done depending on,0,0,Expand
1943,GnuMakefileGenerator.java,p p,0,0,Expand
2455,SourceLookupTest.java,how the program was compiled.,0,0,Expand
1944,GnuMakefileGenerator.java,the context these paths appear in is on the right hand side of a rule header.,0,0,Expand
2456,SourceLookupTest.java,each of these options produces different debug,0,0,Expand
1945,GnuMakefileGenerator.java,ie,0,0,Expand
2457,SourceLookupTest.java,information about where to find the source file.,0,0,Expand
1946,GnuMakefileGenerator.java,p p,0,0,Expand
2458,SourceLookupTest.java,see the makefile for more,0,0,Expand
1947,GnuMakefileGenerator.java,target dep1 dep2 dep3,0,0,Expand
2459,SourceLookupTest.java,information.,0,0,Expand
1948,GnuMakefileGenerator.java,p,0,0,Expand
2460,SourceLookupTest.java,ul,0,0,Expand
1949,GnuMakefileGenerator.java,@param path the string denoting the path to process,0,0,Expand
2461,SourceLookupTest.java,li b ac b absolute and canonical path no .,0,0,Expand
1950,GnuMakefileGenerator.java,@throws nullpointerexception is path is null,0,0,Expand
2462,SourceLookupTest.java,.,0,0,Expand
1951,GnuMakefileGenerator.java,@return a suitable make rule compatible path,0,0,Expand
2463,SourceLookupTest.java,in path passed to gcc,0,0,Expand
1952,GnuMakefileGenerator.java,this class is used to recursively walk the project and determine which,0,0,Expand
2464,SourceLookupTest.java,li,0,0,Expand
1953,GnuMakefileGenerator.java,modules contribute buildable source files.,0,0,Expand
2466,SourceLookupTest.java,.,0,0,Expand
2467,SourceLookupTest.java,in path passed to gcc,0,0,Expand
2468,SourceLookupTest.java,li,0,0,Expand
2470,SourceLookupTest.java,.,0,0,Expand
2471,SourceLookupTest.java,in path passed to gcc,0,0,Expand
2472,SourceLookupTest.java,li,0,0,Expand
2474,SourceLookupTest.java,.,0,0,Expand
2475,SourceLookupTest.java,in path passed to gcc,0,0,Expand
2476,SourceLookupTest.java,li,0,0,Expand
2478,SourceLookupTest.java,ul,0,0,Expand
2479,SourceLookupTest.java,"in addition, there can also be a b dwarf2 b in the name.",0,0,Expand
2480,SourceLookupTest.java,that means it is,0,0,Expand
2481,SourceLookupTest.java,"designed to run with gdb 74, see comment in makefile for olddwarfflags.",0,0,Expand
2483,SourceLookupTest.java,the result of the variations on compilation arguments means that some of the,0,0,Expand
2484,SourceLookupTest.java,tests are parameterised.,0,0,Expand
2486,SourceLookupTest.java,some of the cdt source lookup features require newer versions of gdb than,0,0,Expand
2487,SourceLookupTest.java,"others, therefore the relevant tests use assumegdbversion methods to be",0,0,Expand
2488,SourceLookupTest.java,skipped when appropriate.,0,0,Expand
2531,SpellEvent.java,spell event fired for words detected by a spell check iterator.,0,0,Expand
2533,StandardCElementLabelProvider.java,celementlabelprovider that respects settings from the appearance preference page.,0,0,Expand
2535,StandardCElementLabelProvider.java,@deprecated use @link appearanceawarelabelprovider instead.,0,0,Expand
2024,GroupDebugContextsCommandHandler.java,command handler to trigger grouping of debug contexts operation.,0,0,Expand
2025,GroupDebugContextsCommandHandler.java,@since 71,0,0,Expand
2539,StringDialogField.java,dialog field containing a label and a text control.,0,0,Expand
2028,IBHistoryAction.java,action used for the include browser forward backward buttons,0,0,Expand
2030,IBuildObject.java,@noextend this class is not intended to be subclassed by clients.,0,0,Expand
2031,IBuildObject.java,@noimplement this interface is not intended to be implemented by clients.,0,0,Expand
2544,ToggleDynamicPrintfAdapter.java,toggles a dynamic printf in a c c editor.,0,0,Expand
2545,ToggleDynamicPrintfAdapter.java,@since 75,0,0,Expand
2036,ICLanguageSettingPathEntry.java,see interface hierarchy for more specifics.,0,0,Expand
2548,TracepointActionsPropertyPage.java,property page for tracepoint actions,0,0,Expand
2549,TracepointActionsPropertyPage.java,@since 21,0,0,Expand
2552,TracingConsole.java,a console that is used to print traces.,0,0,Expand
2041,ICLibraryFileEntry.java,see @link icsettingentry#library file .,0,0,Expand
2553,TracingConsole.java,the console is attached to a launch.,0,0,Expand
2046,ICodeReaderFactory.java,@author jcamelon,0,0,Expand
2558,TracingConsole.java,@since 21,0,0,Expand
2047,ICodeReaderFactory.java,@deprecated replaced by @link includefilecontentprovider,0,0,Expand
2559,TracingConsole.java,this class was moved from package org^eclipse.cdt^dsf.gdb^internal.ui^tracing,0,0,Expand
3074,CloseablesTest.java,unit tests for @link closeables .,0,0,Expand
3077,CloseablesTest.java,@author michael lancaster,1,0,Expand
3082,CollectionTestSuiteBuilder.java,concrete instantiation of @link abstractcollectiontestsuitebuilder for testing collections that,0,0,Expand
3083,CollectionTestSuiteBuilder.java,do not have a more specific tester like @link listtestsuitebuilder or @link,1,0,Expand
3084,CollectionTestSuiteBuilder.java,settestsuitebuilder .,0,0,Expand
3085,CollectionTestSuiteBuilder.java,@author chris povirk,1,0,Expand
3086,CollectionTestSuiteBuilder.java,@author louis wasserman,0,0,Expand
4115,SortedSetNavigationTester.java,a generic junit test which tests operations on a sortedset.,1,0,Expand
4116,SortedSetNavigationTester.java,can t be invoked directly please see,0,0,Expand
4117,SortedSetNavigationTester.java,@code sortedsettestsuitebuilder .,1,0,Expand
4118,SortedSetNavigationTester.java,@author jesse wilson,0,0,Expand
4119,SortedSetNavigationTester.java,@author louis wasserman,1,0,Expand
3095,ConflictingRequirementsException.java,thrown when requirements on a tester method or class conflict with each other.,0,0,Expand
3096,ConflictingRequirementsException.java,@author george van den driessche,1,0,Expand
3099,CountingOutputStream.java,an outputstream that counts the number of bytes written.,0,0,Expand
3100,CountingOutputStream.java,@author chris nokleberg,1,0,Expand
3101,CountingOutputStream.java,@since 10,0,0,Expand
4126,SubscriberTest.java,tests for @link subscriber .,1,0,Expand
4127,SubscriberTest.java,@author cliff biffle,0,0,Expand
4128,SubscriberTest.java,@author colin decker,1,0,Expand
3105,DescendingMultiset.java,a skeleton implementation of a descending multiset.,0,0,Expand
3106,DescendingMultiset.java,only needs @code forwardmultiset and,1,0,Expand
3107,DescendingMultiset.java,@code entryiterator .,0,0,Expand
3108,DescendingMultiset.java,@author louis wasserman,1,0,Expand
4134,TesterRequirements.java,encapsulates the constraints that a class under test must satisfy in order for a tester method to,0,0,Expand
4135,TesterRequirements.java,be run against that class.,1,0,Expand
4136,TesterRequirements.java,@author george van den driessche,0,0,Expand
3113,EqualsTester.java,tester for equals and hashcode methods of a class.,1,0,Expand
3114,EqualsTester.java,p the simplest use case is,0,0,Expand
3115,EqualsTester.java,pre,1,0,Expand
4141,TestStringListGenerator.java,@author kevin bourrillion,0,0,Expand
3117,EqualsTester.java,pre,1,0,Expand
3118,EqualsTester.java,"p this tests @code foo^equals foo , @code foo^equals null , and a few other operations.",0,0,Expand
4143,WrappingScheduledExecutorService.java,an abstract @code scheduledexecutorservice that allows subclasses to @linkplain,1,0,Expand
3119,EqualsTester.java,"p for more extensive testing, add multiple equality groups.",0,0,Expand
4144,WrappingScheduledExecutorService.java,#wraptask callable wrap tasks before they are submitted to the underlying executor.,1,0,Expand
3120,EqualsTester.java,each group should contain objects,0,0,Expand
4145,WrappingScheduledExecutorService.java,p note that task wrapping may occur even if the task is never executed.,1,0,Expand
3121,EqualsTester.java,that are equal to each other but unequal to the objects in any other group.,0,0,Expand
4146,WrappingScheduledExecutorService.java,@author luke sandberg,1,0,Expand
3122,EqualsTester.java,for example,0,0,Expand
3123,EqualsTester.java,pre,1,0,Expand
3124,EqualsTester.java,new equalstester,0,0,Expand
3125,EqualsTester.java,"addequalitygroup new user page , new user page",1,0,Expand
3126,EqualsTester.java,addequalitygroup new user sergey,0,0,Expand
3127,EqualsTester.java,testequals,1,0,Expand
3128,EqualsTester.java,pre,0,0,Expand
3129,EqualsTester.java,p this tests,1,0,Expand
3130,EqualsTester.java,ul,0,0,Expand
3131,EqualsTester.java,li comparing each object against itself returns true,1,0,Expand
3133,EqualsTester.java,li comparing each object against an instance of an incompatible class returns false,0,0,Expand
3134,EqualsTester.java,li comparing each pair of objects within the same equality group returns true,1,0,Expand
3135,EqualsTester.java,li comparing each pair of objects from different equality groups returns false,0,0,Expand
3136,EqualsTester.java,li the hash codes of any two equal objects are equal,1,0,Expand
3137,EqualsTester.java,ul,0,0,Expand
3140,EqualsTester.java,ul,1,0,Expand
3146,EqualsTester.java,ul,0,0,Expand
3147,EqualsTester.java,@author jim mcmaster,1,0,Expand
3148,EqualsTester.java,@author jige yu,0,0,Expand
3149,EqualsTester.java,@since 100,1,0,Expand
3150,EqualsTester.java,class used to test whether equals correctly handles an instance of an incompatible class.,0,0,Expand
3151,EqualsTester.java,"since it is a private inner class, the invoker can never pass in an instance to the tester",1,0,Expand
3182,FeatureSpecificTestSuiteBuilder.java,"creates, based on your criteria, a junit test suite that exhaustively tests the object generated",0,0,Expand
3184,FeatureSpecificTestSuiteBuilder.java,@param b the concrete type of this builder the self type .,1,0,Expand
3185,FeatureSpecificTestSuiteBuilder.java,all the builder methods of this,0,0,Expand
3186,FeatureSpecificTestSuiteBuilder.java,"class such as @link #named return this type, so that builder methods of more derived",1,0,Expand
3188,FeatureSpecificTestSuiteBuilder.java,@param g the type of the generator to be passed to testers in the generated test suite.,0,0,Expand
3189,FeatureSpecificTestSuiteBuilder.java,an,1,0,Expand
3191,FeatureSpecificTestSuiteBuilder.java,information required to parameterize the test.,0,0,Expand
3192,FeatureSpecificTestSuiteBuilder.java,@author george van den driessche,1,0,Expand
3205,ForwardingBlockingDequeTest.java,test for @link forwardingblockingdeque,0,0,Expand
3206,ForwardingBlockingDequeTest.java,@author emily soldal,1,0,Expand
3209,ForwardingImmutableSet.java,gwt implementation of @link immutableset that forwards to another @code set implementation.,0,0,Expand
3210,ForwardingImmutableSet.java,@author hayward chan,1,0,Expand
3214,ForwardingQueueTest.java,tests for @code forwardingqueue .,0,0,Expand
3215,ForwardingQueueTest.java,@author robert konigsberg,1,0,Expand
3216,ForwardingQueueTest.java,@author louis wasserman,0,0,Expand
3220,GwtTestSuite.java,runs all gwt tests.,1,0,Expand
3221,GwtTestSuite.java,grouping them into a suite is much faster than running each as a one test,0,0,Expand
3222,GwtTestSuite.java,"suite, as the per suite setup is expensive.",1,0,Expand
3226,HashFunctionEnum.java,an enum that contains all of the known hash functions.,0,0,Expand
3227,HashFunctionEnum.java,@author kurt alfred kluever,1,0,Expand
3230,HostAndPort.java,an immutable representation of a host and port.,0,0,Expand
3231,HostAndPort.java,p example usage,1,0,Expand
3232,HostAndPort.java,pre,0,0,Expand
3233,HostAndPort.java,hostandport hp hostandport^fromstring 2001 db8 1,1,0,Expand
3235,HostAndPort.java,requirebracketsforipv6,0,0,Expand
3236,HostAndPort.java,hp^gethost returns 2001 db8 1,1,0,Expand
3237,HostAndPort.java,hp^getport returns 80,0,0,Expand
3238,HostAndPort.java,hp^tostring returns 2001 db8 1 80,1,0,Expand
3239,HostAndPort.java,pre,0,0,Expand
3240,HostAndPort.java,p here are some examples of recognized formats,1,0,Expand
3241,HostAndPort.java,ul,0,0,Expand
3242,HostAndPort.java,li example^com,1,0,Expand
3244,HostAndPort.java,li 1920.21,0,0,Expand
3246,HostAndPort.java,li 2001 db8 1 @link #gethost omits brackets,1,0,Expand
3247,HostAndPort.java,li 2001 db8 1 80 @link #gethost omits brackets,0,0,Expand
3248,HostAndPort.java,li 2001 db8 1 use @link #requirebracketsforipv6 to prohibit this,1,0,Expand
3249,HostAndPort.java,ul,0,0,Expand
3250,HostAndPort.java,"p note that this is not an exhaustive list, because these methods are only concerned with",1,0,Expand
3251,HostAndPort.java,"brackets, colons, and port numbers.",0,0,Expand
3253,HostAndPort.java,caller s responsibility.,1,0,Expand
3254,HostAndPort.java,@author paul marks,0,0,Expand
3255,HostAndPort.java,@since 100,1,0,Expand
3282,ImmutableSetHashFloodingDetectionBenchmark.java,benchmark of implementations of @link immutableset#hashfloodingdetected object .,0,0,Expand
3285,ImmutableTable_CustomFieldSerializerBase.java,this class contains static utility methods for writing @link immutabletable gwt field,1,0,Expand
3286,ImmutableTable_CustomFieldSerializerBase.java,serializers.,0,0,Expand
3287,ImmutableTable_CustomFieldSerializerBase.java,serializers should delegate to @link #serialize and @link #instantiate .,1,0,Expand
3288,ImmutableTable_CustomFieldSerializerBase.java,@author chris povirk,0,0,Expand
3293,LazyStackTraceBenchmark.java,quick and dirty benchmark of @link throwables#lazystacktrace throwable .,1,0,Expand
3294,LazyStackTraceBenchmark.java,we benchmark a caller,0,0,Expand
3295,LazyStackTraceBenchmark.java,finder implementation that might be used in a logging framework.,1,0,Expand
3300,LongMathBenchmark.java,benchmarks for the non rounding methods of @code longmath .,0,0,Expand
3301,LongMathBenchmark.java,@author louis wasserman,1,0,Expand
3304,MapPutAllTester.java,a generic junit test which tests @code putall operations on a map.,0,0,Expand
3306,MapPutAllTester.java,please see @link com^google.common^collect.testing^maptestsuitebuilder .,1,0,Expand
3307,MapPutAllTester.java,@author chris povirk,0,0,Expand
3308,MapPutAllTester.java,@author kevin bourrillion,1,0,Expand
3313,MapSerializationTester.java,basic serialization test for maps.,0,0,Expand
3314,MapSerializationTester.java,@author louis wasserman,1,0,Expand
3317,MultimapBuilder.java,a builder for a multimap implementation that allows customization of the backing map and value,0,0,Expand
3318,MultimapBuilder.java,collection implementations used in a particular multimap.,1,0,Expand
3321,MultimapBuilder.java,pre @code,0,0,Expand
3322,MultimapBuilder.java,"listmultimap string, integer treelistmultimap",1,0,Expand
3323,MultimapBuilder.java,multimapbuilder^treekeys ^arraylistvalues ^build,0,0,Expand
3324,MultimapBuilder.java,"setmultimap integer, myenum hashenummultimap",1,0,Expand
3325,MultimapBuilder.java,multimapbuilder^hashkeys ^enumsetvalues myenum^class ^build,0,0,Expand
3326,MultimapBuilder.java,pre,1,0,Expand
3327,MultimapBuilder.java,p @code multimapbuilder instances are immutable.,0,0,Expand
3328,MultimapBuilder.java,invoking a configuration method has no effect,1,0,Expand
3329,MultimapBuilder.java,on the receiving instance you must store and use the new builder instance it returns instead.,0,0,Expand
3330,MultimapBuilder.java,"p the generated multimaps are serializable if the key and value types are serializable, unless",1,0,Expand
3331,MultimapBuilder.java,stated otherwise in one of the configuration methods.,0,0,Expand
3332,MultimapBuilder.java,@author louis wasserman,1,0,Expand
3333,MultimapBuilder.java,@param k0 an upper bound on the key type of the generated multimap.,0,0,Expand
3334,MultimapBuilder.java,@param v0 an upper bound on the value type of the generated multimap.,1,0,Expand
3335,MultimapBuilder.java,@since 160,0,0,Expand
3336,MultimapBuilder.java,leaving k and v as upper bounds rather than the actual key and value types allows type,1,0,Expand
3337,MultimapBuilder.java,parameters to be left implicit more often.,0,0,Expand
3338,MultimapBuilder.java,cachebuilder uses the same technique.,1,0,Expand
3339,MultimapBuilder.java,an intermediate stage in a @link multimapbuilder in which the key value collection map,0,0,Expand
3340,MultimapBuilder.java,"implementation has been specified, but the value collection implementation has not.",1,0,Expand
3341,MultimapBuilder.java,@param k0 the upper bound on the key type of the generated multimap.,0,0,Expand
3342,MultimapBuilder.java,@since 160,1,0,Expand
3343,MultimapBuilder.java,leaving k and v as upper bounds rather than the actual key and value types allows type,0,0,Expand
3344,MultimapBuilder.java,parameters to be left implicit more often.,1,0,Expand
3345,MultimapBuilder.java,cachebuilder uses the same technique.,0,0,Expand
3346,MultimapBuilder.java,a specialization of @link multimapbuilder that generates @link listmultimap instances.,1,0,Expand
3347,MultimapBuilder.java,@since 160,0,0,Expand
3348,MultimapBuilder.java,leaving k and v as upper bounds rather than the actual key and value types allows type,1,0,Expand
3349,MultimapBuilder.java,parameters to be left implicit more often.,0,0,Expand
3350,MultimapBuilder.java,cachebuilder uses the same technique.,1,0,Expand
3352,MultimapBuilder.java,@since 160,0,0,Expand
3353,MultimapBuilder.java,leaving k and v as upper bounds rather than the actual key and value types allows type,1,0,Expand
3354,MultimapBuilder.java,parameters to be left implicit more often.,0,0,Expand
3355,MultimapBuilder.java,cachebuilder uses the same technique.,1,0,Expand
3357,MultimapBuilder.java,@since 160,0,0,Expand
3390,MultimapBuilderTest.java,tests for @link multimapbuilder .,1,0,Expand
3391,MultimapBuilderTest.java,@author louis wasserman,0,0,Expand
3394,NullsLastOrdering_CustomFieldSerializer.java,this class implements the gwt serialization of @link nullslastordering .,1,0,Expand
3395,NullsLastOrdering_CustomFieldSerializer.java,@author chris povirk,0,0,Expand
3398,ObjectCountHashMap.java,objectcounthashmap is an implementation of @code abstractobjectcountmap that uses arrays to,1,0,Expand
3399,ObjectCountHashMap.java,store key objects and count values.,0,0,Expand
3400,ObjectCountHashMap.java,comparing to using a traditional @code hashmap,1,0,Expand
3401,ObjectCountHashMap.java,"implementation which stores keys and count values as map entries, @code objectcounthashmap",0,0,Expand
3402,ObjectCountHashMap.java,minimizes object allocation and reduces memory footprint.,1,0,Expand
3403,ObjectCountHashMap.java,"p in the absence of element deletions, this will iterate over elements in insertion order.",0,0,Expand
3410,PeekingIterator.java,an iterator that supports a one element lookahead while iterating.,1,0,Expand
3411,PeekingIterator.java,p see the guava user guide article on a href,0,0,Expand
3412,PeekingIterator.java,https github^com google guava wiki collectionhelpersexplained#peekingiterator @code,1,0,Expand
3413,PeekingIterator.java,peekingiterator a .,0,0,Expand
3414,PeekingIterator.java,@author mick killianey,1,0,Expand
3415,PeekingIterator.java,@since 20,0,0,Expand
3422,Preconditions.java,static convenience methods that help a method or constructor check whether it was invoked,1,0,Expand
3424,Preconditions.java,"p if the precondition is not met, the @code preconditions method throws an unchecked exception",0,0,Expand
3428,Preconditions.java,pre @code,1,0,Expand
3434,Preconditions.java,p to be replaced with the more compact,0,0,Expand
3435,Preconditions.java,pre @code,1,0,Expand
3437,Preconditions.java,"checkargument value 0, input is negative %s , value",0,0,Expand
3440,Preconditions.java,"p so that a hypothetical bad caller of this method, such as",1,0,Expand
3441,Preconditions.java,pre @code,0,0,Expand
3442,Preconditions.java,void examplebadcaller,1,0,Expand
3443,Preconditions.java,double d sqrt 10,0,0,Expand
3445,Preconditions.java,p would be flagged as having called @code sqrt with an illegal argument.,1,0,Expand
3446,Preconditions.java,h3 performance h3,0,0,Expand
3447,Preconditions.java,p avoid passing message arguments that are expensive to compute your code will always compute,1,0,Expand
3448,Preconditions.java,"them, even though they usually won t be needed.",0,0,Expand
3449,Preconditions.java,"if you have such arguments, use the conventional",1,0,Expand
3450,Preconditions.java,if throw idiom instead.,0,0,Expand
3451,Preconditions.java,"p depending on your message arguments, memory may be allocated for boxing and varargs array",1,0,Expand
3452,Preconditions.java,creation.,0,0,Expand
3454,Preconditions.java,allocations in many common cases.,1,0,Expand
3455,Preconditions.java,"p the message string is not formatted unless the exception will be thrown, so the cost of the",0,0,Expand
3456,Preconditions.java,string formatting itself should not be a concern.,1,0,Expand
3457,Preconditions.java,"p as with any performance concerns, you should consider profiling your code in a production",0,0,Expand
3458,Preconditions.java,environment if possible before spending a lot of effort on tweaking a particular element.,1,0,Expand
3461,Preconditions.java,continue to throw,0,0,Expand
3462,Preconditions.java,standard jdk exceptions such as @link java^util.nosuchelementexception or @link,1,0,Expand
3463,Preconditions.java,unsupportedoperationexception in the situations they are intended for.,0,0,Expand
3465,Preconditions.java,p it is of course possible to use the methods of this class to check for invalid conditions,1,0,Expand
3466,Preconditions.java,which are i not the caller s fault i .,0,0,Expand
3467,Preconditions.java,doing so is b not recommended b because it is,1,0,Expand
3468,Preconditions.java,misleading to future readers of the code and of stack traces.,0,0,Expand
3469,Preconditions.java,see a,1,0,Expand
3470,Preconditions.java,href https github^com google guava wiki conditionalfailuresexplained conditional failures,0,0,Expand
3471,Preconditions.java,explained a in the guava user guide for more advice.,1,0,Expand
3472,Preconditions.java,"notably, @link verify offers assertions",0,0,Expand
3474,Preconditions.java,h3 @code java^util.objects^requirenonnull h3,1,0,Expand
3475,Preconditions.java,p projects which use @code com^google.common should generally avoid the use of @link,0,0,Expand
3476,Preconditions.java,java^util.objects#requirenonnull object .,1,0,Expand
3477,Preconditions.java,"instead, use whichever of @link",0,0,Expand
3478,Preconditions.java,#checknotnull object or @link verify#verifynotnull object is appropriate to the situation.,1,0,Expand
3479,Preconditions.java,the same goes for the message accepting overloads.,0,0,Expand
3480,Preconditions.java,h3 only @code %s is supported h3,1,0,Expand
3482,Preconditions.java,strings.,0,0,Expand
3483,Preconditions.java,"this only supports the @code %s specifier, not the full range of @link",0,0,Expand
3484,Preconditions.java,java^util.formatter specifiers.,0,0,Expand
3485,Preconditions.java,"however, note that if the number of arguments does not match the",0,0,Expand
3487,Preconditions.java,"behave as expected, and will still include all argument values in the error message the message",0,0,Expand
3488,Preconditions.java,will simply not be formatted exactly as intended.,0,0,Expand
3489,Preconditions.java,h3 more information h3,0,0,Expand
3490,Preconditions.java,p see the guava user guide on a,0,0,Expand
3493,Preconditions.java,@author kevin bourrillion,0,0,Expand
3494,Preconditions.java,@since 20,0,0,Expand
3580,RegularImmutableList_CustomFieldSerializer.java,this class implements the gwt serialization of @link regularimmutablelist .,0,0,Expand
3581,RegularImmutableList_CustomFieldSerializer.java,@author hayward chan,0,0,Expand
3585,ReserializingTestCollectionGenerator.java,reserializes the sets created by another test set generator.,0,0,Expand
3587,ReserializingTestCollectionGenerator.java,@author jesse wilson,0,0,Expand
3590,Resources.java,provides utility methods for working with resources in the classpath.,0,0,Expand
3594,Resources.java,p all method parameters must be non null unless documented otherwise.,0,0,Expand
3595,Resources.java,@author chris nokleberg,0,0,Expand
3596,Resources.java,@author ben yu,0,0,Expand
3597,Resources.java,@author colin decker,0,0,Expand
3598,Resources.java,@since 10,0,0,Expand
3607,SmoothRateLimiter.java,"how is the ratelimiter designed, and why?",0,0,Expand
3608,SmoothRateLimiter.java,"the primary feature of a ratelimiter is its stable rate , the maximum rate that is should",0,0,Expand
3609,SmoothRateLimiter.java,allow at normal conditions.,0,0,Expand
3610,SmoothRateLimiter.java,"this is enforced by throttling incoming requests as needed, ie",0,0,Expand
3611,SmoothRateLimiter.java,"compute, for an incoming request, the appropriate throttle time, and make the calling thread",0,0,Expand
3612,SmoothRateLimiter.java,wait as much.,0,0,Expand
3649,SmoothRateLimiter.java,how this works is best explained with an example,0,0,Expand
3650,SmoothRateLimiter.java,"for a ratelimiter that produces 1 token per second, every second that goes by with the",0,0,Expand
3651,SmoothRateLimiter.java,"ratelimiter being unused, we increase storedpermits by 1.",0,0,Expand
3652,SmoothRateLimiter.java,say we leave the ratelimiter unused,0,0,Expand
3653,SmoothRateLimiter.java,"for 10 seconds ie, we expected a request at time x, but we are at time x 10 seconds before",0,0,Expand
2630,AbstractCollectionTester.java,base class for collection testers.,0,0,Expand
3654,SmoothRateLimiter.java,"a request actually arrives this is also related to the point made in the last paragraph , thus",0,0,Expand
2631,AbstractCollectionTester.java,@param e the element type of the collection to be tested.,0,0,Expand
3655,SmoothRateLimiter.java,storedpermits becomes 100 assuming maxstoredpermits 100 .,0,0,Expand
2632,AbstractCollectionTester.java,@author kevin bourrillion,0,0,Expand
3656,SmoothRateLimiter.java,"at that point, a request of",0,0,Expand
3657,SmoothRateLimiter.java,acquire 3 arrives.,0,0,Expand
3658,SmoothRateLimiter.java,"we serve this request out of storedpermits, and reduce that to 70 how",0,0,Expand
3659,SmoothRateLimiter.java,this is translated to throttling time is discussed later .,0,0,Expand
2636,AbstractListeningExecutorService.java,abstract @link listeningexecutorservice implementation that creates @link listenablefuture,0,0,Expand
3660,SmoothRateLimiter.java,"immediately after, assume that an",0,0,Expand
2637,AbstractListeningExecutorService.java,instances for each @link runnable and @link callable submitted to it.,0,0,Expand
3661,SmoothRateLimiter.java,acquire 10 request arriving.,0,0,Expand
3662,SmoothRateLimiter.java,"we serve the request partly from storedpermits, using all the",0,0,Expand
3663,SmoothRateLimiter.java,"remaining 70 permits, and the remaining 30, we serve them by fresh permits produced by the",0,0,Expand
2640,AbstractListeningExecutorService.java,"p in addition to @link #execute , subclasses must implement all methods related to shutdown and",0,0,Expand
3664,SmoothRateLimiter.java,rate limiter.,0,0,Expand
2641,AbstractListeningExecutorService.java,termination.,0,0,Expand
3665,SmoothRateLimiter.java,we already know how much time it takes to serve 3 fresh permits if the rate is,0,0,Expand
2642,AbstractListeningExecutorService.java,@author chris povirk,0,0,Expand
3666,SmoothRateLimiter.java,"1 token per second , then this will take 3 seconds.",0,0,Expand
2643,AbstractListeningExecutorService.java,@since 140,0,0,Expand
3667,SmoothRateLimiter.java,but what does it mean to serve 7 stored,0,0,Expand
3668,SmoothRateLimiter.java,permits?,0,0,Expand
3669,SmoothRateLimiter.java,"as explained above, there is no unique answer.",0,0,Expand
3670,SmoothRateLimiter.java,if we are primarily interested to deal,0,0,Expand
3671,SmoothRateLimiter.java,"with underutilization, then we want stored permits to be given out faster than fresh ones,",0,0,Expand
3672,SmoothRateLimiter.java,because underutilization free resources for the taking.,0,0,Expand
3673,SmoothRateLimiter.java,if we are primarily interested to,0,0,Expand
3674,SmoothRateLimiter.java,"deal with overflow, then stored permits could be given out slower than fresh ones.",0,0,Expand
3675,SmoothRateLimiter.java,"thus, we",0,0,Expand
2652,AbstractLoadingCache.java,this class provides a skeletal implementation of the @code cache interface to minimize the,0,0,Expand
3676,SmoothRateLimiter.java,require a different in each case function that translates storedpermits to throttling time.,0,0,Expand
2653,AbstractLoadingCache.java,effort required to implement this interface.,0,0,Expand
2654,AbstractLoadingCache.java,"p to implement a cache, the programmer needs only to extend this class and provide an",0,0,Expand
3678,SmoothRateLimiter.java,the,0,0,Expand
3679,SmoothRateLimiter.java,underlying model is a continuous function mapping storedpermits from 00 to maxstoredpermits,0,0,Expand
2656,AbstractLoadingCache.java,@link,0,0,Expand
3681,SmoothRateLimiter.java,storedpermits,0,0,Expand
3682,SmoothRateLimiter.java,essentially measure unused time we spend unused time buying storing permits.,0,0,Expand
3683,SmoothRateLimiter.java,rate is,0,0,Expand
3684,SmoothRateLimiter.java,"permits time , thus 1 rate time permits .",0,0,Expand
3685,SmoothRateLimiter.java,"thus, 1 rate time permits times",0,0,Expand
2662,AbstractLoadingCache.java,all other methods throw,0,0,Expand
2664,AbstractLoadingCache.java,@author charles fry,0,0,Expand
3688,SmoothRateLimiter.java,of requested permits.,0,0,Expand
2665,AbstractLoadingCache.java,@since 110,0,0,Expand
3697,SmoothRateLimiter.java,this guarantees that we handle,0,0,Expand
3701,SmoothRateLimiter.java,integrals .,0,0,Expand
3704,SmoothRateLimiter.java,cost as fresh ones 1 qps is the cost for each .,0,0,Expand
2681,AbstractMultimap.java,"a skeleton @code multimap implementation, not necessarily in terms of a @code map .",0,0,Expand
2682,AbstractMultimap.java,@author louis wasserman,0,0,Expand
2685,AbstractMultimapTester.java,superclass for all @code multimap testers.,0,0,Expand
3709,SmoothRateLimiter.java,underutilization.,0,0,Expand
2686,AbstractMultimapTester.java,@author louis wasserman,0,0,Expand
2689,AbstractSortedKeySortedSetMultimap.java,basic implementation of a @link sortedsetmultimap with a sorted key set.,0,0,Expand
3713,SmoothRateLimiter.java,"last, but not least consider a ratelimiter with rate of 1 permit per second, currently",0,0,Expand
2690,AbstractSortedKeySortedSetMultimap.java,p this superclass allows @code treemultimap to override methods to return navigable set and,0,0,Expand
3714,SmoothRateLimiter.java,"completely unused, and an expensive acquire 100 request comes.",0,0,Expand
2691,AbstractSortedKeySortedSetMultimap.java,"map types in non gwt only, while gwt code will inherit the sortedmap sortedset overrides.",0,0,Expand
3715,SmoothRateLimiter.java,it would be nonsensical to just,0,0,Expand
2692,AbstractSortedKeySortedSetMultimap.java,@author louis wasserman,0,0,Expand
3717,SmoothRateLimiter.java,why wait without doing anything?,0,0,Expand
3718,SmoothRateLimiter.java,a much,0,0,Expand
3720,SmoothRateLimiter.java,"instead , and postpone subsequent requests as needed.",0,0,Expand
2697,ArbitraryInstances.java,"supplies an arbitrary default instance for a wide range of types, often useful in testing",0,0,Expand
2698,ArbitraryInstances.java,utilities.,0,0,Expand
3722,SmoothRateLimiter.java,"task immediately, and postpone by 100 seconds future requests, thus we allow for work to get",0,0,Expand
3724,SmoothRateLimiter.java,this has important consequences it means that the ratelimiter doesn t remember the time of the,0,0,Expand
3725,SmoothRateLimiter.java,"last request, but it remembers the expected time of the next request.",0,0,Expand
3726,SmoothRateLimiter.java,this also enables,0,0,Expand
3727,SmoothRateLimiter.java,us to tell immediately see tryacquire timeout whether a particular timeout is enough to get,0,0,Expand
3728,SmoothRateLimiter.java,"us to the point of the next scheduling time, since we always maintain that.",0,0,Expand
3729,SmoothRateLimiter.java,and what we mean by,0,0,Expand
3730,SmoothRateLimiter.java,an unused ratelimiter is also defined by that notion when we observe that the,0,0,Expand
2707,ArbitraryInstances.java,p all default instances returned by @link #get are generics safe.,0,0,Expand
3731,SmoothRateLimiter.java,"expected arrival time of the next request is actually in the past, then the difference now",0,0,Expand
2708,ArbitraryInstances.java,clients won t get type,0,0,Expand
3732,SmoothRateLimiter.java,"past is the amount of time that the ratelimiter was formally unused, and it is that amount of",0,0,Expand
2709,ArbitraryInstances.java,"errors for using @code get comparator^class as a @code comparator foo , for example.",0,0,Expand
3733,SmoothRateLimiter.java,time which we translate to storedpermits.,0,0,Expand
2710,ArbitraryInstances.java,immutable empty instances are returned for collection types @code for string @code 0 for,0,0,Expand
3734,SmoothRateLimiter.java,we increase storedpermits with the amount of permits,0,0,Expand
2711,ArbitraryInstances.java,number types reasonable default instance for other stateless types.,0,0,Expand
3735,SmoothRateLimiter.java,that would have been produced in that idle time .,0,0,Expand
2712,ArbitraryInstances.java,"for mutable types, a fresh",0,0,Expand
3736,SmoothRateLimiter.java,"so, if rate 1 permit per second, and",0,0,Expand
2713,ArbitraryInstances.java,instance is created each time @code get is called.,0,0,Expand
2714,ArbitraryInstances.java,@author kevin bourrillion,0,0,Expand
3738,SmoothRateLimiter.java,we would only increase it for arrivals later than the expected one second.,0,0,Expand
2715,ArbitraryInstances.java,@author ben yu,0,0,Expand
3739,SmoothRateLimiter.java,the time when the next request no matter its size will be granted.,0,0,Expand
2716,ArbitraryInstances.java,@since 120,0,0,Expand
3740,SmoothRateLimiter.java,"after granting a request,",0,0,Expand
3741,SmoothRateLimiter.java,this is pushed further in the future.,0,0,Expand
3742,SmoothRateLimiter.java,large requests push this further than small requests.,0,0,Expand
2746,ArrayListMultimapGwtSerializationDependencies.java,a dummy superclass to support gwt serialization of the element types of an @link,0,0,Expand
2747,ArrayListMultimapGwtSerializationDependencies.java,arraylistmultimap .,0,0,Expand
3772,SmoothRateLimiter.java,"p in summary, the time it takes to move to the left spend k permits , is equal to the area of",0,0,Expand
2749,ArrayListMultimapGwtSerializationDependencies.java,"p for details about this hack, see @link gwtserializationdependencies , which takes the same",0,0,Expand
3773,SmoothRateLimiter.java,the function of width k.,0,0,Expand
2750,ArrayListMultimapGwtSerializationDependencies.java,approach but with a subclass rather than a superclass.,0,0,Expand
3777,SmoothRateLimiter.java,the,0,0,Expand
3778,SmoothRateLimiter.java,reason that this is warmupperiod 2 is to maintain the behavior of the original implementation,0,0,Expand
2757,AtomicDoubleArrayTest.java,source,0,0,Expand
2758,AtomicDoubleArrayTest.java,http gee^cs.oswego^edu cgi bin viewcvs^cgi jsr166 src test tck jsr166e atomicdoublearraytest^java?revision 113,0,0,Expand
2759,AtomicDoubleArrayTest.java,modified to adapt to guava coding conventions,0,0,Expand
2760,AtomicDoubleArrayTest.java,unit test for @link atomicdoublearray .,0,0,Expand
3787,SmoothRateLimiter.java,therefore,0,0,Expand
2765,BaseEncodingBenchmark.java,benchmark for @code baseencoding performance.,0,0,Expand
2767,BloomFilter.java,a bloom filter for instances of @code t .,0,0,Expand
2768,BloomFilter.java,a bloom filter offers an approximate containment test,0,0,Expand
2769,BloomFilter.java,"with one sided error if it claims that an element is contained in it, this might be in error,",0,0,Expand
3793,SmoothRateLimiter.java,this is the area of the pictured,0,0,Expand
2770,BloomFilter.java,"but if it claims that an element is i not i contained in it, then this is definitely true.",0,0,Expand
2771,BloomFilter.java,"p if you are unfamiliar with bloom filters, this nice a",0,0,Expand
2772,BloomFilter.java,href http llimllib^github.com bloomfilter tutorial tutorial a may help you understand how,0,0,Expand
2773,BloomFilter.java,they work.,0,0,Expand
3801,SmoothRateLimiter.java,"how is the ratelimiter designed, and why?",0,0,Expand
3802,SmoothRateLimiter.java,"the primary feature of a ratelimiter is its stable rate , the maximum rate that is should",0,0,Expand
3803,SmoothRateLimiter.java,allow at normal conditions.,0,0,Expand
3804,SmoothRateLimiter.java,"this is enforced by throttling incoming requests as needed, ie",0,0,Expand
3805,SmoothRateLimiter.java,"compute, for an incoming request, the appropriate throttle time, and make the calling thread",0,0,Expand
3806,SmoothRateLimiter.java,wait as much.,0,0,Expand
2785,BloomFilter.java,"p as of guava 230, this class is thread safe and lock free.",0,0,Expand
2786,BloomFilter.java,it internally uses atomics and,0,0,Expand
2787,BloomFilter.java,compare and swap to ensure correctness when multiple threads are used to access it.,0,0,Expand
2788,BloomFilter.java,@param t the type of instances that the @code bloomfilter accepts,0,0,Expand
2789,BloomFilter.java,@author dimitris andreou,0,0,Expand
2790,BloomFilter.java,@author kevin bourrillion,0,0,Expand
2791,BloomFilter.java,@since 110 thread safe since 230,0,0,Expand
2792,BloomFilter.java,"cheat sheet m total bits n expected insertions b m n, bits per insertion p expected false positive probability 1 optimal k b ln2 2 p 1 e ^ kn m ^k 3 for optimal k p 2 ^ k 06185^b 4 for optimal k m nlnp ln2 ^ 2",0,0,Expand
2793,BloomFilter.java,"a strategy to translate t instances, to @code numhashfunctions bit indexes.",0,0,Expand
2794,BloomFilter.java,p implementations should be collections of pure functions ie stateless .,0,0,Expand
3843,SmoothRateLimiter.java,how this works is best explained with an example,0,0,Expand
3844,SmoothRateLimiter.java,"for a ratelimiter that produces 1 token per second, every second that goes by with the",0,0,Expand
3845,SmoothRateLimiter.java,"ratelimiter being unused, we increase storedpermits by 1.",0,0,Expand
3846,SmoothRateLimiter.java,say we leave the ratelimiter unused,0,0,Expand
3847,SmoothRateLimiter.java,"for 10 seconds ie, we expected a request at time x, but we are at time x 10 seconds before",0,0,Expand
3848,SmoothRateLimiter.java,"a request actually arrives this is also related to the point made in the last paragraph , thus",0,0,Expand
3849,SmoothRateLimiter.java,storedpermits becomes 100 assuming maxstoredpermits 100 .,0,0,Expand
3850,SmoothRateLimiter.java,"at that point, a request of",0,0,Expand
3851,SmoothRateLimiter.java,acquire 3 arrives.,0,0,Expand
3852,SmoothRateLimiter.java,"we serve this request out of storedpermits, and reduce that to 70 how",0,0,Expand
3853,SmoothRateLimiter.java,this is translated to throttling time is discussed later .,0,0,Expand
3854,SmoothRateLimiter.java,"immediately after, assume that an",0,0,Expand
3855,SmoothRateLimiter.java,acquire 10 request arriving.,0,0,Expand
3856,SmoothRateLimiter.java,"we serve the request partly from storedpermits, using all the",0,0,Expand
3857,SmoothRateLimiter.java,"remaining 70 permits, and the remaining 30, we serve them by fresh permits produced by the",0,0,Expand
3858,SmoothRateLimiter.java,rate limiter.,0,0,Expand
3859,SmoothRateLimiter.java,we already know how much time it takes to serve 3 fresh permits if the rate is,0,0,Expand
3860,SmoothRateLimiter.java,"1 token per second , then this will take 3 seconds.",0,0,Expand
3861,SmoothRateLimiter.java,but what does it mean to serve 7 stored,0,0,Expand
3862,SmoothRateLimiter.java,permits?,0,0,Expand
3863,SmoothRateLimiter.java,"as explained above, there is no unique answer.",0,0,Expand
3864,SmoothRateLimiter.java,if we are primarily interested to deal,0,0,Expand
3865,SmoothRateLimiter.java,"with underutilization, then we want stored permits to be given out faster than fresh ones,",0,0,Expand
3866,SmoothRateLimiter.java,because underutilization free resources for the taking.,0,0,Expand
3867,SmoothRateLimiter.java,if we are primarily interested to,0,0,Expand
2844,CacheBuilder.java,p these features are all optional caches can be created using all or none of them.,0,0,Expand
3868,SmoothRateLimiter.java,"deal with overflow, then stored permits could be given out slower than fresh ones.",0,0,Expand
3869,SmoothRateLimiter.java,"thus, we",0,0,Expand
2846,CacheBuilder.java,cache instances created by @code cachebuilder will not perform any type of eviction.,0,0,Expand
3870,SmoothRateLimiter.java,require a different in each case function that translates storedpermits to throttling time.,0,0,Expand
2847,CacheBuilder.java,p usage example,0,0,Expand
2848,CacheBuilder.java,pre @code,0,0,Expand
3872,SmoothRateLimiter.java,the,0,0,Expand
2849,CacheBuilder.java,"loadingcache key, graph graphs cachebuilder^newbuilder",0,0,Expand
3873,SmoothRateLimiter.java,underlying model is a continuous function mapping storedpermits from 00 to maxstoredpermits,0,0,Expand
2850,CacheBuilder.java,maximumsize 10000,0,0,Expand
2851,CacheBuilder.java,expireafterwrite duration^ofminutes 10,0,0,Expand
3875,SmoothRateLimiter.java,storedpermits,0,0,Expand
2852,CacheBuilder.java,removallistener my listener,0,0,Expand
3876,SmoothRateLimiter.java,essentially measure unused time we spend unused time buying storing permits.,0,0,Expand
2853,CacheBuilder.java,build,0,0,Expand
3877,SmoothRateLimiter.java,rate is,0,0,Expand
2854,CacheBuilder.java,"new cacheloader key, graph",0,0,Expand
3878,SmoothRateLimiter.java,"permits time , thus 1 rate time permits .",0,0,Expand
2855,CacheBuilder.java,public graph load key key throws anyexception,0,0,Expand
3879,SmoothRateLimiter.java,"thus, 1 rate time permits times",0,0,Expand
2856,CacheBuilder.java,return createexpensivegraph key,0,0,Expand
2857,CacheBuilder.java,pre,0,0,Expand
2858,CacheBuilder.java,"p or equivalently,",0,0,Expand
3882,SmoothRateLimiter.java,of requested permits.,0,0,Expand
2859,CacheBuilder.java,pre @code,0,0,Expand
2863,CacheBuilder.java,removallistener my listener,0,0,Expand
2864,CacheBuilder.java,build,0,0,Expand
2865,CacheBuilder.java,"new cacheloader key, graph",0,0,Expand
2866,CacheBuilder.java,public graph load key key throws anyexception,0,0,Expand
2867,CacheBuilder.java,return createexpensivegraph key,0,0,Expand
3891,SmoothRateLimiter.java,this guarantees that we handle,0,0,Expand
2868,CacheBuilder.java,pre,0,0,Expand
2869,CacheBuilder.java,p the returned cache is implemented as a hash table with similar performance characteristics to,0,0,Expand
2870,CacheBuilder.java,@link concurrenthashmap .,0,0,Expand
2871,CacheBuilder.java,it implements all optional operations of the @link loadingcache and,0,0,Expand
3895,SmoothRateLimiter.java,integrals .,0,0,Expand
2872,CacheBuilder.java,@link cache interfaces.,0,0,Expand
2873,CacheBuilder.java,the @code asmap view and its collection views have i weakly,0,0,Expand
2874,CacheBuilder.java,consistent iterators i .,0,0,Expand
3898,SmoothRateLimiter.java,cost as fresh ones 1 qps is the cost for each .,0,0,Expand
2875,CacheBuilder.java,"this means that they are safe for concurrent use, but if other threads",0,0,Expand
2876,CacheBuilder.java,"modify the cache after the iterator is created, it is undefined which of these changes, if any,",0,0,Expand
2877,CacheBuilder.java,are reflected in that iterator.,0,0,Expand
2878,CacheBuilder.java,these iterators never throw @link,0,0,Expand
2879,CacheBuilder.java,concurrentmodificationexception .,0,0,Expand
3903,SmoothRateLimiter.java,underutilization.,0,0,Expand
2881,CacheBuilder.java,object#equals equals method to determine equality for keys or values.,0,0,Expand
2882,CacheBuilder.java,"however, if @link",0,0,Expand
2883,CacheBuilder.java,"#weakkeys was specified, the cache uses identity @code comparisons instead for keys.",0,0,Expand
3907,SmoothRateLimiter.java,"last, but not least consider a ratelimiter with rate of 1 permit per second, currently",0,0,Expand
2884,CacheBuilder.java,"likewise, if @link #weakvalues or @link #softvalues was specified, the cache uses identity",0,0,Expand
3908,SmoothRateLimiter.java,"completely unused, and an expensive acquire 100 request comes.",0,0,Expand
2885,CacheBuilder.java,comparisons for values.,0,0,Expand
3909,SmoothRateLimiter.java,it would be nonsensical to just,0,0,Expand
3911,SmoothRateLimiter.java,why wait without doing anything?,0,0,Expand
3912,SmoothRateLimiter.java,a much,0,0,Expand
3914,SmoothRateLimiter.java,"instead , and postpone subsequent requests as needed.",0,0,Expand
2891,CacheBuilder.java,p if @linkplain #maximumsize long maximumsize or @linkplain #maximumweight long,0,0,Expand
2892,CacheBuilder.java,maximumweight is requested entries may be evicted on each cache modification.,0,0,Expand
3916,SmoothRateLimiter.java,"task immediately, and postpone by 100 seconds future requests, thus we allow for work to get",0,0,Expand
2893,CacheBuilder.java,p if @linkplain #expireafterwrite expireafterwrite or @linkplain #expireafteraccess,0,0,Expand
2894,CacheBuilder.java,"expireafteraccess is requested entries may be evicted on each cache modification, on occasional",0,0,Expand
3918,SmoothRateLimiter.java,this has important consequences it means that the ratelimiter doesn t remember the time of the,0,0,Expand
2895,CacheBuilder.java,"cache accesses, or on calls to @link cache#cleanup .",0,0,Expand
3919,SmoothRateLimiter.java,"last request, but it remembers the expected time of the next request.",0,0,Expand
2896,CacheBuilder.java,expired entries may be counted by @link,0,0,Expand
3920,SmoothRateLimiter.java,this also enables,0,0,Expand
2897,CacheBuilder.java,"cache#size , but will never be visible to read or write operations.",0,0,Expand
3921,SmoothRateLimiter.java,us to tell immediately see tryacquire timeout whether a particular timeout is enough to get,0,0,Expand
2898,CacheBuilder.java,"p if @linkplain #weakkeys weakkeys , @linkplain #weakvalues weakvalues , or @linkplain",0,0,Expand
3922,SmoothRateLimiter.java,"us to the point of the next scheduling time, since we always maintain that.",0,0,Expand
3923,SmoothRateLimiter.java,and what we mean by,0,0,Expand
2900,CacheBuilder.java,be reclaimed by the garbage collector.,0,0,Expand
3924,SmoothRateLimiter.java,an unused ratelimiter is also defined by that notion when we observe that the,0,0,Expand
2901,CacheBuilder.java,entries with reclaimed keys or values may be removed from,0,0,Expand
3925,SmoothRateLimiter.java,"expected arrival time of the next request is actually in the past, then the difference now",0,0,Expand
2902,CacheBuilder.java,"the cache on each cache modification, on occasional cache accesses, or on calls to @link",0,0,Expand
3926,SmoothRateLimiter.java,"past is the amount of time that the ratelimiter was formally unused, and it is that amount of",0,0,Expand
2903,CacheBuilder.java,"cache#cleanup such entries may be counted in @link cache#size , but will never be visible to",0,0,Expand
3927,SmoothRateLimiter.java,time which we translate to storedpermits.,0,0,Expand
2904,CacheBuilder.java,read or write operations.,0,0,Expand
3928,SmoothRateLimiter.java,we increase storedpermits with the amount of permits,0,0,Expand
3929,SmoothRateLimiter.java,that would have been produced in that idle time .,0,0,Expand
2906,CacheBuilder.java,"will be performed during write operations, or during occasional read operations in the absence of",0,0,Expand
3930,SmoothRateLimiter.java,"so, if rate 1 permit per second, and",0,0,Expand
2907,CacheBuilder.java,writes.,0,0,Expand
2908,CacheBuilder.java,"the @link cache#cleanup method of the returned cache will also perform maintenance, but",0,0,Expand
3932,SmoothRateLimiter.java,we would only increase it for arrivals later than the expected one second.,0,0,Expand
3933,SmoothRateLimiter.java,the time when the next request no matter its size will be granted.,0,0,Expand
2910,CacheBuilder.java,only caches built with,0,0,Expand
3934,SmoothRateLimiter.java,"after granting a request,",0,0,Expand
2911,CacheBuilder.java,"@linkplain #removallistener removallistener , @linkplain #expireafterwrite expireafterwrite ,",0,0,Expand
3935,SmoothRateLimiter.java,this is pushed further in the future.,0,0,Expand
2912,CacheBuilder.java,"@linkplain #expireafteraccess expireafteraccess , @linkplain #weakkeys weakkeys , @linkplain",0,0,Expand
3936,SmoothRateLimiter.java,large requests push this further than small requests.,0,0,Expand
2913,CacheBuilder.java,"#weakvalues weakvalues , or @linkplain #softvalues softvalues perform periodic maintenance.",0,0,Expand
3937,SmoothRateLimiter.java,"this implements a bursty ratelimiter, where storedpermits are translated to zero throttling.",0,0,Expand
3938,SmoothRateLimiter.java,the maximum number of permits that can be saved when the ratelimiter is unused is defined in,0,0,Expand
2915,CacheBuilder.java,retain all the configuration properties of the original cache.,0,0,Expand
3939,SmoothRateLimiter.java,"terms of time, in this sense if a ratelimiter is 2qps, and this time is specified as 10",0,0,Expand
2916,CacheBuilder.java,note that the serialized form does,0,0,Expand
3940,SmoothRateLimiter.java,"seconds, we can save up to 2 10 20 permits.",0,0,Expand
2917,CacheBuilder.java,"i not i include cache contents, but only configuration.",0,0,Expand
2918,CacheBuilder.java,p see the guava user guide article on a,0,0,Expand
2919,CacheBuilder.java,href https github^com google guava wiki cachesexplained caching a for a higher level,0,0,Expand
2920,CacheBuilder.java,explanation.,0,0,Expand
2922,CacheBuilder.java,this is,0,0,Expand
2923,CacheBuilder.java,normally @code object unless it is constrained by using a method like @code,0,0,Expand
2924,CacheBuilder.java,#removallistener,0,0,Expand
2926,CacheBuilder.java,this is,0,0,Expand
2927,CacheBuilder.java,normally @code object unless it is constrained by using a method like @code,0,0,Expand
2928,CacheBuilder.java,#removallistener,0,0,Expand
2929,CacheBuilder.java,@author charles fry,0,0,Expand
2930,CacheBuilder.java,@author kevin bourrillion,0,0,Expand
2931,CacheBuilder.java,@since 100,0,0,Expand
3040,CacheLoaderTest.java,unit tests for @link cacheloader .,0,0,Expand
3041,CacheLoaderTest.java,@author charles fry,0,0,Expand
3044,CacheManualTest.java,@author charles fry,0,0,Expand
3046,ClassToInstanceMap.java,"a map, each entry of which maps a java a href http tinyurl^com 2cmwkz raw type a to an",0,0,Expand
3047,ClassToInstanceMap.java,instance of that type.,0,0,Expand
3048,ClassToInstanceMap.java,"in addition to implementing @code map , the additional type safe",0,0,Expand
3049,ClassToInstanceMap.java,operations @link #putinstance and @link #getinstance are available.,0,0,Expand
3052,ClassToInstanceMap.java,p see the guava user guide article on a href,0,0,Expand
3053,ClassToInstanceMap.java,https github^com google guava wiki newcollectiontypesexplained#classtoinstancemap @code,0,0,Expand
3054,ClassToInstanceMap.java,classtoinstancemap a .,0,0,Expand
3055,ClassToInstanceMap.java,"p to map a generic type to an instance of that type, use @link",0,0,Expand
3056,ClassToInstanceMap.java,com^google.common^reflect.typetoinstancemap instead.,0,0,Expand
3057,ClassToInstanceMap.java,@param b the common supertype that all entries must share often this is simply @link object,0,0,Expand
3058,ClassToInstanceMap.java,@author kevin bourrillion,0,0,Expand
3059,ClassToInstanceMap.java,@since 20,0,0,Expand
4151,AbstractModule.java,a support class for @link module s which reduces repetition and results in a more readable,0,0,Expand
4152,AbstractModule.java,configuration.,1,0,Expand
4153,AbstractModule.java,"simply extend this class, implement @link #configure , and call the inherited",0,0,Expand
4154,AbstractModule.java,methods which mirror those found in @link binder .,1,0,Expand
4155,AbstractModule.java,for example,0,0,Expand
4156,AbstractModule.java,pre,1,0,Expand
4157,AbstractModule.java,public class mymodule extends abstractmodule,0,0,Expand
4158,AbstractModule.java,protected void configure,1,0,Expand
4159,AbstractModule.java,bind service^class ^to serviceimpl^class ^in singleton^class,0,0,Expand
4160,AbstractModule.java,bind creditcardpaymentservice^class,1,0,Expand
4161,AbstractModule.java,bind paymentservice^class ^to creditcardpaymentservice^class,0,0,Expand
4162,AbstractModule.java,bindconstant ^annotatedwith names^named port ^to 8080,1,0,Expand
4163,AbstractModule.java,pre,0,0,Expand
4164,AbstractModule.java,@author crazybob@google^com bob lee,1,0,Expand
4179,Binder.java,collects configuration information primarily i bindings i which will be used to create an,0,0,Expand
4180,Binder.java,@link injector .,1,0,Expand
4181,Binder.java,guice provides this object to your application s @link module implementors so,0,0,Expand
4182,Binder.java,they may each contribute their own bindings and other registrations.,1,0,Expand
4183,Binder.java,h3 the guice binding edsl h3,0,0,Expand
4184,Binder.java,"guice uses an i embedded domain specific language i , or edsl, to help you create bindings",1,0,Expand
4185,Binder.java,simply and readably.,0,0,Expand
4188,Binder.java,javadocs b .,1,0,Expand
4189,Binder.java,"instead, you should consult the series of examples below.",0,0,Expand
4190,Binder.java,"to save space, these",1,0,Expand
4191,Binder.java,"examples omit the opening @code binder , just as you will if your module extends @link",0,0,Expand
4192,Binder.java,abstractmodule .,1,0,Expand
4193,Binder.java,pre,0,0,Expand
4196,Binder.java,does not change guice s default behavior.,1,0,Expand
4198,Binder.java,@link module class to serve as an explicit i manifest i for the services it provides.,0,0,Expand
4199,Binder.java,"also,",1,0,Expand
4201,Binder.java,given explicitly.,0,0,Expand
4202,Binder.java,pre,1,0,Expand
4204,Binder.java,specifies that a request for a @code service instance with no binding annotations should be,0,0,Expand
4205,Binder.java,treated as if it were a request for a @code serviceimpl instance.,1,0,Expand
4206,Binder.java,this i overrides i the,0,0,Expand
4207,Binder.java,function of any @link implementedby @implementedby or @link providedby @providedby,1,0,Expand
4208,Binder.java,"annotations found on @code service , since guice will have already moved on to @code",0,0,Expand
4209,Binder.java,serviceimpl before it reaches the point when it starts looking for these annotations.,1,0,Expand
4210,Binder.java,pre,0,0,Expand
4212,Binder.java,"in this example, @code serviceprovider must extend or implement @code provider service .",1,0,Expand
4213,Binder.java,this,0,0,Expand
4214,Binder.java,binding specifies that guice should resolve an unannotated injection request for @code service,1,0,Expand
4215,Binder.java,"by first resolving an instance of @code serviceprovider in the regular way, then calling @link",0,0,Expand
4216,Binder.java,provider#get get on the resulting provider instance to obtain the @code service instance.,1,0,Expand
4217,Binder.java,"p the @link provider you use here does not have to be a factory that is, a provider which",0,0,Expand
4473,DefaultMethodInterceptionTest.java,tests for interception of default methods.,1,0,Expand
4218,Binder.java,always i creates i each instance it provides.,0,0,Expand
4474,DefaultMethodInterceptionTest.java,@author cgdecker@google^com colin decker,1,0,Expand
4475,DefaultMethodInterceptionTest.java,interface with a default method annotated to be intercepted.,0,0,Expand
4220,Binder.java,follow.,1,0,Expand
4476,DefaultMethodInterceptionTest.java,foo implementation that does not override the default method.,0,0,Expand
4221,Binder.java,you can then use guice s concept of @link scope scopes to guide when creation should,1,0,Expand
4477,DefaultMethodInterceptionTest.java,a base class defining a method with the same signature as foo s default method.,0,0,Expand
4222,Binder.java,happen letting guice work for you .,1,0,Expand
4478,DefaultMethodInterceptionTest.java,foo implementation that should use superclass method rather than default method.,0,0,Expand
4223,Binder.java,pre,1,0,Expand
4226,Binder.java,@code @red .,0,0,Expand
4227,Binder.java,if your module also includes bindings for particular i values i of the,1,0,Expand
4229,Binder.java,of @code @red that have no exact match in the bindings.,0,0,Expand
4230,Binder.java,pre,1,0,Expand
4231,Binder.java,bind serviceimpl^class ^in singleton^class,0,0,Expand
4487,Element.java,an internal binding annotation applied to each element in a multibinding.,0,0,Expand
4232,Binder.java,"or, alternatively",0,0,Expand
4234,Binder.java,either of these statements places the @code serviceimpl class into singleton scope.,0,0,Expand
4235,Binder.java,guice will,0,0,Expand
4491,Element.java,@author jessewilson@google^com jesse wilson,0,0,Expand
4236,Binder.java,create only one instance of @code serviceimpl and will reuse it for all injection requests of,0,0,Expand
4238,Binder.java,note that it is still possible to bind another instance of @code serviceimpl if the,0,0,Expand
4240,Binder.java,guice is not overly,0,0,Expand
4497,EncounterImpl.java,@author jessewilson@google^com jesse wilson,0,0,Expand
4242,Binder.java,with i enabling i your application to share only one instance if that s all you tell guice you,0,0,Expand
4243,Binder.java,need.,0,0,Expand
4499,ImplicitBindingTest.java,"@author crazybob@google^com bob lee an enum cannot be implemented by anything, so it should not be possible to have a successful valid jitable binding",0,0,Expand
4245,Binder.java,an annotation on the @code serviceimpl class.,0,0,Expand
4246,Binder.java,"p besides @link singleton @link scopes#singleton , there are servlet specific scopes",0,0,Expand
4502,ManagedFilterPipeline.java,"central routing dispatch class handles lifecycle of managed filters, and delegates to the servlet",0,0,Expand
4247,Binder.java,"available in @code com^google.inject^servlet.servletscopes , and your modules can contribute",0,0,Expand
4503,ManagedFilterPipeline.java,pipeline.,0,0,Expand
4248,Binder.java,their own custom scopes for use here as well.,0,0,Expand
4504,ManagedFilterPipeline.java,@author dhanji@gmail^com dhanji r. prasanna,0,0,Expand
4249,Binder.java,pre,0,0,Expand
4250,Binder.java,bind new typeliteral&lt paymentservice&lt creditcard,0,0,Expand
4508,PrivateElementProcessor,handles @code binder^newprivatebinder elements.,0,0,Expand
4253,Binder.java,it tells guice how to,0,0,Expand
4509,PrivateElementProcessor,@author jessewilson@google^com jesse wilson,0,0,Expand
4254,Binder.java,honor an injection request for an element of type @code paymentservice creditcard .,0,0,Expand
4255,Binder.java,the class,0,0,Expand
4256,Binder.java,@code creditcardpaymentservice must implement the @code paymentservice creditcard interface.,0,0,Expand
4512,ProxyFactoryTest.java,@author crazybob@google^com bob lee,0,0,Expand
4257,Binder.java,"guice cannot currently bind or inject a generic type, such as @code set e all type parameters",0,0,Expand
4258,Binder.java,must be fully specified.,0,0,Expand
4514,SpiUtils.java,utilities for testing the multibinder & mapbinder extension spi.,0,0,Expand
4259,Binder.java,pre,0,0,Expand
4515,SpiUtils.java,@author sameb@google^com sam berlin,0,0,Expand
4260,Binder.java,bind service^class ^toinstance new serviceimpl,0,0,Expand
4261,Binder.java,"or, alternatively",0,0,Expand
4265,Binder.java,@code service injection requests.,0,0,Expand
4266,Binder.java,"when the @link injector is created, it will automatically",0,0,Expand
4268,Binder.java,serviceimpl is simply ignored.,0,0,Expand
4270,Binder.java,that you can t control.,0,0,Expand
4271,Binder.java,pre,0,0,Expand
4273,Binder.java,sets up a constant binding.,0,0,Expand
4274,Binder.java,constant injections must always be annotated.,0,0,Expand
4275,Binder.java,when a constant,0,0,Expand
4276,Binder.java,"binding s value is a string, it is eligible for conversion to all primitive types, to @link",0,0,Expand
4277,Binder.java,"enum#valueof class, string all enums , and to @link class#forname class literals .",0,0,Expand
4278,Binder.java,conversions,0,0,Expand
4279,Binder.java,"for other types can be configured using @link #converttotypes matcher, typeconverter",0,0,Expand
4280,Binder.java,converttotypes .,0,0,Expand
4281,Binder.java,pre,0,0,Expand
4282,Binder.java,@literal @ color red color red a member variable field,0,0,Expand
4283,Binder.java,red mymodule^class.getdeclaredfield red ^getannotation color^class,0,0,Expand
4285,Binder.java,if your binding annotation has parameters you can apply different bindings to different specific,0,0,Expand
4286,Binder.java,values of your annotation.,0,0,Expand
4287,Binder.java,getting your hands on the right instance of the annotation is a bit of,0,0,Expand
4288,Binder.java,"a pain one approach, shown above, is to apply a prototype annotation to a field in your module",0,0,Expand
4290,Binder.java,pre,0,0,Expand
4291,Binder.java,bind service^class,0,0,Expand
4292,Binder.java,annotatedwith names^named blue,0,0,Expand
4294,Binder.java,"differentiating by names is a common enough use case that we provided a standard annotation,",0,0,Expand
4295,Binder.java,@link com^google.inject^name.named @named .,0,0,Expand
4296,Binder.java,"because of guice s library support, binding by name",0,0,Expand
4297,Binder.java,is quite easier than in the arbitrary binding annotation case we just saw.,0,0,Expand
4298,Binder.java,"however, remember that",0,0,Expand
4299,Binder.java,these names will live in a single flat namespace with all the other names used in your,0,0,Expand
4300,Binder.java,application.,0,0,Expand
4301,Binder.java,pre,0,0,Expand
4302,Binder.java,constructor t lonector getlonectorfromserviceimplviareflection,0,0,Expand
4303,Binder.java,bind serviceimpl^class,0,0,Expand
4306,Binder.java,implementation.,0,0,Expand
4307,Binder.java,it means that we do not need to place @literal @ inject on any of the,0,0,Expand
4308,Binder.java,constructors and that guice treats the provided constructor as though it were annotated so.,0,0,Expand
4309,Binder.java,it is,0,0,Expand
4310,Binder.java,useful for cases where you cannot modify existing classes and is a bit simpler than using a,0,0,Expand
4311,Binder.java,@link provider .,0,0,Expand
4312,Binder.java,p the above list of examples is far from exhaustive.,0,0,Expand
4313,Binder.java,if you can think of how the concepts of one,0,0,Expand
4314,Binder.java,"example might coexist with the concepts from another, you can most likely weave the two together.",0,0,Expand
4315,Binder.java,"if the two concepts make no sense with each other, you most likely won t be able to do it.",0,0,Expand
4316,Binder.java,in a,0,0,Expand
4318,Binder.java,"runtime, as soon as you try to create your injector.",0,0,Expand
4319,Binder.java,"p the other methods of binder such as @link #bindscope , @link #bindinterceptor , @link",0,0,Expand
4320,Binder.java,"#install , @link #requeststaticinjection , @link #adderror and @link #currentstage are not",0,0,Expand
4321,Binder.java,"part of the binding edsl you can learn how to use these in the usual way, from the method",0,0,Expand
4322,Binder.java,documentation.,0,0,Expand
4323,Binder.java,@author crazybob@google^com bob lee,0,0,Expand
4324,Binder.java,@author jessewilson@google^com jesse wilson,0,0,Expand
4325,Binder.java,@author kevinb@google^com kevin bourrillion,0,0,Expand
5120,VScrollTable.java,dom^client.blurevent,0,0,Expand
5124,VScrollTable.java,to detect if the first visible,1,0,Expand
5125,VScrollTable.java,these are used when jumping between pages when pressing home and end,0,0,Expand
5126,VScrollTable.java,changes to manage mousedown and mouseup,1,0,Expand
5127,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,0,0,Expand
5128,VScrollTable.java,lost .,1,0,Expand
5130,VScrollTable.java,when changing tabs.,0,0,Expand
5131,VScrollTable.java,updates first visible row for the case we cannot wait,1,0,Expand
5132,VScrollTable.java,this method has logic which rows needs to be requested from server when,0,0,Expand
5133,VScrollTable.java,user scrolls.,1,0,Expand
5135,VScrollTable.java,@see,0,0,Expand
5137,VScrollTable.java,dom^client.focusevent,1,0,Expand
5139,VScrollTable.java,@see,0,0,Expand
5141,VScrollTable.java,dom^client.blurevent,1,0,Expand
5150,VScrollTable.java,@since 72,0,0,Expand
5151,VScrollTable.java,@author vaadin ltd,1,0,Expand
5152,VScrollTable.java,to detect if the first visible,0,0,Expand
5153,VScrollTable.java,these are used when jumping between pages when pressing home and end,1,0,Expand
5154,VScrollTable.java,changes to manage mousedown and mouseup,0,0,Expand
5155,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,1,0,Expand
5156,VScrollTable.java,lost .,0,0,Expand
5158,VScrollTable.java,when changing tabs.,1,0,Expand
5159,VScrollTable.java,updates first visible row for the case we cannot wait,0,0,Expand
5160,VScrollTable.java,this method has logic which rows needs to be requested from server when,1,0,Expand
5161,VScrollTable.java,user scrolls.,0,0,Expand
5163,VScrollTable.java,@see,1,0,Expand
5165,VScrollTable.java,dom^client.focusevent,0,0,Expand
5167,VScrollTable.java,@see,1,0,Expand
5169,VScrollTable.java,dom^client.blurevent,0,0,Expand
5177,VScrollTable.java,to detect if the first visible,1,0,Expand
5178,VScrollTable.java,these are used when jumping between pages when pressing home and end,0,0,Expand
5179,VScrollTable.java,changes to manage mousedown and mouseup,1,0,Expand
5180,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,0,0,Expand
5181,VScrollTable.java,lost .,1,0,Expand
5183,VScrollTable.java,when changing tabs.,0,0,Expand
5184,VScrollTable.java,updates first visible row for the case we cannot wait,1,0,Expand
5185,VScrollTable.java,this method has logic which rows needs to be requested from server when,0,0,Expand
5186,VScrollTable.java,user scrolls.,1,0,Expand
5188,VScrollTable.java,@see,0,0,Expand
5190,VScrollTable.java,dom^client.focusevent,1,0,Expand
5192,VScrollTable.java,@see,0,0,Expand
5194,VScrollTable.java,dom^client.blurevent,1,0,Expand
5199,VScrollTable.java,to detect if the first visible,0,0,Expand
5200,VScrollTable.java,these are used when jumping between pages when pressing home and end,1,0,Expand
5201,VScrollTable.java,changes to manage mousedown and mouseup,0,0,Expand
5202,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,1,0,Expand
5203,VScrollTable.java,lost .,0,0,Expand
5205,VScrollTable.java,when changing tabs.,1,0,Expand
5206,VScrollTable.java,updates first visible row for the case we cannot wait,0,0,Expand
5207,VScrollTable.java,this method has logic which rows needs to be requested from server when,1,0,Expand
5208,VScrollTable.java,user scrolls.,0,0,Expand
5210,VScrollTable.java,@see,1,0,Expand
5212,VScrollTable.java,dom^client.focusevent,0,0,Expand
5214,VScrollTable.java,@see,1,0,Expand
5216,VScrollTable.java,dom^client.blurevent,0,0,Expand
5221,VScrollTable.java,to detect if the first visible,1,0,Expand
5222,VScrollTable.java,these are used when jumping between pages when pressing home and end,0,0,Expand
5223,VScrollTable.java,changes to manage mousedown and mouseup,1,0,Expand
5224,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,0,0,Expand
5225,VScrollTable.java,lost .,1,0,Expand
5227,VScrollTable.java,when changing tabs.,0,0,Expand
5228,VScrollTable.java,updates first visible row for the case we cannot wait,1,0,Expand
5229,VScrollTable.java,this method has logic which rows needs to be requested from server when,0,0,Expand
5230,VScrollTable.java,user scrolls.,1,0,Expand
5232,VScrollTable.java,@see,0,0,Expand
5234,VScrollTable.java,dom^client.focusevent,1,0,Expand
5236,VScrollTable.java,@see,0,0,Expand
5238,VScrollTable.java,dom^client.blurevent,1,0,Expand
5242,VScrollTable.java,to detect if the first visible,0,0,Expand
5243,VScrollTable.java,these are used when jumping between pages when pressing home and end,1,0,Expand
5244,VScrollTable.java,changes to manage mousedown and mouseup,0,0,Expand
5245,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,1,0,Expand
5246,VScrollTable.java,lost .,0,0,Expand
5248,VScrollTable.java,when changing tabs.,1,0,Expand
5249,VScrollTable.java,updates first visible row for the case we cannot wait,0,0,Expand
5250,VScrollTable.java,this method has logic which rows needs to be requested from server when,1,0,Expand
5251,VScrollTable.java,user scrolls.,0,0,Expand
5253,VScrollTable.java,@see,1,0,Expand
5255,VScrollTable.java,dom^client.focusevent,0,0,Expand
5257,VScrollTable.java,@see,1,0,Expand
5259,VScrollTable.java,dom^client.blurevent,0,0,Expand
5264,VScrollTable.java,to detect if the first visible,1,0,Expand
5265,VScrollTable.java,these are used when jumping between pages when pressing home and end,0,0,Expand
5266,VScrollTable.java,changes to manage mousedown and mouseup,1,0,Expand
5267,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,0,0,Expand
5268,VScrollTable.java,lost .,1,0,Expand
5270,VScrollTable.java,when changing tabs.,0,0,Expand
5271,VScrollTable.java,updates first visible row for the case we cannot wait,1,0,Expand
5272,VScrollTable.java,this method has logic which rows needs to be requested from server when,0,0,Expand
5273,VScrollTable.java,user scrolls.,1,0,Expand
5275,VScrollTable.java,@see,0,0,Expand
5277,VScrollTable.java,dom^client.focusevent,1,0,Expand
5279,VScrollTable.java,@see,0,0,Expand
5281,VScrollTable.java,dom^client.blurevent,1,0,Expand
5285,VScrollTable.java,to detect if the first visible,0,0,Expand
5286,VScrollTable.java,these are used when jumping between pages when pressing home and end,1,0,Expand
5287,VScrollTable.java,changes to manage mousedown and mouseup,0,0,Expand
5288,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,1,0,Expand
5289,VScrollTable.java,lost .,0,0,Expand
5291,VScrollTable.java,when changing tabs.,1,0,Expand
5292,VScrollTable.java,updates first visible row for the case we cannot wait,0,0,Expand
5293,VScrollTable.java,this method has logic which rows needs to be requested from server when,1,0,Expand
5294,VScrollTable.java,user scrolls.,0,0,Expand
5296,VScrollTable.java,@see,1,0,Expand
5298,VScrollTable.java,dom^client.focusevent,0,0,Expand
5300,VScrollTable.java,@see,1,0,Expand
5302,VScrollTable.java,dom^client.blurevent,0,0,Expand
5306,VScrollTable.java,this,1,0,Expand
5307,VScrollTable.java,"simulates very large table, keeping spacers which take room of",0,0,Expand
5308,VScrollTable.java,unrendered rows.,1,0,Expand
5362,VTextArea.java,this class represents a multiline textfield textarea .,0,0,Expand
5366,VTextArea.java,@author vaadin ltd.,1,0,Expand
5371,VUpload.java,@author vaadin ltd,0,0,Expand
5374,Window.java,@link ui .,1,0,Expand
5393,Window.java,@author vaadin ltd.,0,0,Expand
5394,Window.java,@since 30,1,0,Expand
5395,Window.java,non javadoc,0,0,Expand
5396,Window.java,@see com^vaadin.ui^panel#paintcontent com^vaadin.server^painttarget,1,0,Expand
5397,Window.java,non javadoc,0,0,Expand
5398,Window.java,"@see com^vaadin.ui^panel#changevariables java^lang.object, java^util.map",1,0,Expand
5400,Window.java,@see ui^windoworderupdateevent,0,0,Expand
5401,Window.java,@author vaadin ltd,1,0,Expand
5402,Window.java,non javadoc,0,0,Expand
5403,Window.java,@see com^vaadin.ui^panel#paintcontent com^vaadin.server^painttarget,1,0,Expand
5404,Window.java,non javadoc,0,0,Expand
5405,Window.java,"@see com^vaadin.ui^panel#changevariables java^lang.object, java^util.map",1,0,Expand
5408,Window.java,non javadoc,0,0,Expand
5409,Window.java,@see com^vaadin.ui^panel#paintcontent com^vaadin.server^painttarget,1,0,Expand
5410,Window.java,non javadoc,0,0,Expand
5411,Window.java,"@see com^vaadin.ui^panel#changevariables java^lang.object, java^util.map",1,0,Expand
5421,Window.java,non javadoc,0,0,Expand
5422,Window.java,@see com^vaadin.ui^panel#paintcontent com^vaadin.server^painttarget,1,0,Expand
5423,Window.java,non javadoc,0,0,Expand
5424,Window.java,"@see com^vaadin.ui^panel#changevariables java^lang.object, java^util.map",1,0,Expand
5426,Window.java,@author vaadin ltd,0,0,Expand
5428,Window.java,non javadoc,1,0,Expand
5429,Window.java,@see com^vaadin.ui^panel#paintcontent com^vaadin.server^painttarget,0,0,Expand
5430,Window.java,non javadoc,1,0,Expand
5431,Window.java,"@see com^vaadin.ui^panel#changevariables java^lang.object, java^util.map",0,0,Expand
5438,Window.java,non javadoc,1,0,Expand
5439,Window.java,@see com^vaadin.ui^panel#paintcontent com^vaadin.server^painttarget,0,0,Expand
5440,Window.java,non javadoc,1,0,Expand
5441,Window.java,"@see com^vaadin.ui^panel#changevariables java^lang.object, java^util.map",0,0,Expand
5446,Window.java,non javadoc,1,0,Expand
5447,Window.java,@see com^vaadin.ui^panel#paintcontent com^vaadin.server^painttarget,0,0,Expand
5448,Window.java,non javadoc,1,0,Expand
5449,Window.java,"@see com^vaadin.ui^panel#changevariables java^lang.object, java^util.map",0,0,Expand
5452,Window.java,non javadoc,1,0,Expand
5453,Window.java,@see com^vaadin.ui^panel#paintcontent com^vaadin.server^painttarget,0,0,Expand
5454,Window.java,non javadoc,1,0,Expand
5455,Window.java,"@see com^vaadin.ui^panel#changevariables java^lang.object, java^util.map",0,0,Expand
5458,Window.java,pre,1,0,Expand
5459,Window.java,code,0,0,Expand
5460,Window.java,within the window using helper,1,0,Expand
5462,Window.java,or globally,0,0,Expand
5464,Window.java,code,1,0,Expand
5465,Window.java,pre,0,0,Expand
5518,XhrConnectionError.java,xhrconnectionerror provides detail about an error which occurred during an,0,0,Expand
5519,XhrConnectionError.java,xhr request to the server.,0,0,Expand
5520,XhrConnectionError.java,@since 76,0,0,Expand
5521,XhrConnectionError.java,@author vaadin ltd,0,0,Expand
4524,AbstractFocusable.java,an abstract base class for focusable components.,0,0,Expand
4527,AbstractFocusable.java,@since 76,0,0,Expand
4528,AbstractFocusable.java,@author vaadin ltd,0,0,Expand
4533,AbstractMultiSelectState.java,shared state for @code abstractmultiselect .,0,0,Expand
4534,AbstractMultiSelectState.java,@author vaadin ltd,0,0,Expand
4535,AbstractMultiSelectState.java,@since 80,0,0,Expand
4540,AbstractProperty.java,abstract base class for @link property implementations.,0,0,Expand
4541,AbstractProperty.java,handles listener management for @link valuechangelistener s and,0,0,Expand
4542,AbstractProperty.java,@link readonlystatuschangelistener s.,0,0,Expand
4543,AbstractProperty.java,@since 66,0,0,Expand
4544,AbstractProperty.java,"@deprecated as of 80, replaced by @link valueprovider , @link setter , see",0,0,Expand
4545,AbstractProperty.java,@link binder,0,0,Expand
4546,AbstractProperty.java,legacypropertyhelper has been removed in vaadin 8 events,0,0,Expand
4549,AbstractProperty.java,legacypropertyhelper has been removed in vaadin 8 events,0,0,Expand
4566,AbstractSingleComponentContainerState.java,default shared state implementation for abstractsinglecomponentcontainer.,0,0,Expand
4567,AbstractSingleComponentContainerState.java,@since 80,0,0,Expand
4572,AdjacentElementsWithTooltipsTest.java,@author vaadin ltd,0,0,Expand
4575,ApplicationConfiguration.java,helper class for reading configuration options from the bootstap,0,0,Expand
4577,ApplicationConfiguration.java,@since 70,0,0,Expand
4578,ApplicationConfiguration.java,wraps a native javascript object containing fields for an error message.,0,0,Expand
4579,ApplicationConfiguration.java,@since 70,0,0,Expand
4584,BootstrapPageResponse.java,a representation of a bootstrap page being generated.,0,0,Expand
4588,BootstrapPageResponse.java,@author vaadin ltd,0,0,Expand
4589,BootstrapPageResponse.java,@since 70.0,0,0,Expand
4596,ButtonRenderer.java,a renderer that displays a button with a textual caption.,0,0,Expand
4599,ButtonRenderer.java,click listeners can be added,0,0,Expand
4600,ButtonRenderer.java,"to the renderer, invoked when any of the rendered buttons is clicked.",0,0,Expand
4601,ButtonRenderer.java,@since 74,0,0,Expand
4602,ButtonRenderer.java,@author vaadin ltd,0,0,Expand
4610,ClientRpcWriter.java,serializes @link clientrpc client rpc invocations to json.,0,0,Expand
4611,ClientRpcWriter.java,@author vaadin ltd,0,0,Expand
4612,ClientRpcWriter.java,@since 71,0,0,Expand
4616,ColorPickerServerRpc.java,rpc interface for abstractcolorpicker.,0,0,Expand
4617,ColorPickerServerRpc.java,@since 70.0,0,0,Expand
4620,ComboBoxState.java,shared state for the combobox component.,0,0,Expand
4621,ComboBoxState.java,@since 70,0,0,Expand
4624,DeclarativeValueProvider.java,value provider class for declarative support.,0,0,Expand
4626,DeclarativeValueProvider.java,provides a straightforward mapping between an item and its value.,0,0,Expand
4627,DeclarativeValueProvider.java,@param t,0,0,Expand
4628,DeclarativeValueProvider.java,item type,0,0,Expand
4633,DoubleRangeValidator.java,validator for validating that a @link double is inside a given range.,0,0,Expand
4634,DoubleRangeValidator.java,@author vaadin ltd.,0,0,Expand
4635,DoubleRangeValidator.java,@since 80,0,0,Expand
4640,FooterDoubleClickHandler.java,handler for @link griddoubleclickevent s that happen in the footer of the,0,0,Expand
4641,FooterDoubleClickHandler.java,grid.,0,0,Expand
4642,FooterDoubleClickHandler.java,@since 74,0,0,Expand
4643,FooterDoubleClickHandler.java,@author vaadin ltd,0,0,Expand
4649,Grid.java,a grid component for displaying tabular data.,0,0,Expand
4650,Grid.java,@author vaadin ltd,0,0,Expand
4651,Grid.java,@since 80,0,0,Expand
4652,Grid.java,@param t,0,0,Expand
4653,Grid.java,the grid bean type,0,0,Expand
4654,Grid.java,header and footer,0,0,Expand
4658,Grid.java,@param t,0,0,Expand
4659,Grid.java,the grid bean type,0,0,Expand
4660,Grid.java,header and footer,0,0,Expand
4661,Grid.java,selection mode representing the built in selection models in grid.,0,0,Expand
4663,Grid.java,these enums can be used in @link grid#setselectionmode selectionmode,0,0,Expand
4665,Grid.java,@see grid#setselectionmode selectionmode,0,0,Expand
4666,Grid.java,@see grid#setselectionmodel gridselectionmodel,0,0,Expand
4667,Grid.java,header and footer,0,0,Expand
4669,Grid.java,header and footer,0,0,Expand
4672,Grid.java,header and footer,0,0,Expand
4674,Grid.java,@param t,0,0,Expand
4675,Grid.java,the grid bean type,0,0,Expand
4676,Grid.java,header and footer,0,0,Expand
4679,Grid.java,usage,0,0,Expand
4680,Grid.java,pre,0,0,Expand
4681,Grid.java,grid^addcontextclicklistener event &gt notification^show,0,0,Expand
4682,Grid.java,gridcontextclickevent&lt person&gt event ^getitem clicked,0,0,Expand
4683,Grid.java,pre,0,0,Expand
4684,Grid.java,@param t,0,0,Expand
4685,Grid.java,the grid bean type,0,0,Expand
4686,Grid.java,header and footer,0,0,Expand
4687,Grid.java,an event that is fired when a column s visibility changes.,0,0,Expand
4688,Grid.java,@since 75.0,0,0,Expand
4689,Grid.java,header and footer,0,0,Expand
4690,Grid.java,a helper base class for creating extensions for the grid component.,0,0,Expand
4691,Grid.java,@param t,0,0,Expand
4692,Grid.java,header and footer,0,0,Expand
4693,Grid.java,class for managing visible details rows.,0,0,Expand
4694,Grid.java,@param t,0,0,Expand
4695,Grid.java,the grid bean type,0,0,Expand
4696,Grid.java,header and footer,0,0,Expand
4699,Grid.java,@param t,0,0,Expand
4700,Grid.java,the grid bean type,0,0,Expand
4731,GridManyColumnsV7.java,test ui for grid initial rendering performance profiling.,0,0,Expand
4733,GridSelectionModel.java,the server side interface that controls grid s selection state.,0,0,Expand
4734,GridSelectionModel.java,selectionmodel should extend @link abstractgridextension .,0,0,Expand
4735,GridSelectionModel.java,@author vaadin ltd,0,0,Expand
4737,GridSelectionModel.java,@param t,0,0,Expand
4738,GridSelectionModel.java,the grid bean type,0,0,Expand
4739,GridSelectionModel.java,@see abstractselectionmodel,0,0,Expand
4740,GridSelectionModel.java,@see singleselectionmodel,0,0,Expand
4741,GridSelectionModel.java,@see multiselectionmodel,0,0,Expand
4750,HeaderRow.java,a header row in a grid.,0,0,Expand
4751,HeaderRow.java,@author vaadin ltd,0,0,Expand
4752,HeaderRow.java,@since 80,0,0,Expand
4756,InternalContainerAnnotationForJS.java,annotation enabling using multiple @link javascript @javascript,0,0,Expand
4757,InternalContainerAnnotationForJS.java,annotations.,0,0,Expand
4761,InternalContainerAnnotationForJS.java,@author vaadin ltd,0,0,Expand
4762,InternalContainerAnnotationForJS.java,@since 80,0,0,Expand
4767,MyPickerConnector.java,mini tutorial code for,0,0,Expand
4768,MyPickerConnector.java,"https vaadin^com wiki wiki main widget%20styling%20using%20only%20css,",0,0,Expand
4769,MyPickerConnector.java,https,0,0,Expand
4770,MyPickerConnector.java,vaadin^com wiki wiki main lightweight%20calculations%20of%20widget%20l,0,0,Expand
4772,MyPickerConnector.java,@author vaadin ltd,0,0,Expand
4773,MyPickerConnector.java,@since 70.0,0,0,Expand
4782,NotEmptyValidatorTest.java,@author vaadin ltd,0,0,Expand
4784,PopupView.java,a component for displaying a two different views to data.,0,0,Expand
4785,PopupView.java,the minimized view,0,0,Expand
4786,PopupView.java,"is normally used to render the component, and when it is clicked the full",0,0,Expand
4787,PopupView.java,view is displayed on a popup.,0,0,Expand
4788,PopupView.java,the inner class @link popupview^content is,0,0,Expand
4789,PopupView.java,used to deliver contents to this component.,0,0,Expand
4790,PopupView.java,@author vaadin ltd.,0,0,Expand
4847,PortletDummyRequestHandler.java,request handler which provides a dummy html response to any resource request,0,0,Expand
4848,PortletDummyRequestHandler.java,with the resource id dummy.,0,0,Expand
4849,PortletDummyRequestHandler.java,@author vaadin ltd,0,0,Expand
4850,PortletDummyRequestHandler.java,@since 71,0,0,Expand
4855,QueryBuilder.java,"@deprecated as of 80, no replacement available.",0,0,Expand
4857,RequiredTextFieldTest.java,test for ^v required style,0,0,Expand
4858,RequiredTextFieldTest.java,@author vaadin ltd,0,0,Expand
4861,RpcDataProviderExtension.java,provides vaadin server side container data source to a,0,0,Expand
4862,RpcDataProviderExtension.java,@link com^vaadin.v7^client.connectors^gridconnector gridconnector .,0,0,Expand
4863,RpcDataProviderExtension.java,this is currently,0,0,Expand
4864,RpcDataProviderExtension.java,implemented as an extension hardcoded to support a specific connector type.,0,0,Expand
4867,RpcDataProviderExtension.java,@since 74,0,0,Expand
4868,RpcDataProviderExtension.java,@author vaadin ltd,0,0,Expand
4869,RpcDataProviderExtension.java,"@deprecated as of 80, no replacement available.",0,0,Expand
4870,RpcDataProviderExtension.java,class for keeping track of current items and valuechangelisteners.,0,0,Expand
4871,RpcDataProviderExtension.java,@since 76,0,0,Expand
4886,RpcDataProviderExtension.java,"@see grid#addvaluechangelistener com^vaadin.v7^data.container, object, object",0,0,Expand
4887,RpcDataProviderExtension.java,"grid#addvaluechangelistener container, object, object",0,0,Expand
4888,RpcDataProviderExtension.java,@see grid#valuechangelisteners,0,0,Expand
4901,SelectAllEvent.java,"a select all event, fired by the grid when it needs all rows in data source",0,0,Expand
4902,SelectAllEvent.java,"to be selected, or when all rows have been selected and are now deselected.",0,0,Expand
4903,SelectAllEvent.java,@since 74,0,0,Expand
4904,SelectAllEvent.java,@author vaadin ltd,0,0,Expand
4905,SelectAllEvent.java,@param t,0,0,Expand
4906,SelectAllEvent.java,the type of the rows in grid,0,0,Expand
4915,ShouldWriteDataDelegate.java,delegate used by @link designcontext to determine whether container data,0,0,Expand
4916,ShouldWriteDataDelegate.java,should be written out for a component.,0,0,Expand
4917,ShouldWriteDataDelegate.java,@see designcontext#shouldwritedata component,0,0,Expand
4918,ShouldWriteDataDelegate.java,@since 75.0,0,0,Expand
4919,ShouldWriteDataDelegate.java,@author vaadin ltd,0,0,Expand
4929,SimpleGridUI.java,@author vaadin ltd,0,0,Expand
4931,SpacerVisibilityChangedEvent.java,event fired when a spacer element is hidden or shown in escalator.,0,0,Expand
4932,SpacerVisibilityChangedEvent.java,@author vaadin ltd,0,0,Expand
4933,SpacerVisibilityChangedEvent.java,@since 77.13,0,0,Expand
4937,TargetDetailsImpl.java,a hashmap backed implementation of @link targetdetails for termina^^^n.,0,0,Expand
4938,TargetDetailsImpl.java,@since 63,0,0,Expand
4939,TargetDetailsImpl.java,@deprecated replaced in 81 by @link dropevent#gettransferdata string,0,0,Expand
4944,UnknownExtensionConnector.java,connector used as a placeholder for extensions that are not present in the,0,0,Expand
4945,UnknownExtensionConnector.java,widgetset.,0,0,Expand
4946,UnknownExtensionConnector.java,@since 77.4,0,0,Expand
4947,UnknownExtensionConnector.java,@author vaadin ltd,0,0,Expand
4952,VaadinPortlet.java,portlet 20 base class.,0,0,Expand
4953,VaadinPortlet.java,this replaces the servlet in servlet portlet 10,0,0,Expand
4954,VaadinPortlet.java,deployments and handles various portlet requests from the browser.,0,0,Expand
4955,VaadinPortlet.java,@author vaadin ltd,0,0,Expand
4974,VaadinPortlet.java,@author vaadin ltd,0,0,Expand
4975,VaadinPortlet.java,@deprecated as of 70.,0,0,Expand
4976,VaadinPortlet.java,this is no longer used and only provided for,0,0,Expand
4977,VaadinPortlet.java,backwards compatibility.,0,0,Expand
4978,VaadinPortlet.java,each @link requesthandler can,0,0,Expand
4979,VaadinPortlet.java,individually decide whether it wants to handle a request or,0,0,Expand
4980,VaadinPortlet.java,not.,0,0,Expand
4995,VaadinServiceInitListener.java,listener for @link vaadinservice initialization events.,0,0,Expand
4996,VaadinServiceInitListener.java,the listener can,0,0,Expand
4997,VaadinServiceInitListener.java,add listeners and request handlers the service.,0,0,Expand
5009,VaadinServiceInitListener.java,@since 80,0,0,Expand
5010,VaadinServiceInitListener.java,@author vaadin ltd,0,0,Expand
5025,VGridLayout.java,private helper class.,0,0,Expand
5029,VLazyInitItemIdentifiers.java,@author vaadin ltd,0,0,Expand
5030,VLazyInitItemIdentifiers.java,@deprecated replaced in 81 with,0,0,Expand
5031,VLazyInitItemIdentifiers.java,ragovercriteria string and,0,0,Expand
5032,VLazyInitItemIdentifiers.java,@link droptargetextension#setdropcriteria string,0,0,Expand
5039,VScrollTable.java,scrollpanel,0,0,Expand
5041,VScrollTable.java,reordering and hiding columns.,0,0,Expand
5043,VScrollTable.java,to save,0,0,Expand
5045,VScrollTable.java,vscrolltablebody all rows are not necessary rendered.,0,0,Expand
5046,VScrollTable.java,there are spacers in,0,0,Expand
5049,VScrollTable.java,more rows instead of paging .,0,0,Expand
5057,VScrollTable.java,to detect if the first visible,0,0,Expand
5058,VScrollTable.java,these are used when jumping between pages when pressing home and end,0,0,Expand
5059,VScrollTable.java,changes to manage mousedown and mouseup,0,0,Expand
5060,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,0,0,Expand
5061,VScrollTable.java,lost .,0,0,Expand
5063,VScrollTable.java,when changing tabs.,0,0,Expand
5064,VScrollTable.java,updates first visible row for the case we cannot wait,0,0,Expand
5065,VScrollTable.java,this method has logic which rows needs to be requested from server when,0,0,Expand
5066,VScrollTable.java,user scrolls.,0,0,Expand
5068,VScrollTable.java,@see,0,0,Expand
5070,VScrollTable.java,dom^client.focusevent,0,0,Expand
5072,VScrollTable.java,@see,0,0,Expand
5074,VScrollTable.java,dom^client.blurevent,0,0,Expand
5078,VScrollTable.java,@since 72,0,0,Expand
5079,VScrollTable.java,@author vaadin ltd,0,0,Expand
5080,VScrollTable.java,to detect if the first visible,0,0,Expand
5081,VScrollTable.java,these are used when jumping between pages when pressing home and end,0,0,Expand
5082,VScrollTable.java,changes to manage mousedown and mouseup,0,0,Expand
5083,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,0,0,Expand
5084,VScrollTable.java,lost .,0,0,Expand
5086,VScrollTable.java,when changing tabs.,0,0,Expand
5087,VScrollTable.java,updates first visible row for the case we cannot wait,0,0,Expand
5088,VScrollTable.java,this method has logic which rows needs to be requested from server when,0,0,Expand
5089,VScrollTable.java,user scrolls.,0,0,Expand
5091,VScrollTable.java,@see,0,0,Expand
5093,VScrollTable.java,dom^client.focusevent,0,0,Expand
5095,VScrollTable.java,@see,0,0,Expand
5097,VScrollTable.java,dom^client.blurevent,0,0,Expand
5101,VScrollTable.java,@since 72,0,0,Expand
5102,VScrollTable.java,@author vaadin ltd,0,0,Expand
5103,VScrollTable.java,to detect if the first visible,0,0,Expand
5104,VScrollTable.java,these are used when jumping between pages when pressing home and end,0,0,Expand
5105,VScrollTable.java,changes to manage mousedown and mouseup,0,0,Expand
5106,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,0,0,Expand
5107,VScrollTable.java,lost .,0,0,Expand
5109,VScrollTable.java,when changing tabs.,0,0,Expand
5110,VScrollTable.java,updates first visible row for the case we cannot wait,0,0,Expand
5111,VScrollTable.java,this method has logic which rows needs to be requested from server when,0,0,Expand
5112,VScrollTable.java,user scrolls.,0,0,Expand
5114,VScrollTable.java,@see,0,0,Expand
5116,VScrollTable.java,dom^client.focusevent,0,0,Expand
5118,VScrollTable.java,@see,0,0,Expand
1,Abfss.java,azure blob file system implementation of abstractfilesystem.,0,0,usage
2,Abfss.java,this impl delegates to the old filesystem,1,0,usage
1028,TestConnCache.java,this class tests the client connection caching in a single node,0,0,usage
5,AbstractContractGetFileStatusTest.java,test getfilestatus and related listing operations.,1,0,usage
6,AbstractContractGetFileStatusTest.java,the tree parameters.,0,0,usage
7,AbstractContractGetFileStatusTest.java,kept small to avoid killing object store test runs too much.,1,0,usage
8,AbstractContractGetFileStatusTest.java,accept everything.,0,0,usage
1032,TestCustomOauthTokenProvider.java,test custom oauth token providers.,1,0,usage
9,AbstractContractGetFileStatusTest.java,the tree parameters.,0,0,usage
10,AbstractContractGetFileStatusTest.java,kept small to avoid killing object store test runs too much.,1,0,usage
11,AbstractContractGetFileStatusTest.java,accept nothing.,0,0,usage
1035,TestCustomOauthTokenProvider.java,instead this just checks that the creation works and that everything,1,0,usage
12,AbstractContractGetFileStatusTest.java,the tree parameters.,0,0,usage
1036,TestCustomOauthTokenProvider.java,is propagated.,1,0,usage
13,AbstractContractGetFileStatusTest.java,kept small to avoid killing object store test runs too much.,0,0,usage
14,AbstractContractGetFileStatusTest.java,path filter which only expects paths whose final name element,1,0,usage
15,AbstractContractGetFileStatusTest.java,equals the @code match field.,0,0,usage
16,AbstractContractGetFileStatusTest.java,the tree parameters.,1,0,usage
17,AbstractContractGetFileStatusTest.java,kept small to avoid killing object store test runs too much.,0,0,usage
18,AbstractContractGetFileStatusTest.java,a filesystem filter which exposes the protected method,1,0,usage
1042,TestDataDrivenDBInputFormat.java,test aspects of datadrivendbinputformat,0,0,usage
19,AbstractContractGetFileStatusTest.java,"@link #listlocatedstatus path, pathfilter .",1,0,usage
1047,TestEditLogFileOutputStream.java,test the editlogfileoutputstream,0,0,usage
1049,TestFederationPolicyUtils.java,unit test for @link federationpolicyutils .,1,0,usage
1052,TestFileSizeCountTask.java,unit test for file size count task.,0,0,usage
1054,TestHandler.java,tests handler interface.,1,0,usage
1056,TestHDFSServerPorts.java,this test checks correctness of port usage by hdfs components,0,0,usage
1057,TestHDFSServerPorts.java,"namenode, datanode, secondarynamenode and backupnode.",1,0,usage
1058,TestHDFSServerPorts.java,the correct behavior is br when a specific port is provided the server must either start on that port or fail by throwing @link java^net.bindexception .,0,0,usage
1059,TestHDFSServerPorts.java,br,1,0,usage
1060,TestHDFSServerPorts.java,if the port 0 ephemeral then the server should choose a free port and start on it.,0,0,usage
1066,TestKeyInputStream.java,tests @link keyinputstream .,1,0,usage
44,AbstractS3ACommitterFactory.java,dynamically create the output committer based on subclass type and settings.,0,0,usage
1069,TestMetricsVisitor.java,test the metric visitor interface,1,0,usage
1071,TestNativeAzureFileSystemUploadLogic.java,"tests for the upload, buffering and flush logic in wasb.",0,0,usage
1072,TestNativeAzureFileSystemUploadLogic.java,just an arbitrary number so that the values i write have a predictable,1,0,usage
1073,TestNativeAzureFileSystemUploadLogic.java,various scenarios to test in how often we flush data while uploading.,0,0,usage
53,ApplicationConstants.java,the type of launch for the container.,1,0,usage
1077,TestOmMultipartKeyInfoCodec.java,this class tests ommultipartkeyinfocodec.,0,0,usage
54,ApplicationConstants.java,environment for applications.,1,0,usage
1079,TestOMVolumeRequest.java,base test class for volume request.,0,0,usage
1082,TestOzoneNativeAuthorizer.java,test class for @link ozonenativeauthorizer .,1,0,usage
61,ApplicationStateData.java,contains all the state data that needs to be stored persistently for an application,0,0,usage
1085,TestProtoBufRpc.java,test for testing protocol buffer based rpc mechanism.,1,0,usage
1086,TestProtoBufRpc.java,this test depends on test^proto definition of types in src test proto,0,0,usage
1087,TestProtoBufRpc.java,and protobuf service definition from src test test rpc service^proto,1,0,usage
66,AutoInputFormat.java,it can currently handle text and sequence files.,0,0,usage
1091,TestRDBStore.java,rdbstore tests.,1,0,usage
1093,TestRegistrySecurityHelper.java,test for registry security operations,0,0,usage
70,BalancingPolicy.java,balancing policy.,1,0,usage
74,BalancingPolicy.java,cluster is balanced if each node is balanced.,0,0,usage
75,BalancingPolicy.java,cluster is balanced if each pool in each node is balanced.,1,0,usage
1099,TestRouterWebServiceUtil.java,test class to validate routerwebserviceutil methods.,0,0,usage
1101,TestS3BucketManager.java,tests for s3 bucket manager.,1,0,usage
1104,TestSaveNamespace.java,test various failure scenarios during savenamespace operation.,0,0,usage
81,BaseRouterWebServicesTest.java,base class for all the routerrmadminservice test cases.,1,0,usage
1105,TestSaveNamespace.java,cases covered,0,0,usage
1106,TestSaveNamespace.java,ol,1,0,usage
1107,TestSaveNamespace.java,li recover from failure while saving into the second storage directory li,0,0,usage
1108,TestSaveNamespace.java,li recover from failure while moving current into lastcheckpoint^tmp li,1,0,usage
1109,TestSaveNamespace.java,li recover from failure while moving lastcheckpoint^tmp into,0,0,usage
86,BatchedRequests.java,a grouping of scheduling requests which are sent to the placementalgorithm,1,0,usage
1110,TestSaveNamespace.java,previous^checkpoint li,0,0,usage
87,BatchedRequests.java,to place as a batch.,1,0,usage
1111,TestSaveNamespace.java,li recover from failure while rolling edits file li,0,0,usage
88,BatchedRequests.java,the placement algorithm tends to give more optimal,1,0,usage
1112,TestSaveNamespace.java,ol,0,0,usage
89,BatchedRequests.java,placements if more requests are batched together.,1,0,usage
91,BatchedRequests.java,iterator type.,0,0,usage
98,BlockPlacementStatusWithNodeGroup.java,an implementation of @see blockplacementstatus for,1,0,usage
1122,TestSCMDatanodeHeartbeatDispatcher.java,this class tests the behavior of scmdatanodeheartbeatdispatcher.,0,0,usage
1124,TestSequenceFile.java,support for flat files of binary key value pairs.,1,0,usage
103,BlocksMap.java,this class maintains the map from a block to its metadata.,0,0,usage
1127,TestSeveralNameNodes.java,test that we can start several and run with namenodes on the same minicluster,1,0,usage
104,BlocksMap.java,block s metadata currently includes blockcollection it belongs to and,0,0,usage
105,BlocksMap.java,the datanodes that store the block.,1,0,usage
1130,TestSwiftFileSystemContract.java,this is the full filesystem contract test which requires the,0,0,usage
1131,TestSwiftFileSystemContract.java,default config set up to point to a filesystem.,1,0,usage
1132,TestSwiftFileSystemContract.java,some of the tests override the base class tests these,0,0,usage
109,BlockUtils.java,utils functions to help block functions.,1,0,usage
1133,TestSwiftFileSystemContract.java,"are where swiftfs does not implement those features, or",0,0,usage
1134,TestSwiftFileSystemContract.java,when the behavior of swiftfs does not match the normal,1,0,usage
1135,TestSwiftFileSystemContract.java,contract which normally means that directories and equal files,0,0,usage
1136,TestSwiftFileSystemContract.java,are being treated as equal.,1,0,usage
116,CapacitySchedulerPlanFollower.java,this class implements a @link planfollower .,0,0,usage
117,CapacitySchedulerPlanFollower.java,"this is invoked on a timer, and",1,0,usage
118,CapacitySchedulerPlanFollower.java,it is in charge to publish the state of the @link plan s to the underlying,0,0,usage
119,CapacitySchedulerPlanFollower.java,@link capacityscheduler .,1,0,usage
120,CapacitySchedulerPlanFollower.java,"this implementation does so, by",0,0,usage
1144,TestTaskCommit.java,special committer that does not cleanup temporary files in,1,0,usage
121,CapacitySchedulerPlanFollower.java,"adding removing resizing leaf queues in the scheduler, thus affecting the",0,0,usage
1145,TestTaskCommit.java,aborttask,1,0,usage
122,CapacitySchedulerPlanFollower.java,dynamic behavior of the scheduler in a way that is consistent with the,0,0,usage
1146,TestTaskCommit.java,the framework s fileoutputcommitter cleans up any temporary,1,0,usage
123,CapacitySchedulerPlanFollower.java,content of the plan.,0,0,usage
1147,TestTaskCommit.java,files left behind in aborttask.,1,0,usage
124,CapacitySchedulerPlanFollower.java,it also updates the plan s view on how much resources,0,0,usage
1148,TestTaskCommit.java,we want the test case to,1,0,usage
125,CapacitySchedulerPlanFollower.java,are available in the cluster.,0,0,usage
1149,TestTaskCommit.java,find these files and hence short circuit aborttask.,1,0,usage
126,CapacitySchedulerPlanFollower.java,"this implementation of planfollower is relatively stateless, and it can",0,0,usage
127,CapacitySchedulerPlanFollower.java,synchronize schedulers and plans that have arbitrary changes performing set,1,0,usage
128,CapacitySchedulerPlanFollower.java,differences among existing queues .,0,0,usage
129,CapacitySchedulerPlanFollower.java,this makes it resilient to frequency of,1,0,usage
130,CapacitySchedulerPlanFollower.java,"synchronization, and rm restart issues no catch up is necessary .",0,0,usage
1158,TestTaskContext.java,tests context api and @link statusreporter#getprogress via @link taskattemptcontext#getprogress api .,1,0,usage
1161,TestTopCLI.java,test class for topcli.,0,0,usage
1163,TestUpgradeDomainBlockPlacementPolicy.java,end to end test case for upgrade domain,1,0,usage
1164,TestUpgradeDomainBlockPlacementPolicy.java,the test configs upgrade domain for nodes via admin json,0,0,usage
1165,TestUpgradeDomainBlockPlacementPolicy.java,config file and put some nodes to decommission state.,1,0,usage
1166,TestUpgradeDomainBlockPlacementPolicy.java,the test then verifies replicas are placed on the nodes that,0,0,usage
1167,TestUpgradeDomainBlockPlacementPolicy.java,satisfy the upgrade domain policy.,1,0,usage
1173,TextInputFormat.java,an @link inputformat for plain text files.,0,0,usage
1174,TextInputFormat.java,files are broken into lines.,1,0,usage
151,Classpath.java,the output likely will include wildcards in the classpath.,0,0,usage
1175,TextInputFormat.java,either linefeed or carriage return are used to signal end of line.,1,0,usage
1178,TextInputFormat.java,.,0,0,usage
156,Classpath.java,this is useful in situations where wildcard syntax isn t usable.,1,0,usage
157,Classpath.java,"with the jar argument, it writes the classpath as a manifest in a jar file.",0,0,usage
1186,TimelineDataToRetrieve.java,encapsulates information regarding which data to retrieve for each entity,1,0,usage
1187,TimelineDataToRetrieve.java,while querying.,0,0,usage
1188,TimelineDataToRetrieve.java,br,1,0,usage
1189,TimelineDataToRetrieve.java,data to retrieve contains the following br,0,0,usage
1190,TimelineDataToRetrieve.java,ul,1,0,usage
1191,TimelineDataToRetrieve.java,li b confstoretrieve b used for deciding which configs to return,0,0,usage
1192,TimelineDataToRetrieve.java,in response.,1,0,usage
1193,TimelineDataToRetrieve.java,this is represented as a @link timelinefilterlist object,0,0,usage
1194,TimelineDataToRetrieve.java,containing @link timelineprefixfilter objects.,1,0,usage
1195,TimelineDataToRetrieve.java,these can either be,0,0,usage
172,ComparableVersion.java,code source of this file http grepcode^com file repo1^maven.org maven2 org^apache.maven maven artifact 31.1 org apache maven artifact versioning comparableversion^java modifications made on top of the source 1.,1,0,usage
1196,TimelineDataToRetrieve.java,exact config keys or prefixes which are then compared against config,0,0,usage
173,ComparableVersion.java,changed package org^apache.maven^artifact.versioning to package org^apache.hadoop^util 2.,1,0,usage
1199,TimelineDataToRetrieve.java,"or empty, all configurations will be fetched if fieldstoretrieve",0,0,usage
1200,TimelineDataToRetrieve.java,contains @link field#configs or @link field#all .,1,0,usage
1202,TimelineDataToRetrieve.java,confused with configfilters which is used to decide which entities to,0,0,usage
1203,TimelineDataToRetrieve.java,return instead.,1,0,usage
1204,TimelineDataToRetrieve.java,li,0,0,usage
1206,TimelineDataToRetrieve.java,in response.,1,0,usage
1207,TimelineDataToRetrieve.java,this is represented as a @link timelinefilterlist object,0,0,usage
1208,TimelineDataToRetrieve.java,containing @link timelineprefixfilter objects.,1,0,usage
1209,TimelineDataToRetrieve.java,these can either be,0,0,usage
1210,TimelineDataToRetrieve.java,exact metric ids or prefixes which are then compared against metric,1,0,usage
1213,TimelineDataToRetrieve.java,"or empty, all metrics will be fetched if fieldstoretrieve contains",0,0,usage
1216,TimelineDataToRetrieve.java,with metricfilters which is used to decide which entities to return,1,0,usage
1217,TimelineDataToRetrieve.java,instead.,0,0,usage
1218,TimelineDataToRetrieve.java,li,1,0,usage
1222,TimelineDataToRetrieve.java,"namely entity id, entity type and entity created time.",0,0,usage
199,ComparableVersion.java,@see a href https cwiki^apache.org confluence display mavenold versioning versioning on maven wiki a,1,0,usage
1223,TimelineDataToRetrieve.java,all fields will,0,0,usage
1225,TimelineDataToRetrieve.java,li,1,0,usage
204,ComparableVersion.java,with number in the version specification .,0,0,usage
1228,TimelineDataToRetrieve.java,number of metrics to return.,1,0,usage
1229,TimelineDataToRetrieve.java,this parameter is ignored if metrics are not to,0,0,usage
1230,TimelineDataToRetrieve.java,be fetched.,1,0,usage
1231,TimelineDataToRetrieve.java,li,0,0,usage
1233,TimelineDataToRetrieve.java,be retrieved.,1,0,usage
1235,TimelineDataToRetrieve.java,li,0,0,usage
1237,TimelineDataToRetrieve.java,be retrieved.,1,0,usage
1239,TimelineDataToRetrieve.java,li,0,0,usage
1240,TimelineDataToRetrieve.java,ul,0,0,usage
239,ConfigurationException.java,exception to throw in case of a configuration problem.,0,0,usage
245,CpuTimeTracker.java,utility for sampling and computing cpu usage.,0,0,usage
248,DBProfile.java,user visible configs based rocksdb tuning page.,0,0,usage
271,DefaultAnonymizingRumenSerializer.java,default rumen json serializer.,0,0,usage
274,DelegatingSSLSocketFactory.java,"specifically, either openssl or jsse can be used.",0,0,usage
275,DelegatingSSLSocketFactory.java,openssl offers better,0,0,usage
276,DelegatingSSLSocketFactory.java,performance than jsse and is made available via the,0,0,usage
277,DelegatingSSLSocketFactory.java,a href https github^com wildfly wildfly openssl wildlfy openssl a,0,0,usage
303,DelegatingSSLSocketFactory.java,the gcm cipher is disabled when running on java 8.,0,0,usage
304,DelegatingSSLSocketFactory.java,"however, the name",0,0,usage
306,DelegatingSSLSocketFactory.java,"instead,",0,0,usage
1348,TimelineStorageMonitor.java,this abstract class is for monitoring health of timeline storage.,0,0,usage
1352,TonyRuntimeFactory.java,implementation of runtimefactory with tony runtime,0,0,usage
1355,TypedEvent.java,basic event implementation to implement custom events.,0,0,usage
1360,UniformSizeInputFormat.java,"uniformsizeinputformat extends the inputformat class, to produce",0,0,usage
1361,UniformSizeInputFormat.java,input splits for distcp.,0,0,usage
1362,UniformSizeInputFormat.java,it looks at the copy listing and groups the contents into input splits such,0,0,usage
1363,UniformSizeInputFormat.java,that the total number of bytes to be copied for each input split is,0,0,usage
1364,UniformSizeInputFormat.java,uniform.,0,0,usage
1370,Utils.java,a utility class.,0,0,usage
1371,Utils.java,it provides,0,0,usage
1372,Utils.java,a path filter utility to filter out output part files in the output dir,0,0,usage
352,DelegationTokenIdentifier.java,a delegation token identifier that is specific to hdfs.,0,0,usage
362,DfsServlet.java,a base class for the servlets in dfs.,0,0,usage
364,DiskBalancerCluster.java,diskbalancercluster represents the nodes that we are working against.,0,0,usage
365,DiskBalancerCluster.java,p,0,0,usage
366,DiskBalancerCluster.java,please note,0,0,usage
367,DiskBalancerCluster.java,semantics of inclusionlist and exclusionlists.,0,0,usage
368,DiskBalancerCluster.java,p,0,0,usage
369,DiskBalancerCluster.java,if a non empty inclusionlist is specified then the diskbalancer assumes that,0,0,usage
370,DiskBalancerCluster.java,the user is only interested in processing that list of nodes.,0,0,usage
371,DiskBalancerCluster.java,this node list,0,0,usage
372,DiskBalancerCluster.java,is checked against the exclusionlist and only the nodes in inclusionlist but,0,0,usage
373,DiskBalancerCluster.java,not in exclusionlist is processed.,0,0,usage
374,DiskBalancerCluster.java,p,0,0,usage
375,DiskBalancerCluster.java,"if inclusionlist is empty, then we assume that all live nodes in the nodes is",0,0,usage
376,DiskBalancerCluster.java,to be processed by diskbalancer.,0,0,usage
1400,VolumeSet.java,volumeset to manage hdds volumes in a datanode.,0,0,usage
377,DiskBalancerCluster.java,in that case diskbalancer will avoid any,0,0,usage
378,DiskBalancerCluster.java,nodes specified in the exclusionlist but will process all nodes in the,0,0,usage
379,DiskBalancerCluster.java,cluster.,0,0,usage
1403,WritableComparator.java,a comparator for @link writablecomparable s.,0,0,usage
380,DiskBalancerCluster.java,p,0,0,usage
381,DiskBalancerCluster.java,"in other words, an empty inclusionlist is means all the nodes otherwise",0,0,usage
382,DiskBalancerCluster.java,only a given list is processed and exclusionlist is always honored.,0,0,usage
401,DistributedSchedulingAllocateRequest.java,"object used by the application master when distributed scheduling is enabled,",0,0,usage
1430,YarnAuthorizationProvider.java,an implementation of the interface will provide authorization related,0,0,usage
1431,YarnAuthorizationProvider.java,information and enforce permission check.,0,0,usage
408,DockerKillCommand.java,encapsulates the docker kill command and its command line arguments.,0,0,usage
1432,YarnAuthorizationProvider.java,it is excepted that any of the,0,0,usage
1433,YarnAuthorizationProvider.java,methods defined in this interface should be non blocking call and should not,0,0,usage
410,EditLogTailer.java,editlogtailer represents a thread which periodically reads from edits,0,0,usage
1434,YarnAuthorizationProvider.java,involve expensive computation as these method could be invoked in rpc.,0,0,usage
411,EditLogTailer.java,journals and applies the transactions contained within to a given,0,0,usage
412,EditLogTailer.java,fsnamesystem.,0,0,usage
413,EditLogTailer.java,the thread which does the actual work of tailing edits journals and,0,0,usage
414,EditLogTailer.java,applying the transactions to the fsns.,0,0,usage
415,EditLogTailer.java,manage the active namenode proxy .,0,0,usage
416,EditLogTailer.java,this cannot just be the a single proxy since we could,0,0,usage
417,EditLogTailer.java,"failover across a number of namenodes, rather than just between an active and a standby.",0,0,usage
418,EditLogTailer.java,p,0,0,usage
419,EditLogTailer.java,we lazily get a proxy to one of the configured namenodes and attempt to make the request,0,0,usage
1443,YarnServiceJobSubmitter.java,submit a job to cluster.,0,0,usage
420,EditLogTailer.java,against it.,0,0,usage
421,EditLogTailer.java,"if it doesn t succeed, either because the proxy failed to be created or the request",0,0,usage
422,EditLogTailer.java,"failed, we try the next nn in the list.",0,0,usage
423,EditLogTailer.java,we try this up to the configuration maximum number of,0,0,usage
424,EditLogTailer.java,retries before throwing up our hands.,0,0,usage
425,EditLogTailer.java,a working proxy is retained across attempts since we,0,0,usage
426,EditLogTailer.java,expect the active namenode to switch rarely.,0,0,usage
427,EditLogTailer.java,p,0,0,usage
428,EditLogTailer.java,this mechanism is b very bad b for cases where we care about being i fast i it just,0,0,usage
429,EditLogTailer.java,blindly goes and tries namenodes.,0,0,usage
450,ErasureCodingPolicyManager.java,this manages erasure coding policies predefined and activated in the system.,0,0,usage
451,ErasureCodingPolicyManager.java,it loads customized policies and syncs with persisted ones in,0,0,usage
452,ErasureCodingPolicyManager.java,namenode image.,0,0,usage
459,EventWatcher.java,event watcher the re send a message after timeout.,0,0,usage
461,EventWatcher.java,event watcher will send the tracked payload event after a timeout period,0,0,usage
462,EventWatcher.java,unless a confirmation from the original event completion event is arrived.,0,0,usage
463,EventWatcher.java,@param timeout payload the type of the events which are tracked.,0,0,usage
464,EventWatcher.java,@param completion payload the type of event which could cancel the,0,0,usage
465,EventWatcher.java,tracking.,0,0,usage
477,FairOrderingPolicy.java,an orderingpolicy which orders schedulableentities for fairness see,0,0,usage
478,FairOrderingPolicy.java,fairscheduler,0,0,usage
479,FairOrderingPolicy.java,"fairsharepolicy , generally, processes with lesser usage are lesser.",0,0,usage
500,FederationPolicyException.java,generic policy exception.,0,0,usage
506,FederationStateStoreInvalidInputException.java,"exception thrown by the @code federationmembershipstatestoreinputvalidator ,",0,0,usage
511,FileSystemApplicationHistoryStore.java,file system implementation of @link applicationhistorystore .,0,0,usage
516,FileSystemApplicationHistoryStore.java,@link #applicationstarted applicationstartdata is supposed to,0,0,usage
517,FileSystemApplicationHistoryStore.java,be invoked first when writing any history data of one application and it will,0,0,usage
518,FileSystemApplicationHistoryStore.java,"open a file, while @link #applicationfinished applicationfinishdata is",0,0,usage
519,FileSystemApplicationHistoryStore.java,supposed to be last writing operation and will close the file.,0,0,usage
531,FsConstants.java,filesystem related constants.,0,0,usage
537,GetNamespaceInfoResponse.java,api response for listing hdfs namespaces present in the state store.,0,0,usage
554,HadoopIllegalArgumentException.java,indicates that a method has been passed illegal or invalid argument.,0,0,usage
560,HashResolver.java,order the destinations based on consistent hashing.,0,0,usage
562,HttpHeaderConfigurations.java,responsible to keep all abfs http headers here.,0,0,usage
564,IDataLoader.java,an idataloader loads data on demand,0,0,usage
566,InconsistentS3ClientFactory.java,s3 client factory used for testing with eventual consistency fault injection.,0,0,usage
574,InfoKeyHandler.java,executes info object.,0,0,usage
579,ITestAbfsReadWriteAndSeek.java,"test read, write and seek.",0,0,usage
584,ITestAzureNativeContractSeek.java,contract test.,0,0,usage
591,ITestListPerformance.java,test list performance.,0,0,usage
593,ITestS3Select.java,test the s3 select feature with some basic sql commands.,0,0,usage
594,ITestS3Select.java,executed if the destination store declares its support for the feature.,0,0,usage
600,KerberosDelegationTokenAuthenticator.java,the code kerberosdelegationtokenauthenticator code provides support for,0,0,usage
601,KerberosDelegationTokenAuthenticator.java,kerberos spnego authentication mechanism and support for hadoop delegation,0,0,usage
602,KerberosDelegationTokenAuthenticator.java,token operations.,0,0,usage
604,KerberosDelegationTokenAuthenticator.java,it falls back to the @link pseudodelegationtokenauthenticator if the http,0,0,usage
605,KerberosDelegationTokenAuthenticator.java,endpoint does not trigger a spnego authentication,0,0,usage
613,LocalizationStatusPBImpl.java,pb impl of @link localizationstatus .,0,0,usage
616,LocatedFileStatus.java,this class defines a filestatus that includes a file s block locations.,0,0,usage
618,LoggedTask.java,a @link loggedtask represents a hadoop task that is part of a hadoop job.,0,0,usage
619,LoggedTask.java,"it knows about the pssibly empty sequence of attempts, its i o footprint,",0,0,usage
620,LoggedTask.java,and its runtime.,0,0,usage
629,LogParserUtil.java,common utility functions for @link logparser .,0,0,usage
632,LogWebService.java,support only atsv2 client only.,0,0,usage
634,LRUCacheHashMap.java,lru cache with a configurable maximum cache size and access order.,0,0,usage
637,MapContext.java,the context that is given to the @link mapper .,0,0,usage
649,MetaBlockAlreadyExists.java,exception meta block with the same name already exists.,0,0,usage
651,MetricsCache.java,a metrics cache for sinks that don t support sparse updates.,0,0,usage
652,MetricsCache.java,cached record,0,0,usage
656,NativeBatchProcessor.java,"used to create channel, transfer data and command between java and native",0,0,usage
658,NativeSingleLineParser.java,this sample parser will parse the sample log and extract the resource,0,0,usage
659,NativeSingleLineParser.java,skyline.,0,0,usage
660,NativeSingleLineParser.java,p the expected log format is normalizedjobname numinstances submittime,0,0,usage
661,NativeSingleLineParser.java,starttime endtime jobinstancename memusage coreusage,0,0,usage
669,Nfs3Status.java,success or error status is reported in nfs3 responses.,0,0,usage
671,Node2ObjectsMap.java,this data structure maintains the list of containers that is on a datanode.,0,0,usage
672,Node2ObjectsMap.java,this information is built from the dn container reports.,0,0,usage
677,NodeUpdateType.java,p,0,0,usage
682,NullOutputFormat.java,consume all outputs and put them in dev null.,0,0,usage
685,OMNodeDetails.java,this class stores om node details.,0,0,usage
686,OMNodeDetails.java,builder class for omnodedetails.,0,0,usage
690,OpportunisticContainersStatusPBImpl.java,protocol buffer implementation of opportunisticcontainersstatus.,0,0,usage
692,OzoneObj.java,class representing an unique ozone object.,0,0,usage
693,OzoneObj.java,ozone objects supported for acl.,0,0,usage
694,OzoneObj.java,ozone objects supported for acl.,0,0,usage
697,Parser.java,a class for parsing outputs,0,0,usage
699,PartialOutputCommitter.java,interface for an @link org^apache.hadoop^mapreduce.outputcommitter,0,0,usage
703,PartitionResourcesInfo.java,this class represents queue user resource usage info for a given partition,0,0,usage
709,ProcessIdFileReader.java,helper functionality to read the pid from a file.,0,0,usage
711,QuasiMonteCarlo.java,a map reduce program that estimates the value of pi,0,0,usage
712,QuasiMonteCarlo.java,using a quasi monte carlo qmc method.,0,0,usage
713,QuasiMonteCarlo.java,arbitrary integrals can be approximated numerically by qmc methods.,0,0,usage
725,QuasiMonteCarlo.java,the implementation is discussed below.,0,0,usage
726,QuasiMonteCarlo.java,mapper,0,0,usage
727,QuasiMonteCarlo.java,generate points in a unit square,0,0,usage
728,QuasiMonteCarlo.java,and then count points inside outside of the inscribed circle of the square.,0,0,usage
729,QuasiMonteCarlo.java,reducer,0,0,usage
741,QuasiMonteCarlo.java,generate points in a unit square,0,0,usage
742,QuasiMonteCarlo.java,and then count points inside outside of the inscribed circle of the square.,0,0,usage
775,Query.java,check if a record matches a query.,0,0,usage
776,Query.java,the query is usually a partial record.,0,0,usage
777,Query.java,@param t type of the record to query.,0,0,usage
781,QueueName.java,represents a queue name.,0,0,usage
783,RandomKeyGenerator.java,data generator tool to generate as much keys as possible.,0,0,usage
784,RandomKeyGenerator.java,wrapper to hold ozone keyvalidate entry.,0,0,usage
785,RandomKeyGenerator.java,validates the write done in ozone cluster.,0,0,usage
789,ReencryptionUpdater.java,"class for finalizing re encrypt edek operations, by updating file xattrs with",0,0,usage
791,ReencryptionUpdater.java,p,0,0,usage
792,ReencryptionUpdater.java,the tasks are submitted by reencryptionhandler.,0,0,usage
793,ReencryptionUpdater.java,p,0,0,usage
794,ReencryptionUpdater.java,"it is assumed only 1 updater will be running, since updating file xattrs",0,0,usage
795,ReencryptionUpdater.java,"requires namespace write lock, and performance gain from multi threading",0,0,usage
796,ReencryptionUpdater.java,is limited.,0,0,usage
797,ReencryptionUpdater.java,class to track re encryption submissions of a single zone.,0,0,usage
798,ReencryptionUpdater.java,it contains,0,0,usage
799,ReencryptionUpdater.java,"all the submitted futures, and statistics about how far the futures are",0,0,usage
800,ReencryptionUpdater.java,processed.,0,0,usage
801,ReencryptionUpdater.java,class representing the task for one batch of a re encryption command.,0,0,usage
802,ReencryptionUpdater.java,it,0,0,usage
803,ReencryptionUpdater.java,also contains statistics about how far this single batch has been executed.,0,0,usage
804,ReencryptionUpdater.java,class that encapsulates re encryption details of a file.,0,0,usage
830,RegistryInternalConstants.java,internal constants for the registry.,0,0,usage
831,RegistryInternalConstants.java,these are the things which aren t visible to users.,0,0,usage
834,RegistryOperations.java,registry operations,0,0,usage
837,ResourceBlacklistRequest.java,@link resourceblacklistrequest encapsulates the list of resource names which should be added or removed from the em blacklist em of resources for the application.,0,0,usage
838,ResourceBlacklistRequest.java,@see resourcerequest,0,0,usage
839,ResourceBlacklistRequest.java,@see applicationmasterprotocol#allocate org^apache.hadoop^yarn.api^protocolrecords.allocaterequest,0,0,usage
844,ResourceRequestsJsonVerifications.java,performs value verifications on,0,0,usage
845,ResourceRequestsJsonVerifications.java,@link org^apache.hadoop^yarn.server^resourcemanager.webapp^dao.resourcerequestinfo,0,0,usage
846,ResourceRequestsJsonVerifications.java,objects against the values of @link resourcerequest .,0,0,usage
847,ResourceRequestsJsonVerifications.java,with the help of the,0,0,usage
848,ResourceRequestsJsonVerifications.java,"@link builder , users can also make verifications of the custom resource",0,0,usage
849,ResourceRequestsJsonVerifications.java,types and its values.,0,0,usage
850,ResourceRequestsJsonVerifications.java,builder class for @link resourcerequestsjsonverifications .,0,0,usage
868,RMAdminRequestInterceptor.java,"defines the contract to be implemented by the request intercepter classes,",0,0,usage
873,RSLegacyRawErasureCoderFactory.java,a raw coder factory for the legacy raw reed solomon coder in java.,0,0,usage
878,SchedulerQueueManager.java,context of the queues in scheduler.,0,0,usage
880,SequenceFileRecordReader.java,an @link recordreader for @link sequencefile s.,0,0,usage
883,ShellBasedUnixGroupsMapping.java,a simple shell based implementation of @link groupmappingserviceprovider that exec s the code groups code shell command to fetch the group,0,0,usage
887,StandardSocketFactory.java,specialized socketfactory to create sockets with a socks proxy,0,0,usage
889,StateStoreFileSystemImpl.java,@link statestoredriver implementation based on a filesystem.,0,0,usage
898,StreamBaseRecordReader.java,shared functionality for hadoopstreaming formats.,0,0,usage
902,StreamBaseRecordReader.java,@see streamxmlrecordreader,0,0,usage
909,StructureGenerator.java,this program generates a random namespace structure with the following,0,0,usage
910,StructureGenerator.java,constraints,0,0,usage
911,StructureGenerator.java,1,0,0,usage
912,StructureGenerator.java,"the number of subdirectories is a random number in minwidth, maxwidth .",0,0,usage
913,StructureGenerator.java,2,0,0,usage
914,StructureGenerator.java,"the maximum depth of each subdirectory is a random number 2 maxdepth 3, maxdepth .",0,0,usage
915,StructureGenerator.java,3,0,0,usage
916,StructureGenerator.java,files are randomly placed in the empty directories.,0,0,usage
917,StructureGenerator.java,the size of each,0,0,usage
918,StructureGenerator.java,file follows gaussian distribution.,0,0,usage
919,StructureGenerator.java,the generated namespace structure is described by two files in the output,0,0,usage
920,StructureGenerator.java,directory.,0,0,usage
922,StructureGenerator.java,each line of the second file contains,0,0,usage
923,StructureGenerator.java,"the full name of a file and its size, separated by a blank.",0,0,usage
960,SwiftBadRequestException.java,thrown to indicate that data locality can t be calculated or requested path is incorrect.,0,0,usage
961,SwiftBadRequestException.java,data locality can t be calculated if openstack swift version is old.,0,0,usage
964,SwiftRestClient.java,this implements the client side of the swift rest api.,0,0,usage
971,SwiftRestClient.java,get the current operation statistics.,0,0,usage
972,SwiftRestClient.java,@return a snapshot of the statistics,0,0,usage
973,SwiftRestClient.java,base class for all swift rest operations.,0,0,usage
974,SwiftRestClient.java,@param m request,0,0,usage
975,SwiftRestClient.java,@param r result,0,0,usage
976,SwiftRestClient.java,get the current operation statistics.,0,0,usage
977,SwiftRestClient.java,@return a snapshot of the statistics,0,0,usage
981,SwiftRestClient.java,get the current operation statistics.,0,0,usage
982,SwiftRestClient.java,@return a snapshot of the statistics,0,0,usage
983,SwiftRestClient.java,generate an auth message.,0,0,usage
984,SwiftRestClient.java,@param r response,0,0,usage
985,SwiftRestClient.java,get the current operation statistics.,0,0,usage
986,SwiftRestClient.java,@return a snapshot of the statistics,0,0,usage
987,SwiftRestClient.java,create operation.,0,0,usage
989,SwiftRestClient.java,get the current operation statistics.,0,0,usage
990,SwiftRestClient.java,@return a snapshot of the statistics,0,0,usage
991,SwiftRestClient.java,delete operation.,0,0,usage
992,SwiftRestClient.java,@param r,0,0,usage
1015,TableConfig.java,class that maintains table configuration.,0,0,usage
1017,TestAddBlock.java,test addblockop is written and read correctly,0,0,usage
1020,TestAdlContractDeleteLive.java,test delete contract test.,0,0,usage
1022,TestAdlContractSeekLive.java,test seek operation on adl file system.,0,0,usage
1536,KVStore.java,kvstore instances are thread safe for both reads and writes.,0,0,usage
1537,KVStore.java,p,1,0,usage
1445,ChunkFetchSuccess.java,response to @link chunkfetchrequest when a chunk exists and has been successfully fetched.,0,0,usage
1573,LevelDB.java,implementation of kvstore that uses leveldb as the underlying data store.,1,0,usage
1448,ChunkFetchSuccess.java,"similarly, the client side decoding will reuse the netty bytebuf as the buffer.",0,0,usage
1576,LocalDiskShuffleDataIO.java,implementation of the @link shuffledataio plugin system that replicates the local shuffle,1,0,usage
1577,LocalDiskShuffleDataIO.java,storage and index file functionality that has historically been used from spark 24 and earlier.,0,0,usage
1451,ExecutorPlugin.java,a plugin which can be automatically instantiated within each spark executor.,1,0,usage
1581,MessageWithHeader.java,a wrapper message that holds two separate pieces a header and a body .,0,0,usage
1584,RemoveBlocks.java,request to remove a set of blocks.,1,0,usage
1586,StreamHandle.java,identifier for a fixed number of chunks to read from a stream created by an open blocks,0,0,usage
1587,StreamHandle.java,message.,1,0,usage
1588,StreamHandle.java,this is used by @link org^apache.spark^network.shuffle^oneforoneblockfetcher .,0,0,usage
1592,TBoolColumn.java,"the set of fields this struct contains, along with convenience methods for finding and manipulating them.",1,0,usage
1594,UploadBlockStream.java,"a request to upload a block, which the destination should receive as a stream.",0,0,usage
1595,UploadBlockStream.java,the actual block data is not contained here.,1,0,usage
1596,UploadBlockStream.java,it will be passed to the streamcallbackwithid,0,0,usage
1469,FlatMapFunction.java,a function that returns zero or more output records from each input record.,1,0,usage
1597,UploadBlockStream.java,that is returned from rpchandler^receivestream,0,0,usage
1473,JavaStreamingTestExample.java,"perform streaming testing using welch s 2 sample t test on a stream of data, where the data",1,0,usage
1474,JavaStreamingTestExample.java,stream arrives as text files in a directory.,0,0,usage
1475,JavaStreamingTestExample.java,stops when the two groups are statistically,1,0,usage
1476,JavaStreamingTestExample.java,significant p value 005 or after a user specified timeout in number of batches is exceeded.,0,0,usage
1477,JavaStreamingTestExample.java,"the rows of the text files must be in the form boolean, double .",1,0,usage
1478,JavaStreamingTestExample.java,for example,0,0,usage
1479,JavaStreamingTestExample.java,"false, 392",0,0,usage
1480,JavaStreamingTestExample.java,"true, 9932",0,0,usage
1505,KVStore.java,abstraction for a local key value store for storing app data.,0,0,usage
1506,KVStore.java,p,0,0,usage
1507,KVStore.java,there are two main features provided by the implementations of this interface,0,0,usage
1508,KVStore.java,p,0,0,usage
1509,KVStore.java,h3 serialization h3,0,0,usage
1510,KVStore.java,p,0,0,usage
1511,KVStore.java,"if the underlying data store requires serialization, data will be serialized to and deserialized",0,0,usage
1512,KVStore.java,"using a @link kvstoreserializer , which can be customized by the application.",0,0,usage
1513,KVStore.java,the serializer is,0,0,usage
1514,KVStore.java,"based on jackson, so it supports all the jackson annotations for controlling the serialization of",0,0,usage
1515,KVStore.java,app defined types.,0,0,usage
1516,KVStore.java,p,0,0,usage
1517,KVStore.java,p,0,0,usage
1518,KVStore.java,data is also automatically compressed to save disk space.,0,0,usage
1519,KVStore.java,p,0,0,usage
1520,KVStore.java,h3 automatic key management h3,0,0,usage
1521,KVStore.java,p,0,0,usage
1522,KVStore.java,"when using the built in key management, the implementation will automatically create unique",0,0,usage
1523,KVStore.java,keys for each type written to the store.,0,0,usage
1524,KVStore.java,"keys are based on the type name, and always start",0,0,usage
1525,KVStore.java,with the prefix character so that it s easy to use both manual and automatic key,0,0,usage
1526,KVStore.java,management apis without conflicts .,0,0,usage
1527,KVStore.java,p,0,0,usage
1528,KVStore.java,p,0,0,usage
1529,KVStore.java,another feature of automatic key management is indexing by annotating fields or methods of,0,0,usage
1530,KVStore.java,"objects written to the store with @link kvindex , indices are created to sort the data",0,0,usage
1531,KVStore.java,by the values of those properties.,0,0,usage
1532,KVStore.java,this makes it possible to provide sorting without having,0,0,usage
1533,KVStore.java,to load all instances of those types from the store.,0,0,usage
1534,KVStore.java,p,0,0,usage
1535,KVStore.java,p,0,0,usage
2058,ICPPAliasTemplateInstance.java,represents an instance of an alias template 145.7 .,0,0,usage
2059,ICPPAliasTemplateInstance.java,@since 55,1,0,usage
2066,ICPPASTLinkageSpecification.java,this interface represents a linkage specification.,0,0,usage
2067,ICPPASTLinkageSpecification.java,eg extern c .,1,0,usage
2579,TriggerCellModifier.java,cell modifier used to edit the trigger value.,0,0,usage
2581,TypedCDTViewerFilter.java,see org^eclipse.cdt^internal.ui^dialogs.typedviewerfilter,1,0,usage
2585,UncallCommandHandler.java,command handler to trigger an uncall operation,0,0,usage
2074,ICPPASTVirtSpecifier.java,a virt specifier at the end of a function declaration.,1,0,usage
2586,UncallCommandHandler.java,@since 70,0,0,usage
2075,ICPPASTVirtSpecifier.java,"there are two virt specifiers, final and override .",1,0,usage
2589,UPCKeyword.java,enumeration of keywords that upc adds to c99.,0,0,usage
2078,ICPPASTVirtSpecifier.java,@since 57,1,0,usage
2590,UPCKeyword.java,@author mike kucera,0,0,usage
2593,UPCLanguage.java,"implementation of the ilanguage extension point, adds upc as a language to cdt.",1,0,usage
2594,UPCLanguage.java,@author mike kucera,0,0,usage
2597,VMHasChildrenUpdate.java,helper class implementation of the @link ihaschildrenupdate update object.,1,0,usage
2598,VMHasChildrenUpdate.java,@see vmviewerupdate,0,0,usage
2599,VMHasChildrenUpdate.java,@since 10,1,0,usage
2090,ICSourceNotFoundDescription.java,an instance is usually provided by an adapter.,0,0,usage
2603,WhiteSpaceOptions.java,manage code formatter white space options on a higher level.,1,0,usage
2093,IDsfDebugServicesFactory.java,a factory to create dsf services.,0,0,usage
2096,IDsfDebugServicesFactory.java,@since 11,1,0,usage
2100,IGDBTraceControl.java,the tracecontrol service provides access to the debugger tracing functionality.,0,0,usage
2101,IGDBTraceControl.java,it is used to do such things as start and stop tracing.,1,0,usage
2102,IGDBTraceControl.java,@since 30,0,0,usage
2103,IGDBTraceControl.java,gdb specific part,1,0,usage
2104,IGDBTraceControl.java,marker interface for a context on which trace operations can be performed,0,0,usage
2105,IGDBTraceControl.java,gdb specific part,1,0,usage
2106,IGDBTraceControl.java,specific trace record context.,0,0,usage
2107,IGDBTraceControl.java,it describes tracing data.,1,0,usage
2108,IGDBTraceControl.java,gdb specific part,0,0,usage
2109,IGDBTraceControl.java,this is the model data interface that corresponds to itracerecorddmcontext.,1,0,usage
2110,IGDBTraceControl.java,gdb specific part,0,0,usage
2111,IGDBTraceControl.java,trace events,1,0,usage
2623,WordIgnoreProposal.java,proposal to ignore the word during the current editing session.,0,0,usage
2112,IGDBTraceControl.java,gdb specific part @since 44,1,0,usage
2625,WorkingCopyTests.java,contains unit test cases for working copies.,0,0,usage
1607,AbstractCPropertyTab.java,"in this case, we ll able to use",1,0,usage
1608,AbstractCPropertyTab.java,a lot of utility methods via provider link.,0,0,usage
1609,AbstractCPropertyTab.java,"in particular, it allows to get current project,",1,0,usage
1610,AbstractCPropertyTab.java,configuration etc see icpropertyprovider interface.,0,0,usage
1611,AbstractCPropertyTab.java,a standard way to create buttons ins edit del etc,1,0,usage
1612,AbstractCPropertyTab.java,and to handle their events see buttonpressed int,0,0,usage
1613,AbstractCPropertyTab.java,several utility methods to create widgets in the,1,0,usage
1614,AbstractCPropertyTab.java,"uniform manner setuplabel , setuptext etc .",0,0,usage
2127,IInclude.java,represents an include declaration in a c translation unit.,1,0,usage
1615,AbstractCPropertyTab.java,means to handle control messages which are the main,0,0,usage
1616,AbstractCPropertyTab.java,communication way for new cdt model pages and tabs.,1,0,usage
2140,IMIBackend.java,service for controlling the back end process.,0,0,usage
2141,IMIBackend.java,@since 11,1,0,usage
2142,IMIBackend.java,event indicating that the back end process has started or terminated.,0,0,usage
1631,AbstractTrialUndoActionProvider.java,action for a null rule,1,0,usage
2146,IMSASTDeclspecList.java,"represents a microsoft attribute specifier, introduced by declspec.",0,0,usage
1634,AddBreakpointRulerAction.java,ruler action to add breakpoint with a dialog properties.,1,0,usage
2147,IMSASTDeclspecList.java,@since 66,0,0,usage
1636,AddLineBreakpointActionDelegate.java,a delegate for the add line breakpoint action.,1,0,usage
1638,AddLineBreakpointActionDelegate.java,initially derived from addfunctionbreakpointactiondelegate,0,0,usage
1641,AddMemoryBlocks.java,adds memory blocks to the memory view.,1,0,usage
2154,INodeFactory.java,control flow graph node factory,0,0,usage
1642,AddMemoryBlocks.java,p,1,0,usage
1650,AddMemoryBlocks.java,p,0,0,usage
1651,AddMemoryBlocks.java,@since 32,1,0,usage
2164,IPropertyChangeParticipant.java,@since 50,0,0,usage
2172,IRefreshAllTarget.java,@since 11,1,0,usage
1662,AllTemplateEngineTests.java,the test suite will execute all the testcases added to the suite.,0,0,usage
2175,IRegisters2.java,service extension of iregisters to manage user defined register groups,1,0,usage
1663,AllTemplateEngineTests.java,@since 40,0,0,usage
2176,IRegisters2.java,@since 26,1,0,usage
2179,IScannerInfoConsoleParser.java,parses a line of command output looking for scanner info entries.,0,0,usage
1667,AutoconfMacroParameterListValidator.java,this class provides the macro call parameter parsing for the autoconf editor hover,1,0,usage
2180,IScannerInfoConsoleParser.java,@author vhirsl,0,0,usage
1668,AutoconfMacroParameterListValidator.java,it is modified from the cdt class cparameterlistvalidator,1,0,usage
1669,AutoconfMacroParameterListValidator.java,@author jjohnstn,0,0,usage
2187,ITestItem.java,represents status of the test item.,1,0,usage
1675,BindingClassifierTest.java,tests for @link bindingclassifier .,0,0,usage
1678,C99BuildASTParserAction.java,semantic actions called by the c99 parser to build an ast.,1,0,usage
1679,C99BuildASTParserAction.java,@author mike kucera,0,0,usage
1682,CConfigurationDescriptionCache.java,cconfigurationdescriptioncache is a proxy class for serialization of configuration description data.,1,0,usage
2195,IViewInMemory.java,provides the ability to view a variable in the memory view.,0,0,usage
2196,IViewInMemory.java,@since 74,1,0,usage
2199,LanguageSettingsProvidersSerializer.java,helper class handling serialization and notifications for language settings entries @link iclanguagesettingentry .,0,0,usage
2200,LanguageSettingsProvidersSerializer.java,those are for readability of xml only,1,0,usage
2201,LanguageSettingsProvidersSerializer.java,dummy class to represent ill defined provider.,0,0,usage
2202,LanguageSettingsProvidersSerializer.java,those are for readability of xml only,1,0,usage
2204,LanguageSettingsProvidersSerializer.java,those are for readability of xml only,0,0,usage
2205,LanguageSettingsProvidersSerializer.java,wrapper for workspace providers to ensure level of indirection.,1,0,usage
2209,LanguageSettingsProvidersSerializer.java,those are for readability of xml only,0,0,usage
2210,LanguageSettingsProvidersSerializer.java,language settings change event implementation.,1,0,usage
2223,MIAsyncErrorProcessor.java,in some cases gdb reports exec commands failure after the ^running event is fired.,0,0,usage
2237,MIAsyncErrorProcessor.java,this class handles these type of situations by firing mierrorevent when such an error appears.,1,0,usage
2238,MIAsyncErrorProcessor.java,@since 53,0,0,usage
2246,MIBreakpointsSynchronizer.java,p,1,0,usage
2247,MIBreakpointsSynchronizer.java,"bug 530377 prior to fixing 530377, events that arrived from gdb faster than",0,0,usage
2248,MIBreakpointsSynchronizer.java,dsf eclipse fully processed them could cause the state within the,1,0,usage
2249,MIBreakpointsSynchronizer.java,synchronizer and manager to become corrupt.,0,0,usage
2250,MIBreakpointsSynchronizer.java,this would happen because it,0,0,usage
2251,MIBreakpointsSynchronizer.java,"takes multiple dsf stages to complete handling 1 event, so the handling of",0,0,usage
2252,MIBreakpointsSynchronizer.java,the next event would become intermingled.,0,0,usage
2253,MIBreakpointsSynchronizer.java,that violated many assumptions in,0,0,usage
2254,MIBreakpointsSynchronizer.java,the code that the code run in the respective requestmonitor would be on the,0,0,usage
2255,MIBreakpointsSynchronizer.java,same state.,0,0,usage
2256,MIBreakpointsSynchronizer.java,this is an unsuprising assumption based on the general idea of,0,0,usage
2257,MIBreakpointsSynchronizer.java,dsf as not requiring the normal synchronization primitives as everything is,0,0,usage
2258,MIBreakpointsSynchronizer.java,single threaded.,0,0,usage
2259,MIBreakpointsSynchronizer.java,"to resolve this problem, there is some code",0,0,usage
2260,MIBreakpointsSynchronizer.java,@link #queueevent breakpointevent that ensures each event is fully,0,0,usage
2261,MIBreakpointsSynchronizer.java,processed before the next event starts processing.,0,0,usage
2262,MIBreakpointsSynchronizer.java,@since 42,0,0,usage
2263,MIBreakpointsSynchronizer.java,catchpoint expressions gdb tracepoint commands,0,0,usage
2264,MIBreakpointsSynchronizer.java,class to store an event that needs to be performed by the synchronizer,0,0,usage
2265,MIBreakpointsSynchronizer.java,@see mibreakpointssynchronizer class documentation for design comments,0,0,usage
1755,CDebugModelPresentation.java,@see idebugmodelpresentation,0,0,usage
1757,CElementDelta.java,@see icelementdelta,0,0,usage
1759,ClangToolChain.java,the clang toolchain.,0,0,usage
1762,ClangToolChain.java,@author dschaefer,0,0,usage
1766,CommonBuildTab.java,common utilities for core build launch configuration tabs.,0,0,usage
1767,CommonBuildTab.java,@since 91,0,0,usage
1770,ContainerTabModel.java,@since 12.1,0,0,usage
1771,ContainerTabModel.java,@author jjohnstn,0,0,usage
1774,CoreBuildGenericLaunchConfigProvider.java,core launch configuration provider used by generic target types.,0,0,usage
1775,CoreBuildGenericLaunchConfigProvider.java,@since 83,0,0,usage
2288,MIDataListRegisterNames.java,show a list of register names for the current target.,0,0,usage
1778,CPPASTProblem.java,c specific implementation allows actions to visit the problem.,0,0,usage
1780,CPPASTReferenceOperator.java,reference operator for declarators.,0,0,usage
1784,CPPDeferredFunction.java,a compiler would resolve it during instantiation.,0,0,usage
1787,CPPImplicitVariable.java,represents a variable implicitly created in c code.,0,0,usage
2302,MIEnvironmentDirectory.java,add directory pathdir to beginning of search path for source files.,0,0,usage
2309,MIReverseDebugEnabler.java,@since 42,0,0,usage
1798,CPropertyTester.java,a property tester that determines if a file is an executable or a c c project.,0,0,usage
1800,CUIPreferenceInitializer.java,this class implements the setting of the cui initial preference store settings.,0,0,usage
2313,MIStack.java,provide the data.,0,0,usage
2315,MIStack.java,class to track stack depth and debug frames for our internal cache,0,0,usage
2316,MIStack.java,"a map of threadid framescacheinfo, that can be cleared based on a context.",0,0,usage
2317,MIStack.java,we use this cache for a few reasons,0,0,usage
2318,MIStack.java,br,0,0,usage
2319,MIStack.java,"first, two commands such as",0,0,usage
2320,MIStack.java,pre,0,0,usage
1808,DefaultEnvironmentContextInfo.java,the default implementation of the icontextinfo used by the environment variable provider,0,0,usage
2321,MIStack.java,stack info depth 11,0,0,usage
1809,DefaultEnvironmentContextInfo.java,"used to represent the configuration, project, workspace and eclipse environment contexts",0,0,usage
2322,MIStack.java,stack info depth 2,0,0,usage
1810,DefaultEnvironmentContextInfo.java,@since 30,0,0,usage
2323,MIStack.java,pre,0,0,usage
2324,MIStack.java,would both be sent to gdb because the command cache sees them as different.,0,0,usage
2325,MIStack.java,this cache allows us to know that if we already asked for a stack depth,0,0,usage
2326,MIStack.java,we can potentially re use the answer.,0,0,usage
2327,MIStack.java,br,0,0,usage
2328,MIStack.java,the same concept is applicable for the stack list frames command with different limits.,0,0,usage
2329,MIStack.java,"also, the stack depth can be deduced from the frames list, so we don t need to ask gdb for it again.",0,0,usage
2330,MIStack.java,p,0,0,usage
2331,MIStack.java,the second reason is that gdb is unreliable when it comes to returning frames.,0,0,usage
2332,MIStack.java,the mi protocol only allows to reply,0,0,usage
2333,MIStack.java,with data or with error.,0,0,usage
2334,MIStack.java,"when gdb is unwinding sometimes it gets both, and while the console cli protocol has no",0,0,usage
2335,MIStack.java,"problem with that, for mi, gdb replies randomly, sometimes with data, sometimes with error.",0,0,usage
1823,DisplayDsfExecutor.java,@since 10,0,0,usage
2336,MIStack.java,if we cache the valid data,0,0,usage
2337,MIStack.java,it will eliminate the issue with invalid data on subsequent invocations.,0,0,usage
2338,MIStack.java,we don t cache errors.,0,0,usage
2339,MIStack.java,base class for the iframedmdata object that uses an miframe object to,0,0,usage
2340,MIStack.java,provide the data.,0,0,usage
1828,DocCommentOwnerBlock.java,project property page for setting documentation comment owner.,0,0,usage
2341,MIStack.java,sub classes must provide the miframe object,0,0,usage
1836,DOMGCCParserExtensionTestSuite.java,@author jcamelon,0,0,usage
1838,DOMParserTestSuite.java,@author jcamelon,0,0,usage
1840,DsfDebugUITools.java,@since 11,0,0,usage
1842,DummyPage.java,this class is just to replace a category reference in org^eclipse.cdt^ui that we exclude because we do not bring in the org^eclipse.cdt^managedbuild.ui plug in.,0,0,usage
1847,ElementNumberFormatsContribution.java,@since 22,0,0,usage
1850,FindStdLibPath.java,the purpose is to find a path where stdc library is located.,0,0,usage
1855,FoldingConfigurationBlock.java,configures c editor folding preferences.,0,0,usage
1856,FoldingConfigurationBlock.java,@since 30,0,0,usage
1859,FormattedValueTests.java,tests to verify the operation of formattedvaluesvmutil,0,0,usage
2372,MIThreadCreatedEvent.java,this can only be detected by gdb mi after gdb 68.,0,0,usage
1860,FormattedValueTests.java,@since 22,0,0,usage
1861,FormattedValueTests.java,helper class that stores some element paths and nodes using a certain format,0,0,usage
2374,MIThreadGroupAddedEvent.java,"thread group added,id i1",0,0,usage
2375,MIThreadGroupAddedEvent.java,this can only be detected by gdb mi with gdb 72.,0,0,usage
2376,MIThreadGroupAddedEvent.java,@since 51,0,0,usage
1869,GDBControl_7_12.java,need a new finallaunchsequence for gdb 712,0,0,usage
2382,MultiLaunchConfigurationTabGroup.java,tab group for launch group.,0,0,usage
1870,GDBControl_7_12.java,@since 52,0,0,usage
2383,MultiLaunchConfigurationTabGroup.java,"@deprecated see bug 517722, launch groups are now part of platform.",0,0,usage
1873,GdbExpressionVMProvider.java,a specialization of expressionvmprovider that uses a gdb specific variable vm,0,0,usage
2386,PDOMDependencyGenerator.java,@author doug schaefer,0,0,usage
1875,GdbExpressionVMProvider.java,"to understand why this is necessary, see gdbvariablevmnode.",0,0,usage
1879,GDBSourceLookup.java,default implementation of @link igdbsourcelookup,0,0,usage
2392,PDOMMacroReferenceName.java,"represents declarations, definitions and references to bindings, except for macros.",0,0,usage
1880,GDBSourceLookup.java,@since 50,0,0,usage
2397,ProblemMarkerManager.java,visitors used to filter the element delta changes,0,0,usage
1885,GnuMakefileGenerator.java,@since 12,0,0,usage
2401,ProcessLauncher.java,this class implements external process launching for internal builder.,0,0,usage
2405,ProcStatParser.java,@author marc dumais,0,0,usage
2407,ProcStatParser.java,@see also http www^linuxhowtos.org system procstat^htm,0,0,usage
2410,QtPDOMNameIndex.java,a data structure for storing lists of pdomnames that are indexed by a string key.,0,0,usage
2411,QtPDOMNameIndex.java,"this is equivalent to the java type map string, list pdomname .",0,0,usage
2414,RenameCSourceFolderChange.java,@author ee4 graf ifs,0,0,usage
2424,ReturnCheckerTest.java,test for @see returncheckertest class,0,0,usage
2432,RulerColumnDescriptor.java,@since 72,0,0,usage
2440,SCDOptionsEnum.java,enumeration class for scanner configuration affecting command line options,0,0,usage
2441,SCDOptionsEnum.java,@author vhirsl,0,0,usage
2445,SourceLookupTest.java,tests that interaction with source lookups works as expected.,0,0,usage
2446,SourceLookupTest.java,p,0,0,usage
2452,SourceLookupTest.java,p,0,0,usage
2479,SourceLookupTest.java,"in addition, there can also be a b dwarf2 b in the name.",0,0,usage
2480,SourceLookupTest.java,that means it is,0,0,usage
2481,SourceLookupTest.java,"designed to run with gdb 74, see comment in makefile for olddwarfflags.",0,0,usage
2482,SourceLookupTest.java,p,0,0,usage
2484,SourceLookupTest.java,tests are parameterised.,0,0,usage
2485,SourceLookupTest.java,p,0,0,usage
2486,SourceLookupTest.java,some of the cdt source lookup features require newer versions of gdb than,0,0,usage
2487,SourceLookupTest.java,"others, therefore the relevant tests use assumegdbversion methods to be",0,0,usage
2488,SourceLookupTest.java,skipped when appropriate.,0,0,usage
2531,SpellEvent.java,spell event fired for words detected by a spell check iterator.,0,0,usage
2533,StandardCElementLabelProvider.java,celementlabelprovider that respects settings from the appearance preference page.,0,0,usage
2534,StandardCElementLabelProvider.java,triggers a viewer update when a preference changes.,0,0,usage
2535,StandardCElementLabelProvider.java,@deprecated use @link appearanceawarelabelprovider instead.,0,0,usage
2024,GroupDebugContextsCommandHandler.java,command handler to trigger grouping of debug contexts operation.,0,0,usage
2025,GroupDebugContextsCommandHandler.java,@since 71,0,0,usage
2539,StringDialogField.java,dialog field containing a label and a text control.,0,0,usage
2028,IBHistoryAction.java,action used for the include browser forward backward buttons,0,0,usage
2544,ToggleDynamicPrintfAdapter.java,toggles a dynamic printf in a c c editor.,0,0,usage
2545,ToggleDynamicPrintfAdapter.java,@since 75,0,0,usage
2548,TracepointActionsPropertyPage.java,property page for tracepoint actions,0,0,usage
2036,ICLanguageSettingPathEntry.java,see interface hierarchy for more specifics.,0,0,usage
2549,TracepointActionsPropertyPage.java,@since 21,0,0,usage
2552,TracingConsole.java,a console that is used to print traces.,0,0,usage
2553,TracingConsole.java,the console is attached to a launch.,0,0,usage
2041,ICLibraryFileEntry.java,see @link icsettingentry#library file .,0,0,usage
2558,TracingConsole.java,@since 21,0,0,usage
2046,ICodeReaderFactory.java,@author jcamelon,0,0,usage
2559,TracingConsole.java,this class was moved from package org^eclipse.cdt^dsf.gdb^internal.ui^tracing,0,0,usage
2047,ICodeReaderFactory.java,@deprecated replaced by @link includefilecontentprovider,0,0,usage
3585,ReserializingTestCollectionGenerator.java,reserializes the sets created by another test set generator.,0,0,usage
3074,CloseablesTest.java,unit tests for @link closeables .,1,0,usage
3075,CloseablesTest.java,"p checks proper closing behavior, and ensures that ioexceptions on closeable^close are not",0,0,usage
3587,ReserializingTestCollectionGenerator.java,@author jesse wilson,1,0,usage
3076,CloseablesTest.java,propagated out from the @link closeables#close method if @code swallowexception is true.,0,0,usage
3077,CloseablesTest.java,@author michael lancaster,1,0,usage
3590,Resources.java,provides utility methods for working with resources in the classpath.,0,0,usage
3082,CollectionTestSuiteBuilder.java,concrete instantiation of @link abstractcollectiontestsuitebuilder for testing collections that,1,0,usage
3083,CollectionTestSuiteBuilder.java,do not have a more specific tester like @link listtestsuitebuilder or @link,0,0,usage
3595,Resources.java,@author chris nokleberg,1,0,usage
3084,CollectionTestSuiteBuilder.java,settestsuitebuilder .,0,0,usage
3596,Resources.java,@author ben yu,1,0,usage
3085,CollectionTestSuiteBuilder.java,@author chris povirk,0,0,usage
3597,Resources.java,@author colin decker,1,0,usage
3086,CollectionTestSuiteBuilder.java,@author louis wasserman,0,0,usage
3598,Resources.java,@since 10,1,0,usage
3599,Resources.java,a byte source that reads from a url using @link url#openstream .,0,0,usage
4115,SortedSetNavigationTester.java,a generic junit test which tests operations on a sortedset.,1,0,usage
4117,SortedSetNavigationTester.java,@code sortedsettestsuitebuilder .,0,0,usage
4118,SortedSetNavigationTester.java,@author jesse wilson,1,0,usage
4119,SortedSetNavigationTester.java,@author louis wasserman,0,0,usage
3095,ConflictingRequirementsException.java,thrown when requirements on a tester method or class conflict with each other.,1,0,usage
3096,ConflictingRequirementsException.java,@author george van den driessche,0,0,usage
3609,SmoothRateLimiter.java,allow at normal conditions.,1,0,usage
3610,SmoothRateLimiter.java,"this is enforced by throttling incoming requests as needed, ie",0,0,usage
3099,CountingOutputStream.java,an outputstream that counts the number of bytes written.,1,0,usage
3100,CountingOutputStream.java,@author chris nokleberg,0,0,usage
3612,SmoothRateLimiter.java,wait as much.,1,0,usage
3101,CountingOutputStream.java,@since 10,0,0,usage
4126,SubscriberTest.java,tests for @link subscriber .,1,0,usage
4127,SubscriberTest.java,@author cliff biffle,0,0,usage
3615,SmoothRateLimiter.java,"for example, for a rate of",1,0,usage
4128,SubscriberTest.java,@author colin decker,0,0,usage
3616,SmoothRateLimiter.java,"qps 5 5 tokens per second , if we ensure that a request isn t granted earlier than 200ms after",1,0,usage
3105,DescendingMultiset.java,a skeleton implementation of a descending multiset.,0,0,usage
3106,DescendingMultiset.java,only needs @code forwardmultiset and,1,0,usage
3107,DescendingMultiset.java,@code entryiterator .,0,0,usage
3108,DescendingMultiset.java,@author louis wasserman,1,0,usage
3620,SmoothRateLimiter.java,"at this rate, serving 15 fresh permits",0,0,usage
3621,SmoothRateLimiter.java,ie for an acquire 15 request naturally takes 3 seconds.,1,0,usage
4134,TesterRequirements.java,encapsulates the constraints that a class under test must satisfy in order for a tester method to,0,0,usage
4135,TesterRequirements.java,be run against that class.,1,0,usage
4136,TesterRequirements.java,@author george van den driessche,0,0,usage
3113,EqualsTester.java,tester for equals and hashcode methods of a class.,1,0,usage
3626,SmoothRateLimiter.java,this ratelimiter would immediately,0,0,usage
4141,TestStringListGenerator.java,@author kevin bourrillion,1,0,usage
3630,SmoothRateLimiter.java,past underutilization could mean that excess resources are available.,0,0,usage
4143,WrappingScheduledExecutorService.java,an abstract @code scheduledexecutorservice that allows subclasses to @linkplain,1,0,usage
4144,WrappingScheduledExecutorService.java,#wraptask callable wrap tasks before they are submitted to the underlying executor.,0,0,usage
4146,WrappingScheduledExecutorService.java,@author luke sandberg,1,0,usage
3635,SmoothRateLimiter.java,"translates to almost empty buffers , which can be filled immediately.",0,0,usage
3638,SmoothRateLimiter.java,requests become more likely to trigger expensive operations a more extreme case of this,1,0,usage
3639,SmoothRateLimiter.java,"example is when a server has just booted, and it is mostly busy with getting itself up to",0,0,usage
3640,SmoothRateLimiter.java,speed .,1,0,usage
3129,EqualsTester.java,p this tests,0,0,usage
3641,SmoothRateLimiter.java,"to deal with such scenarios, we add an extra dimension, that of past underutilization ,",1,0,usage
3130,EqualsTester.java,ul,0,0,usage
3131,EqualsTester.java,li comparing each object against itself returns true,1,0,usage
3644,SmoothRateLimiter.java,"and it can grow up to maxstoredpermits, for sufficiently large underutilization.",0,0,usage
3133,EqualsTester.java,li comparing each object against an instance of an incompatible class returns false,1,0,usage
3134,EqualsTester.java,li comparing each pair of objects within the same equality group returns true,0,0,usage
3646,SmoothRateLimiter.java,"requested permits, by an invocation acquire permits , are served from",1,0,usage
3135,EqualsTester.java,li comparing each pair of objects from different equality groups returns false,0,0,usage
3647,SmoothRateLimiter.java,stored permits if available,1,0,usage
3136,EqualsTester.java,li the hash codes of any two equal objects are equal,0,0,usage
3648,SmoothRateLimiter.java,fresh permits for any remaining permits,1,0,usage
3137,EqualsTester.java,ul,0,0,usage
3140,EqualsTester.java,ul,1,0,usage
2630,AbstractCollectionTester.java,base class for collection testers.,0,0,usage
2632,AbstractCollectionTester.java,@author kevin bourrillion,1,0,usage
3146,EqualsTester.java,ul,0,0,usage
3147,EqualsTester.java,@author jim mcmaster,1,0,usage
2636,AbstractListeningExecutorService.java,abstract @link listeningexecutorservice implementation that creates @link listenablefuture,0,0,usage
3148,EqualsTester.java,@author jige yu,1,0,usage
2637,AbstractListeningExecutorService.java,instances for each @link runnable and @link callable submitted to it.,0,0,usage
3149,EqualsTester.java,@since 100,1,0,usage
2638,AbstractListeningExecutorService.java,these tasks are run,0,0,usage
2639,AbstractListeningExecutorService.java,with the abstract @link #execute execute runnable method.,1,0,usage
2642,AbstractListeningExecutorService.java,@author chris povirk,0,0,usage
2643,AbstractListeningExecutorService.java,@since 140,1,0,usage
2652,AbstractLoadingCache.java,this class provides a skeletal implementation of the @code cache interface to minimize the,0,0,usage
2653,AbstractLoadingCache.java,effort required to implement this interface.,1,0,usage
2664,AbstractLoadingCache.java,@author charles fry,0,0,usage
2665,AbstractLoadingCache.java,@since 110,1,0,usage
3182,FeatureSpecificTestSuiteBuilder.java,"creates, based on your criteria, a junit test suite that exhaustively tests the object generated",0,0,usage
3183,FeatureSpecificTestSuiteBuilder.java,"by a g, selecting appropriate tests by matching them against specified features.",1,0,usage
2681,AbstractMultimap.java,"a skeleton @code multimap implementation, not necessarily in terms of a @code map .",0,0,usage
2682,AbstractMultimap.java,@author louis wasserman,1,0,usage
2685,AbstractMultimapTester.java,superclass for all @code multimap testers.,0,0,usage
2686,AbstractMultimapTester.java,@author louis wasserman,1,0,usage
2689,AbstractSortedKeySortedSetMultimap.java,basic implementation of a @link sortedsetmultimap with a sorted key set.,0,0,usage
2690,AbstractSortedKeySortedSetMultimap.java,p this superclass allows @code treemultimap to override methods to return navigable set and,1,0,usage
2691,AbstractSortedKeySortedSetMultimap.java,"map types in non gwt only, while gwt code will inherit the sortedmap sortedset overrides.",0,0,usage
2692,AbstractSortedKeySortedSetMultimap.java,@author louis wasserman,1,0,usage
3205,ForwardingBlockingDequeTest.java,test for @link forwardingblockingdeque,0,0,usage
3206,ForwardingBlockingDequeTest.java,@author emily soldal,1,0,usage
2697,ArbitraryInstances.java,"supplies an arbitrary default instance for a wide range of types, often useful in testing",0,0,usage
3209,ForwardingImmutableSet.java,gwt implementation of @link immutableset that forwards to another @code set implementation.,1,0,usage
2698,ArbitraryInstances.java,utilities.,0,0,usage
3210,ForwardingImmutableSet.java,@author hayward chan,1,0,usage
2699,ArbitraryInstances.java,"p covers arrays, enums and common types defined in @code java^lang , @code java^lang.reflect ,",0,0,usage
2700,ArbitraryInstances.java,"@code java^io , @code java^nio , @code java^math , @code java^util , @code",1,0,usage
2701,ArbitraryInstances.java,"java^util.concurrent , @code java^util.regex , @code com^google.common^base , @code",0,0,usage
2702,ArbitraryInstances.java,com^google.common^collect and @code com^google.common^primitives .,1,0,usage
3214,ForwardingQueueTest.java,tests for @code forwardingqueue .,0,0,usage
2703,ArbitraryInstances.java,"in addition, if the type",1,0,usage
3215,ForwardingQueueTest.java,@author robert konigsberg,0,0,usage
2704,ArbitraryInstances.java,"exposes at least one public static final constant of the same type, one of the constants will be",1,0,usage
3216,ForwardingQueueTest.java,@author louis wasserman,0,0,usage
2705,ArbitraryInstances.java,used or if the class exposes a public parameter less constructor then it will be new d and,1,0,usage
2706,ArbitraryInstances.java,returned.,0,0,usage
3220,GwtTestSuite.java,runs all gwt tests.,1,0,usage
3221,GwtTestSuite.java,grouping them into a suite is much faster than running each as a one test,0,0,usage
3222,GwtTestSuite.java,"suite, as the per suite setup is expensive.",0,0,usage
2714,ArbitraryInstances.java,@author kevin bourrillion,0,0,usage
3226,HashFunctionEnum.java,an enum that contains all of the known hash functions.,0,0,usage
2715,ArbitraryInstances.java,@author ben yu,0,0,usage
3227,HashFunctionEnum.java,@author kurt alfred kluever,0,0,usage
2716,ArbitraryInstances.java,@since 120,0,0,usage
3744,SmoothRateLimiter.java,pre,0,0,usage
3745,SmoothRateLimiter.java,^ throttling,0,0,usage
3746,SmoothRateLimiter.java,cold,0,0,usage
3747,SmoothRateLimiter.java,interval .,0,0,usage
3749,SmoothRateLimiter.java,thresholdpermits and maxpermits,0,0,usage
3750,SmoothRateLimiter.java,stable warm .,0,0,usage
3751,SmoothRateLimiter.java,interval .,0,0,usage
3752,SmoothRateLimiter.java,up .,0,0,usage
3753,SmoothRateLimiter.java,period.,0,0,usage
3755,SmoothRateLimiter.java,0 thresholdpermits maxpermits,0,0,usage
3756,SmoothRateLimiter.java,pre,0,0,usage
3758,SmoothRateLimiter.java,ol,0,0,usage
3759,SmoothRateLimiter.java,li the state of the ratelimiter storedpermits is a vertical line in this figure.,0,0,usage
3763,SmoothRateLimiter.java,"li when unused , we go right at a constant rate!",0,0,usage
3255,HostAndPort.java,@since 100,0,0,usage
2746,ArrayListMultimapGwtSerializationDependencies.java,a dummy superclass to support gwt serialization of the element types of an @link,0,0,usage
3770,SmoothRateLimiter.java,spend k saved permits.,0,0,usage
2747,ArrayListMultimapGwtSerializationDependencies.java,arraylistmultimap .,0,0,usage
3771,SmoothRateLimiter.java,ol,0,0,usage
2748,ArrayListMultimapGwtSerializationDependencies.java,the gwt supersource for this class contains a field for each type.,0,0,usage
2749,ArrayListMultimapGwtSerializationDependencies.java,"p for details about this hack, see @link gwtserializationdependencies , which takes the same",0,0,usage
2750,ArrayListMultimapGwtSerializationDependencies.java,approach but with a subclass rather than a superclass.,0,0,usage
3775,SmoothRateLimiter.java,equal to warmupperiod.,0,0,usage
3779,SmoothRateLimiter.java,where coldfactor was hard coded as 3.,0,0,usage
3780,SmoothRateLimiter.java,p it remains to calculate thresholdspermits and maxpermits.,0,0,usage
2757,AtomicDoubleArrayTest.java,source,0,0,usage
2758,AtomicDoubleArrayTest.java,http gee^cs.oswego^edu cgi bin viewcvs^cgi jsr166 src test tck jsr166e atomicdoublearraytest^java?revision 113,0,0,usage
2759,AtomicDoubleArrayTest.java,modified to adapt to guava coding conventions,0,0,usage
3783,SmoothRateLimiter.java,between 0 and thresholdpermits.,0,0,usage
2760,AtomicDoubleArrayTest.java,unit test for @link atomicdoublearray .,0,0,usage
3784,SmoothRateLimiter.java,this is thresholdpermits stableintervals.,0,0,usage
2765,BaseEncodingBenchmark.java,benchmark for @code baseencoding performance.,0,0,usage
3789,SmoothRateLimiter.java,thresholdpermits 05 warmupperiod stableinterval,0,0,usage
2767,BloomFilter.java,a bloom filter for instances of @code t .,0,0,usage
2768,BloomFilter.java,a bloom filter offers an approximate containment test,0,0,usage
3792,SmoothRateLimiter.java,function between thresholdpermits and maxpermits.,0,0,usage
2769,BloomFilter.java,"with one sided error if it claims that an element is contained in it, this might be in error,",0,0,usage
2770,BloomFilter.java,"but if it claims that an element is i not i contained in it, then this is definitely true.",0,0,usage
3282,ImmutableSetHashFloodingDetectionBenchmark.java,benchmark of implementations of @link immutableset#hashfloodingdetected object .,0,0,usage
3794,SmoothRateLimiter.java,"trapezoid, and it is equal to 05 stableinterval coldinterval maxpermits",0,0,usage
2771,BloomFilter.java,"p if you are unfamiliar with bloom filters, this nice a",0,0,usage
3795,SmoothRateLimiter.java,thresholdpermits .,0,0,usage
2772,BloomFilter.java,href http llimllib^github.com bloomfilter tutorial tutorial a may help you understand how,0,0,usage
2773,BloomFilter.java,they work.,0,0,usage
3285,ImmutableTable_CustomFieldSerializerBase.java,this class contains static utility methods for writing @link immutabletable gwt field,0,0,usage
2774,BloomFilter.java,p the false positive probability @code fpp of a bloom filter is defined as the probability,0,0,usage
3286,ImmutableTable_CustomFieldSerializerBase.java,serializers.,0,0,usage
3798,SmoothRateLimiter.java,maxpermits thresholdpermits 2 warmupperiod stableinterval coldinterval,0,0,usage
2775,BloomFilter.java,that @linkplain #mightcontain object will erroneously return @code true for an object that,0,0,usage
2776,BloomFilter.java,has not actually been put in the @code bloomfilter .,0,0,usage
3288,ImmutableTable_CustomFieldSerializerBase.java,@author chris povirk,0,0,usage
2777,BloomFilter.java,p bloom filters are serializable.,0,0,usage
2778,BloomFilter.java,they also support a more compact serial representation via the,0,0,usage
2779,BloomFilter.java,@link #writeto and @link #readfrom methods.,0,0,usage
3803,SmoothRateLimiter.java,allow at normal conditions.,0,0,usage
2780,BloomFilter.java,both serialized forms will continue to be,0,0,usage
3804,SmoothRateLimiter.java,"this is enforced by throttling incoming requests as needed, ie",0,0,usage
2781,BloomFilter.java,supported by future versions of this library.,0,0,usage
3293,LazyStackTraceBenchmark.java,quick and dirty benchmark of @link throwables#lazystacktrace throwable .,0,0,usage
2782,BloomFilter.java,"however, serial forms generated by newer versions",0,0,usage
3294,LazyStackTraceBenchmark.java,we benchmark a caller,0,0,usage
3806,SmoothRateLimiter.java,wait as much.,0,0,usage
2783,BloomFilter.java,"of the code may not be readable by older versions of the code eg, a serialized bloom filter",0,0,usage
3295,LazyStackTraceBenchmark.java,finder implementation that might be used in a logging framework.,0,0,usage
2784,BloomFilter.java,generated today may i not i be readable by a binary that was compiled 6 months ago .,0,0,usage
2785,BloomFilter.java,"p as of guava 230, this class is thread safe and lock free.",0,0,usage
3809,SmoothRateLimiter.java,"for example, for a rate of",0,0,usage
2786,BloomFilter.java,it internally uses atomics and,0,0,usage
3810,SmoothRateLimiter.java,"qps 5 5 tokens per second , if we ensure that a request isn t granted earlier than 200ms after",0,0,usage
2787,BloomFilter.java,compare and swap to ensure correctness when multiple threads are used to access it.,0,0,usage
3300,LongMathBenchmark.java,benchmarks for the non rounding methods of @code longmath .,0,0,usage
2789,BloomFilter.java,@author dimitris andreou,0,0,usage
3301,LongMathBenchmark.java,@author louis wasserman,0,0,usage
2790,BloomFilter.java,@author kevin bourrillion,0,0,usage
3814,SmoothRateLimiter.java,"at this rate, serving 15 fresh permits",0,0,usage
2791,BloomFilter.java,@since 110 thread safe since 230,0,0,usage
3815,SmoothRateLimiter.java,ie for an acquire 15 request naturally takes 3 seconds.,0,0,usage
3304,MapPutAllTester.java,a generic junit test which tests @code putall operations on a map.,0,0,usage
3306,MapPutAllTester.java,please see @link com^google.common^collect.testing^maptestsuitebuilder .,0,0,usage
3307,MapPutAllTester.java,@author chris povirk,0,0,usage
3308,MapPutAllTester.java,@author kevin bourrillion,0,0,usage
3820,SmoothRateLimiter.java,this ratelimiter would immediately,0,0,usage
3824,SmoothRateLimiter.java,past underutilization could mean that excess resources are available.,0,0,usage
3313,MapSerializationTester.java,basic serialization test for maps.,0,0,usage
3314,MapSerializationTester.java,@author louis wasserman,0,0,usage
3317,MultimapBuilder.java,a builder for a multimap implementation that allows customization of the backing map and value,0,0,usage
3829,SmoothRateLimiter.java,"translates to almost empty buffers , which can be filled immediately.",0,0,usage
3318,MultimapBuilder.java,collection implementations used in a particular multimap.,0,0,usage
3832,SmoothRateLimiter.java,requests become more likely to trigger expensive operations a more extreme case of this,0,0,usage
3833,SmoothRateLimiter.java,"example is when a server has just booted, and it is mostly busy with getting itself up to",0,0,usage
3834,SmoothRateLimiter.java,speed .,0,0,usage
3835,SmoothRateLimiter.java,"to deal with such scenarios, we add an extra dimension, that of past underutilization ,",0,0,usage
3838,SmoothRateLimiter.java,"and it can grow up to maxstoredpermits, for sufficiently large underutilization.",0,0,usage
3840,SmoothRateLimiter.java,"requested permits, by an invocation acquire permits , are served from",0,0,usage
3841,SmoothRateLimiter.java,stored permits if available,0,0,usage
3842,SmoothRateLimiter.java,fresh permits for any remaining permits,0,0,usage
3332,MultimapBuilder.java,@author louis wasserman,0,0,usage
2833,CacheBuilder.java,following features,0,0,usage
2834,CacheBuilder.java,ul,0,0,usage
2835,CacheBuilder.java,li automatic loading of entries into the cache,0,0,usage
2836,CacheBuilder.java,li least recently used eviction when a maximum size is exceeded,0,0,usage
2837,CacheBuilder.java,"li time based expiration of entries, measured since last access or last write",0,0,usage
2838,CacheBuilder.java,li keys automatically wrapped in @linkplain weakreference weak references,0,0,usage
2839,CacheBuilder.java,li values automatically wrapped in @linkplain weakreference weak or @linkplain,0,0,usage
2840,CacheBuilder.java,softreference soft references,0,0,usage
2841,CacheBuilder.java,li notification of evicted or otherwise removed entries,0,0,usage
2843,CacheBuilder.java,ul,0,0,usage
3390,MultimapBuilderTest.java,tests for @link multimapbuilder .,0,0,usage
3391,MultimapBuilderTest.java,@author louis wasserman,0,0,usage
2880,CacheBuilder.java,"p b note b by default, the returned cache uses equality comparisons the @link",0,0,usage
3394,NullsLastOrdering_CustomFieldSerializer.java,this class implements the gwt serialization of @link nullslastordering .,0,0,usage
3395,NullsLastOrdering_CustomFieldSerializer.java,@author chris povirk,0,0,usage
3398,ObjectCountHashMap.java,objectcounthashmap is an implementation of @code abstractobjectcountmap that uses arrays to,0,0,usage
3399,ObjectCountHashMap.java,store key objects and count values.,0,0,usage
3400,ObjectCountHashMap.java,comparing to using a traditional @code hashmap,0,0,usage
3401,ObjectCountHashMap.java,"implementation which stores keys and count values as map entries, @code objectcounthashmap",0,0,usage
3402,ObjectCountHashMap.java,minimizes object allocation and reduces memory footprint.,0,0,usage
3410,PeekingIterator.java,an iterator that supports a one element lookahead while iterating.,0,0,usage
3411,PeekingIterator.java,p see the guava user guide article on a href,0,0,usage
3412,PeekingIterator.java,https github^com google guava wiki collectionhelpersexplained#peekingiterator @code,0,0,usage
3413,PeekingIterator.java,peekingiterator a .,0,0,usage
3414,PeekingIterator.java,@author mick killianey,0,0,usage
3415,PeekingIterator.java,@since 20,0,0,usage
3422,Preconditions.java,static convenience methods that help a method or constructor check whether it was invoked,0,0,usage
3425,Preconditions.java,"of a specified type, which helps the method in which the exception was thrown communicate that",0,0,usage
3426,Preconditions.java,its caller has made a mistake.,0,0,usage
3939,SmoothRateLimiter.java,"terms of time, in this sense if a ratelimiter is 2qps, and this time is specified as 10",0,0,usage
3940,SmoothRateLimiter.java,"seconds, we can save up to 2 10 20 permits.",0,0,usage
2918,CacheBuilder.java,p see the guava user guide article on a,0,0,usage
2919,CacheBuilder.java,href https github^com google guava wiki cachesexplained caching a for a higher level,0,0,usage
2920,CacheBuilder.java,explanation.,0,0,usage
2929,CacheBuilder.java,@author charles fry,0,0,usage
2930,CacheBuilder.java,@author kevin bourrillion,0,0,usage
2931,CacheBuilder.java,@since 100,0,0,usage
3453,Preconditions.java,"however, the methods of this class have a large number of overloads that prevent such",0,0,usage
3459,Preconditions.java,h3 other types of preconditions h3,0,0,usage
3460,Preconditions.java,p not every type of precondition failure is supported by these methods.,0,0,usage
3464,Preconditions.java,h3 non preconditions h3,0,0,usage
3473,Preconditions.java,similar to those in this class for non precondition checks.,0,0,usage
3481,Preconditions.java,p @code preconditions uses @link strings#lenientformat to format error message template,0,0,usage
3486,Preconditions.java,"number of occurrences of @code %s in the format string, @code preconditions will still",0,0,usage
3489,Preconditions.java,h3 more information h3,0,0,usage
3490,Preconditions.java,p see the guava user guide on a,0,0,usage
3493,Preconditions.java,@author kevin bourrillion,0,0,usage
3494,Preconditions.java,@since 20,0,0,usage
3040,CacheLoaderTest.java,unit tests for @link cacheloader .,0,0,usage
3041,CacheLoaderTest.java,@author charles fry,0,0,usage
3044,CacheManualTest.java,@author charles fry,0,0,usage
3046,ClassToInstanceMap.java,"a map, each entry of which maps a java a href http tinyurl^com 2cmwkz raw type a to an",0,0,usage
3047,ClassToInstanceMap.java,instance of that type.,0,0,usage
3048,ClassToInstanceMap.java,"in addition to implementing @code map , the additional type safe",0,0,usage
3049,ClassToInstanceMap.java,operations @link #putinstance and @link #getinstance are available.,0,0,usage
3050,ClassToInstanceMap.java,"p like any other @code map class, object , this map may contain entries for primitive types,",0,0,usage
3051,ClassToInstanceMap.java,and a primitive type and its corresponding wrapper type may map to different values.,0,0,usage
3052,ClassToInstanceMap.java,p see the guava user guide article on a href,0,0,usage
3053,ClassToInstanceMap.java,https github^com google guava wiki newcollectiontypesexplained#classtoinstancemap @code,0,0,usage
3054,ClassToInstanceMap.java,classtoinstancemap a .,0,0,usage
3058,ClassToInstanceMap.java,@author kevin bourrillion,0,0,usage
3059,ClassToInstanceMap.java,@since 20,0,0,usage
3580,RegularImmutableList_CustomFieldSerializer.java,this class implements the gwt serialization of @link regularimmutablelist .,0,0,usage
3581,RegularImmutableList_CustomFieldSerializer.java,@author hayward chan,0,0,usage
4164,AbstractModule.java,@author crazybob@google^com bob lee,0,0,usage
4487,Element.java,an internal binding annotation applied to each element in a multibinding.,1,0,usage
4488,Element.java,all elements are,0,0,usage
4489,Element.java,assigned a globally unique id to allow different modules to contribute multibindings,1,0,usage
4490,Element.java,independently.,0,0,usage
4491,Element.java,@author jessewilson@google^com jesse wilson,1,0,usage
4497,EncounterImpl.java,@author jessewilson@google^com jesse wilson,0,0,usage
4179,Binder.java,collects configuration information primarily i bindings i which will be used to create an,1,0,usage
4499,ImplicitBindingTest.java,"@author crazybob@google^com bob lee an enum cannot be implemented by anything, so it should not be possible to have a successful valid jitable binding",0,0,usage
4180,Binder.java,@link injector .,1,0,usage
4182,Binder.java,they may each contribute their own bindings and other registrations.,0,0,usage
4502,ManagedFilterPipeline.java,"central routing dispatch class handles lifecycle of managed filters, and delegates to the servlet",1,0,usage
4503,ManagedFilterPipeline.java,pipeline.,0,0,usage
4504,ManagedFilterPipeline.java,@author dhanji@gmail^com dhanji r. prasanna,0,0,usage
4508,PrivateElementProcessor,handles @code binder^newprivatebinder elements.,0,0,usage
4509,PrivateElementProcessor,@author jessewilson@google^com jesse wilson,0,0,usage
4512,ProxyFactoryTest.java,@author crazybob@google^com bob lee,0,0,usage
4514,SpiUtils.java,utilities for testing the multibinder & mapbinder extension spi.,0,0,usage
4323,Binder.java,@author crazybob@google^com bob lee,0,0,usage
4515,SpiUtils.java,@author sameb@google^com sam berlin,0,0,usage
4324,Binder.java,@author jessewilson@google^com jesse wilson,0,0,usage
4325,Binder.java,@author kevinb@google^com kevin bourrillion,0,0,usage
4518,SpiUtils.java,the kind of binding.,0,0,usage
4519,SpiUtils.java,the result of the binding.,0,0,usage
4151,AbstractModule.java,a support class for @link module s which reduces repetition and results in a more readable,0,0,usage
4152,AbstractModule.java,configuration.,0,0,usage
4473,DefaultMethodInterceptionTest.java,tests for interception of default methods.,0,0,usage
4474,DefaultMethodInterceptionTest.java,@author cgdecker@google^com colin decker,0,0,usage
5120,VScrollTable.java,dom^client.blurevent,0,0,usage
5121,VScrollTable.java,non javadoc,1,0,usage
5124,VScrollTable.java,to detect if the first visible,0,0,usage
5125,VScrollTable.java,these are used when jumping between pages when pressing home and end,1,0,usage
5126,VScrollTable.java,changes to manage mousedown and mouseup,0,0,usage
5127,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,1,0,usage
5128,VScrollTable.java,lost .,0,0,usage
5129,VScrollTable.java,example itabpanel just set contained components invisible and back,1,0,usage
5130,VScrollTable.java,when changing tabs.,0,0,usage
5131,VScrollTable.java,updates first visible row for the case we cannot wait,1,0,usage
5132,VScrollTable.java,this method has logic which rows needs to be requested from server when,0,0,usage
5133,VScrollTable.java,user scrolls.,1,0,usage
5134,VScrollTable.java,non javadoc,0,0,usage
5135,VScrollTable.java,@see,1,0,usage
5136,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,0,0,usage
5137,VScrollTable.java,dom^client.focusevent,1,0,usage
5138,VScrollTable.java,non javadoc,0,0,usage
5139,VScrollTable.java,@see,1,0,usage
5140,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,0,0,usage
5141,VScrollTable.java,dom^client.blurevent,1,0,usage
5142,VScrollTable.java,non javadoc,0,0,usage
5144,VScrollTable.java,for internal use only.,1,0,usage
5146,VScrollTable.java,overwrites onbrowserevent function on focusablescrollpanel to give event,0,0,usage
5147,VScrollTable.java,access to touchcontextprovider.,1,0,usage
5148,VScrollTable.java,has to be public to give tableconnector,0,0,usage
5150,VScrollTable.java,@since 72,1,0,usage
5151,VScrollTable.java,@author vaadin ltd,0,0,usage
5152,VScrollTable.java,to detect if the first visible,1,0,usage
5153,VScrollTable.java,these are used when jumping between pages when pressing home and end,0,0,usage
5154,VScrollTable.java,changes to manage mousedown and mouseup,1,0,usage
5155,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,0,0,usage
5156,VScrollTable.java,lost .,1,0,usage
5157,VScrollTable.java,example itabpanel just set contained components invisible and back,0,0,usage
5158,VScrollTable.java,when changing tabs.,1,0,usage
5159,VScrollTable.java,updates first visible row for the case we cannot wait,0,0,usage
5160,VScrollTable.java,this method has logic which rows needs to be requested from server when,1,0,usage
5161,VScrollTable.java,user scrolls.,0,0,usage
5162,VScrollTable.java,non javadoc,1,0,usage
5163,VScrollTable.java,@see,0,0,usage
5164,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,1,0,usage
5165,VScrollTable.java,dom^client.focusevent,0,0,usage
5166,VScrollTable.java,non javadoc,1,0,usage
5167,VScrollTable.java,@see,0,0,usage
5168,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,1,0,usage
5169,VScrollTable.java,dom^client.blurevent,0,0,usage
5170,VScrollTable.java,non javadoc,1,0,usage
5172,VScrollTable.java,used to recall the position of an open context menu if we need to close,0,0,usage
5175,VScrollTable.java,for internal use only.,1,0,usage
5177,VScrollTable.java,to detect if the first visible,0,0,usage
5178,VScrollTable.java,these are used when jumping between pages when pressing home and end,1,0,usage
5179,VScrollTable.java,changes to manage mousedown and mouseup,0,0,usage
5180,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,1,0,usage
5181,VScrollTable.java,lost .,0,0,usage
5182,VScrollTable.java,example itabpanel just set contained components invisible and back,1,0,usage
5183,VScrollTable.java,when changing tabs.,0,0,usage
5184,VScrollTable.java,updates first visible row for the case we cannot wait,1,0,usage
5185,VScrollTable.java,this method has logic which rows needs to be requested from server when,0,0,usage
5186,VScrollTable.java,user scrolls.,1,0,usage
5187,VScrollTable.java,non javadoc,0,0,usage
5188,VScrollTable.java,@see,1,0,usage
5189,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,0,0,usage
5190,VScrollTable.java,dom^client.focusevent,1,0,usage
5191,VScrollTable.java,non javadoc,0,0,usage
5192,VScrollTable.java,@see,1,0,usage
5193,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,0,0,usage
5194,VScrollTable.java,dom^client.blurevent,1,0,usage
5195,VScrollTable.java,non javadoc,0,0,usage
5197,VScrollTable.java,for internal use only.,1,0,usage
5199,VScrollTable.java,to detect if the first visible,0,0,usage
5200,VScrollTable.java,these are used when jumping between pages when pressing home and end,1,0,usage
5201,VScrollTable.java,changes to manage mousedown and mouseup,0,0,usage
5202,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,1,0,usage
5203,VScrollTable.java,lost .,0,0,usage
5204,VScrollTable.java,example itabpanel just set contained components invisible and back,1,0,usage
5205,VScrollTable.java,when changing tabs.,0,0,usage
5206,VScrollTable.java,updates first visible row for the case we cannot wait,1,0,usage
5207,VScrollTable.java,this method has logic which rows needs to be requested from server when,0,0,usage
5208,VScrollTable.java,user scrolls.,1,0,usage
5209,VScrollTable.java,non javadoc,0,0,usage
5210,VScrollTable.java,@see,1,0,usage
5211,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,0,0,usage
5212,VScrollTable.java,dom^client.focusevent,1,0,usage
5213,VScrollTable.java,non javadoc,0,0,usage
5214,VScrollTable.java,@see,1,0,usage
5215,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,0,0,usage
5216,VScrollTable.java,dom^client.blurevent,1,0,usage
5217,VScrollTable.java,non javadoc,0,0,usage
5220,VScrollTable.java,reordering disabled and clicking on it resets sorting.,1,0,usage
5221,VScrollTable.java,to detect if the first visible,0,0,usage
5222,VScrollTable.java,these are used when jumping between pages when pressing home and end,1,0,usage
5223,VScrollTable.java,changes to manage mousedown and mouseup,0,0,usage
5224,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,1,0,usage
5225,VScrollTable.java,lost .,0,0,usage
5226,VScrollTable.java,example itabpanel just set contained components invisible and back,1,0,usage
5227,VScrollTable.java,when changing tabs.,0,0,usage
5228,VScrollTable.java,updates first visible row for the case we cannot wait,1,0,usage
5229,VScrollTable.java,this method has logic which rows needs to be requested from server when,0,0,usage
5230,VScrollTable.java,user scrolls.,1,0,usage
5231,VScrollTable.java,non javadoc,0,0,usage
5232,VScrollTable.java,@see,1,0,usage
5233,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,0,0,usage
5234,VScrollTable.java,dom^client.focusevent,1,0,usage
5235,VScrollTable.java,non javadoc,0,0,usage
5236,VScrollTable.java,@see,1,0,usage
5237,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,0,0,usage
5238,VScrollTable.java,dom^client.blurevent,1,0,usage
5239,VScrollTable.java,non javadoc,0,0,usage
5242,VScrollTable.java,to detect if the first visible,1,0,usage
5243,VScrollTable.java,these are used when jumping between pages when pressing home and end,0,0,usage
5244,VScrollTable.java,changes to manage mousedown and mouseup,1,0,usage
5245,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,0,0,usage
5246,VScrollTable.java,lost .,1,0,usage
5247,VScrollTable.java,example itabpanel just set contained components invisible and back,0,0,usage
5248,VScrollTable.java,when changing tabs.,1,0,usage
5249,VScrollTable.java,updates first visible row for the case we cannot wait,0,0,usage
5250,VScrollTable.java,this method has logic which rows needs to be requested from server when,1,0,usage
5251,VScrollTable.java,user scrolls.,0,0,usage
5252,VScrollTable.java,non javadoc,1,0,usage
5253,VScrollTable.java,@see,0,0,usage
5254,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,1,0,usage
5255,VScrollTable.java,dom^client.focusevent,0,0,usage
5256,VScrollTable.java,non javadoc,1,0,usage
5257,VScrollTable.java,@see,0,0,usage
5258,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,1,0,usage
5259,VScrollTable.java,dom^client.blurevent,0,0,usage
5260,VScrollTable.java,non javadoc,1,0,usage
5263,VScrollTable.java,reordering disabled and clicking on it resets sorting.,0,0,usage
5264,VScrollTable.java,to detect if the first visible,1,0,usage
5265,VScrollTable.java,these are used when jumping between pages when pressing home and end,0,0,usage
5266,VScrollTable.java,changes to manage mousedown and mouseup,1,0,usage
5267,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,0,0,usage
5268,VScrollTable.java,lost .,1,0,usage
5269,VScrollTable.java,example itabpanel just set contained components invisible and back,0,0,usage
5270,VScrollTable.java,when changing tabs.,1,0,usage
5271,VScrollTable.java,updates first visible row for the case we cannot wait,0,0,usage
5272,VScrollTable.java,this method has logic which rows needs to be requested from server when,1,0,usage
5273,VScrollTable.java,user scrolls.,0,0,usage
5274,VScrollTable.java,non javadoc,1,0,usage
5275,VScrollTable.java,@see,0,0,usage
5276,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,1,0,usage
5277,VScrollTable.java,dom^client.focusevent,0,0,usage
5278,VScrollTable.java,non javadoc,1,0,usage
5279,VScrollTable.java,@see,0,0,usage
5280,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,1,0,usage
5281,VScrollTable.java,dom^client.blurevent,0,0,usage
5282,VScrollTable.java,non javadoc,1,0,usage
5285,VScrollTable.java,to detect if the first visible,0,0,usage
5286,VScrollTable.java,these are used when jumping between pages when pressing home and end,1,0,usage
5287,VScrollTable.java,changes to manage mousedown and mouseup,0,0,usage
5288,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,1,0,usage
5289,VScrollTable.java,lost .,0,0,usage
5290,VScrollTable.java,example itabpanel just set contained components invisible and back,1,0,usage
5291,VScrollTable.java,when changing tabs.,0,0,usage
5292,VScrollTable.java,updates first visible row for the case we cannot wait,1,0,usage
5293,VScrollTable.java,this method has logic which rows needs to be requested from server when,0,0,usage
5294,VScrollTable.java,user scrolls.,1,0,usage
5295,VScrollTable.java,non javadoc,0,0,usage
5296,VScrollTable.java,@see,1,0,usage
5297,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,0,0,usage
5298,VScrollTable.java,dom^client.focusevent,1,0,usage
5299,VScrollTable.java,non javadoc,0,0,usage
5300,VScrollTable.java,@see,1,0,usage
5301,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,0,0,usage
5302,VScrollTable.java,dom^client.blurevent,1,0,usage
5303,VScrollTable.java,non javadoc,0,0,usage
5305,VScrollTable.java,this panel can only contain vscrolltablerow type of widgets.,1,0,usage
5306,VScrollTable.java,this,0,0,usage
5307,VScrollTable.java,"simulates very large table, keeping spacers which take room of",1,0,usage
5308,VScrollTable.java,unrendered rows.,0,0,usage
5362,VTextArea.java,this class represents a multiline textfield textarea .,1,0,usage
5366,VTextArea.java,@author vaadin ltd.,0,0,usage
5371,VUpload.java,@author vaadin ltd,1,0,usage
5374,Window.java,@link ui .,0,0,usage
5376,Window.java,@link ui#addwindow window .,1,0,usage
5377,Window.java,p,0,0,usage
5378,Window.java,the contents of a window is set using @link #setcontent component or by,1,0,usage
5379,Window.java,"using the @link #window string, component constructor.",0,0,usage
5380,Window.java,p,1,0,usage
5381,Window.java,p,0,0,usage
5382,Window.java,a window can be positioned on the screen using absolute coordinates pixels,1,0,usage
5383,Window.java,or set to be centered using @link #center,0,0,usage
5384,Window.java,p,1,0,usage
5385,Window.java,p,0,0,usage
5386,Window.java,the caption is displayed in the window header.,1,0,usage
5387,Window.java,p,0,0,usage
5388,Window.java,p,1,0,usage
5389,Window.java,"in vaadin versions prior to 70.0, window was also used as application level",0,0,usage
5390,Window.java,windows.,1,0,usage
5391,Window.java,this function is now covered by the @link ui class.,0,0,usage
5392,Window.java,p,1,0,usage
5393,Window.java,@author vaadin ltd.,0,0,usage
5394,Window.java,@since 30,1,0,usage
5395,Window.java,non javadoc,0,0,usage
5396,Window.java,@see com^vaadin.ui^panel#paintcontent com^vaadin.server^painttarget,1,0,usage
5397,Window.java,non javadoc,0,0,usage
5398,Window.java,"@see com^vaadin.ui^panel#changevariables java^lang.object, java^util.map",1,0,usage
5399,Window.java,event which is fired when the window order position is changed.,0,0,usage
5400,Window.java,@see ui^windoworderupdateevent,1,0,usage
5401,Window.java,@author vaadin ltd,0,0,usage
5402,Window.java,non javadoc,1,0,usage
5403,Window.java,@see com^vaadin.ui^panel#paintcontent com^vaadin.server^painttarget,0,0,usage
5404,Window.java,non javadoc,1,0,usage
5405,Window.java,"@see com^vaadin.ui^panel#changevariables java^lang.object, java^util.map",0,0,usage
5406,Window.java,an interface used for listening to window order change events.,1,0,usage
5408,Window.java,non javadoc,0,0,usage
5409,Window.java,@see com^vaadin.ui^panel#paintcontent com^vaadin.server^painttarget,1,0,usage
5410,Window.java,non javadoc,0,0,usage
5411,Window.java,"@see com^vaadin.ui^panel#changevariables java^lang.object, java^util.map",0,0,usage
5412,Window.java,an interface used for listening to window close events.,0,0,usage
5413,Window.java,add the,0,0,usage
5414,Window.java,closelistener to a window and,0,0,usage
5415,Window.java,@link closelistener#windowclose closeevent will be called whenever the,0,0,usage
5416,Window.java,user closes the window.,0,0,usage
5417,Window.java,p,0,0,usage
5420,Window.java,p,0,0,usage
5421,Window.java,non javadoc,0,0,usage
5422,Window.java,@see com^vaadin.ui^panel#paintcontent com^vaadin.server^painttarget,0,0,usage
5423,Window.java,non javadoc,0,0,usage
5424,Window.java,"@see com^vaadin.ui^panel#changevariables java^lang.object, java^util.map",0,0,usage
5426,Window.java,@author vaadin ltd,0,0,usage
5428,Window.java,non javadoc,0,0,usage
5429,Window.java,@see com^vaadin.ui^panel#paintcontent com^vaadin.server^painttarget,0,0,usage
5430,Window.java,non javadoc,0,0,usage
5431,Window.java,"@see com^vaadin.ui^panel#changevariables java^lang.object, java^util.map",0,0,usage
5432,Window.java,an interface used for listening to window maximize restore events.,0,0,usage
5433,Window.java,add,0,0,usage
5434,Window.java,the windowmodechangelistener to a window and,0,0,usage
5435,Window.java,@link windowmodechangelistener#windowmodechanged windowmodechangeevent,0,0,usage
5436,Window.java,will be called whenever the window is maximized,0,0,usage
5437,Window.java,@link windowmode#maximized or restored @link windowmode#normal .,0,0,usage
5438,Window.java,non javadoc,0,0,usage
5439,Window.java,@see com^vaadin.ui^panel#paintcontent com^vaadin.server^painttarget,0,0,usage
5440,Window.java,non javadoc,0,0,usage
5441,Window.java,"@see com^vaadin.ui^panel#changevariables java^lang.object, java^util.map",0,0,usage
5442,Window.java,resize events are fired whenever the client side fires a resize event,0,0,usage
5443,Window.java,eg the browser window is resized .,0,0,usage
5444,Window.java,the frequency may vary across,0,0,usage
5445,Window.java,browsers.,0,0,usage
5446,Window.java,non javadoc,0,0,usage
5447,Window.java,@see com^vaadin.ui^panel#paintcontent com^vaadin.server^painttarget,0,0,usage
5448,Window.java,non javadoc,0,0,usage
5449,Window.java,"@see com^vaadin.ui^panel#changevariables java^lang.object, java^util.map",0,0,usage
5452,Window.java,non javadoc,0,0,usage
5453,Window.java,@see com^vaadin.ui^panel#paintcontent com^vaadin.server^painttarget,0,0,usage
5454,Window.java,non javadoc,0,0,usage
5455,Window.java,"@see com^vaadin.ui^panel#changevariables java^lang.object, java^util.map",0,0,usage
5456,Window.java,a @link shortcutlistener specifically made to define a keyboard,0,0,usage
5457,Window.java,shortcut that closes the window.,0,0,usage
5463,Window.java,"getui ^addaction new window^closeshortcut window, keycode^escape",0,0,usage
5518,XhrConnectionError.java,xhrconnectionerror provides detail about an error which occurred during an,0,0,usage
5519,XhrConnectionError.java,xhr request to the server.,0,0,usage
5520,XhrConnectionError.java,@since 76,0,0,usage
5521,XhrConnectionError.java,@author vaadin ltd,0,0,usage
4524,AbstractFocusable.java,an abstract base class for focusable components.,0,0,usage
4527,AbstractFocusable.java,@since 76,0,0,usage
4528,AbstractFocusable.java,@author vaadin ltd,0,0,usage
4533,AbstractMultiSelectState.java,shared state for @code abstractmultiselect .,0,0,usage
4534,AbstractMultiSelectState.java,@author vaadin ltd,0,0,usage
4535,AbstractMultiSelectState.java,@since 80,0,0,usage
4540,AbstractProperty.java,abstract base class for @link property implementations.,0,0,usage
4541,AbstractProperty.java,handles listener management for @link valuechangelistener s and,0,0,usage
4542,AbstractProperty.java,@link readonlystatuschangelistener s.,0,0,usage
4543,AbstractProperty.java,@since 66,0,0,usage
4544,AbstractProperty.java,"@deprecated as of 80, replaced by @link valueprovider , @link setter , see",0,0,usage
4545,AbstractProperty.java,@link binder,0,0,usage
4546,AbstractProperty.java,legacypropertyhelper has been removed in vaadin 8 events,0,0,usage
4547,AbstractProperty.java,an code event code object specifying the property whose read only,0,0,usage
4548,AbstractProperty.java,status has been changed.,0,0,usage
4549,AbstractProperty.java,legacypropertyhelper has been removed in vaadin 8 events,0,0,usage
4566,AbstractSingleComponentContainerState.java,default shared state implementation for abstractsinglecomponentcontainer.,0,0,usage
4567,AbstractSingleComponentContainerState.java,@since 80,0,0,usage
4572,AdjacentElementsWithTooltipsTest.java,@author vaadin ltd,0,0,usage
4575,ApplicationConfiguration.java,helper class for reading configuration options from the bootstap,0,0,usage
4577,ApplicationConfiguration.java,@since 70,0,0,usage
4578,ApplicationConfiguration.java,wraps a native javascript object containing fields for an error message.,0,0,usage
4579,ApplicationConfiguration.java,@since 70,0,0,usage
4584,BootstrapPageResponse.java,a representation of a bootstrap page being generated.,0,0,usage
4585,BootstrapPageResponse.java,the bootstrap page,0,0,usage
4586,BootstrapPageResponse.java,contains of the full dom of the html document as well as the http headers,0,0,usage
4587,BootstrapPageResponse.java,that will be included in the corresponding http response.,0,0,usage
4588,BootstrapPageResponse.java,@author vaadin ltd,0,0,usage
4589,BootstrapPageResponse.java,@since 70.0,0,0,usage
4596,ButtonRenderer.java,a renderer that displays a button with a textual caption.,0,0,usage
4597,ButtonRenderer.java,the value of the,0,0,usage
4598,ButtonRenderer.java,corresponding property is used as the caption.,0,0,usage
4601,ButtonRenderer.java,@since 74,0,0,usage
4602,ButtonRenderer.java,@author vaadin ltd,0,0,usage
4610,ClientRpcWriter.java,serializes @link clientrpc client rpc invocations to json.,0,0,usage
4611,ClientRpcWriter.java,@author vaadin ltd,0,0,usage
4612,ClientRpcWriter.java,@since 71,0,0,usage
4616,ColorPickerServerRpc.java,rpc interface for abstractcolorpicker.,0,0,usage
4617,ColorPickerServerRpc.java,@since 70.0,0,0,usage
4620,ComboBoxState.java,shared state for the combobox component.,0,0,usage
4621,ComboBoxState.java,@since 70,0,0,usage
4624,DeclarativeValueProvider.java,value provider class for declarative support.,0,0,usage
4626,DeclarativeValueProvider.java,provides a straightforward mapping between an item and its value.,0,0,usage
4633,DoubleRangeValidator.java,validator for validating that a @link double is inside a given range.,0,0,usage
4634,DoubleRangeValidator.java,@author vaadin ltd.,0,0,usage
4635,DoubleRangeValidator.java,@since 80,0,0,usage
4640,FooterDoubleClickHandler.java,handler for @link griddoubleclickevent s that happen in the footer of the,0,0,usage
4641,FooterDoubleClickHandler.java,grid.,0,0,usage
4642,FooterDoubleClickHandler.java,@since 74,0,0,usage
4643,FooterDoubleClickHandler.java,@author vaadin ltd,0,0,usage
4649,Grid.java,a grid component for displaying tabular data.,0,0,usage
4650,Grid.java,@author vaadin ltd,0,0,usage
4651,Grid.java,@since 80,0,0,usage
4663,Grid.java,these enums can be used in @link grid#setselectionmode selectionmode,0,0,usage
4665,Grid.java,@see grid#setselectionmode selectionmode,0,0,usage
4666,Grid.java,@see grid#setselectionmodel gridselectionmodel,0,0,usage
4731,GridManyColumnsV7.java,test ui for grid initial rendering performance profiling.,0,0,usage
4733,GridSelectionModel.java,the server side interface that controls grid s selection state.,0,0,usage
4734,GridSelectionModel.java,selectionmodel should extend @link abstractgridextension .,0,0,usage
4735,GridSelectionModel.java,@author vaadin ltd,0,0,usage
4739,GridSelectionModel.java,@see abstractselectionmodel,0,0,usage
4740,GridSelectionModel.java,@see singleselectionmodel,0,0,usage
4741,GridSelectionModel.java,@see multiselectionmodel,0,0,usage
4750,HeaderRow.java,a header row in a grid.,0,0,usage
4751,HeaderRow.java,@author vaadin ltd,0,0,usage
4752,HeaderRow.java,@since 80,0,0,usage
4756,InternalContainerAnnotationForJS.java,annotation enabling using multiple @link javascript @javascript,0,0,usage
4757,InternalContainerAnnotationForJS.java,annotations.,0,0,usage
4761,InternalContainerAnnotationForJS.java,@author vaadin ltd,0,0,usage
4762,InternalContainerAnnotationForJS.java,@since 80,0,0,usage
4767,MyPickerConnector.java,mini tutorial code for,0,0,usage
4768,MyPickerConnector.java,"https vaadin^com wiki wiki main widget%20styling%20using%20only%20css,",0,0,usage
4769,MyPickerConnector.java,https,0,0,usage
4770,MyPickerConnector.java,vaadin^com wiki wiki main lightweight%20calculations%20of%20widget%20l,0,0,usage
4772,MyPickerConnector.java,@author vaadin ltd,0,0,usage
4773,MyPickerConnector.java,@since 70.0,0,0,usage
4782,NotEmptyValidatorTest.java,@author vaadin ltd,0,0,usage
4784,PopupView.java,a component for displaying a two different views to data.,0,0,usage
4785,PopupView.java,the minimized view,0,0,usage
4786,PopupView.java,"is normally used to render the component, and when it is clicked the full",0,0,usage
4787,PopupView.java,view is displayed on a popup.,0,0,usage
4788,PopupView.java,the inner class @link popupview^content is,0,0,usage
4789,PopupView.java,used to deliver contents to this component.,0,0,usage
4790,PopupView.java,@author vaadin ltd.,0,0,usage
4791,PopupView.java,constructors,0,0,usage
4792,PopupView.java,methods inherited from abstractcomponentcontainer.,0,0,usage
4793,PopupView.java,these are unnecessary,0,0,usage
4794,PopupView.java,but mandatory .,0,0,usage
4795,PopupView.java,most of them are not supported in this implementation.,0,0,usage
4801,PopupView.java,constructors,0,0,usage
4802,PopupView.java,methods inherited from abstractcomponentcontainer.,0,0,usage
4803,PopupView.java,these are unnecessary,0,0,usage
4804,PopupView.java,but mandatory .,0,0,usage
4805,PopupView.java,most of them are not supported in this implementation.,0,0,usage
4806,PopupView.java,this event is received by the popupvisibilitylisteners when the,0,0,usage
4807,PopupView.java,visibility of the popup changes.,0,0,usage
4808,PopupView.java,you can get the new visibility directly,0,0,usage
4809,PopupView.java,"with @link #ispopupvisible , or get the popupview that produced the",0,0,usage
4810,PopupView.java,event with @link #getpopupview .,0,0,usage
4811,PopupView.java,constructors,0,0,usage
4812,PopupView.java,methods inherited from abstractcomponentcontainer.,0,0,usage
4813,PopupView.java,these are unnecessary,0,0,usage
4814,PopupView.java,but mandatory .,0,0,usage
4815,PopupView.java,most of them are not supported in this implementation.,0,0,usage
4816,PopupView.java,defines a listener that can receive a popupvisibilityevent when the,0,0,usage
4817,PopupView.java,visibility of the popup changes.,0,0,usage
4847,PortletDummyRequestHandler.java,request handler which provides a dummy html response to any resource request,0,0,usage
4848,PortletDummyRequestHandler.java,with the resource id dummy.,0,0,usage
4849,PortletDummyRequestHandler.java,@author vaadin ltd,0,0,usage
4850,PortletDummyRequestHandler.java,@since 71,0,0,usage
4855,QueryBuilder.java,"@deprecated as of 80, no replacement available.",0,0,usage
4857,RequiredTextFieldTest.java,test for ^v required style,0,0,usage
4858,RequiredTextFieldTest.java,@author vaadin ltd,0,0,usage
4861,RpcDataProviderExtension.java,provides vaadin server side container data source to a,0,0,usage
4862,RpcDataProviderExtension.java,@link com^vaadin.v7^client.connectors^gridconnector gridconnector .,0,0,usage
4863,RpcDataProviderExtension.java,this is currently,0,0,usage
4864,RpcDataProviderExtension.java,implemented as an extension hardcoded to support a specific connector type.,0,0,usage
4867,RpcDataProviderExtension.java,@since 74,0,0,usage
4868,RpcDataProviderExtension.java,@author vaadin ltd,0,0,usage
4869,RpcDataProviderExtension.java,"@deprecated as of 80, no replacement available.",0,0,usage
4870,RpcDataProviderExtension.java,class for keeping track of current items and valuechangelisteners.,0,0,usage
4871,RpcDataProviderExtension.java,@since 76,0,0,usage
4886,RpcDataProviderExtension.java,"@see grid#addvaluechangelistener com^vaadin.v7^data.container, object, object",0,0,usage
4887,RpcDataProviderExtension.java,"grid#addvaluechangelistener container, object, object",0,0,usage
4888,RpcDataProviderExtension.java,@see grid#valuechangelisteners,0,0,usage
4901,SelectAllEvent.java,"a select all event, fired by the grid when it needs all rows in data source",0,0,usage
4902,SelectAllEvent.java,"to be selected, or when all rows have been selected and are now deselected.",0,0,usage
4903,SelectAllEvent.java,@since 74,0,0,usage
4904,SelectAllEvent.java,@author vaadin ltd,0,0,usage
4915,ShouldWriteDataDelegate.java,delegate used by @link designcontext to determine whether container data,0,0,usage
4916,ShouldWriteDataDelegate.java,should be written out for a component.,0,0,usage
4917,ShouldWriteDataDelegate.java,@see designcontext#shouldwritedata component,0,0,usage
4918,ShouldWriteDataDelegate.java,@since 75.0,0,0,usage
4919,ShouldWriteDataDelegate.java,@author vaadin ltd,0,0,usage
4929,SimpleGridUI.java,@author vaadin ltd,0,0,usage
4931,SpacerVisibilityChangedEvent.java,event fired when a spacer element is hidden or shown in escalator.,0,0,usage
4932,SpacerVisibilityChangedEvent.java,@author vaadin ltd,0,0,usage
4933,SpacerVisibilityChangedEvent.java,@since 77.13,0,0,usage
4937,TargetDetailsImpl.java,a hashmap backed implementation of @link targetdetails for termina^^^n.,0,0,usage
4938,TargetDetailsImpl.java,@since 63,0,0,usage
4939,TargetDetailsImpl.java,@deprecated replaced in 81 by @link dropevent#gettransferdata string,0,0,usage
4944,UnknownExtensionConnector.java,connector used as a placeholder for extensions that are not present in the,0,0,usage
4945,UnknownExtensionConnector.java,widgetset.,0,0,usage
4946,UnknownExtensionConnector.java,@since 77.4,0,0,usage
4947,UnknownExtensionConnector.java,@author vaadin ltd,0,0,usage
4952,VaadinPortlet.java,portlet 20 base class.,0,0,usage
4953,VaadinPortlet.java,this replaces the servlet in servlet portlet 10,0,0,usage
4954,VaadinPortlet.java,deployments and handles various portlet requests from the browser.,0,0,usage
4955,VaadinPortlet.java,@author vaadin ltd,0,0,usage
4958,VaadinPortlet.java,base class for portlet requests that need access to http servlet,0,0,usage
4962,VaadinPortlet.java,portlet request for liferay.,0,0,usage
4965,VaadinPortlet.java,portlet request for gatein.,0,0,usage
4968,VaadinPortlet.java,portlet request for websphere portal.,0,0,usage
4971,VaadinPortlet.java,portlet request for websphere portal.,0,0,usage
4974,VaadinPortlet.java,@author vaadin ltd,0,0,usage
4975,VaadinPortlet.java,@deprecated as of 70.,0,0,usage
4976,VaadinPortlet.java,this is no longer used and only provided for,0,0,usage
4977,VaadinPortlet.java,backwards compatibility.,0,0,usage
4978,VaadinPortlet.java,each @link requesthandler can,0,0,usage
4979,VaadinPortlet.java,individually decide whether it wants to handle a request or,0,0,usage
4980,VaadinPortlet.java,not.,0,0,usage
4995,VaadinServiceInitListener.java,listener for @link vaadinservice initialization events.,0,0,usage
4996,VaadinServiceInitListener.java,the listener can,0,0,usage
4997,VaadinServiceInitListener.java,add listeners and request handlers the service.,0,0,usage
4999,VaadinServiceInitListener.java,listener instances are by default discovered and instantiated using,0,0,usage
5000,VaadinServiceInitListener.java,@link serviceloader .,0,0,usage
5001,VaadinServiceInitListener.java,this means that all implementations must have a,0,0,usage
5002,VaadinServiceInitListener.java,zero argument constructor and the fully qualified name of the implementation,0,0,usage
5003,VaadinServiceInitListener.java,class must be listed on a separate line in a,0,0,usage
5004,VaadinServiceInitListener.java,meta inf services com^vaadin.server^vaadinserviceinitlistener file present in,0,0,usage
5005,VaadinServiceInitListener.java,the jar file containing the implementation class.,0,0,usage
5007,VaadinServiceInitListener.java,"integrations for specific runtime environments, such as osgi or spring, might",0,0,usage
5008,VaadinServiceInitListener.java,also provide other ways of discovering listeners.,0,0,usage
5009,VaadinServiceInitListener.java,@since 80,0,0,usage
5010,VaadinServiceInitListener.java,@author vaadin ltd,0,0,usage
5025,VGridLayout.java,private helper class.,0,0,usage
5029,VLazyInitItemIdentifiers.java,@author vaadin ltd,0,0,usage
5030,VLazyInitItemIdentifiers.java,@deprecated replaced in 81 with,0,0,usage
5031,VLazyInitItemIdentifiers.java,ragovercriteria string and,0,0,usage
5032,VLazyInitItemIdentifiers.java,@link droptargetextension#setdropcriteria string,0,0,usage
5038,VScrollTable.java,vscrolltable is a flowpanel having two widgets in it tablehead component,0,0,usage
5039,VScrollTable.java,scrollpanel,0,0,usage
5040,VScrollTable.java,"tablehead contains table s header and widgets logic for resizing,",0,0,usage
5041,VScrollTable.java,reordering and hiding columns.,0,0,usage
5042,VScrollTable.java,scrollpanel contains vscrolltablebody object which handles content.,0,0,usage
5043,VScrollTable.java,to save,0,0,usage
5044,VScrollTable.java,"some bandwidth and to improve clients responsiveness with loads of data, in",0,0,usage
5045,VScrollTable.java,vscrolltablebody all rows are not necessary rendered.,0,0,usage
5046,VScrollTable.java,there are spacers in,0,0,usage
5047,VScrollTable.java,vscrolltablebody to use the exact same space as non rendered rows would use.,0,0,usage
5048,VScrollTable.java,this way we can use seamlessly traditional scrollbars and scrolling to fetch,0,0,usage
5049,VScrollTable.java,more rows instead of paging .,0,0,usage
5050,VScrollTable.java,in vscrolltable we listen to scroll events.,0,0,usage
5051,VScrollTable.java,on horizontal scrolling we also,0,0,usage
5052,VScrollTable.java,update tableheads scroll position which has its scrollbars hidden.,0,0,usage
5053,VScrollTable.java,on,0,0,usage
5054,VScrollTable.java,vertical scroll events we will check if we are reaching the end of area where,0,0,usage
5055,VScrollTable.java,we have rows rendered and,0,0,usage
5056,VScrollTable.java,todo implement unregistering for child components in cells,0,0,usage
5057,VScrollTable.java,to detect if the first visible,0,0,usage
5058,VScrollTable.java,these are used when jumping between pages when pressing home and end,0,0,usage
5059,VScrollTable.java,changes to manage mousedown and mouseup,0,0,usage
5060,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,0,0,usage
5061,VScrollTable.java,lost .,0,0,usage
5062,VScrollTable.java,example itabpanel just set contained components invisible and back,0,0,usage
5063,VScrollTable.java,when changing tabs.,0,0,usage
5064,VScrollTable.java,updates first visible row for the case we cannot wait,0,0,usage
5065,VScrollTable.java,this method has logic which rows needs to be requested from server when,0,0,usage
5066,VScrollTable.java,user scrolls.,0,0,usage
5067,VScrollTable.java,non javadoc,0,0,usage
5068,VScrollTable.java,@see,0,0,usage
5069,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,0,0,usage
5070,VScrollTable.java,dom^client.focusevent,0,0,usage
5071,VScrollTable.java,non javadoc,0,0,usage
5072,VScrollTable.java,@see,0,0,usage
5073,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,0,0,usage
5074,VScrollTable.java,dom^client.blurevent,0,0,usage
5075,VScrollTable.java,non javadoc,0,0,usage
5077,VScrollTable.java,simple interface for parts of the table capable of owning a context menu.,0,0,usage
5078,VScrollTable.java,@since 72,0,0,usage
5079,VScrollTable.java,@author vaadin ltd,0,0,usage
5080,VScrollTable.java,to detect if the first visible,0,0,usage
5081,VScrollTable.java,these are used when jumping between pages when pressing home and end,0,0,usage
5082,VScrollTable.java,changes to manage mousedown and mouseup,0,0,usage
5083,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,0,0,usage
5084,VScrollTable.java,lost .,0,0,usage
5085,VScrollTable.java,example itabpanel just set contained components invisible and back,0,0,usage
5086,VScrollTable.java,when changing tabs.,0,0,usage
5087,VScrollTable.java,updates first visible row for the case we cannot wait,0,0,usage
5088,VScrollTable.java,this method has logic which rows needs to be requested from server when,0,0,usage
5089,VScrollTable.java,user scrolls.,0,0,usage
5090,VScrollTable.java,non javadoc,0,0,usage
5091,VScrollTable.java,@see,0,0,usage
5092,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,0,0,usage
5093,VScrollTable.java,dom^client.focusevent,0,0,usage
5094,VScrollTable.java,non javadoc,0,0,usage
5095,VScrollTable.java,@see,0,0,usage
5096,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,0,0,usage
5097,VScrollTable.java,dom^client.blurevent,0,0,usage
5098,VScrollTable.java,non javadoc,0,0,usage
5100,VScrollTable.java,handles showing context menu on long press from a touch screen.,0,0,usage
5101,VScrollTable.java,@since 72,0,0,usage
5102,VScrollTable.java,@author vaadin ltd,0,0,usage
5103,VScrollTable.java,to detect if the first visible,0,0,usage
5104,VScrollTable.java,these are used when jumping between pages when pressing home and end,0,0,usage
5105,VScrollTable.java,changes to manage mousedown and mouseup,0,0,usage
5106,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,0,0,usage
5107,VScrollTable.java,lost .,0,0,usage
5108,VScrollTable.java,example itabpanel just set contained components invisible and back,0,0,usage
5109,VScrollTable.java,when changing tabs.,0,0,usage
5110,VScrollTable.java,updates first visible row for the case we cannot wait,0,0,usage
5111,VScrollTable.java,this method has logic which rows needs to be requested from server when,0,0,usage
5112,VScrollTable.java,user scrolls.,0,0,usage
5113,VScrollTable.java,non javadoc,0,0,usage
5114,VScrollTable.java,@see,0,0,usage
5115,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,0,0,usage
5116,VScrollTable.java,dom^client.focusevent,0,0,usage
5117,VScrollTable.java,non javadoc,0,0,usage
5118,VScrollTable.java,@see,0,0,usage
5119,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,0,0,usage
1,Abfss.java,azure blob file system implementation of abstractfilesystem.,0,0,Pointer
2,Abfss.java,this impl delegates to the old filesystem,1,0,Pointer
1028,TestConnCache.java,this class tests the client connection caching in a single node,0,0,Pointer
5,AbstractContractGetFileStatusTest.java,test getfilestatus and related listing operations.,1,0,Pointer
6,AbstractContractGetFileStatusTest.java,the tree parameters.,0,0,Pointer
7,AbstractContractGetFileStatusTest.java,kept small to avoid killing object store test runs too much.,1,0,Pointer
8,AbstractContractGetFileStatusTest.java,accept everything.,0,0,Pointer
1032,TestCustomOauthTokenProvider.java,test custom oauth token providers.,1,0,Pointer
9,AbstractContractGetFileStatusTest.java,the tree parameters.,0,0,Pointer
10,AbstractContractGetFileStatusTest.java,kept small to avoid killing object store test runs too much.,1,0,Pointer
11,AbstractContractGetFileStatusTest.java,accept nothing.,0,0,Pointer
1035,TestCustomOauthTokenProvider.java,instead this just checks that the creation works and that everything,1,0,Pointer
12,AbstractContractGetFileStatusTest.java,the tree parameters.,0,0,Pointer
1036,TestCustomOauthTokenProvider.java,is propagated.,1,0,Pointer
13,AbstractContractGetFileStatusTest.java,kept small to avoid killing object store test runs too much.,0,0,Pointer
14,AbstractContractGetFileStatusTest.java,path filter which only expects paths whose final name element,1,0,Pointer
15,AbstractContractGetFileStatusTest.java,equals the @code match field.,0,0,Pointer
16,AbstractContractGetFileStatusTest.java,the tree parameters.,1,0,Pointer
17,AbstractContractGetFileStatusTest.java,kept small to avoid killing object store test runs too much.,0,0,Pointer
18,AbstractContractGetFileStatusTest.java,a filesystem filter which exposes the protected method,1,0,Pointer
1042,TestDataDrivenDBInputFormat.java,test aspects of datadrivendbinputformat,0,0,Pointer
19,AbstractContractGetFileStatusTest.java,"@link #listlocatedstatus path, pathfilter .",1,0,Pointer
531,FsConstants.java,filesystem related constants.,0,0,Pointer
1047,TestEditLogFileOutputStream.java,test the editlogfileoutputstream,1,0,Pointer
537,GetNamespaceInfoResponse.java,api response for listing hdfs namespaces present in the state store.,0,0,Pointer
1052,TestFileSizeCountTask.java,unit test for file size count task.,1,0,Pointer
1054,TestHandler.java,tests handler interface.,0,0,Pointer
1056,TestHDFSServerPorts.java,this test checks correctness of port usage by hdfs components,1,0,Pointer
1057,TestHDFSServerPorts.java,"namenode, datanode, secondarynamenode and backupnode.",0,0,Pointer
1058,TestHDFSServerPorts.java,the correct behavior is br when a specific port is provided the server must either start on that port or fail by throwing @link java^net.bindexception .,1,0,Pointer
1059,TestHDFSServerPorts.java,br,0,0,Pointer
1060,TestHDFSServerPorts.java,if the port 0 ephemeral then the server should choose a free port and start on it.,1,0,Pointer
554,HadoopIllegalArgumentException.java,indicates that a method has been passed illegal or invalid argument.,0,0,Pointer
44,AbstractS3ACommitterFactory.java,dynamically create the output committer based on subclass type and settings.,1,0,Pointer
1069,TestMetricsVisitor.java,test the metric visitor interface,0,0,Pointer
1071,TestNativeAzureFileSystemUploadLogic.java,"tests for the upload, buffering and flush logic in wasb.",1,0,Pointer
560,HashResolver.java,order the destinations based on consistent hashing.,0,0,Pointer
1072,TestNativeAzureFileSystemUploadLogic.java,just an arbitrary number so that the values i write have a predictable,1,0,Pointer
1073,TestNativeAzureFileSystemUploadLogic.java,various scenarios to test in how often we flush data while uploading.,0,0,Pointer
562,HttpHeaderConfigurations.java,responsible to keep all abfs http headers here.,1,0,Pointer
564,IDataLoader.java,an idataloader loads data on demand,0,0,Pointer
53,ApplicationConstants.java,the type of launch for the container.,1,0,Pointer
1077,TestOmMultipartKeyInfoCodec.java,this class tests ommultipartkeyinfocodec.,0,0,Pointer
54,ApplicationConstants.java,environment for applications.,1,0,Pointer
566,InconsistentS3ClientFactory.java,s3 client factory used for testing with eventual consistency fault injection.,0,0,Pointer
567,InconsistentS3ClientFactory.java,this client is for testing i only i it is in the production,1,0,Pointer
1079,TestOMVolumeRequest.java,base test class for volume request.,0,0,Pointer
568,InconsistentS3ClientFactory.java,@code hadoop aws module to enable integration tests to use this,1,0,Pointer
569,InconsistentS3ClientFactory.java,just by editing the hadoop configuration used to bring up the client.,0,0,Pointer
61,ApplicationStateData.java,contains all the state data that needs to be stored persistently for an application,1,0,Pointer
1085,TestProtoBufRpc.java,test for testing protocol buffer based rpc mechanism.,0,0,Pointer
574,InfoKeyHandler.java,executes info object.,1,0,Pointer
1086,TestProtoBufRpc.java,this test depends on test^proto definition of types in src test proto,0,0,Pointer
1087,TestProtoBufRpc.java,and protobuf service definition from src test test rpc service^proto,1,0,Pointer
66,AutoInputFormat.java,it can currently handle text and sequence files.,0,0,Pointer
579,ITestAbfsReadWriteAndSeek.java,"test read, write and seek.",1,0,Pointer
1091,TestRDBStore.java,rdbstore tests.,0,0,Pointer
1093,TestRegistrySecurityHelper.java,test for registry security operations,1,0,Pointer
70,BalancingPolicy.java,balancing policy.,0,0,Pointer
584,ITestAzureNativeContractSeek.java,contract test.,1,0,Pointer
74,BalancingPolicy.java,cluster is balanced if each node is balanced.,0,0,Pointer
75,BalancingPolicy.java,cluster is balanced if each pool in each node is balanced.,1,0,Pointer
1099,TestRouterWebServiceUtil.java,test class to validate routerwebserviceutil methods.,0,0,Pointer
588,ITestCommitOperations.java,this is done with an inconsistent client.,1,0,Pointer
591,ITestListPerformance.java,test list performance.,0,0,Pointer
1104,TestSaveNamespace.java,test various failure scenarios during savenamespace operation.,1,0,Pointer
81,BaseRouterWebServicesTest.java,base class for all the routerrmadminservice test cases.,0,0,Pointer
593,ITestS3Select.java,test the s3 select feature with some basic sql commands.,1,0,Pointer
1105,TestSaveNamespace.java,cases covered,0,0,Pointer
594,ITestS3Select.java,executed if the destination store declares its support for the feature.,1,0,Pointer
1106,TestSaveNamespace.java,ol,0,0,Pointer
1107,TestSaveNamespace.java,li recover from failure while saving into the second storage directory li,1,0,Pointer
1108,TestSaveNamespace.java,li recover from failure while moving current into lastcheckpoint^tmp li,0,0,Pointer
1109,TestSaveNamespace.java,li recover from failure while moving lastcheckpoint^tmp into,1,0,Pointer
86,BatchedRequests.java,a grouping of scheduling requests which are sent to the placementalgorithm,0,0,Pointer
1110,TestSaveNamespace.java,previous^checkpoint li,1,0,Pointer
87,BatchedRequests.java,to place as a batch.,0,0,Pointer
1111,TestSaveNamespace.java,li recover from failure while rolling edits file li,1,0,Pointer
88,BatchedRequests.java,the placement algorithm tends to give more optimal,0,0,Pointer
600,KerberosDelegationTokenAuthenticator.java,the code kerberosdelegationtokenauthenticator code provides support for,1,0,Pointer
1112,TestSaveNamespace.java,ol,0,0,Pointer
89,BatchedRequests.java,placements if more requests are batched together.,1,0,Pointer
601,KerberosDelegationTokenAuthenticator.java,kerberos spnego authentication mechanism and support for hadoop delegation,0,0,Pointer
90,BatchedRequests.java,placementalgorithmoutput attempt the number of times the requests in this,1,0,Pointer
602,KerberosDelegationTokenAuthenticator.java,token operations.,0,0,Pointer
91,BatchedRequests.java,iterator type.,1,0,Pointer
98,BlockPlacementStatusWithNodeGroup.java,an implementation of @see blockplacementstatus for,0,0,Pointer
1122,TestSCMDatanodeHeartbeatDispatcher.java,this class tests the behavior of scmdatanodeheartbeatdispatcher.,1,0,Pointer
1124,TestSequenceFile.java,support for flat files of binary key value pairs.,0,0,Pointer
103,BlocksMap.java,this class maintains the map from a block to its metadata.,1,0,Pointer
1127,TestSeveralNameNodes.java,test that we can start several and run with namenodes on the same minicluster,0,0,Pointer
104,BlocksMap.java,block s metadata currently includes blockcollection it belongs to and,1,0,Pointer
616,LocatedFileStatus.java,this class defines a filestatus that includes a file s block locations.,0,0,Pointer
105,BlocksMap.java,the datanodes that store the block.,1,0,Pointer
1130,TestSwiftFileSystemContract.java,this is the full filesystem contract test which requires the,0,0,Pointer
619,LoggedTask.java,"it knows about the pssibly empty sequence of attempts, its i o footprint,",1,0,Pointer
1131,TestSwiftFileSystemContract.java,default config set up to point to a filesystem.,0,0,Pointer
620,LoggedTask.java,and its runtime.,1,0,Pointer
1132,TestSwiftFileSystemContract.java,some of the tests override the base class tests these,0,0,Pointer
109,BlockUtils.java,utils functions to help block functions.,1,0,Pointer
621,LoggedTask.java,all of the public methods are simply accessors for the instance variables we,0,0,Pointer
1133,TestSwiftFileSystemContract.java,"are where swiftfs does not implement those features, or",1,0,Pointer
622,LoggedTask.java,want to write out in the json files.,0,0,Pointer
1134,TestSwiftFileSystemContract.java,when the behavior of swiftfs does not match the normal,1,0,Pointer
1135,TestSwiftFileSystemContract.java,contract which normally means that directories and equal files,0,0,Pointer
1136,TestSwiftFileSystemContract.java,are being treated as equal.,1,0,Pointer
116,CapacitySchedulerPlanFollower.java,this class implements a @link planfollower .,0,0,Pointer
117,CapacitySchedulerPlanFollower.java,"this is invoked on a timer, and",1,0,Pointer
118,CapacitySchedulerPlanFollower.java,it is in charge to publish the state of the @link plan s to the underlying,0,0,Pointer
119,CapacitySchedulerPlanFollower.java,@link capacityscheduler .,1,0,Pointer
120,CapacitySchedulerPlanFollower.java,"this implementation does so, by",0,0,Pointer
632,LogWebService.java,support only atsv2 client only.,1,0,Pointer
1144,TestTaskCommit.java,special committer that does not cleanup temporary files in,0,0,Pointer
121,CapacitySchedulerPlanFollower.java,"adding removing resizing leaf queues in the scheduler, thus affecting the",1,0,Pointer
1145,TestTaskCommit.java,aborttask,0,0,Pointer
122,CapacitySchedulerPlanFollower.java,dynamic behavior of the scheduler in a way that is consistent with the,1,0,Pointer
634,LRUCacheHashMap.java,lru cache with a configurable maximum cache size and access order.,0,0,Pointer
1146,TestTaskCommit.java,the framework s fileoutputcommitter cleans up any temporary,1,0,Pointer
123,CapacitySchedulerPlanFollower.java,content of the plan.,0,0,Pointer
1147,TestTaskCommit.java,files left behind in aborttask.,1,0,Pointer
124,CapacitySchedulerPlanFollower.java,it also updates the plan s view on how much resources,0,0,Pointer
1148,TestTaskCommit.java,we want the test case to,1,0,Pointer
125,CapacitySchedulerPlanFollower.java,are available in the cluster.,0,0,Pointer
1149,TestTaskCommit.java,find these files and hence short circuit aborttask.,1,0,Pointer
126,CapacitySchedulerPlanFollower.java,"this implementation of planfollower is relatively stateless, and it can",0,0,Pointer
638,MapContext.java,@param keyin the key input type to the mapper,1,0,Pointer
1150,TestTaskCommit.java,special committer that always requires commit.,0,0,Pointer
127,CapacitySchedulerPlanFollower.java,synchronize schedulers and plans that have arbitrary changes performing set,1,0,Pointer
639,MapContext.java,@param valuein the value input type to the mapper,0,0,Pointer
128,CapacitySchedulerPlanFollower.java,differences among existing queues .,1,0,Pointer
640,MapContext.java,@param keyout the key output type from the mapper,0,0,Pointer
129,CapacitySchedulerPlanFollower.java,this makes it resilient to frequency of,1,0,Pointer
641,MapContext.java,@param valueout the value output type from the mapper,0,0,Pointer
130,CapacitySchedulerPlanFollower.java,"synchronization, and rm restart issues no catch up is necessary .",1,0,Pointer
649,MetaBlockAlreadyExists.java,exception meta block with the same name already exists.,0,0,Pointer
1161,TestTopCLI.java,test class for topcli.,1,0,Pointer
651,MetricsCache.java,a metrics cache for sinks that don t support sparse updates.,0,0,Pointer
1163,TestUpgradeDomainBlockPlacementPolicy.java,end to end test case for upgrade domain,1,0,Pointer
652,MetricsCache.java,cached record,0,0,Pointer
1164,TestUpgradeDomainBlockPlacementPolicy.java,the test configs upgrade domain for nodes via admin json,1,0,Pointer
1165,TestUpgradeDomainBlockPlacementPolicy.java,config file and put some nodes to decommission state.,0,0,Pointer
1166,TestUpgradeDomainBlockPlacementPolicy.java,the test then verifies replicas are placed on the nodes that,1,0,Pointer
1167,TestUpgradeDomainBlockPlacementPolicy.java,satisfy the upgrade domain policy.,0,0,Pointer
656,NativeBatchProcessor.java,"used to create channel, transfer data and command between java and native",1,0,Pointer
658,NativeSingleLineParser.java,this sample parser will parse the sample log and extract the resource,0,0,Pointer
659,NativeSingleLineParser.java,skyline.,1,0,Pointer
660,NativeSingleLineParser.java,p the expected log format is normalizedjobname numinstances submittime,0,0,Pointer
661,NativeSingleLineParser.java,starttime endtime jobinstancename memusage coreusage,1,0,Pointer
151,Classpath.java,the output likely will include wildcards in the classpath.,0,0,Pointer
1175,TextInputFormat.java,either linefeed or carriage return are used to signal end of line.,1,0,Pointer
1178,TextInputFormat.java,.,0,0,Pointer
156,Classpath.java,this is useful in situations where wildcard syntax isn t usable.,1,0,Pointer
157,Classpath.java,"with the jar argument, it writes the classpath as a manifest in a jar file.",0,0,Pointer
669,Nfs3Status.java,success or error status is reported in nfs3 responses.,1,0,Pointer
671,Node2ObjectsMap.java,this data structure maintains the list of containers that is on a datanode.,0,0,Pointer
672,Node2ObjectsMap.java,this information is built from the dn container reports.,0,0,Pointer
1187,TimelineDataToRetrieve.java,while querying.,0,0,Pointer
1188,TimelineDataToRetrieve.java,br,0,0,Pointer
677,NodeUpdateType.java,p,0,0,Pointer
682,NullOutputFormat.java,consume all outputs and put them in dev null.,0,0,Pointer
685,OMNodeDetails.java,this class stores om node details.,0,0,Pointer
175,ComparableVersion.java,generic implementation of version comparison.,0,0,Pointer
176,ComparableVersion.java,p features,0,0,Pointer
177,ComparableVersion.java,ul,0,0,Pointer
690,OpportunisticContainersStatusPBImpl.java,protocol buffer implementation of opportunisticcontainersstatus.,0,0,Pointer
692,OzoneObj.java,class representing an unique ozone object.,0,0,Pointer
693,OzoneObj.java,ozone objects supported for acl.,0,0,Pointer
694,OzoneObj.java,ozone objects supported for acl.,0,0,Pointer
697,Parser.java,a class for parsing outputs,0,0,Pointer
188,ComparableVersion.java,li code milestone code or code m code li,0,0,Pointer
189,ComparableVersion.java,li code rc code or code cr code li,0,0,Pointer
190,ComparableVersion.java,li code snapshot code li,0,0,Pointer
191,ComparableVersion.java,li code the empty string code or code ga code or code final code li,0,0,Pointer
703,PartitionResourcesInfo.java,this class represents queue user resource usage info for a given partition,0,0,Pointer
192,ComparableVersion.java,li code sp code li,0,0,Pointer
193,ComparableVersion.java,ul,0,0,Pointer
194,ComparableVersion.java,"unknown qualifiers are considered after known qualifiers, with lexical order always case insensitive ,",0,0,Pointer
195,ComparableVersion.java,li,0,0,Pointer
197,ComparableVersion.java,li,0,0,Pointer
709,ProcessIdFileReader.java,helper functionality to read the pid from a file.,0,0,Pointer
711,QuasiMonteCarlo.java,a map reduce program that estimates the value of pi,0,0,Pointer
200,ComparableVersion.java,represents a numeric item in the version item list.,0,0,Pointer
712,QuasiMonteCarlo.java,using a quasi monte carlo qmc method.,0,0,Pointer
201,ComparableVersion.java,"represents a string in the version item list, usually a qualifier.",0,0,Pointer
713,QuasiMonteCarlo.java,arbitrary integrals can be approximated numerically by qmc methods.,0,0,Pointer
202,ComparableVersion.java,represents a version list item.,0,0,Pointer
203,ComparableVersion.java,this class is used both for the global item list and for sub lists which start,0,0,Pointer
204,ComparableVersion.java,with number in the version specification .,0,0,Pointer
716,QuasiMonteCarlo.java,"where s 0,1 ^2 is a unit square,",0,0,Pointer
717,QuasiMonteCarlo.java,"x x 1,x 2 is a 2 dimensional point,",0,0,Pointer
718,QuasiMonteCarlo.java,"and f is a function describing the inscribed circle of the square s ,",0,0,Pointer
719,QuasiMonteCarlo.java,"f x 1 if 2x 1 1 ^2 2x 2 1 ^2 &lt 1 and f x 0 , otherwise.",0,0,Pointer
720,QuasiMonteCarlo.java,it is easy to see that pi is equal to 4i .,0,0,Pointer
721,QuasiMonteCarlo.java,so an approximation of pi is obtained once i is evaluated numerically.,0,0,Pointer
722,QuasiMonteCarlo.java,there are better methods for computing pi.,0,0,Pointer
723,QuasiMonteCarlo.java,we emphasize numerical approximation of arbitrary integrals in this example.,0,0,Pointer
724,QuasiMonteCarlo.java,"for computing many digits of pi, consider using bbp.",0,0,Pointer
725,QuasiMonteCarlo.java,the implementation is discussed below.,0,0,Pointer
726,QuasiMonteCarlo.java,mapper,0,0,Pointer
727,QuasiMonteCarlo.java,generate points in a unit square,0,0,Pointer
728,QuasiMonteCarlo.java,and then count points inside outside of the inscribed circle of the square.,0,0,Pointer
729,QuasiMonteCarlo.java,reducer,0,0,Pointer
741,QuasiMonteCarlo.java,generate points in a unit square,0,0,Pointer
742,QuasiMonteCarlo.java,and then count points inside outside of the inscribed circle of the square.,0,0,Pointer
239,ConfigurationException.java,exception to throw in case of a configuration problem.,0,0,Pointer
245,CpuTimeTracker.java,utility for sampling and computing cpu usage.,0,0,Pointer
248,DBProfile.java,user visible configs based rocksdb tuning page.,0,0,Pointer
775,Query.java,check if a record matches a query.,0,0,Pointer
776,Query.java,the query is usually a partial record.,0,0,Pointer
781,QueueName.java,represents a queue name.,0,0,Pointer
271,DefaultAnonymizingRumenSerializer.java,default rumen json serializer.,0,0,Pointer
783,RandomKeyGenerator.java,data generator tool to generate as much keys as possible.,0,0,Pointer
784,RandomKeyGenerator.java,wrapper to hold ozone keyvalidate entry.,0,0,Pointer
785,RandomKeyGenerator.java,validates the write done in ozone cluster.,0,0,Pointer
274,DelegatingSSLSocketFactory.java,"specifically, either openssl or jsse can be used.",0,0,Pointer
789,ReencryptionUpdater.java,"class for finalizing re encrypt edek operations, by updating file xattrs with",0,0,Pointer
279,DelegatingSSLSocketFactory.java,p,0,0,Pointer
791,ReencryptionUpdater.java,p,0,0,Pointer
280,DelegatingSSLSocketFactory.java,the factory has several different modes of operation,0,0,Pointer
792,ReencryptionUpdater.java,the tasks are submitted by reencryptionhandler.,0,0,Pointer
281,DelegatingSSLSocketFactory.java,ul,0,0,Pointer
793,ReencryptionUpdater.java,p,0,0,Pointer
282,DelegatingSSLSocketFactory.java,li openssl uses the wildly openssl library to delegate to the,0,0,Pointer
794,ReencryptionUpdater.java,"it is assumed only 1 updater will be running, since updating file xattrs",0,0,Pointer
283,DelegatingSSLSocketFactory.java,system installed openssl.,0,0,Pointer
795,ReencryptionUpdater.java,"requires namespace write lock, and performance gain from multi threading",0,0,Pointer
284,DelegatingSSLSocketFactory.java,if the wildfly openssl integration is not,0,0,Pointer
796,ReencryptionUpdater.java,is limited.,0,0,Pointer
285,DelegatingSSLSocketFactory.java,"properly setup, an exception is thrown.",0,0,Pointer
797,ReencryptionUpdater.java,class to track re encryption submissions of a single zone.,0,0,Pointer
286,DelegatingSSLSocketFactory.java,li,0,0,Pointer
798,ReencryptionUpdater.java,it contains,0,0,Pointer
799,ReencryptionUpdater.java,"all the submitted futures, and statistics about how far the futures are",0,0,Pointer
800,ReencryptionUpdater.java,processed.,0,0,Pointer
289,DelegatingSSLSocketFactory.java,li,0,0,Pointer
801,ReencryptionUpdater.java,class representing the task for one batch of a re encryption command.,0,0,Pointer
802,ReencryptionUpdater.java,it,0,0,Pointer
291,DelegatingSSLSocketFactory.java,it disables the gcm cipher when running on java 8.,0,0,Pointer
803,ReencryptionUpdater.java,also contains statistics about how far this single batch has been executed.,0,0,Pointer
292,DelegatingSSLSocketFactory.java,li,0,0,Pointer
804,ReencryptionUpdater.java,class that encapsulates re encryption details of a file.,0,0,Pointer
295,DelegatingSSLSocketFactory.java,li,0,0,Pointer
296,DelegatingSSLSocketFactory.java,ul,0,0,Pointer
297,DelegatingSSLSocketFactory.java,p,0,0,Pointer
301,DelegatingSSLSocketFactory.java,p,0,0,Pointer
302,DelegatingSSLSocketFactory.java,default jsse is not truly the the default jsse implementation because,0,0,Pointer
303,DelegatingSSLSocketFactory.java,the gcm cipher is disabled when running on java 8.,0,0,Pointer
304,DelegatingSSLSocketFactory.java,"however, the name",0,0,Pointer
305,DelegatingSSLSocketFactory.java,was not changed in order to preserve backwards compatibility.,0,0,Pointer
306,DelegatingSSLSocketFactory.java,"instead,",0,0,Pointer
307,DelegatingSSLSocketFactory.java,a new mode called default jsse with gcm delegates to the default jsse,0,0,Pointer
308,DelegatingSSLSocketFactory.java,implementation with no changes to the list of enabled ciphers.,0,0,Pointer
309,DelegatingSSLSocketFactory.java,p,0,0,Pointer
830,RegistryInternalConstants.java,internal constants for the registry.,0,0,Pointer
831,RegistryInternalConstants.java,these are the things which aren t visible to users.,0,0,Pointer
834,RegistryOperations.java,registry operations,0,0,Pointer
1348,TimelineStorageMonitor.java,this abstract class is for monitoring health of timeline storage.,0,0,Pointer
1355,TypedEvent.java,basic event implementation to implement custom events.,0,0,Pointer
1356,TypedEvent.java,@param t,0,0,Pointer
1360,UniformSizeInputFormat.java,"uniformsizeinputformat extends the inputformat class, to produce",0,0,Pointer
1361,UniformSizeInputFormat.java,input splits for distcp.,0,0,Pointer
1362,UniformSizeInputFormat.java,it looks at the copy listing and groups the contents into input splits such,0,0,Pointer
1363,UniformSizeInputFormat.java,that the total number of bytes to be copied for each input split is,0,0,Pointer
1364,UniformSizeInputFormat.java,uniform.,0,0,Pointer
1370,Utils.java,a utility class.,0,0,Pointer
1371,Utils.java,it provides,0,0,Pointer
1372,Utils.java,a path filter utility to filter out output part files in the output dir,0,0,Pointer
1373,Utils.java,this class filters output part files from the given directory,0,0,Pointer
1374,Utils.java,it does not accept files with filenames logs and success.,0,0,Pointer
1375,Utils.java,this can be used to list paths of output directory as follows,0,0,Pointer
352,DelegationTokenIdentifier.java,a delegation token identifier that is specific to hdfs.,0,0,Pointer
1376,Utils.java,"path filelist fileutil^stat2paths fs^liststatus outdir,",0,0,Pointer
1377,Utils.java,new outputfilesfilter,0,0,Pointer
1378,Utils.java,this class filters log files from directory given,0,0,Pointer
1379,Utils.java,it doesnt accept paths having logs.,0,0,Pointer
868,RMAdminRequestInterceptor.java,"defines the contract to be implemented by the request intercepter classes,",0,0,Pointer
1380,Utils.java,this can be used to list paths of output directory as follows,0,0,Pointer
1381,Utils.java,"path filelist fileutil^stat2paths fs^liststatus outdir,",0,0,Pointer
1382,Utils.java,new outputlogfilter,0,0,Pointer
873,RSLegacyRawErasureCoderFactory.java,a raw coder factory for the legacy raw reed solomon coder in java.,0,0,Pointer
362,DfsServlet.java,a base class for the servlets in dfs.,0,0,Pointer
364,DiskBalancerCluster.java,diskbalancercluster represents the nodes that we are working against.,0,0,Pointer
876,SafeModeException.java,client cannot modified namespace until the safe mode is off.,0,0,Pointer
365,DiskBalancerCluster.java,p,0,0,Pointer
366,DiskBalancerCluster.java,please note,0,0,Pointer
878,SchedulerQueueManager.java,context of the queues in scheduler.,0,0,Pointer
367,DiskBalancerCluster.java,semantics of inclusionlist and exclusionlists.,0,0,Pointer
368,DiskBalancerCluster.java,p,0,0,Pointer
369,DiskBalancerCluster.java,if a non empty inclusionlist is specified then the diskbalancer assumes that,0,0,Pointer
370,DiskBalancerCluster.java,the user is only interested in processing that list of nodes.,0,0,Pointer
371,DiskBalancerCluster.java,this node list,0,0,Pointer
883,ShellBasedUnixGroupsMapping.java,a simple shell based implementation of @link groupmappingserviceprovider that exec s the code groups code shell command to fetch the group,0,0,Pointer
372,DiskBalancerCluster.java,is checked against the exclusionlist and only the nodes in inclusionlist but,0,0,Pointer
373,DiskBalancerCluster.java,not in exclusionlist is processed.,0,0,Pointer
374,DiskBalancerCluster.java,p,0,0,Pointer
375,DiskBalancerCluster.java,"if inclusionlist is empty, then we assume that all live nodes in the nodes is",0,0,Pointer
887,StandardSocketFactory.java,specialized socketfactory to create sockets with a socks proxy,0,0,Pointer
376,DiskBalancerCluster.java,to be processed by diskbalancer.,0,0,Pointer
377,DiskBalancerCluster.java,in that case diskbalancer will avoid any,0,0,Pointer
378,DiskBalancerCluster.java,nodes specified in the exclusionlist but will process all nodes in the,0,0,Pointer
379,DiskBalancerCluster.java,cluster.,0,0,Pointer
380,DiskBalancerCluster.java,p,0,0,Pointer
381,DiskBalancerCluster.java,"in other words, an empty inclusionlist is means all the nodes otherwise",0,0,Pointer
382,DiskBalancerCluster.java,only a given list is processed and exclusionlist is always honored.,0,0,Pointer
898,StreamBaseRecordReader.java,shared functionality for hadoopstreaming formats.,0,0,Pointer
899,StreamBaseRecordReader.java,a custom reader can be,0,0,Pointer
900,StreamBaseRecordReader.java,defined to be a recordreader with the constructor below and is selected with,0,0,Pointer
901,StreamBaseRecordReader.java,the option bin hadoopstreaming inputreader .,0,0,Pointer
909,StructureGenerator.java,this program generates a random namespace structure with the following,0,0,Pointer
910,StructureGenerator.java,constraints,0,0,Pointer
911,StructureGenerator.java,1,0,0,Pointer
912,StructureGenerator.java,"the number of subdirectories is a random number in minwidth, maxwidth .",0,0,Pointer
401,DistributedSchedulingAllocateRequest.java,"object used by the application master when distributed scheduling is enabled,",0,0,Pointer
913,StructureGenerator.java,2,0,0,Pointer
914,StructureGenerator.java,"the maximum depth of each subdirectory is a random number 2 maxdepth 3, maxdepth .",0,0,Pointer
915,StructureGenerator.java,3,0,0,Pointer
916,StructureGenerator.java,files are randomly placed in the empty directories.,0,0,Pointer
917,StructureGenerator.java,the size of each,0,0,Pointer
918,StructureGenerator.java,file follows gaussian distribution.,0,0,Pointer
1430,YarnAuthorizationProvider.java,an implementation of the interface will provide authorization related,0,0,Pointer
919,StructureGenerator.java,the generated namespace structure is described by two files in the output,0,0,Pointer
1431,YarnAuthorizationProvider.java,information and enforce permission check.,0,0,Pointer
408,DockerKillCommand.java,encapsulates the docker kill command and its command line arguments.,0,0,Pointer
920,StructureGenerator.java,directory.,0,0,Pointer
1432,YarnAuthorizationProvider.java,it is excepted that any of the,0,0,Pointer
1433,YarnAuthorizationProvider.java,methods defined in this interface should be non blocking call and should not,0,0,Pointer
410,EditLogTailer.java,editlogtailer represents a thread which periodically reads from edits,0,0,Pointer
922,StructureGenerator.java,each line of the second file contains,0,0,Pointer
1434,YarnAuthorizationProvider.java,involve expensive computation as these method could be invoked in rpc.,0,0,Pointer
411,EditLogTailer.java,journals and applies the transactions contained within to a given,0,0,Pointer
923,StructureGenerator.java,"the full name of a file and its size, separated by a blank.",0,0,Pointer
412,EditLogTailer.java,fsnamesystem.,0,0,Pointer
924,StructureGenerator.java,the synopsis of the command is,0,0,Pointer
413,EditLogTailer.java,the thread which does the actual work of tailing edits journals and,0,0,Pointer
925,StructureGenerator.java,java structuregenerator,0,0,Pointer
414,EditLogTailer.java,applying the transactions to the fsns.,0,0,Pointer
926,StructureGenerator.java,maxdepth maxdepth maximum depth of the directory tree default is 5.,0,0,Pointer
415,EditLogTailer.java,manage the active namenode proxy .,0,0,Pointer
927,StructureGenerator.java,minwidth minwidth minimum number of subdirectories per directories default is 1,0,0,Pointer
416,EditLogTailer.java,this cannot just be the a single proxy since we could,0,0,Pointer
928,StructureGenerator.java,maxwidth maxwidth maximum number of subdirectories per directories default is 5,0,0,Pointer
417,EditLogTailer.java,"failover across a number of namenodes, rather than just between an active and a standby.",0,0,Pointer
929,StructureGenerator.java,numoffiles #offiles the total number of files default is 10.,0,0,Pointer
418,EditLogTailer.java,p,0,0,Pointer
930,StructureGenerator.java,avgfilesize avgfilesizeinblocks average size of blocks default is 1.,0,0,Pointer
419,EditLogTailer.java,we lazily get a proxy to one of the configured namenodes and attempt to make the request,0,0,Pointer
931,StructureGenerator.java,outdir outdir output directory default is the current directory.,0,0,Pointer
1443,YarnServiceJobSubmitter.java,submit a job to cluster.,0,0,Pointer
420,EditLogTailer.java,against it.,0,0,Pointer
932,StructureGenerator.java,seed seed random number generator seed default is the current time.,0,0,Pointer
421,EditLogTailer.java,"if it doesn t succeed, either because the proxy failed to be created or the request",0,0,Pointer
933,StructureGenerator.java,in memory representation of a directory in memory representation of a file,0,0,Pointer
422,EditLogTailer.java,"failed, we try the next nn in the list.",0,0,Pointer
423,EditLogTailer.java,we try this up to the configuration maximum number of,0,0,Pointer
424,EditLogTailer.java,retries before throwing up our hands.,0,0,Pointer
425,EditLogTailer.java,a working proxy is retained across attempts since we,0,0,Pointer
426,EditLogTailer.java,expect the active namenode to switch rarely.,0,0,Pointer
427,EditLogTailer.java,p,0,0,Pointer
428,EditLogTailer.java,this mechanism is b very bad b for cases where we care about being i fast i it just,0,0,Pointer
429,EditLogTailer.java,blindly goes and tries namenodes.,0,0,Pointer
960,SwiftBadRequestException.java,thrown to indicate that data locality can t be calculated or requested path is incorrect.,0,0,Pointer
961,SwiftBadRequestException.java,data locality can t be calculated if openstack swift version is old.,0,0,Pointer
450,ErasureCodingPolicyManager.java,this manages erasure coding policies predefined and activated in the system.,0,0,Pointer
451,ErasureCodingPolicyManager.java,it loads customized policies and syncs with persisted ones in,0,0,Pointer
452,ErasureCodingPolicyManager.java,namenode image.,0,0,Pointer
964,SwiftRestClient.java,this implements the client side of the swift rest api.,0,0,Pointer
459,EventWatcher.java,event watcher the re send a message after timeout.,0,0,Pointer
461,EventWatcher.java,event watcher will send the tracked payload event after a timeout period,0,0,Pointer
462,EventWatcher.java,unless a confirmation from the original event completion event is arrived.,0,0,Pointer
480,FairOrderingPolicy.java,if,0,0,Pointer
481,FairOrderingPolicy.java,sizedbasedweight is set to true then an application with high demand,0,0,Pointer
482,FairOrderingPolicy.java,may be prioritized ahead of an application with less usage.,0,0,Pointer
483,FairOrderingPolicy.java,this,0,0,Pointer
484,FairOrderingPolicy.java,"is to offset the tendency to favor small apps, which could result in",0,0,Pointer
486,FairOrderingPolicy.java,"continuously optional, default false",0,0,Pointer
500,FederationPolicyException.java,generic policy exception.,0,0,Pointer
1015,TableConfig.java,class that maintains table configuration.,0,0,Pointer
1017,TestAddBlock.java,test addblockop is written and read correctly,0,0,Pointer
506,FederationStateStoreInvalidInputException.java,"exception thrown by the @code federationmembershipstatestoreinputvalidator ,",0,0,Pointer
1020,TestAdlContractDeleteLive.java,test delete contract test.,0,0,Pointer
1022,TestAdlContractSeekLive.java,test seek operation on adl file system.,0,0,Pointer
1536,KVStore.java,kvstore instances are thread safe for both reads and writes.,0,0,Pointer
1537,KVStore.java,p,1,0,Pointer
1445,ChunkFetchSuccess.java,response to @link chunkfetchrequest when a chunk exists and has been successfully fetched.,0,0,Pointer
1573,LevelDB.java,implementation of kvstore that uses leveldb as the underlying data store.,1,0,Pointer
1448,ChunkFetchSuccess.java,"similarly, the client side decoding will reuse the netty bytebuf as the buffer.",0,0,Pointer
1577,LocalDiskShuffleDataIO.java,storage and index file functionality that has historically been used from spark 24 and earlier.,1,0,Pointer
1451,ExecutorPlugin.java,a plugin which can be automatically instantiated within each spark executor.,0,0,Pointer
1581,MessageWithHeader.java,a wrapper message that holds two separate pieces a header and a body .,1,0,Pointer
1584,RemoveBlocks.java,request to remove a set of blocks.,0,0,Pointer
1586,StreamHandle.java,identifier for a fixed number of chunks to read from a stream created by an open blocks,1,0,Pointer
1587,StreamHandle.java,message.,0,0,Pointer
1592,TBoolColumn.java,"the set of fields this struct contains, along with convenience methods for finding and manipulating them.",1,0,Pointer
1594,UploadBlockStream.java,"a request to upload a block, which the destination should receive as a stream.",0,0,Pointer
1595,UploadBlockStream.java,the actual block data is not contained here.,1,0,Pointer
1596,UploadBlockStream.java,it will be passed to the streamcallbackwithid,0,0,Pointer
1469,FlatMapFunction.java,a function that returns zero or more output records from each input record.,1,0,Pointer
1597,UploadBlockStream.java,that is returned from rpchandler^receivestream,0,0,Pointer
1471,JavaRecord.java,java bean class to be used with the example javasqlnetworkwordcount.,1,0,Pointer
1473,JavaStreamingTestExample.java,"perform streaming testing using welch s 2 sample t test on a stream of data, where the data",0,0,Pointer
1474,JavaStreamingTestExample.java,stream arrives as text files in a directory.,1,0,Pointer
1475,JavaStreamingTestExample.java,stops when the two groups are statistically,0,0,Pointer
1476,JavaStreamingTestExample.java,significant p value 005 or after a user specified timeout in number of batches is exceeded.,1,0,Pointer
1477,JavaStreamingTestExample.java,"the rows of the text files must be in the form boolean, double .",0,0,Pointer
1478,JavaStreamingTestExample.java,for example,1,0,Pointer
1479,JavaStreamingTestExample.java,"false, 392",0,0,Pointer
1480,JavaStreamingTestExample.java,"true, 9932",1,0,Pointer
1481,JavaStreamingTestExample.java,usage,0,0,Pointer
1482,JavaStreamingTestExample.java,javastreamingtestexample datadir batchduration numbatchestimeout,0,0,Pointer
1483,JavaStreamingTestExample.java,to run on your local machine using the directory datadir with 5 seconds between each batch and,0,0,Pointer
1484,JavaStreamingTestExample.java,"a timeout after 100 insignificant batches, call",0,0,Pointer
1485,JavaStreamingTestExample.java,bin run example mllib^javastreamingtestexample datadir 5 100,0,0,Pointer
1486,JavaStreamingTestExample.java,as you add text files to datadir the significance test wil continually update every,0,0,Pointer
1487,JavaStreamingTestExample.java,batchduration seconds until the test becomes significant p value 005 or the number of,0,0,Pointer
1488,JavaStreamingTestExample.java,batches processed exceeds numbatchestimeout .,0,0,Pointer
1505,KVStore.java,abstraction for a local key value store for storing app data.,0,0,Pointer
1506,KVStore.java,p,0,0,Pointer
1507,KVStore.java,there are two main features provided by the implementations of this interface,0,0,Pointer
1508,KVStore.java,p,0,0,Pointer
1509,KVStore.java,h3 serialization h3,0,0,Pointer
1510,KVStore.java,p,0,0,Pointer
1511,KVStore.java,"if the underlying data store requires serialization, data will be serialized to and deserialized",0,0,Pointer
1513,KVStore.java,the serializer is,0,0,Pointer
1514,KVStore.java,"based on jackson, so it supports all the jackson annotations for controlling the serialization of",0,0,Pointer
1515,KVStore.java,app defined types.,0,0,Pointer
1516,KVStore.java,p,0,0,Pointer
1517,KVStore.java,p,0,0,Pointer
1518,KVStore.java,data is also automatically compressed to save disk space.,0,0,Pointer
1519,KVStore.java,p,0,0,Pointer
1520,KVStore.java,h3 automatic key management h3,0,0,Pointer
1521,KVStore.java,p,0,0,Pointer
1522,KVStore.java,"when using the built in key management, the implementation will automatically create unique",0,0,Pointer
1523,KVStore.java,keys for each type written to the store.,0,0,Pointer
1524,KVStore.java,"keys are based on the type name, and always start",0,0,Pointer
1525,KVStore.java,with the prefix character so that it s easy to use both manual and automatic key,0,0,Pointer
1526,KVStore.java,management apis without conflicts .,0,0,Pointer
1527,KVStore.java,p,0,0,Pointer
1528,KVStore.java,p,0,0,Pointer
1529,KVStore.java,another feature of automatic key management is indexing by annotating fields or methods of,0,0,Pointer
1531,KVStore.java,by the values of those properties.,0,0,Pointer
1532,KVStore.java,this makes it possible to provide sorting without having,0,0,Pointer
1533,KVStore.java,to load all instances of those types from the store.,0,0,Pointer
1534,KVStore.java,p,0,0,Pointer
1535,KVStore.java,p,0,0,Pointer
2048,ICodeReaderFactory.java,@noreference this interface is not intended to be referenced by clients.,0,0,Pointer
2055,ICPointerType.java,@noimplement this interface is not intended to be implemented by clients.,1,0,Pointer
2058,ICPPAliasTemplateInstance.java,represents an instance of an alias template 145.7 .,0,0,Pointer
2059,ICPPAliasTemplateInstance.java,@since 55,1,0,Pointer
2060,ICPPAliasTemplateInstance.java,@noextend this interface is not intended to be extended by clients.,0,0,Pointer
2061,ICPPAliasTemplateInstance.java,@noimplement this interface is not intended to be implemented by clients.,1,0,Pointer
2066,ICPPASTLinkageSpecification.java,this interface represents a linkage specification.,0,0,Pointer
2067,ICPPASTLinkageSpecification.java,eg extern c .,1,0,Pointer
2579,TriggerCellModifier.java,cell modifier used to edit the trigger value.,0,0,Pointer
2068,ICPPASTLinkageSpecification.java,@noextend this interface is not intended to be extended by clients.,1,0,Pointer
2069,ICPPASTLinkageSpecification.java,@noimplement this interface is not intended to be implemented by clients.,0,0,Pointer
2582,TypedCDTViewerFilter.java,@noextend this class is not intended to be subclassed by clients.,1,0,Pointer
2585,UncallCommandHandler.java,command handler to trigger an uncall operation,0,0,Pointer
2074,ICPPASTVirtSpecifier.java,a virt specifier at the end of a function declaration.,1,0,Pointer
2586,UncallCommandHandler.java,@since 70,0,0,Pointer
2075,ICPPASTVirtSpecifier.java,"there are two virt specifiers, final and override .",1,0,Pointer
2076,ICPPASTVirtSpecifier.java,@noimplement this interface is not intended to be implemented by clients.,0,0,Pointer
2077,ICPPASTVirtSpecifier.java,@noextend this interface is not intended to be extended by clients.,1,0,Pointer
2589,UPCKeyword.java,enumeration of keywords that upc adds to c99.,0,0,Pointer
2078,ICPPASTVirtSpecifier.java,@since 57,1,0,Pointer
2590,UPCKeyword.java,@author mike kucera,0,0,Pointer
2593,UPCLanguage.java,"implementation of the ilanguage extension point, adds upc as a language to cdt.",1,0,Pointer
2594,UPCLanguage.java,@author mike kucera,0,0,Pointer
2085,ICPPPointerToMemberType.java,@noimplement this interface is not intended to be implemented by clients.,1,0,Pointer
2597,VMHasChildrenUpdate.java,helper class implementation of the @link ihaschildrenupdate update object.,0,0,Pointer
2599,VMHasChildrenUpdate.java,@since 10,1,0,Pointer
2090,ICSourceNotFoundDescription.java,an instance is usually provided by an adapter.,0,0,Pointer
2603,WhiteSpaceOptions.java,manage code formatter white space options on a higher level.,1,0,Pointer
2604,WhiteSpaceOptions.java,preview snippets.,0,0,Pointer
2093,IDsfDebugServicesFactory.java,a factory to create dsf services.,1,0,Pointer
2605,WhiteSpaceOptions.java,"private void createbeforeellipsis map workingvalues, innernode parent createoption parent, workingvalues, formattermessages^whitespaceoptions vararg parameter, defaultcodeformatterconstants^formatter insert space before ellipsis, vararg parameter preview private void createafterellipsis map workingvalues, innernode parent createoption parent, workingvalues, formattermessages^whitespaceoptions vararg parameter, defaultcodeformatterconstants^formatter insert space after ellipsis, vararg parameter preview syntax element tree private innernode createreturntree map workingvalues, innernode parent final innernode root new innernode parent, workingvalues, formattermessages^whitespaceoptions return createoption root, workingvalues, formattermessages^whitespacetabpage before parenthesized expressions, defaultcodeformatterconstants^formatter insert space before parenthesized expression in return, return preview return root private innernode createthrowtree map workingvalues, innernode parent final innernode root new innernode parent, workingvalues, formattermessages^whitespaceoptions throw createoption root, workingvalues, formattermessages^whitespacetabpage before parenthesized expressions, defaultcodeformatterconstants^formatter insert space before parenthesized expression in throw, throw preview return root",0,0,Pointer
2606,WhiteSpaceOptions.java,represents a node in the options tree.,1,0,Pointer
2607,WhiteSpaceOptions.java,preview snippets.,0,0,Pointer
2096,IDsfDebugServicesFactory.java,@since 11,1,0,Pointer
2608,WhiteSpaceOptions.java,"private void createbeforeellipsis map workingvalues, innernode parent createoption parent, workingvalues, formattermessages^whitespaceoptions vararg parameter, defaultcodeformatterconstants^formatter insert space before ellipsis, vararg parameter preview private void createafterellipsis map workingvalues, innernode parent createoption parent, workingvalues, formattermessages^whitespaceoptions vararg parameter, defaultcodeformatterconstants^formatter insert space after ellipsis, vararg parameter preview syntax element tree private innernode createreturntree map workingvalues, innernode parent final innernode root new innernode parent, workingvalues, formattermessages^whitespaceoptions return createoption root, workingvalues, formattermessages^whitespacetabpage before parenthesized expressions, defaultcodeformatterconstants^formatter insert space before parenthesized expression in return, return preview return root private innernode createthrowtree map workingvalues, innernode parent final innernode root new innernode parent, workingvalues, formattermessages^whitespaceoptions throw createoption root, workingvalues, formattermessages^whitespacetabpage before parenthesized expressions, defaultcodeformatterconstants^formatter insert space before parenthesized expression in throw, throw preview return root",0,0,Pointer
2609,WhiteSpaceOptions.java,a node representing a group of options in the tree.,1,0,Pointer
2610,WhiteSpaceOptions.java,preview snippets.,0,0,Pointer
2611,WhiteSpaceOptions.java,"private void createbeforeellipsis map workingvalues, innernode parent createoption parent, workingvalues, formattermessages^whitespaceoptions vararg parameter, defaultcodeformatterconstants^formatter insert space before ellipsis, vararg parameter preview private void createafterellipsis map workingvalues, innernode parent createoption parent, workingvalues, formattermessages^whitespaceoptions vararg parameter, defaultcodeformatterconstants^formatter insert space after ellipsis, vararg parameter preview syntax element tree private innernode createreturntree map workingvalues, innernode parent final innernode root new innernode parent, workingvalues, formattermessages^whitespaceoptions return createoption root, workingvalues, formattermessages^whitespacetabpage before parenthesized expressions, defaultcodeformatterconstants^formatter insert space before parenthesized expression in return, return preview return root private innernode createthrowtree map workingvalues, innernode parent final innernode root new innernode parent, workingvalues, formattermessages^whitespaceoptions throw createoption root, workingvalues, formattermessages^whitespacetabpage before parenthesized expressions, defaultcodeformatterconstants^formatter insert space before parenthesized expression in throw, throw preview return root",1,0,Pointer
2100,IGDBTraceControl.java,the tracecontrol service provides access to the debugger tracing functionality.,0,0,Pointer
2612,WhiteSpaceOptions.java,a node representing a concrete white space option in the tree.,1,0,Pointer
2101,IGDBTraceControl.java,it is used to do such things as start and stop tracing.,0,0,Pointer
2102,IGDBTraceControl.java,@since 30,1,0,Pointer
2103,IGDBTraceControl.java,gdb specific part,0,0,Pointer
2104,IGDBTraceControl.java,marker interface for a context on which trace operations can be performed,1,0,Pointer
2105,IGDBTraceControl.java,gdb specific part,0,0,Pointer
2106,IGDBTraceControl.java,specific trace record context.,1,0,Pointer
2107,IGDBTraceControl.java,it describes tracing data.,0,0,Pointer
2108,IGDBTraceControl.java,gdb specific part,1,0,Pointer
2109,IGDBTraceControl.java,this is the model data interface that corresponds to itracerecorddmcontext.,0,0,Pointer
2110,IGDBTraceControl.java,gdb specific part,1,0,Pointer
2111,IGDBTraceControl.java,trace events,0,0,Pointer
2623,WordIgnoreProposal.java,proposal to ignore the word during the current editing session.,1,0,Pointer
2112,IGDBTraceControl.java,gdb specific part @since 44,0,0,Pointer
2625,WorkingCopyTests.java,contains unit test cases for working copies.,1,0,Pointer
1607,AbstractCPropertyTab.java,"in this case, we ll able to use",0,0,Pointer
1608,AbstractCPropertyTab.java,a lot of utility methods via provider link.,1,0,Pointer
1609,AbstractCPropertyTab.java,"in particular, it allows to get current project,",0,0,Pointer
1610,AbstractCPropertyTab.java,configuration etc see icpropertyprovider interface.,1,0,Pointer
1611,AbstractCPropertyTab.java,a standard way to create buttons ins edit del etc,0,0,Pointer
1612,AbstractCPropertyTab.java,and to handle their events see buttonpressed int,1,0,Pointer
1613,AbstractCPropertyTab.java,several utility methods to create widgets in the,0,0,Pointer
1614,AbstractCPropertyTab.java,"uniform manner setuplabel , setuptext etc .",1,0,Pointer
1615,AbstractCPropertyTab.java,means to handle control messages which are the main,0,0,Pointer
2127,IInclude.java,represents an include declaration in a c translation unit.,1,0,Pointer
1616,AbstractCPropertyTab.java,communication way for new cdt model pages and tabs.,0,0,Pointer
2128,IInclude.java,@noextend this interface is not intended to be extended by clients.,1,0,Pointer
2129,IInclude.java,@noimplement this interface is not intended to be implemented by clients.,0,0,Pointer
2136,IMacroEntry.java,@noextend this interface is not intended to be extended by clients.,1,0,Pointer
2137,IMacroEntry.java,@noimplement this interface is not intended to be implemented by clients.,0,0,Pointer
2140,IMIBackend.java,service for controlling the back end process.,1,0,Pointer
2141,IMIBackend.java,@since 11,0,0,Pointer
2142,IMIBackend.java,event indicating that the back end process has started or terminated.,1,0,Pointer
1631,AbstractTrialUndoActionProvider.java,action for a null rule,0,0,Pointer
1634,AddBreakpointRulerAction.java,ruler action to add breakpoint with a dialog properties.,1,0,Pointer
2146,IMSASTDeclspecList.java,"represents a microsoft attribute specifier, introduced by declspec.",0,0,Pointer
2147,IMSASTDeclspecList.java,@since 66,1,0,Pointer
1636,AddLineBreakpointActionDelegate.java,a delegate for the add line breakpoint action.,0,0,Pointer
2148,IMSASTDeclspecList.java,@noextend this interface is not intended to be extended by clients.,1,0,Pointer
2149,IMSASTDeclspecList.java,@noimplement this interface is not intended to be implemented by clients.,0,0,Pointer
1638,AddLineBreakpointActionDelegate.java,initially derived from addfunctionbreakpointactiondelegate,1,0,Pointer
1641,AddMemoryBlocks.java,adds memory blocks to the memory view.,0,0,Pointer
1642,AddMemoryBlocks.java,p,1,0,Pointer
2154,INodeFactory.java,control flow graph node factory,0,0,Pointer
2155,INodeFactory.java,@noextend this interface is not intended to be extended by clients.,1,0,Pointer
2161,IPropertyChangeParticipant.java,p,0,0,Pointer
1650,AddMemoryBlocks.java,p,1,0,Pointer
2162,IPropertyChangeParticipant.java,clients may implement this interface.,0,0,Pointer
1651,AddMemoryBlocks.java,@since 32,1,0,Pointer
2163,IPropertyChangeParticipant.java,p,0,0,Pointer
1652,AddMemoryBlocks.java,"in order to avoid duplicating the addmemoryblocks method one version for expressions, one for memory space address, we pass in a an opaque parameter and let the logic within addmemoryblocks differentiate where needed via isinstanceof request object used to get the memory spaces",1,0,Pointer
2164,IPropertyChangeParticipant.java,@since 50,0,0,Pointer
2172,IRefreshAllTarget.java,@since 11,1,0,Pointer
1662,AllTemplateEngineTests.java,the test suite will execute all the testcases added to the suite.,0,0,Pointer
1663,AllTemplateEngineTests.java,@since 40,1,0,Pointer
2175,IRegisters2.java,service extension of iregisters to manage user defined register groups,0,0,Pointer
2176,IRegisters2.java,@since 26,1,0,Pointer
1667,AutoconfMacroParameterListValidator.java,this class provides the macro call parameter parsing for the autoconf editor hover,0,0,Pointer
2179,IScannerInfoConsoleParser.java,parses a line of command output looking for scanner info entries.,1,0,Pointer
1668,AutoconfMacroParameterListValidator.java,it is modified from the cdt class cparameterlistvalidator,0,0,Pointer
2180,IScannerInfoConsoleParser.java,@author vhirsl,1,0,Pointer
1669,AutoconfMacroParameterListValidator.java,@author jjohnstn,0,0,Pointer
1673,AutotoolsProblemMarkerInfo.java,@noextend this class is not intended to be subclassed by clients.,1,0,Pointer
2185,ITestItem.java,@noextend this interface is not intended to be extended by clients.,0,0,Pointer
2186,ITestItem.java,@noimplement this interface is not intended to be implemented by clients.,1,0,Pointer
2187,ITestItem.java,represents status of the test item.,0,0,Pointer
1678,C99BuildASTParserAction.java,semantic actions called by the c99 parser to build an ast.,1,0,Pointer
1679,C99BuildASTParserAction.java,@author mike kucera,0,0,Pointer
1682,CConfigurationDescriptionCache.java,cconfigurationdescriptioncache is a proxy class for serialization of configuration description data.,1,0,Pointer
2195,IViewInMemory.java,provides the ability to view a variable in the memory view.,0,0,Pointer
2196,IViewInMemory.java,@since 74,1,0,Pointer
1685,CConfigurationDescriptionCache.java,ol,0,0,Pointer
1686,CConfigurationDescriptionCache.java,li initialization,1,0,Pointer
1687,CConfigurationDescriptionCache.java,ul,0,0,Pointer
2199,LanguageSettingsProvidersSerializer.java,helper class handling serialization and notifications for language settings entries @link iclanguagesettingentry .,1,0,Pointer
1688,CConfigurationDescriptionCache.java,li after eclipse started a project is being opened.,0,0,Pointer
2200,LanguageSettingsProvidersSerializer.java,those are for readability of xml only,1,0,Pointer
1689,CConfigurationDescriptionCache.java,a new cconfigurationdescriptioncache is created,0,0,Pointer
2201,LanguageSettingsProvidersSerializer.java,dummy class to represent ill defined provider.,1,0,Pointer
1690,CConfigurationDescriptionCache.java,"with cconfigurationdescriptioncache icstorageelement storage, cprojectdescription parent constructor.",0,0,Pointer
2202,LanguageSettingsProvidersSerializer.java,those are for readability of xml only,1,0,Pointer
1691,CConfigurationDescriptionCache.java,li any clients needed icconfigurationdescription get cconfigurationdescription using constructor,0,0,Pointer
1692,CConfigurationDescriptionCache.java,"cconfigurationdescription cconfigurationdata data, string buildsystemid, icdataproxycontainer cr",1,0,Pointer
2204,LanguageSettingsProvidersSerializer.java,those are for readability of xml only,0,0,Pointer
1693,CConfigurationDescriptionCache.java,where the cconfigurationdescriptioncache is passed as data.,1,0,Pointer
2205,LanguageSettingsProvidersSerializer.java,wrapper for workspace providers to ensure level of indirection.,0,0,Pointer
1694,CConfigurationDescriptionCache.java,the reference to cache is kept in field fcfgcache.,1,0,Pointer
1695,CConfigurationDescriptionCache.java,"li fcfgcache is used to getspecsettings cconfigurationspecsettings, after that fcfgcache is set to null.",0,0,Pointer
1696,CConfigurationDescriptionCache.java,ul,1,0,Pointer
1697,CConfigurationDescriptionCache.java,li user enters project properties settings,0,0,Pointer
2209,LanguageSettingsProvidersSerializer.java,those are for readability of xml only,1,0,Pointer
1698,CConfigurationDescriptionCache.java,ul,0,0,Pointer
2210,LanguageSettingsProvidersSerializer.java,language settings change event implementation.,1,0,Pointer
1699,CConfigurationDescriptionCache.java,li another cconfigurationdescription settings configuration created using the same constructor setting fcfgcache,0,0,Pointer
1700,CConfigurationDescriptionCache.java,to the cconfigurationdescriptioncache.,1,0,Pointer
1701,CConfigurationDescriptionCache.java,ul,0,0,Pointer
1702,CConfigurationDescriptionCache.java,li user changes settings in the settings configuration cconfigurationdescription and saves it,1,0,Pointer
1703,CConfigurationDescriptionCache.java,ul,0,0,Pointer
1704,CConfigurationDescriptionCache.java,li new cconfigurationdescriptioncache is created from the cconfigurationdescription via constructor,1,0,Pointer
1705,CConfigurationDescriptionCache.java,"cconfigurationdescriptioncache icconfigurationdescription basedescription, .",0,0,Pointer
1706,CConfigurationDescriptionCache.java,where,1,0,Pointer
1707,CConfigurationDescriptionCache.java,basedescription is saved as fbasedescription.,0,0,Pointer
2219,MachOBinaryParserPage.java,@noextend this class is not intended to be subclassed by clients.,1,0,Pointer
1708,CConfigurationDescriptionCache.java,li cconfigurationdescriptioncache^applydata .,0,0,Pointer
1709,CConfigurationDescriptionCache.java,is used to persist the data.,1,0,Pointer
2221,ManageConfigRunner.java,@noextend this class is not intended to be subclassed by clients.,0,0,Pointer
1710,CConfigurationDescriptionCache.java,at that point,1,0,Pointer
2223,MIAsyncErrorProcessor.java,in some cases gdb reports exec commands failure after the ^running event is fired.,0,0,Pointer
1712,CConfigurationDescriptionCache.java,ul,1,0,Pointer
1713,CConfigurationDescriptionCache.java,ol,0,0,Pointer
2237,MIAsyncErrorProcessor.java,this class handles these type of situations by firing mierrorevent when such an error appears.,1,0,Pointer
2238,MIAsyncErrorProcessor.java,@since 53,0,0,Pointer
2262,MIBreakpointsSynchronizer.java,@since 42,1,0,Pointer
2263,MIBreakpointsSynchronizer.java,catchpoint expressions gdb tracepoint commands,0,0,Pointer
2264,MIBreakpointsSynchronizer.java,class to store an event that needs to be performed by the synchronizer,0,0,Pointer
2265,MIBreakpointsSynchronizer.java,@see mibreakpointssynchronizer class documentation for design comments,0,0,Pointer
1759,ClangToolChain.java,the clang toolchain.,0,0,Pointer
1762,ClangToolChain.java,@author dschaefer,0,0,Pointer
1766,CommonBuildTab.java,common utilities for core build launch configuration tabs.,0,0,Pointer
1767,CommonBuildTab.java,@since 91,0,0,Pointer
1770,ContainerTabModel.java,@since 12.1,0,0,Pointer
1771,ContainerTabModel.java,@author jjohnstn,0,0,Pointer
1774,CoreBuildGenericLaunchConfigProvider.java,core launch configuration provider used by generic target types.,0,0,Pointer
1775,CoreBuildGenericLaunchConfigProvider.java,@since 83,0,0,Pointer
2287,MIDataListRegisterNames.java,data list register names regno,0,0,Pointer
2288,MIDataListRegisterNames.java,show a list of register names for the current target.,0,0,Pointer
1778,CPPASTProblem.java,c specific implementation allows actions to visit the problem.,0,0,Pointer
1780,CPPASTReferenceOperator.java,reference operator for declarators.,0,0,Pointer
1784,CPPDeferredFunction.java,a compiler would resolve it during instantiation.,0,0,Pointer
1787,CPPImplicitVariable.java,represents a variable implicitly created in c code.,0,0,Pointer
1788,CPPImplicitVariable.java,for example the initializer of a structured binding decomposition dcl^struct.bind,0,0,Pointer
1789,CPPImplicitVariable.java,"code auto first, second decomposed code",0,0,Pointer
2301,MIEnvironmentDirectory.java,environment directory r pathdir,0,0,Pointer
1790,CPPImplicitVariable.java,the code initializerevaluation code has to be supplied.,0,0,Pointer
2302,MIEnvironmentDirectory.java,add directory pathdir to beginning of search path for source files.,0,0,Pointer
2303,MIEnvironmentDirectory.java,r will first reset the path to its default,0,0,Pointer
2309,MIReverseDebugEnabler.java,@since 42,0,0,Pointer
1798,CPropertyTester.java,a property tester that determines if a file is an executable or a c c project.,0,0,Pointer
1800,CUIPreferenceInitializer.java,this class implements the setting of the cui initial preference store settings.,0,0,Pointer
1801,CUIPreferenceInitializer.java,@noextend this class is not intended to be subclassed by clients.,0,0,Pointer
2313,MIStack.java,provide the data.,0,0,Pointer
2314,MIStack.java,sub classes must supply the miarg object.,0,0,Pointer
2315,MIStack.java,class to track stack depth and debug frames for our internal cache,0,0,Pointer
2316,MIStack.java,"a map of threadid framescacheinfo, that can be cleared based on a context.",0,0,Pointer
2317,MIStack.java,we use this cache for a few reasons,0,0,Pointer
2318,MIStack.java,br,0,0,Pointer
2319,MIStack.java,"first, two commands such as",0,0,Pointer
1808,DefaultEnvironmentContextInfo.java,the default implementation of the icontextinfo used by the environment variable provider,0,0,Pointer
2320,MIStack.java,pre,0,0,Pointer
1809,DefaultEnvironmentContextInfo.java,"used to represent the configuration, project, workspace and eclipse environment contexts",0,0,Pointer
2321,MIStack.java,stack info depth 11,0,0,Pointer
1810,DefaultEnvironmentContextInfo.java,@since 30,0,0,Pointer
2322,MIStack.java,stack info depth 2,0,0,Pointer
2323,MIStack.java,pre,0,0,Pointer
2324,MIStack.java,would both be sent to gdb because the command cache sees them as different.,0,0,Pointer
2325,MIStack.java,this cache allows us to know that if we already asked for a stack depth,0,0,Pointer
2326,MIStack.java,we can potentially re use the answer.,0,0,Pointer
2327,MIStack.java,br,0,0,Pointer
2328,MIStack.java,the same concept is applicable for the stack list frames command with different limits.,0,0,Pointer
2329,MIStack.java,"also, the stack depth can be deduced from the frames list, so we don t need to ask gdb for it again.",0,0,Pointer
2330,MIStack.java,p,0,0,Pointer
2331,MIStack.java,the second reason is that gdb is unreliable when it comes to returning frames.,0,0,Pointer
2332,MIStack.java,the mi protocol only allows to reply,0,0,Pointer
2333,MIStack.java,with data or with error.,0,0,Pointer
2334,MIStack.java,"when gdb is unwinding sometimes it gets both, and while the console cli protocol has no",0,0,Pointer
1823,DisplayDsfExecutor.java,@since 10,0,0,Pointer
2335,MIStack.java,"problem with that, for mi, gdb replies randomly, sometimes with data, sometimes with error.",0,0,Pointer
2336,MIStack.java,if we cache the valid data,0,0,Pointer
2337,MIStack.java,it will eliminate the issue with invalid data on subsequent invocations.,0,0,Pointer
2338,MIStack.java,we don t cache errors.,0,0,Pointer
2339,MIStack.java,base class for the iframedmdata object that uses an miframe object to,0,0,Pointer
1828,DocCommentOwnerBlock.java,project property page for setting documentation comment owner.,0,0,Pointer
2340,MIStack.java,provide the data.,0,0,Pointer
1829,DocCommentOwnerBlock.java,em this class is not intended for use outside of cdt em,0,0,Pointer
2341,MIStack.java,sub classes must provide the miframe object,0,0,Pointer
1830,DocCommentOwnerBlock.java,@noextend this class is not intended to be subclassed by clients.,0,0,Pointer
1831,DocCommentOwnerBlock.java,@noinstantiate this class is not intended to be instantiated by clients.,0,0,Pointer
1836,DOMGCCParserExtensionTestSuite.java,@author jcamelon,0,0,Pointer
1838,DOMParserTestSuite.java,@author jcamelon,0,0,Pointer
1840,DsfDebugUITools.java,@since 11,0,0,Pointer
1842,DummyPage.java,this class is just to replace a category reference in org^eclipse.cdt^ui that we exclude because we do not bring in the org^eclipse.cdt^managedbuild.ui plug in.,0,0,Pointer
1847,ElementNumberFormatsContribution.java,@since 22,0,0,Pointer
1850,FindStdLibPath.java,the purpose is to find a path where stdc library is located.,0,0,Pointer
1851,FindStdLibPath.java,currently the shell script is only for linux.,0,0,Pointer
1855,FoldingConfigurationBlock.java,configures c editor folding preferences.,0,0,Pointer
1856,FoldingConfigurationBlock.java,@since 30,0,0,Pointer
1859,FormattedValueTests.java,tests to verify the operation of formattedvaluesvmutil,0,0,Pointer
1860,FormattedValueTests.java,@since 22,0,0,Pointer
2372,MIThreadCreatedEvent.java,this can only be detected by gdb mi after gdb 68.,0,0,Pointer
1861,FormattedValueTests.java,helper class that stores some element paths and nodes using a certain format,0,0,Pointer
2374,MIThreadGroupAddedEvent.java,"thread group added,id i1",0,0,Pointer
2375,MIThreadGroupAddedEvent.java,this can only be detected by gdb mi with gdb 72.,0,0,Pointer
2376,MIThreadGroupAddedEvent.java,@since 51,0,0,Pointer
1865,GCCKeywords.java,@noextend this interface is not intended to be extended by clients.,0,0,Pointer
1866,GCCKeywords.java,@noinstantiate this class is not intended to be instantiated by clients.,0,0,Pointer
2380,MultiCfgContributedEnvironment.java,@noextend this class is not intended to be subclassed by clients.,0,0,Pointer
1869,GDBControl_7_12.java,need a new finallaunchsequence for gdb 712,0,0,Pointer
1870,GDBControl_7_12.java,@since 52,0,0,Pointer
2382,MultiLaunchConfigurationTabGroup.java,tab group for launch group.,0,0,Pointer
2383,MultiLaunchConfigurationTabGroup.java,"@deprecated see bug 517722, launch groups are now part of platform.",0,0,Pointer
1873,GdbExpressionVMProvider.java,a specialization of expressionvmprovider that uses a gdb specific variable vm,0,0,Pointer
2386,PDOMDependencyGenerator.java,@author doug schaefer,0,0,Pointer
2387,PDOMDependencyGenerator.java,@noextend this class is not intended to be subclassed by clients.,0,0,Pointer
2388,PDOMDependencyGenerator.java,@noinstantiate this class is not intended to be instantiated by clients.,0,0,Pointer
1879,GDBSourceLookup.java,default implementation of @link igdbsourcelookup,0,0,Pointer
1880,GDBSourceLookup.java,@since 50,0,0,Pointer
2392,PDOMMacroReferenceName.java,"represents declarations, definitions and references to bindings, except for macros.",0,0,Pointer
1885,GnuMakefileGenerator.java,@since 12,0,0,Pointer
2397,ProblemMarkerManager.java,visitors used to filter the element delta changes,0,0,Pointer
1886,GnuMakefileGenerator.java,@noinstantiate this class is not intended to be instantiated by clients.,0,0,Pointer
1887,GnuMakefileGenerator.java,string constants for makefile contents and messages private static final string auto dep comment ^autodeps non nls 1 private static final string message managedmakebuilder^message non nls 1 private static final string build error message ^error non nls 1 private static final string dep incl comment ^module.dep^includes non nls 1 private static final string mod incl comment ^module.make^includes non nls 1 private itool buildtools private boolean buildtoolsused private imanagedbuildinfo info private set outputextensionsset maps of macro names string to values list dependency file variables private vector dependencymakefiles ipath s relative to the top build directory or absolute,0,0,Pointer
1888,GnuMakefileGenerator.java,imanagedbuildermakefilegenerator m e t h o d s,0,0,Pointer
1889,GnuMakefileGenerator.java,m a k e f i l e s p o p u l a t i o n m e t h o d s,0,0,Pointer
2401,ProcessLauncher.java,this class implements external process launching for internal builder.,0,0,Pointer
1890,GnuMakefileGenerator.java,m a i n makefile m a k e f i l e m e t h o d s,0,0,Pointer
1891,GnuMakefileGenerator.java,s o u r c e s sources^mk m a k e f i l e m e t h o d s,0,0,Pointer
1892,GnuMakefileGenerator.java,f r a g m e n t subdir^mk m a k e f i l e m e t h o d s,0,0,Pointer
1893,GnuMakefileGenerator.java,m a k e f i l eg e n e r a t i o n c o m m o n m e t h o d s,0,0,Pointer
2405,ProcStatParser.java,@author marc dumais,0,0,Pointer
1894,GnuMakefileGenerator.java,adds a macro addition prefix to a map of macro names to entries.,0,0,Pointer
1895,GnuMakefileGenerator.java,entry prefixes look like,0,0,Pointer
1896,GnuMakefileGenerator.java,c srcs,0,0,Pointer
1897,GnuMakefileGenerator.java,"addprefix root ,",0,0,Pointer
1898,GnuMakefileGenerator.java,r e s o u r c e v i s i t o r m e t h o d s,0,0,Pointer
2410,QtPDOMNameIndex.java,a data structure for storing lists of pdomnames that are indexed by a string key.,0,0,Pointer
1899,GnuMakefileGenerator.java,o t h e r m e t h o d s,0,0,Pointer
2411,QtPDOMNameIndex.java,"this is equivalent to the java type map string, list pdomname .",0,0,Pointer
1900,GnuMakefileGenerator.java,"process a string denoting a filepath in a way compatible for gnu make rules, handling",0,0,Pointer
1901,GnuMakefileGenerator.java,windows drive letters and whitespace appropriately.,0,0,Pointer
1902,GnuMakefileGenerator.java,p p,0,0,Pointer
2414,RenameCSourceFolderChange.java,@author ee4 graf ifs,0,0,Pointer
1903,GnuMakefileGenerator.java,the context these paths appear in is on the right hand side of a rule header.,0,0,Pointer
1904,GnuMakefileGenerator.java,ie,0,0,Pointer
1905,GnuMakefileGenerator.java,p p,0,0,Pointer
1906,GnuMakefileGenerator.java,target dep1 dep2 dep3,0,0,Pointer
1907,GnuMakefileGenerator.java,p,0,0,Pointer
1908,GnuMakefileGenerator.java,@param path the string denoting the path to process,0,0,Pointer
1909,GnuMakefileGenerator.java,@throws nullpointerexception is path is null,0,0,Pointer
1910,GnuMakefileGenerator.java,@return a suitable make rule compatible path,0,0,Pointer
1912,GnuMakefileGenerator.java,what resources have been changed.,0,0,Pointer
1913,GnuMakefileGenerator.java,the logic is very simple.,0,0,Pointer
1914,GnuMakefileGenerator.java,if a,0,0,Pointer
1916,GnuMakefileGenerator.java,in which they are located are dirty so the makefile fragments for them,0,0,Pointer
1917,GnuMakefileGenerator.java,have to be regenerated.,0,0,Pointer
1918,GnuMakefileGenerator.java,p,0,0,Pointer
1920,GnuMakefileGenerator.java,itself.,0,0,Pointer
2432,RulerColumnDescriptor.java,@since 72,0,0,Pointer
1921,GnuMakefileGenerator.java,we are relying on make to do the right things when confronted,0,0,Pointer
2433,RulerColumnDescriptor.java,@noinstantiate this class is not intended to be instantiated by clients.,0,0,Pointer
1922,GnuMakefileGenerator.java,with a dependency on a moved header file.,0,0,Pointer
1923,GnuMakefileGenerator.java,"that said, make will treat",0,0,Pointer
1924,GnuMakefileGenerator.java,the missing header file in a dependency rule as a target it has to build,0,0,Pointer
1925,GnuMakefileGenerator.java,unless told otherwise.,0,0,Pointer
1926,GnuMakefileGenerator.java,these dummy targets are added to the makefile,0,0,Pointer
1927,GnuMakefileGenerator.java,to avoid a missing target error.,0,0,Pointer
1928,GnuMakefileGenerator.java,string constants for makefile contents and messages private static final string auto dep comment ^autodeps non nls 1 private static final string message managedmakebuilder^message non nls 1 private static final string build error message ^error non nls 1 private static final string dep incl comment ^module.dep^includes non nls 1 private static final string mod incl comment ^module.make^includes non nls 1 private itool buildtools private boolean buildtoolsused private imanagedbuildinfo info private set outputextensionsset maps of macro names string to values list dependency file variables private vector dependencymakefiles ipath s relative to the top build directory or absolute,0,0,Pointer
2440,SCDOptionsEnum.java,enumeration class for scanner configuration affecting command line options,0,0,Pointer
1929,GnuMakefileGenerator.java,imanagedbuildermakefilegenerator m e t h o d s,0,0,Pointer
2441,SCDOptionsEnum.java,@author vhirsl,0,0,Pointer
1930,GnuMakefileGenerator.java,m a k e f i l e s p o p u l a t i o n m e t h o d s,0,0,Pointer
1931,GnuMakefileGenerator.java,m a i n makefile m a k e f i l e m e t h o d s,0,0,Pointer
1932,GnuMakefileGenerator.java,s o u r c e s sources^mk m a k e f i l e m e t h o d s,0,0,Pointer
1933,GnuMakefileGenerator.java,f r a g m e n t subdir^mk m a k e f i l e m e t h o d s,0,0,Pointer
2445,SourceLookupTest.java,tests that interaction with source lookups works as expected.,0,0,Pointer
1934,GnuMakefileGenerator.java,m a k e f i l eg e n e r a t i o n c o m m o n m e t h o d s,0,0,Pointer
2446,SourceLookupTest.java,p,0,0,Pointer
1935,GnuMakefileGenerator.java,adds a macro addition prefix to a map of macro names to entries.,0,0,Pointer
1936,GnuMakefileGenerator.java,entry prefixes look like,0,0,Pointer
1937,GnuMakefileGenerator.java,c srcs,0,0,Pointer
1938,GnuMakefileGenerator.java,"addprefix root ,",0,0,Pointer
2450,SourceLookupTest.java,"located in the @link #build path directory, but it is now located in the",0,0,Pointer
1939,GnuMakefileGenerator.java,r e s o u r c e v i s i t o r m e t h o d s,0,0,Pointer
2451,SourceLookupTest.java,@link basetestcase#source path directory.,0,0,Pointer
1940,GnuMakefileGenerator.java,o t h e r m e t h o d s,0,0,Pointer
2452,SourceLookupTest.java,p,0,0,Pointer
1941,GnuMakefileGenerator.java,"process a string denoting a filepath in a way compatible for gnu make rules, handling",0,0,Pointer
2453,SourceLookupTest.java,the wild card in sourcelookup ^exe can be one of the following to cover the,0,0,Pointer
1942,GnuMakefileGenerator.java,windows drive letters and whitespace appropriately.,0,0,Pointer
2454,SourceLookupTest.java,different effective types of source lookups that need to be done depending on,0,0,Pointer
1943,GnuMakefileGenerator.java,p p,0,0,Pointer
2455,SourceLookupTest.java,how the program was compiled.,0,0,Pointer
1944,GnuMakefileGenerator.java,the context these paths appear in is on the right hand side of a rule header.,0,0,Pointer
2456,SourceLookupTest.java,each of these options produces different debug,0,0,Pointer
1945,GnuMakefileGenerator.java,ie,0,0,Pointer
2457,SourceLookupTest.java,information about where to find the source file.,0,0,Pointer
1946,GnuMakefileGenerator.java,p p,0,0,Pointer
1947,GnuMakefileGenerator.java,target dep1 dep2 dep3,0,0,Pointer
1948,GnuMakefileGenerator.java,p,0,0,Pointer
2460,SourceLookupTest.java,ul,0,0,Pointer
1949,GnuMakefileGenerator.java,@param path the string denoting the path to process,0,0,Pointer
2461,SourceLookupTest.java,li b ac b absolute and canonical path no .,0,0,Pointer
1950,GnuMakefileGenerator.java,@throws nullpointerexception is path is null,0,0,Pointer
2462,SourceLookupTest.java,.,0,0,Pointer
1951,GnuMakefileGenerator.java,@return a suitable make rule compatible path,0,0,Pointer
2463,SourceLookupTest.java,in path passed to gcc,0,0,Pointer
1952,GnuMakefileGenerator.java,this class is used to recursively walk the project and determine which,0,0,Pointer
2464,SourceLookupTest.java,li,0,0,Pointer
1953,GnuMakefileGenerator.java,modules contribute buildable source files.,0,0,Pointer
2466,SourceLookupTest.java,.,0,0,Pointer
2467,SourceLookupTest.java,in path passed to gcc,0,0,Pointer
2468,SourceLookupTest.java,li,0,0,Pointer
2470,SourceLookupTest.java,.,0,0,Pointer
2471,SourceLookupTest.java,in path passed to gcc,0,0,Pointer
2472,SourceLookupTest.java,li,0,0,Pointer
2474,SourceLookupTest.java,.,0,0,Pointer
2475,SourceLookupTest.java,in path passed to gcc,0,0,Pointer
2476,SourceLookupTest.java,li,0,0,Pointer
2478,SourceLookupTest.java,ul,0,0,Pointer
2479,SourceLookupTest.java,"in addition, there can also be a b dwarf2 b in the name.",0,0,Pointer
2480,SourceLookupTest.java,that means it is,0,0,Pointer
2481,SourceLookupTest.java,"designed to run with gdb 74, see comment in makefile for olddwarfflags.",0,0,Pointer
2482,SourceLookupTest.java,p,0,0,Pointer
2483,SourceLookupTest.java,the result of the variations on compilation arguments means that some of the,0,0,Pointer
2484,SourceLookupTest.java,tests are parameterised.,0,0,Pointer
2485,SourceLookupTest.java,p,0,0,Pointer
2486,SourceLookupTest.java,some of the cdt source lookup features require newer versions of gdb than,0,0,Pointer
2487,SourceLookupTest.java,"others, therefore the relevant tests use assumegdbversion methods to be",0,0,Pointer
2488,SourceLookupTest.java,skipped when appropriate.,0,0,Pointer
2531,SpellEvent.java,spell event fired for words detected by a spell check iterator.,0,0,Pointer
2533,StandardCElementLabelProvider.java,celementlabelprovider that respects settings from the appearance preference page.,0,0,Pointer
2534,StandardCElementLabelProvider.java,triggers a viewer update when a preference changes.,0,0,Pointer
2535,StandardCElementLabelProvider.java,@deprecated use @link appearanceawarelabelprovider instead.,0,0,Pointer
2024,GroupDebugContextsCommandHandler.java,command handler to trigger grouping of debug contexts operation.,0,0,Pointer
2025,GroupDebugContextsCommandHandler.java,@since 71,0,0,Pointer
2539,StringDialogField.java,dialog field containing a label and a text control.,0,0,Pointer
2028,IBHistoryAction.java,action used for the include browser forward backward buttons,0,0,Pointer
2030,IBuildObject.java,@noextend this class is not intended to be subclassed by clients.,0,0,Pointer
2031,IBuildObject.java,@noimplement this interface is not intended to be implemented by clients.,0,0,Pointer
2544,ToggleDynamicPrintfAdapter.java,toggles a dynamic printf in a c c editor.,0,0,Pointer
2545,ToggleDynamicPrintfAdapter.java,@since 75,0,0,Pointer
2548,TracepointActionsPropertyPage.java,property page for tracepoint actions,0,0,Pointer
2549,TracepointActionsPropertyPage.java,@since 21,0,0,Pointer
2552,TracingConsole.java,a console that is used to print traces.,0,0,Pointer
2553,TracingConsole.java,the console is attached to a launch.,0,0,Pointer
2046,ICodeReaderFactory.java,@author jcamelon,0,0,Pointer
2558,TracingConsole.java,@since 21,0,0,Pointer
2559,TracingConsole.java,this class was moved from package org^eclipse.cdt^dsf.gdb^internal.ui^tracing,0,0,Pointer
3074,CloseablesTest.java,unit tests for @link closeables .,0,0,Pointer
3075,CloseablesTest.java,"p checks proper closing behavior, and ensures that ioexceptions on closeable^close are not",1,0,Pointer
3076,CloseablesTest.java,propagated out from the @link closeables#close method if @code swallowexception is true.,0,0,Pointer
3077,CloseablesTest.java,@author michael lancaster,1,0,Pointer
3085,CollectionTestSuiteBuilder.java,@author chris povirk,0,0,Pointer
3086,CollectionTestSuiteBuilder.java,@author louis wasserman,1,0,Pointer
4115,SortedSetNavigationTester.java,a generic junit test which tests operations on a sortedset.,0,0,Pointer
4118,SortedSetNavigationTester.java,@author jesse wilson,1,0,Pointer
4119,SortedSetNavigationTester.java,@author louis wasserman,0,0,Pointer
3095,ConflictingRequirementsException.java,thrown when requirements on a tester method or class conflict with each other.,1,0,Pointer
3096,ConflictingRequirementsException.java,@author george van den driessche,0,0,Pointer
3099,CountingOutputStream.java,an outputstream that counts the number of bytes written.,1,0,Pointer
3100,CountingOutputStream.java,@author chris nokleberg,0,0,Pointer
3101,CountingOutputStream.java,@since 10,1,0,Pointer
4126,SubscriberTest.java,tests for @link subscriber .,0,0,Pointer
4127,SubscriberTest.java,@author cliff biffle,1,0,Pointer
4128,SubscriberTest.java,@author colin decker,0,0,Pointer
3105,DescendingMultiset.java,a skeleton implementation of a descending multiset.,1,0,Pointer
3108,DescendingMultiset.java,@author louis wasserman,0,0,Pointer
4134,TesterRequirements.java,encapsulates the constraints that a class under test must satisfy in order for a tester method to,1,0,Pointer
4135,TesterRequirements.java,be run against that class.,0,0,Pointer
4136,TesterRequirements.java,@author george van den driessche,1,0,Pointer
3113,EqualsTester.java,tester for equals and hashcode methods of a class.,0,0,Pointer
3114,EqualsTester.java,p the simplest use case is,1,0,Pointer
3115,EqualsTester.java,pre,0,0,Pointer
4141,TestStringListGenerator.java,@author kevin bourrillion,1,0,Pointer
3117,EqualsTester.java,pre,0,0,Pointer
3118,EqualsTester.java,"p this tests @code foo^equals foo , @code foo^equals null , and a few other operations.",1,0,Pointer
4143,WrappingScheduledExecutorService.java,an abstract @code scheduledexecutorservice that allows subclasses to @linkplain,0,0,Pointer
3119,EqualsTester.java,"p for more extensive testing, add multiple equality groups.",1,0,Pointer
4144,WrappingScheduledExecutorService.java,#wraptask callable wrap tasks before they are submitted to the underlying executor.,0,0,Pointer
3120,EqualsTester.java,each group should contain objects,1,0,Pointer
4145,WrappingScheduledExecutorService.java,p note that task wrapping may occur even if the task is never executed.,0,0,Pointer
3121,EqualsTester.java,that are equal to each other but unequal to the objects in any other group.,1,0,Pointer
4146,WrappingScheduledExecutorService.java,@author luke sandberg,0,0,Pointer
3122,EqualsTester.java,for example,1,0,Pointer
3123,EqualsTester.java,pre,0,0,Pointer
3124,EqualsTester.java,new equalstester,1,0,Pointer
3125,EqualsTester.java,"addequalitygroup new user page , new user page",0,0,Pointer
3126,EqualsTester.java,addequalitygroup new user sergey,1,0,Pointer
3127,EqualsTester.java,testequals,0,0,Pointer
3128,EqualsTester.java,pre,1,0,Pointer
3129,EqualsTester.java,p this tests,0,0,Pointer
3130,EqualsTester.java,ul,1,0,Pointer
3131,EqualsTester.java,li comparing each object against itself returns true,0,0,Pointer
3133,EqualsTester.java,li comparing each object against an instance of an incompatible class returns false,1,0,Pointer
3134,EqualsTester.java,li comparing each pair of objects within the same equality group returns true,0,0,Pointer
3135,EqualsTester.java,li comparing each pair of objects from different equality groups returns false,1,0,Pointer
3136,EqualsTester.java,li the hash codes of any two equal objects are equal,0,0,Pointer
3137,EqualsTester.java,ul,1,0,Pointer
3140,EqualsTester.java,ul,0,0,Pointer
3146,EqualsTester.java,ul,1,0,Pointer
3147,EqualsTester.java,@author jim mcmaster,0,0,Pointer
3148,EqualsTester.java,@author jige yu,1,0,Pointer
3149,EqualsTester.java,@since 100,0,0,Pointer
3150,EqualsTester.java,class used to test whether equals correctly handles an instance of an incompatible class.,1,0,Pointer
3151,EqualsTester.java,"since it is a private inner class, the invoker can never pass in an instance to the tester",0,0,Pointer
3182,FeatureSpecificTestSuiteBuilder.java,"creates, based on your criteria, a junit test suite that exhaustively tests the object generated",1,0,Pointer
3183,FeatureSpecificTestSuiteBuilder.java,"by a g, selecting appropriate tests by matching them against specified features.",0,0,Pointer
3184,FeatureSpecificTestSuiteBuilder.java,@param b the concrete type of this builder the self type .,1,0,Pointer
3185,FeatureSpecificTestSuiteBuilder.java,all the builder methods of this,0,0,Pointer
3186,FeatureSpecificTestSuiteBuilder.java,"class such as @link #named return this type, so that builder methods of more derived",1,0,Pointer
3188,FeatureSpecificTestSuiteBuilder.java,@param g the type of the generator to be passed to testers in the generated test suite.,0,0,Pointer
3189,FeatureSpecificTestSuiteBuilder.java,an,1,0,Pointer
3191,FeatureSpecificTestSuiteBuilder.java,information required to parameterize the test.,0,0,Pointer
3192,FeatureSpecificTestSuiteBuilder.java,@author george van den driessche,1,0,Pointer
3205,ForwardingBlockingDequeTest.java,test for @link forwardingblockingdeque,0,0,Pointer
3206,ForwardingBlockingDequeTest.java,@author emily soldal,1,0,Pointer
3210,ForwardingImmutableSet.java,@author hayward chan,0,0,Pointer
3214,ForwardingQueueTest.java,tests for @code forwardingqueue .,1,0,Pointer
3215,ForwardingQueueTest.java,@author robert konigsberg,0,0,Pointer
3216,ForwardingQueueTest.java,@author louis wasserman,1,0,Pointer
3220,GwtTestSuite.java,runs all gwt tests.,0,0,Pointer
3221,GwtTestSuite.java,grouping them into a suite is much faster than running each as a one test,1,0,Pointer
3222,GwtTestSuite.java,"suite, as the per suite setup is expensive.",0,0,Pointer
3226,HashFunctionEnum.java,an enum that contains all of the known hash functions.,1,0,Pointer
3227,HashFunctionEnum.java,@author kurt alfred kluever,0,0,Pointer
3230,HostAndPort.java,an immutable representation of a host and port.,1,0,Pointer
3231,HostAndPort.java,p example usage,0,0,Pointer
3232,HostAndPort.java,pre,1,0,Pointer
3233,HostAndPort.java,hostandport hp hostandport^fromstring 2001 db8 1,0,0,Pointer
3235,HostAndPort.java,requirebracketsforipv6,1,0,Pointer
3236,HostAndPort.java,hp^gethost returns 2001 db8 1,0,0,Pointer
3237,HostAndPort.java,hp^getport returns 80,1,0,Pointer
3238,HostAndPort.java,hp^tostring returns 2001 db8 1 80,0,0,Pointer
3239,HostAndPort.java,pre,1,0,Pointer
3240,HostAndPort.java,p here are some examples of recognized formats,0,0,Pointer
3241,HostAndPort.java,ul,1,0,Pointer
3242,HostAndPort.java,li example^com,0,0,Pointer
3244,HostAndPort.java,li 1920.21,1,0,Pointer
3246,HostAndPort.java,li 2001 db8 1 @link #gethost omits brackets,0,0,Pointer
3247,HostAndPort.java,li 2001 db8 1 80 @link #gethost omits brackets,1,0,Pointer
3248,HostAndPort.java,li 2001 db8 1 use @link #requirebracketsforipv6 to prohibit this,0,0,Pointer
3249,HostAndPort.java,ul,1,0,Pointer
3250,HostAndPort.java,"p note that this is not an exhaustive list, because these methods are only concerned with",0,0,Pointer
3251,HostAndPort.java,"brackets, colons, and port numbers.",1,0,Pointer
3253,HostAndPort.java,caller s responsibility.,0,0,Pointer
3254,HostAndPort.java,@author paul marks,1,0,Pointer
3255,HostAndPort.java,@since 100,0,0,Pointer
3285,ImmutableTable_CustomFieldSerializerBase.java,this class contains static utility methods for writing @link immutabletable gwt field,1,0,Pointer
3286,ImmutableTable_CustomFieldSerializerBase.java,serializers.,0,0,Pointer
3287,ImmutableTable_CustomFieldSerializerBase.java,serializers should delegate to @link #serialize and @link #instantiate .,1,0,Pointer
3288,ImmutableTable_CustomFieldSerializerBase.java,@author chris povirk,0,0,Pointer
3294,LazyStackTraceBenchmark.java,we benchmark a caller,1,0,Pointer
3295,LazyStackTraceBenchmark.java,finder implementation that might be used in a logging framework.,0,0,Pointer
3300,LongMathBenchmark.java,benchmarks for the non rounding methods of @code longmath .,1,0,Pointer
3301,LongMathBenchmark.java,@author louis wasserman,0,0,Pointer
3304,MapPutAllTester.java,a generic junit test which tests @code putall operations on a map.,1,0,Pointer
3307,MapPutAllTester.java,@author chris povirk,0,0,Pointer
3308,MapPutAllTester.java,@author kevin bourrillion,1,0,Pointer
3313,MapSerializationTester.java,basic serialization test for maps.,0,0,Pointer
3314,MapSerializationTester.java,@author louis wasserman,1,0,Pointer
3317,MultimapBuilder.java,a builder for a multimap implementation that allows customization of the backing map and value,0,0,Pointer
3318,MultimapBuilder.java,collection implementations used in a particular multimap.,1,0,Pointer
3319,MultimapBuilder.java,p this can be used to easily configure multimap data structure implementations not provided,0,0,Pointer
3320,MultimapBuilder.java,"explicitly in @code com^google.common^collect , for example",1,0,Pointer
3321,MultimapBuilder.java,pre @code,0,0,Pointer
3322,MultimapBuilder.java,"listmultimap string, integer treelistmultimap",1,0,Pointer
3323,MultimapBuilder.java,multimapbuilder^treekeys ^arraylistvalues ^build,0,0,Pointer
3324,MultimapBuilder.java,"setmultimap integer, myenum hashenummultimap",1,0,Pointer
3325,MultimapBuilder.java,multimapbuilder^hashkeys ^enumsetvalues myenum^class ^build,0,0,Pointer
3326,MultimapBuilder.java,pre,1,0,Pointer
3327,MultimapBuilder.java,p @code multimapbuilder instances are immutable.,0,0,Pointer
3328,MultimapBuilder.java,invoking a configuration method has no effect,1,0,Pointer
3329,MultimapBuilder.java,on the receiving instance you must store and use the new builder instance it returns instead.,0,0,Pointer
3330,MultimapBuilder.java,"p the generated multimaps are serializable if the key and value types are serializable, unless",1,0,Pointer
3331,MultimapBuilder.java,stated otherwise in one of the configuration methods.,0,0,Pointer
3332,MultimapBuilder.java,@author louis wasserman,1,0,Pointer
3333,MultimapBuilder.java,@param k0 an upper bound on the key type of the generated multimap.,0,0,Pointer
3334,MultimapBuilder.java,@param v0 an upper bound on the value type of the generated multimap.,1,0,Pointer
3335,MultimapBuilder.java,@since 160,0,0,Pointer
3336,MultimapBuilder.java,leaving k and v as upper bounds rather than the actual key and value types allows type,1,0,Pointer
3337,MultimapBuilder.java,parameters to be left implicit more often.,0,0,Pointer
3338,MultimapBuilder.java,cachebuilder uses the same technique.,1,0,Pointer
3339,MultimapBuilder.java,an intermediate stage in a @link multimapbuilder in which the key value collection map,0,0,Pointer
3340,MultimapBuilder.java,"implementation has been specified, but the value collection implementation has not.",1,0,Pointer
3341,MultimapBuilder.java,@param k0 the upper bound on the key type of the generated multimap.,0,0,Pointer
3342,MultimapBuilder.java,@since 160,1,0,Pointer
3343,MultimapBuilder.java,leaving k and v as upper bounds rather than the actual key and value types allows type,0,0,Pointer
3344,MultimapBuilder.java,parameters to be left implicit more often.,1,0,Pointer
3345,MultimapBuilder.java,cachebuilder uses the same technique.,0,0,Pointer
3346,MultimapBuilder.java,a specialization of @link multimapbuilder that generates @link listmultimap instances.,1,0,Pointer
3347,MultimapBuilder.java,@since 160,0,0,Pointer
3348,MultimapBuilder.java,leaving k and v as upper bounds rather than the actual key and value types allows type,1,0,Pointer
3349,MultimapBuilder.java,parameters to be left implicit more often.,0,0,Pointer
3350,MultimapBuilder.java,cachebuilder uses the same technique.,1,0,Pointer
3352,MultimapBuilder.java,@since 160,0,0,Pointer
3353,MultimapBuilder.java,leaving k and v as upper bounds rather than the actual key and value types allows type,1,0,Pointer
3354,MultimapBuilder.java,parameters to be left implicit more often.,0,0,Pointer
3355,MultimapBuilder.java,cachebuilder uses the same technique.,1,0,Pointer
3357,MultimapBuilder.java,@since 160,0,0,Pointer
3390,MultimapBuilderTest.java,tests for @link multimapbuilder .,1,0,Pointer
3391,MultimapBuilderTest.java,@author louis wasserman,0,0,Pointer
3394,NullsLastOrdering_CustomFieldSerializer.java,this class implements the gwt serialization of @link nullslastordering .,1,0,Pointer
3395,NullsLastOrdering_CustomFieldSerializer.java,@author chris povirk,0,0,Pointer
3398,ObjectCountHashMap.java,objectcounthashmap is an implementation of @code abstractobjectcountmap that uses arrays to,1,0,Pointer
3399,ObjectCountHashMap.java,store key objects and count values.,0,0,Pointer
3400,ObjectCountHashMap.java,comparing to using a traditional @code hashmap,1,0,Pointer
3401,ObjectCountHashMap.java,"implementation which stores keys and count values as map entries, @code objectcounthashmap",0,0,Pointer
3402,ObjectCountHashMap.java,minimizes object allocation and reduces memory footprint.,1,0,Pointer
3403,ObjectCountHashMap.java,"p in the absence of element deletions, this will iterate over elements in insertion order.",0,0,Pointer
3410,PeekingIterator.java,an iterator that supports a one element lookahead while iterating.,1,0,Pointer
3414,PeekingIterator.java,@author mick killianey,0,0,Pointer
3415,PeekingIterator.java,@since 20,1,0,Pointer
3422,Preconditions.java,static convenience methods that help a method or constructor check whether it was invoked,0,0,Pointer
3423,Preconditions.java,"correctly that is, whether its i preconditions i were met .",1,0,Pointer
3424,Preconditions.java,"p if the precondition is not met, the @code preconditions method throws an unchecked exception",0,0,Pointer
3425,Preconditions.java,"of a specified type, which helps the method in which the exception was thrown communicate that",1,0,Pointer
3426,Preconditions.java,its caller has made a mistake.,0,0,Pointer
3427,Preconditions.java,this allows constructs such as,1,0,Pointer
3428,Preconditions.java,pre @code,0,0,Pointer
3429,Preconditions.java,public static double sqrt double value,1,0,Pointer
3430,Preconditions.java,if value 0,0,0,Pointer
3431,Preconditions.java,throw new illegalargumentexception input is negative value,1,0,Pointer
3432,Preconditions.java,calculate square root,0,0,Pointer
3433,Preconditions.java,pre,1,0,Pointer
3434,Preconditions.java,p to be replaced with the more compact,0,0,Pointer
3435,Preconditions.java,pre @code,1,0,Pointer
3436,Preconditions.java,public static double sqrt double value,0,0,Pointer
3437,Preconditions.java,"checkargument value 0, input is negative %s , value",1,0,Pointer
3438,Preconditions.java,calculate square root,0,0,Pointer
3439,Preconditions.java,pre,1,0,Pointer
3440,Preconditions.java,"p so that a hypothetical bad caller of this method, such as",0,0,Pointer
3441,Preconditions.java,pre @code,1,0,Pointer
3442,Preconditions.java,void examplebadcaller,0,0,Pointer
3443,Preconditions.java,double d sqrt 10,1,0,Pointer
3444,Preconditions.java,pre,0,0,Pointer
3445,Preconditions.java,p would be flagged as having called @code sqrt with an illegal argument.,1,0,Pointer
3446,Preconditions.java,h3 performance h3,0,0,Pointer
3447,Preconditions.java,p avoid passing message arguments that are expensive to compute your code will always compute,1,0,Pointer
3448,Preconditions.java,"them, even though they usually won t be needed.",0,0,Pointer
3449,Preconditions.java,"if you have such arguments, use the conventional",1,0,Pointer
3450,Preconditions.java,if throw idiom instead.,0,0,Pointer
3451,Preconditions.java,"p depending on your message arguments, memory may be allocated for boxing and varargs array",1,0,Pointer
3452,Preconditions.java,creation.,0,0,Pointer
3453,Preconditions.java,"however, the methods of this class have a large number of overloads that prevent such",1,0,Pointer
3454,Preconditions.java,allocations in many common cases.,0,0,Pointer
3455,Preconditions.java,"p the message string is not formatted unless the exception will be thrown, so the cost of the",1,0,Pointer
3456,Preconditions.java,string formatting itself should not be a concern.,0,0,Pointer
3457,Preconditions.java,"p as with any performance concerns, you should consider profiling your code in a production",1,0,Pointer
3458,Preconditions.java,environment if possible before spending a lot of effort on tweaking a particular element.,0,0,Pointer
3459,Preconditions.java,h3 other types of preconditions h3,1,0,Pointer
3460,Preconditions.java,p not every type of precondition failure is supported by these methods.,0,0,Pointer
3461,Preconditions.java,continue to throw,1,0,Pointer
3462,Preconditions.java,standard jdk exceptions such as @link java^util.nosuchelementexception or @link,0,0,Pointer
3463,Preconditions.java,unsupportedoperationexception in the situations they are intended for.,1,0,Pointer
3464,Preconditions.java,h3 non preconditions h3,0,0,Pointer
3465,Preconditions.java,p it is of course possible to use the methods of this class to check for invalid conditions,1,0,Pointer
3466,Preconditions.java,which are i not the caller s fault i .,0,0,Pointer
3467,Preconditions.java,doing so is b not recommended b because it is,1,0,Pointer
3468,Preconditions.java,misleading to future readers of the code and of stack traces.,0,0,Pointer
3474,Preconditions.java,h3 @code java^util.objects^requirenonnull h3,1,0,Pointer
3475,Preconditions.java,p projects which use @code com^google.common should generally avoid the use of @link,0,0,Pointer
3476,Preconditions.java,java^util.objects#requirenonnull object .,1,0,Pointer
3477,Preconditions.java,"instead, use whichever of @link",0,0,Pointer
3478,Preconditions.java,#checknotnull object or @link verify#verifynotnull object is appropriate to the situation.,1,0,Pointer
3479,Preconditions.java,the same goes for the message accepting overloads.,0,0,Pointer
3480,Preconditions.java,h3 only @code %s is supported h3,1,0,Pointer
3481,Preconditions.java,p @code preconditions uses @link strings#lenientformat to format error message template,0,0,Pointer
3482,Preconditions.java,strings.,1,0,Pointer
3483,Preconditions.java,"this only supports the @code %s specifier, not the full range of @link",0,0,Pointer
3484,Preconditions.java,java^util.formatter specifiers.,1,0,Pointer
3485,Preconditions.java,"however, note that if the number of arguments does not match the",0,0,Pointer
3486,Preconditions.java,"number of occurrences of @code %s in the format string, @code preconditions will still",1,0,Pointer
3487,Preconditions.java,"behave as expected, and will still include all argument values in the error message the message",0,0,Pointer
3488,Preconditions.java,will simply not be formatted exactly as intended.,1,0,Pointer
3493,Preconditions.java,@author kevin bourrillion,0,0,Pointer
3494,Preconditions.java,@since 20,1,0,Pointer
3581,RegularImmutableList_CustomFieldSerializer.java,@author hayward chan,0,0,Pointer
3585,ReserializingTestCollectionGenerator.java,reserializes the sets created by another test set generator.,1,0,Pointer
3587,ReserializingTestCollectionGenerator.java,@author jesse wilson,0,0,Pointer
3590,Resources.java,provides utility methods for working with resources in the classpath.,1,0,Pointer
3594,Resources.java,p all method parameters must be non null unless documented otherwise.,0,0,Pointer
3595,Resources.java,@author chris nokleberg,1,0,Pointer
3596,Resources.java,@author ben yu,0,0,Pointer
3597,Resources.java,@author colin decker,1,0,Pointer
3598,Resources.java,@since 10,0,0,Pointer
3599,Resources.java,a byte source that reads from a url using @link url#openstream .,1,0,Pointer
3607,SmoothRateLimiter.java,"how is the ratelimiter designed, and why?",0,0,Pointer
3608,SmoothRateLimiter.java,"the primary feature of a ratelimiter is its stable rate , the maximum rate that is should",1,0,Pointer
3609,SmoothRateLimiter.java,allow at normal conditions.,0,0,Pointer
3610,SmoothRateLimiter.java,"this is enforced by throttling incoming requests as needed, ie",1,0,Pointer
3611,SmoothRateLimiter.java,"compute, for an incoming request, the appropriate throttle time, and make the calling thread",0,0,Pointer
3612,SmoothRateLimiter.java,wait as much.,1,0,Pointer
3613,SmoothRateLimiter.java,the simplest way to maintain a rate of qps is to keep the timestamp of the last granted,0,0,Pointer
3614,SmoothRateLimiter.java,"request, and ensure that 1 qps seconds have elapsed since then.",1,0,Pointer
3615,SmoothRateLimiter.java,"for example, for a rate of",0,0,Pointer
3616,SmoothRateLimiter.java,"qps 5 5 tokens per second , if we ensure that a request isn t granted earlier than 200ms after",1,0,Pointer
3617,SmoothRateLimiter.java,"the last one, then we achieve the intended rate.",0,0,Pointer
3618,SmoothRateLimiter.java,if a request comes and the last request was,1,0,Pointer
3619,SmoothRateLimiter.java,"granted only 100ms ago, then we wait for another 100ms.",0,0,Pointer
3620,SmoothRateLimiter.java,"at this rate, serving 15 fresh permits",1,0,Pointer
3621,SmoothRateLimiter.java,ie for an acquire 15 request naturally takes 3 seconds.,0,0,Pointer
3622,SmoothRateLimiter.java,it is important to realize that such a ratelimiter has a very superficial memory of the past,1,0,Pointer
3623,SmoothRateLimiter.java,it only remembers the last request.,0,0,Pointer
3624,SmoothRateLimiter.java,what if the ratelimiter was unused for a long period of,1,0,Pointer
3625,SmoothRateLimiter.java,"time, then a request arrived and was immediately granted?",0,0,Pointer
3626,SmoothRateLimiter.java,this ratelimiter would immediately,1,0,Pointer
3627,SmoothRateLimiter.java,forget about that past underutilization.,0,0,Pointer
3628,SmoothRateLimiter.java,this may result in either underutilization or,1,0,Pointer
3629,SmoothRateLimiter.java,"overflow, depending on the real world consequences of not using the expected rate.",0,0,Pointer
3630,SmoothRateLimiter.java,past underutilization could mean that excess resources are available.,1,0,Pointer
3631,SmoothRateLimiter.java,"then, the ratelimiter",0,0,Pointer
3632,SmoothRateLimiter.java,"should speed up for a while, to take advantage of these resources.",1,0,Pointer
3633,SmoothRateLimiter.java,this is important when the,0,0,Pointer
3634,SmoothRateLimiter.java,"rate is applied to networking limiting bandwidth , where past underutilization typically",1,0,Pointer
3635,SmoothRateLimiter.java,"translates to almost empty buffers , which can be filled immediately.",0,0,Pointer
3636,SmoothRateLimiter.java,"on the other hand, past underutilization could mean that the server responsible for handling",1,0,Pointer
3637,SmoothRateLimiter.java,"the request has become less ready for future requests , ie its caches become stale, and",0,0,Pointer
3638,SmoothRateLimiter.java,requests become more likely to trigger expensive operations a more extreme case of this,1,0,Pointer
3639,SmoothRateLimiter.java,"example is when a server has just booted, and it is mostly busy with getting itself up to",0,0,Pointer
3640,SmoothRateLimiter.java,speed .,1,0,Pointer
3641,SmoothRateLimiter.java,"to deal with such scenarios, we add an extra dimension, that of past underutilization ,",0,0,Pointer
3642,SmoothRateLimiter.java,modeled by storedpermits variable.,0,0,Pointer
3643,SmoothRateLimiter.java,"this variable is zero when there is no underutilization,",0,0,Pointer
3644,SmoothRateLimiter.java,"and it can grow up to maxstoredpermits, for sufficiently large underutilization.",0,0,Pointer
3645,SmoothRateLimiter.java,"so, the",0,0,Pointer
3646,SmoothRateLimiter.java,"requested permits, by an invocation acquire permits , are served from",0,0,Pointer
3647,SmoothRateLimiter.java,stored permits if available,0,0,Pointer
3648,SmoothRateLimiter.java,fresh permits for any remaining permits,0,0,Pointer
3649,SmoothRateLimiter.java,how this works is best explained with an example,0,0,Pointer
3650,SmoothRateLimiter.java,"for a ratelimiter that produces 1 token per second, every second that goes by with the",0,0,Pointer
3651,SmoothRateLimiter.java,"ratelimiter being unused, we increase storedpermits by 1.",0,0,Pointer
3652,SmoothRateLimiter.java,say we leave the ratelimiter unused,0,0,Pointer
3653,SmoothRateLimiter.java,"for 10 seconds ie, we expected a request at time x, but we are at time x 10 seconds before",0,0,Pointer
2630,AbstractCollectionTester.java,base class for collection testers.,0,0,Pointer
3654,SmoothRateLimiter.java,"a request actually arrives this is also related to the point made in the last paragraph , thus",0,0,Pointer
2631,AbstractCollectionTester.java,@param e the element type of the collection to be tested.,0,0,Pointer
3655,SmoothRateLimiter.java,storedpermits becomes 100 assuming maxstoredpermits 100 .,0,0,Pointer
2632,AbstractCollectionTester.java,@author kevin bourrillion,0,0,Pointer
3656,SmoothRateLimiter.java,"at that point, a request of",0,0,Pointer
3657,SmoothRateLimiter.java,acquire 3 arrives.,0,0,Pointer
3658,SmoothRateLimiter.java,"we serve this request out of storedpermits, and reduce that to 70 how",0,0,Pointer
3659,SmoothRateLimiter.java,this is translated to throttling time is discussed later .,0,0,Pointer
2636,AbstractListeningExecutorService.java,abstract @link listeningexecutorservice implementation that creates @link listenablefuture,0,0,Pointer
3660,SmoothRateLimiter.java,"immediately after, assume that an",0,0,Pointer
2637,AbstractListeningExecutorService.java,instances for each @link runnable and @link callable submitted to it.,0,0,Pointer
3661,SmoothRateLimiter.java,acquire 10 request arriving.,0,0,Pointer
2638,AbstractListeningExecutorService.java,these tasks are run,0,0,Pointer
3662,SmoothRateLimiter.java,"we serve the request partly from storedpermits, using all the",0,0,Pointer
2639,AbstractListeningExecutorService.java,with the abstract @link #execute execute runnable method.,0,0,Pointer
3663,SmoothRateLimiter.java,"remaining 70 permits, and the remaining 30, we serve them by fresh permits produced by the",0,0,Pointer
2640,AbstractListeningExecutorService.java,"p in addition to @link #execute , subclasses must implement all methods related to shutdown and",0,0,Pointer
3664,SmoothRateLimiter.java,rate limiter.,0,0,Pointer
2641,AbstractListeningExecutorService.java,termination.,0,0,Pointer
3665,SmoothRateLimiter.java,we already know how much time it takes to serve 3 fresh permits if the rate is,0,0,Pointer
2642,AbstractListeningExecutorService.java,@author chris povirk,0,0,Pointer
3666,SmoothRateLimiter.java,"1 token per second , then this will take 3 seconds.",0,0,Pointer
2643,AbstractListeningExecutorService.java,@since 140,0,0,Pointer
3667,SmoothRateLimiter.java,but what does it mean to serve 7 stored,0,0,Pointer
3668,SmoothRateLimiter.java,permits?,0,0,Pointer
3669,SmoothRateLimiter.java,"as explained above, there is no unique answer.",0,0,Pointer
3670,SmoothRateLimiter.java,if we are primarily interested to deal,0,0,Pointer
3671,SmoothRateLimiter.java,"with underutilization, then we want stored permits to be given out faster than fresh ones,",0,0,Pointer
3672,SmoothRateLimiter.java,because underutilization free resources for the taking.,0,0,Pointer
3673,SmoothRateLimiter.java,if we are primarily interested to,0,0,Pointer
3674,SmoothRateLimiter.java,"deal with overflow, then stored permits could be given out slower than fresh ones.",0,0,Pointer
3675,SmoothRateLimiter.java,"thus, we",0,0,Pointer
2652,AbstractLoadingCache.java,this class provides a skeletal implementation of the @code cache interface to minimize the,0,0,Pointer
3676,SmoothRateLimiter.java,require a different in each case function that translates storedpermits to throttling time.,0,0,Pointer
2653,AbstractLoadingCache.java,effort required to implement this interface.,0,0,Pointer
3677,SmoothRateLimiter.java,"this role is played by storedpermitstowaittime double storedpermits, double permitstotake .",0,0,Pointer
2654,AbstractLoadingCache.java,"p to implement a cache, the programmer needs only to extend this class and provide an",0,0,Pointer
3678,SmoothRateLimiter.java,the,0,0,Pointer
3679,SmoothRateLimiter.java,underlying model is a continuous function mapping storedpermits from 00 to maxstoredpermits,0,0,Pointer
2656,AbstractLoadingCache.java,@link,0,0,Pointer
3681,SmoothRateLimiter.java,storedpermits,0,0,Pointer
3682,SmoothRateLimiter.java,essentially measure unused time we spend unused time buying storing permits.,0,0,Pointer
3683,SmoothRateLimiter.java,rate is,0,0,Pointer
3684,SmoothRateLimiter.java,"permits time , thus 1 rate time permits .",0,0,Pointer
3685,SmoothRateLimiter.java,"thus, 1 rate time permits times",0,0,Pointer
2662,AbstractLoadingCache.java,all other methods throw,0,0,Pointer
2664,AbstractLoadingCache.java,@author charles fry,0,0,Pointer
3688,SmoothRateLimiter.java,of requested permits.,0,0,Pointer
2665,AbstractLoadingCache.java,@since 110,0,0,Pointer
3697,SmoothRateLimiter.java,this guarantees that we handle,0,0,Pointer
3701,SmoothRateLimiter.java,integrals .,0,0,Pointer
3704,SmoothRateLimiter.java,cost as fresh ones 1 qps is the cost for each .,0,0,Pointer
2681,AbstractMultimap.java,"a skeleton @code multimap implementation, not necessarily in terms of a @code map .",0,0,Pointer
2682,AbstractMultimap.java,@author louis wasserman,0,0,Pointer
2685,AbstractMultimapTester.java,superclass for all @code multimap testers.,0,0,Pointer
3709,SmoothRateLimiter.java,underutilization.,0,0,Pointer
2686,AbstractMultimapTester.java,@author louis wasserman,0,0,Pointer
2689,AbstractSortedKeySortedSetMultimap.java,basic implementation of a @link sortedsetmultimap with a sorted key set.,0,0,Pointer
3713,SmoothRateLimiter.java,"last, but not least consider a ratelimiter with rate of 1 permit per second, currently",0,0,Pointer
2690,AbstractSortedKeySortedSetMultimap.java,p this superclass allows @code treemultimap to override methods to return navigable set and,0,0,Pointer
3714,SmoothRateLimiter.java,"completely unused, and an expensive acquire 100 request comes.",0,0,Pointer
2691,AbstractSortedKeySortedSetMultimap.java,"map types in non gwt only, while gwt code will inherit the sortedmap sortedset overrides.",0,0,Pointer
3715,SmoothRateLimiter.java,it would be nonsensical to just,0,0,Pointer
2692,AbstractSortedKeySortedSetMultimap.java,@author louis wasserman,0,0,Pointer
3717,SmoothRateLimiter.java,why wait without doing anything?,0,0,Pointer
3718,SmoothRateLimiter.java,a much,0,0,Pointer
3720,SmoothRateLimiter.java,"instead , and postpone subsequent requests as needed.",0,0,Pointer
2697,ArbitraryInstances.java,"supplies an arbitrary default instance for a wide range of types, often useful in testing",0,0,Pointer
2698,ArbitraryInstances.java,utilities.,0,0,Pointer
3722,SmoothRateLimiter.java,"task immediately, and postpone by 100 seconds future requests, thus we allow for work to get",0,0,Pointer
2699,ArbitraryInstances.java,"p covers arrays, enums and common types defined in @code java^lang , @code java^lang.reflect ,",0,0,Pointer
2700,ArbitraryInstances.java,"@code java^io , @code java^nio , @code java^math , @code java^util , @code",0,0,Pointer
3724,SmoothRateLimiter.java,this has important consequences it means that the ratelimiter doesn t remember the time of the,0,0,Pointer
2701,ArbitraryInstances.java,"java^util.concurrent , @code java^util.regex , @code com^google.common^base , @code",0,0,Pointer
3725,SmoothRateLimiter.java,"last request, but it remembers the expected time of the next request.",0,0,Pointer
2702,ArbitraryInstances.java,com^google.common^collect and @code com^google.common^primitives .,0,0,Pointer
3726,SmoothRateLimiter.java,this also enables,0,0,Pointer
2703,ArbitraryInstances.java,"in addition, if the type",0,0,Pointer
3727,SmoothRateLimiter.java,us to tell immediately see tryacquire timeout whether a particular timeout is enough to get,0,0,Pointer
2704,ArbitraryInstances.java,"exposes at least one public static final constant of the same type, one of the constants will be",0,0,Pointer
3728,SmoothRateLimiter.java,"us to the point of the next scheduling time, since we always maintain that.",0,0,Pointer
2705,ArbitraryInstances.java,used or if the class exposes a public parameter less constructor then it will be new d and,0,0,Pointer
3729,SmoothRateLimiter.java,and what we mean by,0,0,Pointer
2706,ArbitraryInstances.java,returned.,0,0,Pointer
3730,SmoothRateLimiter.java,an unused ratelimiter is also defined by that notion when we observe that the,0,0,Pointer
3731,SmoothRateLimiter.java,"expected arrival time of the next request is actually in the past, then the difference now",0,0,Pointer
2708,ArbitraryInstances.java,clients won t get type,0,0,Pointer
3732,SmoothRateLimiter.java,"past is the amount of time that the ratelimiter was formally unused, and it is that amount of",0,0,Pointer
2709,ArbitraryInstances.java,"errors for using @code get comparator^class as a @code comparator foo , for example.",0,0,Pointer
3733,SmoothRateLimiter.java,time which we translate to storedpermits.,0,0,Pointer
2710,ArbitraryInstances.java,immutable empty instances are returned for collection types @code for string @code 0 for,0,0,Pointer
3734,SmoothRateLimiter.java,we increase storedpermits with the amount of permits,0,0,Pointer
2711,ArbitraryInstances.java,number types reasonable default instance for other stateless types.,0,0,Pointer
3735,SmoothRateLimiter.java,that would have been produced in that idle time .,0,0,Pointer
2712,ArbitraryInstances.java,"for mutable types, a fresh",0,0,Pointer
3736,SmoothRateLimiter.java,"so, if rate 1 permit per second, and",0,0,Pointer
2713,ArbitraryInstances.java,instance is created each time @code get is called.,0,0,Pointer
3737,SmoothRateLimiter.java,"arrivals come exactly one second after the previous, then storedpermits is never increased",0,0,Pointer
2714,ArbitraryInstances.java,@author kevin bourrillion,0,0,Pointer
3738,SmoothRateLimiter.java,we would only increase it for arrivals later than the expected one second.,0,0,Pointer
2715,ArbitraryInstances.java,@author ben yu,0,0,Pointer
3739,SmoothRateLimiter.java,the time when the next request no matter its size will be granted.,0,0,Pointer
2716,ArbitraryInstances.java,@since 120,0,0,Pointer
3740,SmoothRateLimiter.java,"after granting a request,",0,0,Pointer
3741,SmoothRateLimiter.java,this is pushed further in the future.,0,0,Pointer
3742,SmoothRateLimiter.java,large requests push this further than small requests.,0,0,Pointer
3743,SmoothRateLimiter.java,this implements the following function where coldinterval coldfactor stableinterval.,0,0,Pointer
3744,SmoothRateLimiter.java,pre,0,0,Pointer
3745,SmoothRateLimiter.java,^ throttling,0,0,Pointer
3746,SmoothRateLimiter.java,cold,0,0,Pointer
3747,SmoothRateLimiter.java,interval .,0,0,Pointer
3748,SmoothRateLimiter.java,warmup period is the area of the trapezoid between,0,0,Pointer
3749,SmoothRateLimiter.java,thresholdpermits and maxpermits,0,0,Pointer
3750,SmoothRateLimiter.java,stable warm .,0,0,Pointer
3751,SmoothRateLimiter.java,interval .,0,0,Pointer
3752,SmoothRateLimiter.java,up .,0,0,Pointer
3753,SmoothRateLimiter.java,period.,0,0,Pointer
3754,SmoothRateLimiter.java,0 storedpermits,0,0,Pointer
3755,SmoothRateLimiter.java,0 thresholdpermits maxpermits,0,0,Pointer
3756,SmoothRateLimiter.java,pre,0,0,Pointer
3757,SmoothRateLimiter.java,"before going into the details of this particular function, let s keep in mind the basics",0,0,Pointer
3758,SmoothRateLimiter.java,ol,0,0,Pointer
3759,SmoothRateLimiter.java,li the state of the ratelimiter storedpermits is a vertical line in this figure.,0,0,Pointer
3760,SmoothRateLimiter.java,"li when the ratelimiter is not used, this goes right up to maxpermits",0,0,Pointer
3761,SmoothRateLimiter.java,"li when the ratelimiter is used, this goes left down to zero , since if we have",0,0,Pointer
3762,SmoothRateLimiter.java,"storedpermits, we serve from those first",0,0,Pointer
3763,SmoothRateLimiter.java,"li when unused , we go right at a constant rate!",0,0,Pointer
3764,SmoothRateLimiter.java,the rate at which we move to the right is,0,0,Pointer
3766,SmoothRateLimiter.java,this ensures that the time it takes to go from 0 to,0,0,Pointer
3768,SmoothRateLimiter.java,"li when used , the time it takes, as explained in the introductory class note, is equal to",0,0,Pointer
3769,SmoothRateLimiter.java,"the integral of our function, between x permits and x k permits, assuming we want to",0,0,Pointer
2746,ArrayListMultimapGwtSerializationDependencies.java,a dummy superclass to support gwt serialization of the element types of an @link,0,0,Pointer
3770,SmoothRateLimiter.java,spend k saved permits.,0,0,Pointer
2747,ArrayListMultimapGwtSerializationDependencies.java,arraylistmultimap .,0,0,Pointer
3771,SmoothRateLimiter.java,ol,0,0,Pointer
2748,ArrayListMultimapGwtSerializationDependencies.java,the gwt supersource for this class contains a field for each type.,0,0,Pointer
3772,SmoothRateLimiter.java,"p in summary, the time it takes to move to the left spend k permits , is equal to the area of",0,0,Pointer
3773,SmoothRateLimiter.java,the function of width k.,0,0,Pointer
3774,SmoothRateLimiter.java,"p assuming we have saturated demand, the time to go from maxpermits to thresholdpermits is",0,0,Pointer
3775,SmoothRateLimiter.java,equal to warmupperiod.,0,0,Pointer
3776,SmoothRateLimiter.java,and the time to go from thresholdpermits to 0 is warmupperiod 2.,0,0,Pointer
3777,SmoothRateLimiter.java,the,0,0,Pointer
3778,SmoothRateLimiter.java,reason that this is warmupperiod 2 is to maintain the behavior of the original implementation,0,0,Pointer
3779,SmoothRateLimiter.java,where coldfactor was hard coded as 3.,0,0,Pointer
3780,SmoothRateLimiter.java,p it remains to calculate thresholdspermits and maxpermits.,0,0,Pointer
3782,SmoothRateLimiter.java,li the time to go from thresholdpermits to 0 is equal to the integral of the function,0,0,Pointer
3783,SmoothRateLimiter.java,between 0 and thresholdpermits.,0,0,Pointer
2760,AtomicDoubleArrayTest.java,unit test for @link atomicdoublearray .,0,0,Pointer
3784,SmoothRateLimiter.java,this is thresholdpermits stableintervals.,0,0,Pointer
3787,SmoothRateLimiter.java,therefore,0,0,Pointer
2765,BaseEncodingBenchmark.java,benchmark for @code baseencoding performance.,0,0,Pointer
3789,SmoothRateLimiter.java,thresholdpermits 05 warmupperiod stableinterval,0,0,Pointer
2767,BloomFilter.java,a bloom filter for instances of @code t .,0,0,Pointer
3791,SmoothRateLimiter.java,li the time to go from maxpermits to thresholdpermits is equal to the integral of the,0,0,Pointer
2768,BloomFilter.java,a bloom filter offers an approximate containment test,0,0,Pointer
3792,SmoothRateLimiter.java,function between thresholdpermits and maxpermits.,0,0,Pointer
2769,BloomFilter.java,"with one sided error if it claims that an element is contained in it, this might be in error,",0,0,Pointer
3793,SmoothRateLimiter.java,this is the area of the pictured,0,0,Pointer
2770,BloomFilter.java,"but if it claims that an element is i not i contained in it, then this is definitely true.",0,0,Pointer
3794,SmoothRateLimiter.java,"trapezoid, and it is equal to 05 stableinterval coldinterval maxpermits",0,0,Pointer
3795,SmoothRateLimiter.java,thresholdpermits .,0,0,Pointer
3798,SmoothRateLimiter.java,maxpermits thresholdpermits 2 warmupperiod stableinterval coldinterval,0,0,Pointer
3801,SmoothRateLimiter.java,"how is the ratelimiter designed, and why?",0,0,Pointer
3802,SmoothRateLimiter.java,"the primary feature of a ratelimiter is its stable rate , the maximum rate that is should",0,0,Pointer
3803,SmoothRateLimiter.java,allow at normal conditions.,0,0,Pointer
2780,BloomFilter.java,both serialized forms will continue to be,0,0,Pointer
3804,SmoothRateLimiter.java,"this is enforced by throttling incoming requests as needed, ie",0,0,Pointer
2781,BloomFilter.java,supported by future versions of this library.,0,0,Pointer
3805,SmoothRateLimiter.java,"compute, for an incoming request, the appropriate throttle time, and make the calling thread",0,0,Pointer
2782,BloomFilter.java,"however, serial forms generated by newer versions",0,0,Pointer
3806,SmoothRateLimiter.java,wait as much.,0,0,Pointer
2783,BloomFilter.java,"of the code may not be readable by older versions of the code eg, a serialized bloom filter",0,0,Pointer
3807,SmoothRateLimiter.java,the simplest way to maintain a rate of qps is to keep the timestamp of the last granted,0,0,Pointer
2784,BloomFilter.java,generated today may i not i be readable by a binary that was compiled 6 months ago .,0,0,Pointer
3808,SmoothRateLimiter.java,"request, and ensure that 1 qps seconds have elapsed since then.",0,0,Pointer
2785,BloomFilter.java,"p as of guava 230, this class is thread safe and lock free.",0,0,Pointer
3809,SmoothRateLimiter.java,"for example, for a rate of",0,0,Pointer
2786,BloomFilter.java,it internally uses atomics and,0,0,Pointer
3810,SmoothRateLimiter.java,"qps 5 5 tokens per second , if we ensure that a request isn t granted earlier than 200ms after",0,0,Pointer
2787,BloomFilter.java,compare and swap to ensure correctness when multiple threads are used to access it.,0,0,Pointer
3811,SmoothRateLimiter.java,"the last one, then we achieve the intended rate.",0,0,Pointer
2788,BloomFilter.java,@param t the type of instances that the @code bloomfilter accepts,0,0,Pointer
3812,SmoothRateLimiter.java,if a request comes and the last request was,0,0,Pointer
2789,BloomFilter.java,@author dimitris andreou,0,0,Pointer
3813,SmoothRateLimiter.java,"granted only 100ms ago, then we wait for another 100ms.",0,0,Pointer
2790,BloomFilter.java,@author kevin bourrillion,0,0,Pointer
3814,SmoothRateLimiter.java,"at this rate, serving 15 fresh permits",0,0,Pointer
2791,BloomFilter.java,@since 110 thread safe since 230,0,0,Pointer
3815,SmoothRateLimiter.java,ie for an acquire 15 request naturally takes 3 seconds.,0,0,Pointer
2792,BloomFilter.java,"cheat sheet m total bits n expected insertions b m n, bits per insertion p expected false positive probability 1 optimal k b ln2 2 p 1 e ^ kn m ^k 3 for optimal k p 2 ^ k 06185^b 4 for optimal k m nlnp ln2 ^ 2",0,0,Pointer
3816,SmoothRateLimiter.java,it is important to realize that such a ratelimiter has a very superficial memory of the past,0,0,Pointer
2793,BloomFilter.java,"a strategy to translate t instances, to @code numhashfunctions bit indexes.",0,0,Pointer
3817,SmoothRateLimiter.java,it only remembers the last request.,0,0,Pointer
2794,BloomFilter.java,p implementations should be collections of pure functions ie stateless .,0,0,Pointer
3818,SmoothRateLimiter.java,what if the ratelimiter was unused for a long period of,0,0,Pointer
3819,SmoothRateLimiter.java,"time, then a request arrived and was immediately granted?",0,0,Pointer
3820,SmoothRateLimiter.java,this ratelimiter would immediately,0,0,Pointer
3821,SmoothRateLimiter.java,forget about that past underutilization.,0,0,Pointer
3822,SmoothRateLimiter.java,this may result in either underutilization or,0,0,Pointer
3823,SmoothRateLimiter.java,"overflow, depending on the real world consequences of not using the expected rate.",0,0,Pointer
3824,SmoothRateLimiter.java,past underutilization could mean that excess resources are available.,0,0,Pointer
3825,SmoothRateLimiter.java,"then, the ratelimiter",0,0,Pointer
3826,SmoothRateLimiter.java,"should speed up for a while, to take advantage of these resources.",0,0,Pointer
3827,SmoothRateLimiter.java,this is important when the,0,0,Pointer
3828,SmoothRateLimiter.java,"rate is applied to networking limiting bandwidth , where past underutilization typically",0,0,Pointer
3829,SmoothRateLimiter.java,"translates to almost empty buffers , which can be filled immediately.",0,0,Pointer
3830,SmoothRateLimiter.java,"on the other hand, past underutilization could mean that the server responsible for handling",0,0,Pointer
3831,SmoothRateLimiter.java,"the request has become less ready for future requests , ie its caches become stale, and",0,0,Pointer
3832,SmoothRateLimiter.java,requests become more likely to trigger expensive operations a more extreme case of this,0,0,Pointer
3833,SmoothRateLimiter.java,"example is when a server has just booted, and it is mostly busy with getting itself up to",0,0,Pointer
3834,SmoothRateLimiter.java,speed .,0,0,Pointer
3835,SmoothRateLimiter.java,"to deal with such scenarios, we add an extra dimension, that of past underutilization ,",0,0,Pointer
3836,SmoothRateLimiter.java,modeled by storedpermits variable.,0,0,Pointer
3837,SmoothRateLimiter.java,"this variable is zero when there is no underutilization,",0,0,Pointer
3838,SmoothRateLimiter.java,"and it can grow up to maxstoredpermits, for sufficiently large underutilization.",0,0,Pointer
3839,SmoothRateLimiter.java,"so, the",0,0,Pointer
3840,SmoothRateLimiter.java,"requested permits, by an invocation acquire permits , are served from",0,0,Pointer
3841,SmoothRateLimiter.java,stored permits if available,0,0,Pointer
3842,SmoothRateLimiter.java,fresh permits for any remaining permits,0,0,Pointer
3843,SmoothRateLimiter.java,how this works is best explained with an example,0,0,Pointer
3844,SmoothRateLimiter.java,"for a ratelimiter that produces 1 token per second, every second that goes by with the",0,0,Pointer
3845,SmoothRateLimiter.java,"ratelimiter being unused, we increase storedpermits by 1.",0,0,Pointer
3846,SmoothRateLimiter.java,say we leave the ratelimiter unused,0,0,Pointer
3847,SmoothRateLimiter.java,"for 10 seconds ie, we expected a request at time x, but we are at time x 10 seconds before",0,0,Pointer
3848,SmoothRateLimiter.java,"a request actually arrives this is also related to the point made in the last paragraph , thus",0,0,Pointer
3849,SmoothRateLimiter.java,storedpermits becomes 100 assuming maxstoredpermits 100 .,0,0,Pointer
3850,SmoothRateLimiter.java,"at that point, a request of",0,0,Pointer
3851,SmoothRateLimiter.java,acquire 3 arrives.,0,0,Pointer
3852,SmoothRateLimiter.java,"we serve this request out of storedpermits, and reduce that to 70 how",0,0,Pointer
3853,SmoothRateLimiter.java,this is translated to throttling time is discussed later .,0,0,Pointer
3854,SmoothRateLimiter.java,"immediately after, assume that an",0,0,Pointer
3855,SmoothRateLimiter.java,acquire 10 request arriving.,0,0,Pointer
2832,CacheBuilder.java,a builder of @link loadingcache and @link cache instances having any combination of the,0,0,Pointer
3856,SmoothRateLimiter.java,"we serve the request partly from storedpermits, using all the",0,0,Pointer
2833,CacheBuilder.java,following features,0,0,Pointer
3857,SmoothRateLimiter.java,"remaining 70 permits, and the remaining 30, we serve them by fresh permits produced by the",0,0,Pointer
2834,CacheBuilder.java,ul,0,0,Pointer
3858,SmoothRateLimiter.java,rate limiter.,0,0,Pointer
2835,CacheBuilder.java,li automatic loading of entries into the cache,0,0,Pointer
3859,SmoothRateLimiter.java,we already know how much time it takes to serve 3 fresh permits if the rate is,0,0,Pointer
2836,CacheBuilder.java,li least recently used eviction when a maximum size is exceeded,0,0,Pointer
3860,SmoothRateLimiter.java,"1 token per second , then this will take 3 seconds.",0,0,Pointer
2837,CacheBuilder.java,"li time based expiration of entries, measured since last access or last write",0,0,Pointer
3861,SmoothRateLimiter.java,but what does it mean to serve 7 stored,0,0,Pointer
2838,CacheBuilder.java,li keys automatically wrapped in @linkplain weakreference weak references,0,0,Pointer
3862,SmoothRateLimiter.java,permits?,0,0,Pointer
2839,CacheBuilder.java,li values automatically wrapped in @linkplain weakreference weak or @linkplain,0,0,Pointer
3863,SmoothRateLimiter.java,"as explained above, there is no unique answer.",0,0,Pointer
2840,CacheBuilder.java,softreference soft references,0,0,Pointer
3864,SmoothRateLimiter.java,if we are primarily interested to deal,0,0,Pointer
2841,CacheBuilder.java,li notification of evicted or otherwise removed entries,0,0,Pointer
3865,SmoothRateLimiter.java,"with underutilization, then we want stored permits to be given out faster than fresh ones,",0,0,Pointer
3866,SmoothRateLimiter.java,because underutilization free resources for the taking.,0,0,Pointer
2843,CacheBuilder.java,ul,0,0,Pointer
3867,SmoothRateLimiter.java,if we are primarily interested to,0,0,Pointer
2844,CacheBuilder.java,p these features are all optional caches can be created using all or none of them.,0,0,Pointer
3868,SmoothRateLimiter.java,"deal with overflow, then stored permits could be given out slower than fresh ones.",0,0,Pointer
2845,CacheBuilder.java,by default,0,0,Pointer
3869,SmoothRateLimiter.java,"thus, we",0,0,Pointer
2846,CacheBuilder.java,cache instances created by @code cachebuilder will not perform any type of eviction.,0,0,Pointer
3870,SmoothRateLimiter.java,require a different in each case function that translates storedpermits to throttling time.,0,0,Pointer
2847,CacheBuilder.java,p usage example,0,0,Pointer
3871,SmoothRateLimiter.java,"this role is played by storedpermitstowaittime double storedpermits, double permitstotake .",0,0,Pointer
2848,CacheBuilder.java,pre @code,0,0,Pointer
3872,SmoothRateLimiter.java,the,0,0,Pointer
2849,CacheBuilder.java,"loadingcache key, graph graphs cachebuilder^newbuilder",0,0,Pointer
3873,SmoothRateLimiter.java,underlying model is a continuous function mapping storedpermits from 00 to maxstoredpermits,0,0,Pointer
2850,CacheBuilder.java,maximumsize 10000,0,0,Pointer
2851,CacheBuilder.java,expireafterwrite duration^ofminutes 10,0,0,Pointer
3875,SmoothRateLimiter.java,storedpermits,0,0,Pointer
2852,CacheBuilder.java,removallistener my listener,0,0,Pointer
3876,SmoothRateLimiter.java,essentially measure unused time we spend unused time buying storing permits.,0,0,Pointer
2853,CacheBuilder.java,build,0,0,Pointer
3877,SmoothRateLimiter.java,rate is,0,0,Pointer
2854,CacheBuilder.java,"new cacheloader key, graph",0,0,Pointer
3878,SmoothRateLimiter.java,"permits time , thus 1 rate time permits .",0,0,Pointer
2855,CacheBuilder.java,public graph load key key throws anyexception,0,0,Pointer
3879,SmoothRateLimiter.java,"thus, 1 rate time permits times",0,0,Pointer
2856,CacheBuilder.java,return createexpensivegraph key,0,0,Pointer
2857,CacheBuilder.java,pre,0,0,Pointer
2858,CacheBuilder.java,"p or equivalently,",0,0,Pointer
3882,SmoothRateLimiter.java,of requested permits.,0,0,Pointer
2859,CacheBuilder.java,pre @code,0,0,Pointer
2860,CacheBuilder.java,in real life this would come from a command line flag or config file,0,0,Pointer
2863,CacheBuilder.java,removallistener my listener,0,0,Pointer
2864,CacheBuilder.java,build,0,0,Pointer
2865,CacheBuilder.java,"new cacheloader key, graph",0,0,Pointer
2866,CacheBuilder.java,public graph load key key throws anyexception,0,0,Pointer
2867,CacheBuilder.java,return createexpensivegraph key,0,0,Pointer
3891,SmoothRateLimiter.java,this guarantees that we handle,0,0,Pointer
2868,CacheBuilder.java,pre,0,0,Pointer
2869,CacheBuilder.java,p the returned cache is implemented as a hash table with similar performance characteristics to,0,0,Pointer
2870,CacheBuilder.java,@link concurrenthashmap .,0,0,Pointer
2871,CacheBuilder.java,it implements all optional operations of the @link loadingcache and,0,0,Pointer
3895,SmoothRateLimiter.java,integrals .,0,0,Pointer
2872,CacheBuilder.java,@link cache interfaces.,0,0,Pointer
2873,CacheBuilder.java,the @code asmap view and its collection views have i weakly,0,0,Pointer
2874,CacheBuilder.java,consistent iterators i .,0,0,Pointer
3898,SmoothRateLimiter.java,cost as fresh ones 1 qps is the cost for each .,0,0,Pointer
2875,CacheBuilder.java,"this means that they are safe for concurrent use, but if other threads",0,0,Pointer
2876,CacheBuilder.java,"modify the cache after the iterator is created, it is undefined which of these changes, if any,",0,0,Pointer
2877,CacheBuilder.java,are reflected in that iterator.,0,0,Pointer
3903,SmoothRateLimiter.java,underutilization.,0,0,Pointer
2880,CacheBuilder.java,"p b note b by default, the returned cache uses equality comparisons the @link",0,0,Pointer
2881,CacheBuilder.java,object#equals equals method to determine equality for keys or values.,0,0,Pointer
2882,CacheBuilder.java,"however, if @link",0,0,Pointer
2883,CacheBuilder.java,"#weakkeys was specified, the cache uses identity @code comparisons instead for keys.",0,0,Pointer
3907,SmoothRateLimiter.java,"last, but not least consider a ratelimiter with rate of 1 permit per second, currently",0,0,Pointer
2884,CacheBuilder.java,"likewise, if @link #weakvalues or @link #softvalues was specified, the cache uses identity",0,0,Pointer
3908,SmoothRateLimiter.java,"completely unused, and an expensive acquire 100 request comes.",0,0,Pointer
2885,CacheBuilder.java,comparisons for values.,0,0,Pointer
3909,SmoothRateLimiter.java,it would be nonsensical to just,0,0,Pointer
2886,CacheBuilder.java,p entries are automatically evicted from the cache when any of @linkplain #maximumsize long,0,0,Pointer
2887,CacheBuilder.java,"maximumsize , @linkplain #maximumweight long maximumweight , @linkplain #expireafterwrite",0,0,Pointer
3911,SmoothRateLimiter.java,why wait without doing anything?,0,0,Pointer
2888,CacheBuilder.java,"expireafterwrite , @linkplain #expireafteraccess expireafteraccess , @linkplain #weakkeys",0,0,Pointer
3912,SmoothRateLimiter.java,a much,0,0,Pointer
2889,CacheBuilder.java,"weakkeys , @linkplain #weakvalues weakvalues , or @linkplain #softvalues softvalues are",0,0,Pointer
2890,CacheBuilder.java,requested.,0,0,Pointer
3914,SmoothRateLimiter.java,"instead , and postpone subsequent requests as needed.",0,0,Pointer
2891,CacheBuilder.java,p if @linkplain #maximumsize long maximumsize or @linkplain #maximumweight long,0,0,Pointer
2892,CacheBuilder.java,maximumweight is requested entries may be evicted on each cache modification.,0,0,Pointer
3916,SmoothRateLimiter.java,"task immediately, and postpone by 100 seconds future requests, thus we allow for work to get",0,0,Pointer
2893,CacheBuilder.java,p if @linkplain #expireafterwrite expireafterwrite or @linkplain #expireafteraccess,0,0,Pointer
2894,CacheBuilder.java,"expireafteraccess is requested entries may be evicted on each cache modification, on occasional",0,0,Pointer
3918,SmoothRateLimiter.java,this has important consequences it means that the ratelimiter doesn t remember the time of the,0,0,Pointer
2895,CacheBuilder.java,"cache accesses, or on calls to @link cache#cleanup .",0,0,Pointer
3919,SmoothRateLimiter.java,"last request, but it remembers the expected time of the next request.",0,0,Pointer
2896,CacheBuilder.java,expired entries may be counted by @link,0,0,Pointer
3920,SmoothRateLimiter.java,this also enables,0,0,Pointer
2897,CacheBuilder.java,"cache#size , but will never be visible to read or write operations.",0,0,Pointer
3921,SmoothRateLimiter.java,us to tell immediately see tryacquire timeout whether a particular timeout is enough to get,0,0,Pointer
2898,CacheBuilder.java,"p if @linkplain #weakkeys weakkeys , @linkplain #weakvalues weakvalues , or @linkplain",0,0,Pointer
3922,SmoothRateLimiter.java,"us to the point of the next scheduling time, since we always maintain that.",0,0,Pointer
3923,SmoothRateLimiter.java,and what we mean by,0,0,Pointer
2900,CacheBuilder.java,be reclaimed by the garbage collector.,0,0,Pointer
3924,SmoothRateLimiter.java,an unused ratelimiter is also defined by that notion when we observe that the,0,0,Pointer
2901,CacheBuilder.java,entries with reclaimed keys or values may be removed from,0,0,Pointer
3925,SmoothRateLimiter.java,"expected arrival time of the next request is actually in the past, then the difference now",0,0,Pointer
2902,CacheBuilder.java,"the cache on each cache modification, on occasional cache accesses, or on calls to @link",0,0,Pointer
3926,SmoothRateLimiter.java,"past is the amount of time that the ratelimiter was formally unused, and it is that amount of",0,0,Pointer
2903,CacheBuilder.java,"cache#cleanup such entries may be counted in @link cache#size , but will never be visible to",0,0,Pointer
3927,SmoothRateLimiter.java,time which we translate to storedpermits.,0,0,Pointer
2904,CacheBuilder.java,read or write operations.,0,0,Pointer
3928,SmoothRateLimiter.java,we increase storedpermits with the amount of permits,0,0,Pointer
2905,CacheBuilder.java,p certain cache configurations will result in the accrual of periodic maintenance tasks which,0,0,Pointer
3929,SmoothRateLimiter.java,that would have been produced in that idle time .,0,0,Pointer
2906,CacheBuilder.java,"will be performed during write operations, or during occasional read operations in the absence of",0,0,Pointer
3930,SmoothRateLimiter.java,"so, if rate 1 permit per second, and",0,0,Pointer
2907,CacheBuilder.java,writes.,0,0,Pointer
3931,SmoothRateLimiter.java,"arrivals come exactly one second after the previous, then storedpermits is never increased",0,0,Pointer
2908,CacheBuilder.java,"the @link cache#cleanup method of the returned cache will also perform maintenance, but",0,0,Pointer
3932,SmoothRateLimiter.java,we would only increase it for arrivals later than the expected one second.,0,0,Pointer
2909,CacheBuilder.java,calling it should not be necessary with a high throughput cache.,0,0,Pointer
3933,SmoothRateLimiter.java,the time when the next request no matter its size will be granted.,0,0,Pointer
2910,CacheBuilder.java,only caches built with,0,0,Pointer
3934,SmoothRateLimiter.java,"after granting a request,",0,0,Pointer
2911,CacheBuilder.java,"@linkplain #removallistener removallistener , @linkplain #expireafterwrite expireafterwrite ,",0,0,Pointer
3935,SmoothRateLimiter.java,this is pushed further in the future.,0,0,Pointer
2912,CacheBuilder.java,"@linkplain #expireafteraccess expireafteraccess , @linkplain #weakkeys weakkeys , @linkplain",0,0,Pointer
3936,SmoothRateLimiter.java,large requests push this further than small requests.,0,0,Pointer
2913,CacheBuilder.java,"#weakvalues weakvalues , or @linkplain #softvalues softvalues perform periodic maintenance.",0,0,Pointer
3937,SmoothRateLimiter.java,"this implements a bursty ratelimiter, where storedpermits are translated to zero throttling.",0,0,Pointer
3938,SmoothRateLimiter.java,the maximum number of permits that can be saved when the ratelimiter is unused is defined in,0,0,Pointer
2915,CacheBuilder.java,retain all the configuration properties of the original cache.,0,0,Pointer
3939,SmoothRateLimiter.java,"terms of time, in this sense if a ratelimiter is 2qps, and this time is specified as 10",0,0,Pointer
2916,CacheBuilder.java,note that the serialized form does,0,0,Pointer
3940,SmoothRateLimiter.java,"seconds, we can save up to 2 10 20 permits.",0,0,Pointer
2917,CacheBuilder.java,"i not i include cache contents, but only configuration.",0,0,Pointer
2922,CacheBuilder.java,this is,0,0,Pointer
2923,CacheBuilder.java,normally @code object unless it is constrained by using a method like @code,0,0,Pointer
2924,CacheBuilder.java,#removallistener,0,0,Pointer
2926,CacheBuilder.java,this is,0,0,Pointer
2927,CacheBuilder.java,normally @code object unless it is constrained by using a method like @code,0,0,Pointer
2928,CacheBuilder.java,#removallistener,0,0,Pointer
2929,CacheBuilder.java,@author charles fry,0,0,Pointer
2930,CacheBuilder.java,@author kevin bourrillion,0,0,Pointer
2931,CacheBuilder.java,@since 100,0,0,Pointer
3040,CacheLoaderTest.java,unit tests for @link cacheloader .,0,0,Pointer
3041,CacheLoaderTest.java,@author charles fry,0,0,Pointer
3044,CacheManualTest.java,@author charles fry,0,0,Pointer
3046,ClassToInstanceMap.java,"a map, each entry of which maps a java a href http tinyurl^com 2cmwkz raw type a to an",0,0,Pointer
3047,ClassToInstanceMap.java,instance of that type.,0,0,Pointer
3048,ClassToInstanceMap.java,"in addition to implementing @code map , the additional type safe",0,0,Pointer
3049,ClassToInstanceMap.java,operations @link #putinstance and @link #getinstance are available.,0,0,Pointer
3050,ClassToInstanceMap.java,"p like any other @code map class, object , this map may contain entries for primitive types,",0,0,Pointer
3051,ClassToInstanceMap.java,and a primitive type and its corresponding wrapper type may map to different values.,0,0,Pointer
3055,ClassToInstanceMap.java,"p to map a generic type to an instance of that type, use @link",0,0,Pointer
3056,ClassToInstanceMap.java,com^google.common^reflect.typetoinstancemap instead.,0,0,Pointer
3057,ClassToInstanceMap.java,@param b the common supertype that all entries must share often this is simply @link object,0,0,Pointer
3058,ClassToInstanceMap.java,@author kevin bourrillion,0,0,Pointer
3059,ClassToInstanceMap.java,@since 20,0,0,Pointer
4151,AbstractModule.java,a support class for @link module s which reduces repetition and results in a more readable,0,0,Pointer
4152,AbstractModule.java,configuration.,1,0,Pointer
4153,AbstractModule.java,"simply extend this class, implement @link #configure , and call the inherited",0,0,Pointer
4154,AbstractModule.java,methods which mirror those found in @link binder .,1,0,Pointer
4155,AbstractModule.java,for example,0,0,Pointer
4156,AbstractModule.java,pre,1,0,Pointer
4157,AbstractModule.java,public class mymodule extends abstractmodule,0,0,Pointer
4158,AbstractModule.java,protected void configure,1,0,Pointer
4159,AbstractModule.java,bind service^class ^to serviceimpl^class ^in singleton^class,0,0,Pointer
4160,AbstractModule.java,bind creditcardpaymentservice^class,1,0,Pointer
4161,AbstractModule.java,bind paymentservice^class ^to creditcardpaymentservice^class,0,0,Pointer
4162,AbstractModule.java,bindconstant ^annotatedwith names^named port ^to 8080,1,0,Pointer
4163,AbstractModule.java,pre,0,0,Pointer
4164,AbstractModule.java,@author crazybob@google^com bob lee,1,0,Pointer
4179,Binder.java,collects configuration information primarily i bindings i which will be used to create an,0,0,Pointer
4180,Binder.java,@link injector .,1,0,Pointer
4181,Binder.java,guice provides this object to your application s @link module implementors so,0,0,Pointer
4182,Binder.java,they may each contribute their own bindings and other registrations.,1,0,Pointer
4183,Binder.java,h3 the guice binding edsl h3,0,0,Pointer
4184,Binder.java,"guice uses an i embedded domain specific language i , or edsl, to help you create bindings",1,0,Pointer
4185,Binder.java,simply and readably.,0,0,Pointer
4188,Binder.java,javadocs b .,1,0,Pointer
4189,Binder.java,"instead, you should consult the series of examples below.",0,0,Pointer
4190,Binder.java,"to save space, these",1,0,Pointer
4191,Binder.java,"examples omit the opening @code binder , just as you will if your module extends @link",0,0,Pointer
4192,Binder.java,abstractmodule .,1,0,Pointer
4193,Binder.java,pre,0,0,Pointer
4196,Binder.java,does not change guice s default behavior.,1,0,Pointer
4198,Binder.java,@link module class to serve as an explicit i manifest i for the services it provides.,0,0,Pointer
4199,Binder.java,"also,",1,0,Pointer
4201,Binder.java,given explicitly.,0,0,Pointer
4202,Binder.java,pre,1,0,Pointer
4204,Binder.java,specifies that a request for a @code service instance with no binding annotations should be,0,0,Pointer
4205,Binder.java,treated as if it were a request for a @code serviceimpl instance.,1,0,Pointer
4206,Binder.java,this i overrides i the,0,0,Pointer
4207,Binder.java,function of any @link implementedby @implementedby or @link providedby @providedby,1,0,Pointer
4208,Binder.java,"annotations found on @code service , since guice will have already moved on to @code",0,0,Pointer
4209,Binder.java,serviceimpl before it reaches the point when it starts looking for these annotations.,1,0,Pointer
4210,Binder.java,pre,0,0,Pointer
4212,Binder.java,"in this example, @code serviceprovider must extend or implement @code provider service .",1,0,Pointer
4213,Binder.java,this,0,0,Pointer
4214,Binder.java,binding specifies that guice should resolve an unannotated injection request for @code service,1,0,Pointer
4215,Binder.java,"by first resolving an instance of @code serviceprovider in the regular way, then calling @link",0,0,Pointer
4216,Binder.java,provider#get get on the resulting provider instance to obtain the @code service instance.,1,0,Pointer
4217,Binder.java,"p the @link provider you use here does not have to be a factory that is, a provider which",0,0,Pointer
4473,DefaultMethodInterceptionTest.java,tests for interception of default methods.,1,0,Pointer
4218,Binder.java,always i creates i each instance it provides.,0,0,Pointer
4474,DefaultMethodInterceptionTest.java,@author cgdecker@google^com colin decker,1,0,Pointer
4475,DefaultMethodInterceptionTest.java,interface with a default method annotated to be intercepted.,0,0,Pointer
4220,Binder.java,follow.,1,0,Pointer
4476,DefaultMethodInterceptionTest.java,foo implementation that does not override the default method.,0,0,Pointer
4221,Binder.java,you can then use guice s concept of @link scope scopes to guide when creation should,1,0,Pointer
4477,DefaultMethodInterceptionTest.java,a base class defining a method with the same signature as foo s default method.,0,0,Pointer
4222,Binder.java,happen letting guice work for you .,1,0,Pointer
4478,DefaultMethodInterceptionTest.java,foo implementation that should use superclass method rather than default method.,0,0,Pointer
4223,Binder.java,pre,1,0,Pointer
4226,Binder.java,@code @red .,0,0,Pointer
4227,Binder.java,if your module also includes bindings for particular i values i of the,1,0,Pointer
4229,Binder.java,of @code @red that have no exact match in the bindings.,0,0,Pointer
4230,Binder.java,pre,1,0,Pointer
4231,Binder.java,bind serviceimpl^class ^in singleton^class,0,0,Pointer
4487,Element.java,an internal binding annotation applied to each element in a multibinding.,1,0,Pointer
4232,Binder.java,"or, alternatively",0,0,Pointer
4488,Element.java,all elements are,0,0,Pointer
4489,Element.java,assigned a globally unique id to allow different modules to contribute multibindings,0,0,Pointer
4234,Binder.java,either of these statements places the @code serviceimpl class into singleton scope.,0,0,Pointer
4490,Element.java,independently.,0,0,Pointer
4235,Binder.java,guice will,0,0,Pointer
4491,Element.java,@author jessewilson@google^com jesse wilson,0,0,Pointer
4236,Binder.java,create only one instance of @code serviceimpl and will reuse it for all injection requests of,0,0,Pointer
4238,Binder.java,note that it is still possible to bind another instance of @code serviceimpl if the,0,0,Pointer
4240,Binder.java,guice is not overly,0,0,Pointer
4497,EncounterImpl.java,@author jessewilson@google^com jesse wilson,0,0,Pointer
4242,Binder.java,with i enabling i your application to share only one instance if that s all you tell guice you,0,0,Pointer
4243,Binder.java,need.,0,0,Pointer
4499,ImplicitBindingTest.java,"@author crazybob@google^com bob lee an enum cannot be implemented by anything, so it should not be possible to have a successful valid jitable binding",0,0,Pointer
4245,Binder.java,an annotation on the @code serviceimpl class.,0,0,Pointer
4246,Binder.java,"p besides @link singleton @link scopes#singleton , there are servlet specific scopes",0,0,Pointer
4502,ManagedFilterPipeline.java,"central routing dispatch class handles lifecycle of managed filters, and delegates to the servlet",0,0,Pointer
4247,Binder.java,"available in @code com^google.inject^servlet.servletscopes , and your modules can contribute",0,0,Pointer
4503,ManagedFilterPipeline.java,pipeline.,0,0,Pointer
4248,Binder.java,their own custom scopes for use here as well.,0,0,Pointer
4504,ManagedFilterPipeline.java,@author dhanji@gmail^com dhanji r. prasanna,0,0,Pointer
4249,Binder.java,pre,0,0,Pointer
4250,Binder.java,bind new typeliteral&lt paymentservice&lt creditcard,0,0,Pointer
4508,PrivateElementProcessor,handles @code binder^newprivatebinder elements.,0,0,Pointer
4253,Binder.java,it tells guice how to,0,0,Pointer
4509,PrivateElementProcessor,@author jessewilson@google^com jesse wilson,0,0,Pointer
4254,Binder.java,honor an injection request for an element of type @code paymentservice creditcard .,0,0,Pointer
4255,Binder.java,the class,0,0,Pointer
4256,Binder.java,@code creditcardpaymentservice must implement the @code paymentservice creditcard interface.,0,0,Pointer
4512,ProxyFactoryTest.java,@author crazybob@google^com bob lee,0,0,Pointer
4257,Binder.java,"guice cannot currently bind or inject a generic type, such as @code set e all type parameters",0,0,Pointer
4258,Binder.java,must be fully specified.,0,0,Pointer
4514,SpiUtils.java,utilities for testing the multibinder & mapbinder extension spi.,0,0,Pointer
4259,Binder.java,pre,0,0,Pointer
4515,SpiUtils.java,@author sameb@google^com sam berlin,0,0,Pointer
4260,Binder.java,bind service^class ^toinstance new serviceimpl,0,0,Pointer
4261,Binder.java,"or, alternatively",0,0,Pointer
4518,SpiUtils.java,the kind of binding.,0,0,Pointer
4519,SpiUtils.java,the result of the binding.,0,0,Pointer
4265,Binder.java,@code service injection requests.,0,0,Pointer
4266,Binder.java,"when the @link injector is created, it will automatically",0,0,Pointer
4268,Binder.java,serviceimpl is simply ignored.,0,0,Pointer
4270,Binder.java,that you can t control.,0,0,Pointer
4271,Binder.java,pre,0,0,Pointer
4273,Binder.java,sets up a constant binding.,0,0,Pointer
4274,Binder.java,constant injections must always be annotated.,0,0,Pointer
4275,Binder.java,when a constant,0,0,Pointer
4276,Binder.java,"binding s value is a string, it is eligible for conversion to all primitive types, to @link",0,0,Pointer
4277,Binder.java,"enum#valueof class, string all enums , and to @link class#forname class literals .",0,0,Pointer
4278,Binder.java,conversions,0,0,Pointer
4279,Binder.java,"for other types can be configured using @link #converttotypes matcher, typeconverter",0,0,Pointer
4280,Binder.java,converttotypes .,0,0,Pointer
4281,Binder.java,pre,0,0,Pointer
4282,Binder.java,@literal @ color red color red a member variable field,0,0,Pointer
4283,Binder.java,red mymodule^class.getdeclaredfield red ^getannotation color^class,0,0,Pointer
4285,Binder.java,if your binding annotation has parameters you can apply different bindings to different specific,0,0,Pointer
4286,Binder.java,values of your annotation.,0,0,Pointer
4287,Binder.java,getting your hands on the right instance of the annotation is a bit of,0,0,Pointer
4288,Binder.java,"a pain one approach, shown above, is to apply a prototype annotation to a field in your module",0,0,Pointer
4290,Binder.java,pre,0,0,Pointer
4291,Binder.java,bind service^class,0,0,Pointer
4292,Binder.java,annotatedwith names^named blue,0,0,Pointer
4294,Binder.java,"differentiating by names is a common enough use case that we provided a standard annotation,",0,0,Pointer
4295,Binder.java,@link com^google.inject^name.named @named .,0,0,Pointer
4296,Binder.java,"because of guice s library support, binding by name",0,0,Pointer
4297,Binder.java,is quite easier than in the arbitrary binding annotation case we just saw.,0,0,Pointer
4298,Binder.java,"however, remember that",0,0,Pointer
4299,Binder.java,these names will live in a single flat namespace with all the other names used in your,0,0,Pointer
4300,Binder.java,application.,0,0,Pointer
4301,Binder.java,pre,0,0,Pointer
4302,Binder.java,constructor t lonector getlonectorfromserviceimplviareflection,0,0,Pointer
4303,Binder.java,bind serviceimpl^class,0,0,Pointer
4306,Binder.java,implementation.,0,0,Pointer
4307,Binder.java,it means that we do not need to place @literal @ inject on any of the,0,0,Pointer
4308,Binder.java,constructors and that guice treats the provided constructor as though it were annotated so.,0,0,Pointer
4309,Binder.java,it is,0,0,Pointer
4310,Binder.java,useful for cases where you cannot modify existing classes and is a bit simpler than using a,0,0,Pointer
4311,Binder.java,@link provider .,0,0,Pointer
4312,Binder.java,p the above list of examples is far from exhaustive.,0,0,Pointer
4313,Binder.java,if you can think of how the concepts of one,0,0,Pointer
4314,Binder.java,"example might coexist with the concepts from another, you can most likely weave the two together.",0,0,Pointer
4315,Binder.java,"if the two concepts make no sense with each other, you most likely won t be able to do it.",0,0,Pointer
4316,Binder.java,in a,0,0,Pointer
4318,Binder.java,"runtime, as soon as you try to create your injector.",0,0,Pointer
4319,Binder.java,"p the other methods of binder such as @link #bindscope , @link #bindinterceptor , @link",0,0,Pointer
4320,Binder.java,"#install , @link #requeststaticinjection , @link #adderror and @link #currentstage are not",0,0,Pointer
4321,Binder.java,"part of the binding edsl you can learn how to use these in the usual way, from the method",0,0,Pointer
4322,Binder.java,documentation.,0,0,Pointer
4323,Binder.java,@author crazybob@google^com bob lee,0,0,Pointer
4324,Binder.java,@author jessewilson@google^com jesse wilson,0,0,Pointer
4325,Binder.java,@author kevinb@google^com kevin bourrillion,0,0,Pointer
5124,VScrollTable.java,to detect if the first visible,0,0,Pointer
5125,VScrollTable.java,these are used when jumping between pages when pressing home and end,1,0,Pointer
5126,VScrollTable.java,changes to manage mousedown and mouseup,0,0,Pointer
5127,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,1,0,Pointer
5128,VScrollTable.java,lost .,0,0,Pointer
5129,VScrollTable.java,example itabpanel just set contained components invisible and back,1,0,Pointer
5130,VScrollTable.java,when changing tabs.,0,0,Pointer
5131,VScrollTable.java,updates first visible row for the case we cannot wait,1,0,Pointer
5132,VScrollTable.java,this method has logic which rows needs to be requested from server when,0,0,Pointer
5133,VScrollTable.java,user scrolls.,1,0,Pointer
5144,VScrollTable.java,for internal use only.,0,0,Pointer
5146,VScrollTable.java,overwrites onbrowserevent function on focusablescrollpanel to give event,1,0,Pointer
5147,VScrollTable.java,access to touchcontextprovider.,0,0,Pointer
5148,VScrollTable.java,has to be public to give tableconnector,1,0,Pointer
5150,VScrollTable.java,@since 72,0,0,Pointer
5151,VScrollTable.java,@author vaadin ltd,1,0,Pointer
5152,VScrollTable.java,to detect if the first visible,0,0,Pointer
5153,VScrollTable.java,these are used when jumping between pages when pressing home and end,1,0,Pointer
5154,VScrollTable.java,changes to manage mousedown and mouseup,0,0,Pointer
5155,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,1,0,Pointer
5156,VScrollTable.java,lost .,0,0,Pointer
5157,VScrollTable.java,example itabpanel just set contained components invisible and back,1,0,Pointer
5158,VScrollTable.java,when changing tabs.,0,0,Pointer
5159,VScrollTable.java,updates first visible row for the case we cannot wait,1,0,Pointer
5160,VScrollTable.java,this method has logic which rows needs to be requested from server when,0,0,Pointer
5161,VScrollTable.java,user scrolls.,1,0,Pointer
5172,VScrollTable.java,used to recall the position of an open context menu if we need to close,0,0,Pointer
5175,VScrollTable.java,for internal use only.,1,0,Pointer
5177,VScrollTable.java,to detect if the first visible,0,0,Pointer
5178,VScrollTable.java,these are used when jumping between pages when pressing home and end,1,0,Pointer
5179,VScrollTable.java,changes to manage mousedown and mouseup,0,0,Pointer
5180,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,1,0,Pointer
5181,VScrollTable.java,lost .,0,0,Pointer
5182,VScrollTable.java,example itabpanel just set contained components invisible and back,1,0,Pointer
5183,VScrollTable.java,when changing tabs.,0,0,Pointer
5184,VScrollTable.java,updates first visible row for the case we cannot wait,1,0,Pointer
5185,VScrollTable.java,this method has logic which rows needs to be requested from server when,0,0,Pointer
5186,VScrollTable.java,user scrolls.,1,0,Pointer
5197,VScrollTable.java,for internal use only.,0,0,Pointer
5199,VScrollTable.java,to detect if the first visible,1,0,Pointer
5200,VScrollTable.java,these are used when jumping between pages when pressing home and end,0,0,Pointer
5201,VScrollTable.java,changes to manage mousedown and mouseup,1,0,Pointer
5202,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,0,0,Pointer
5203,VScrollTable.java,lost .,1,0,Pointer
5204,VScrollTable.java,example itabpanel just set contained components invisible and back,0,0,Pointer
5205,VScrollTable.java,when changing tabs.,1,0,Pointer
5206,VScrollTable.java,updates first visible row for the case we cannot wait,0,0,Pointer
5207,VScrollTable.java,this method has logic which rows needs to be requested from server when,1,0,Pointer
5208,VScrollTable.java,user scrolls.,0,0,Pointer
5220,VScrollTable.java,reordering disabled and clicking on it resets sorting.,1,0,Pointer
5221,VScrollTable.java,to detect if the first visible,0,0,Pointer
5222,VScrollTable.java,these are used when jumping between pages when pressing home and end,1,0,Pointer
5223,VScrollTable.java,changes to manage mousedown and mouseup,0,0,Pointer
5224,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,1,0,Pointer
5225,VScrollTable.java,lost .,0,0,Pointer
5226,VScrollTable.java,example itabpanel just set contained components invisible and back,1,0,Pointer
5227,VScrollTable.java,when changing tabs.,0,0,Pointer
5228,VScrollTable.java,updates first visible row for the case we cannot wait,1,0,Pointer
5229,VScrollTable.java,this method has logic which rows needs to be requested from server when,0,0,Pointer
5230,VScrollTable.java,user scrolls.,1,0,Pointer
5242,VScrollTable.java,to detect if the first visible,0,0,Pointer
5243,VScrollTable.java,these are used when jumping between pages when pressing home and end,1,0,Pointer
5244,VScrollTable.java,changes to manage mousedown and mouseup,0,0,Pointer
5245,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,1,0,Pointer
5246,VScrollTable.java,lost .,0,0,Pointer
5247,VScrollTable.java,example itabpanel just set contained components invisible and back,1,0,Pointer
5248,VScrollTable.java,when changing tabs.,0,0,Pointer
5249,VScrollTable.java,updates first visible row for the case we cannot wait,1,0,Pointer
5250,VScrollTable.java,this method has logic which rows needs to be requested from server when,0,0,Pointer
5251,VScrollTable.java,user scrolls.,1,0,Pointer
5263,VScrollTable.java,reordering disabled and clicking on it resets sorting.,0,0,Pointer
5264,VScrollTable.java,to detect if the first visible,1,0,Pointer
5265,VScrollTable.java,these are used when jumping between pages when pressing home and end,0,0,Pointer
5266,VScrollTable.java,changes to manage mousedown and mouseup,1,0,Pointer
5267,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,0,0,Pointer
5268,VScrollTable.java,lost .,1,0,Pointer
5269,VScrollTable.java,example itabpanel just set contained components invisible and back,0,0,Pointer
5270,VScrollTable.java,when changing tabs.,1,0,Pointer
5271,VScrollTable.java,updates first visible row for the case we cannot wait,0,0,Pointer
5272,VScrollTable.java,this method has logic which rows needs to be requested from server when,1,0,Pointer
5273,VScrollTable.java,user scrolls.,0,0,Pointer
5285,VScrollTable.java,to detect if the first visible,1,0,Pointer
5286,VScrollTable.java,these are used when jumping between pages when pressing home and end,0,0,Pointer
5287,VScrollTable.java,changes to manage mousedown and mouseup,1,0,Pointer
5288,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,0,0,Pointer
5289,VScrollTable.java,lost .,1,0,Pointer
5290,VScrollTable.java,example itabpanel just set contained components invisible and back,0,0,Pointer
5291,VScrollTable.java,when changing tabs.,1,0,Pointer
5292,VScrollTable.java,updates first visible row for the case we cannot wait,0,0,Pointer
5293,VScrollTable.java,this method has logic which rows needs to be requested from server when,1,0,Pointer
5294,VScrollTable.java,user scrolls.,0,0,Pointer
5305,VScrollTable.java,this panel can only contain vscrolltablerow type of widgets.,1,0,Pointer
5306,VScrollTable.java,this,0,0,Pointer
5307,VScrollTable.java,"simulates very large table, keeping spacers which take room of",1,0,Pointer
5308,VScrollTable.java,unrendered rows.,0,0,Pointer
5362,VTextArea.java,this class represents a multiline textfield textarea .,1,0,Pointer
5366,VTextArea.java,@author vaadin ltd.,0,0,Pointer
5371,VUpload.java,@author vaadin ltd,1,0,Pointer
5373,Window.java,a component that represents a floating popup window that can be added to a,0,0,Pointer
5374,Window.java,@link ui .,1,0,Pointer
5375,Window.java,a window is added to a @code ui using,0,0,Pointer
5376,Window.java,@link ui#addwindow window .,1,0,Pointer
5377,Window.java,p,0,0,Pointer
5378,Window.java,the contents of a window is set using @link #setcontent component or by,1,0,Pointer
5379,Window.java,"using the @link #window string, component constructor.",0,0,Pointer
5380,Window.java,p,1,0,Pointer
5381,Window.java,p,0,0,Pointer
5382,Window.java,a window can be positioned on the screen using absolute coordinates pixels,1,0,Pointer
5383,Window.java,or set to be centered using @link #center,0,0,Pointer
5384,Window.java,p,1,0,Pointer
5385,Window.java,p,0,0,Pointer
5386,Window.java,the caption is displayed in the window header.,1,0,Pointer
5387,Window.java,p,0,0,Pointer
5388,Window.java,p,1,0,Pointer
5389,Window.java,"in vaadin versions prior to 70.0, window was also used as application level",0,0,Pointer
5390,Window.java,windows.,1,0,Pointer
5391,Window.java,this function is now covered by the @link ui class.,0,0,Pointer
5392,Window.java,p,1,0,Pointer
5393,Window.java,@author vaadin ltd.,0,0,Pointer
5394,Window.java,@since 30,1,0,Pointer
5401,Window.java,@author vaadin ltd,0,0,Pointer
5406,Window.java,an interface used for listening to window order change events.,1,0,Pointer
5412,Window.java,an interface used for listening to window close events.,0,0,Pointer
5413,Window.java,add the,1,0,Pointer
5414,Window.java,closelistener to a window and,0,0,Pointer
5415,Window.java,@link closelistener#windowclose closeevent will be called whenever the,1,0,Pointer
5416,Window.java,user closes the window.,0,0,Pointer
5417,Window.java,p,1,0,Pointer
5420,Window.java,p,0,0,Pointer
5426,Window.java,@author vaadin ltd,1,0,Pointer
5432,Window.java,an interface used for listening to window maximize restore events.,0,0,Pointer
5433,Window.java,add,1,0,Pointer
5434,Window.java,the windowmodechangelistener to a window and,0,0,Pointer
5435,Window.java,@link windowmodechangelistener#windowmodechanged windowmodechangeevent,1,0,Pointer
5436,Window.java,will be called whenever the window is maximized,0,0,Pointer
5437,Window.java,@link windowmode#maximized or restored @link windowmode#normal .,1,0,Pointer
5442,Window.java,resize events are fired whenever the client side fires a resize event,0,0,Pointer
5443,Window.java,eg the browser window is resized .,1,0,Pointer
5444,Window.java,the frequency may vary across,0,0,Pointer
5445,Window.java,browsers.,1,0,Pointer
5456,Window.java,a @link shortcutlistener specifically made to define a keyboard,0,0,Pointer
5457,Window.java,shortcut that closes the window.,1,0,Pointer
5458,Window.java,pre,0,0,Pointer
5459,Window.java,code,1,0,Pointer
5460,Window.java,within the window using helper,0,0,Pointer
5462,Window.java,or globally,1,0,Pointer
5463,Window.java,"getui ^addaction new window^closeshortcut window, keycode^escape",0,0,Pointer
5464,Window.java,code,1,0,Pointer
5465,Window.java,pre,0,0,Pointer
5518,XhrConnectionError.java,xhrconnectionerror provides detail about an error which occurred during an,1,0,Pointer
5519,XhrConnectionError.java,xhr request to the server.,0,0,Pointer
5520,XhrConnectionError.java,@since 76,1,0,Pointer
5521,XhrConnectionError.java,@author vaadin ltd,0,0,Pointer
4524,AbstractFocusable.java,an abstract base class for focusable components.,1,0,Pointer
4527,AbstractFocusable.java,@since 76,0,0,Pointer
4528,AbstractFocusable.java,@author vaadin ltd,1,0,Pointer
4534,AbstractMultiSelectState.java,@author vaadin ltd,0,0,Pointer
4535,AbstractMultiSelectState.java,@since 80,1,0,Pointer
4543,AbstractProperty.java,@since 66,0,0,Pointer
4546,AbstractProperty.java,legacypropertyhelper has been removed in vaadin 8 events,1,0,Pointer
4547,AbstractProperty.java,an code event code object specifying the property whose read only,0,0,Pointer
4548,AbstractProperty.java,status has been changed.,1,0,Pointer
4549,AbstractProperty.java,legacypropertyhelper has been removed in vaadin 8 events,0,0,Pointer
4566,AbstractSingleComponentContainerState.java,default shared state implementation for abstractsinglecomponentcontainer.,0,0,Pointer
4567,AbstractSingleComponentContainerState.java,@since 80,0,0,Pointer
4572,AdjacentElementsWithTooltipsTest.java,@author vaadin ltd,0,0,Pointer
4575,ApplicationConfiguration.java,helper class for reading configuration options from the bootstap,0,0,Pointer
4577,ApplicationConfiguration.java,@since 70,0,0,Pointer
4578,ApplicationConfiguration.java,wraps a native javascript object containing fields for an error message.,0,0,Pointer
4579,ApplicationConfiguration.java,@since 70,0,0,Pointer
4584,BootstrapPageResponse.java,a representation of a bootstrap page being generated.,0,0,Pointer
4585,BootstrapPageResponse.java,the bootstrap page,0,0,Pointer
4586,BootstrapPageResponse.java,contains of the full dom of the html document as well as the http headers,0,0,Pointer
4587,BootstrapPageResponse.java,that will be included in the corresponding http response.,0,0,Pointer
4588,BootstrapPageResponse.java,@author vaadin ltd,0,0,Pointer
4589,BootstrapPageResponse.java,@since 70.0,0,0,Pointer
4596,ButtonRenderer.java,a renderer that displays a button with a textual caption.,0,0,Pointer
4597,ButtonRenderer.java,the value of the,0,0,Pointer
4598,ButtonRenderer.java,corresponding property is used as the caption.,0,0,Pointer
4599,ButtonRenderer.java,click listeners can be added,0,0,Pointer
4600,ButtonRenderer.java,"to the renderer, invoked when any of the rendered buttons is clicked.",0,0,Pointer
4601,ButtonRenderer.java,@since 74,0,0,Pointer
4602,ButtonRenderer.java,@author vaadin ltd,0,0,Pointer
4610,ClientRpcWriter.java,serializes @link clientrpc client rpc invocations to json.,0,0,Pointer
4611,ClientRpcWriter.java,@author vaadin ltd,0,0,Pointer
4612,ClientRpcWriter.java,@since 71,0,0,Pointer
4616,ColorPickerServerRpc.java,rpc interface for abstractcolorpicker.,0,0,Pointer
4617,ColorPickerServerRpc.java,@since 70.0,0,0,Pointer
4620,ComboBoxState.java,shared state for the combobox component.,0,0,Pointer
4621,ComboBoxState.java,@since 70,0,0,Pointer
4624,DeclarativeValueProvider.java,value provider class for declarative support.,0,0,Pointer
4626,DeclarativeValueProvider.java,provides a straightforward mapping between an item and its value.,0,0,Pointer
4627,DeclarativeValueProvider.java,@param t,0,0,Pointer
4628,DeclarativeValueProvider.java,item type,0,0,Pointer
4633,DoubleRangeValidator.java,validator for validating that a @link double is inside a given range.,0,0,Pointer
4634,DoubleRangeValidator.java,@author vaadin ltd.,0,0,Pointer
4635,DoubleRangeValidator.java,@since 80,0,0,Pointer
4641,FooterDoubleClickHandler.java,grid.,0,0,Pointer
4642,FooterDoubleClickHandler.java,@since 74,0,0,Pointer
4643,FooterDoubleClickHandler.java,@author vaadin ltd,0,0,Pointer
4649,Grid.java,a grid component for displaying tabular data.,0,0,Pointer
4650,Grid.java,@author vaadin ltd,0,0,Pointer
4651,Grid.java,@since 80,0,0,Pointer
4652,Grid.java,@param t,0,0,Pointer
4653,Grid.java,the grid bean type,0,0,Pointer
4654,Grid.java,header and footer,0,0,Pointer
4658,Grid.java,@param t,0,0,Pointer
4659,Grid.java,the grid bean type,0,0,Pointer
4660,Grid.java,header and footer,0,0,Pointer
4661,Grid.java,selection mode representing the built in selection models in grid.,0,0,Pointer
4667,Grid.java,header and footer,0,0,Pointer
4669,Grid.java,header and footer,0,0,Pointer
4672,Grid.java,header and footer,0,0,Pointer
4674,Grid.java,@param t,0,0,Pointer
4675,Grid.java,the grid bean type,0,0,Pointer
4676,Grid.java,header and footer,0,0,Pointer
4679,Grid.java,usage,0,0,Pointer
4680,Grid.java,pre,0,0,Pointer
4681,Grid.java,grid^addcontextclicklistener event &gt notification^show,0,0,Pointer
4682,Grid.java,gridcontextclickevent&lt person&gt event ^getitem clicked,0,0,Pointer
4683,Grid.java,pre,0,0,Pointer
4684,Grid.java,@param t,0,0,Pointer
4685,Grid.java,the grid bean type,0,0,Pointer
4686,Grid.java,header and footer,0,0,Pointer
4687,Grid.java,an event that is fired when a column s visibility changes.,0,0,Pointer
4688,Grid.java,@since 75.0,0,0,Pointer
4689,Grid.java,header and footer,0,0,Pointer
4690,Grid.java,a helper base class for creating extensions for the grid component.,0,0,Pointer
4691,Grid.java,@param t,0,0,Pointer
4692,Grid.java,header and footer,0,0,Pointer
4693,Grid.java,class for managing visible details rows.,0,0,Pointer
4694,Grid.java,@param t,0,0,Pointer
4695,Grid.java,the grid bean type,0,0,Pointer
4696,Grid.java,header and footer,0,0,Pointer
4699,Grid.java,@param t,0,0,Pointer
4700,Grid.java,the grid bean type,0,0,Pointer
4731,GridManyColumnsV7.java,test ui for grid initial rendering performance profiling.,0,0,Pointer
4733,GridSelectionModel.java,the server side interface that controls grid s selection state.,0,0,Pointer
4735,GridSelectionModel.java,@author vaadin ltd,0,0,Pointer
4737,GridSelectionModel.java,@param t,0,0,Pointer
4738,GridSelectionModel.java,the grid bean type,0,0,Pointer
4750,HeaderRow.java,a header row in a grid.,0,0,Pointer
4751,HeaderRow.java,@author vaadin ltd,0,0,Pointer
4752,HeaderRow.java,@since 80,0,0,Pointer
4756,InternalContainerAnnotationForJS.java,annotation enabling using multiple @link javascript @javascript,0,0,Pointer
4757,InternalContainerAnnotationForJS.java,annotations.,0,0,Pointer
4761,InternalContainerAnnotationForJS.java,@author vaadin ltd,0,0,Pointer
4762,InternalContainerAnnotationForJS.java,@since 80,0,0,Pointer
4772,MyPickerConnector.java,@author vaadin ltd,0,0,Pointer
4773,MyPickerConnector.java,@since 70.0,0,0,Pointer
4782,NotEmptyValidatorTest.java,@author vaadin ltd,0,0,Pointer
4784,PopupView.java,a component for displaying a two different views to data.,0,0,Pointer
4785,PopupView.java,the minimized view,0,0,Pointer
4786,PopupView.java,"is normally used to render the component, and when it is clicked the full",0,0,Pointer
4787,PopupView.java,view is displayed on a popup.,0,0,Pointer
4788,PopupView.java,the inner class @link popupview^content is,0,0,Pointer
4789,PopupView.java,used to deliver contents to this component.,0,0,Pointer
4790,PopupView.java,@author vaadin ltd.,0,0,Pointer
4791,PopupView.java,constructors,0,0,Pointer
4792,PopupView.java,methods inherited from abstractcomponentcontainer.,0,0,Pointer
4793,PopupView.java,these are unnecessary,0,0,Pointer
4794,PopupView.java,but mandatory .,0,0,Pointer
4795,PopupView.java,most of them are not supported in this implementation.,0,0,Pointer
4801,PopupView.java,constructors,0,0,Pointer
4802,PopupView.java,methods inherited from abstractcomponentcontainer.,0,0,Pointer
4803,PopupView.java,these are unnecessary,0,0,Pointer
4804,PopupView.java,but mandatory .,0,0,Pointer
4805,PopupView.java,most of them are not supported in this implementation.,0,0,Pointer
4806,PopupView.java,this event is received by the popupvisibilitylisteners when the,0,0,Pointer
4807,PopupView.java,visibility of the popup changes.,0,0,Pointer
4808,PopupView.java,you can get the new visibility directly,0,0,Pointer
4809,PopupView.java,"with @link #ispopupvisible , or get the popupview that produced the",0,0,Pointer
4810,PopupView.java,event with @link #getpopupview .,0,0,Pointer
4811,PopupView.java,constructors,0,0,Pointer
4812,PopupView.java,methods inherited from abstractcomponentcontainer.,0,0,Pointer
4813,PopupView.java,these are unnecessary,0,0,Pointer
4814,PopupView.java,but mandatory .,0,0,Pointer
4815,PopupView.java,most of them are not supported in this implementation.,0,0,Pointer
4816,PopupView.java,defines a listener that can receive a popupvisibilityevent when the,0,0,Pointer
4817,PopupView.java,visibility of the popup changes.,0,0,Pointer
4847,PortletDummyRequestHandler.java,request handler which provides a dummy html response to any resource request,0,0,Pointer
4848,PortletDummyRequestHandler.java,with the resource id dummy.,0,0,Pointer
4849,PortletDummyRequestHandler.java,@author vaadin ltd,0,0,Pointer
4850,PortletDummyRequestHandler.java,@since 71,0,0,Pointer
4855,QueryBuilder.java,"@deprecated as of 80, no replacement available.",0,0,Pointer
4857,RequiredTextFieldTest.java,test for ^v required style,0,0,Pointer
4858,RequiredTextFieldTest.java,@author vaadin ltd,0,0,Pointer
4861,RpcDataProviderExtension.java,provides vaadin server side container data source to a,0,0,Pointer
4862,RpcDataProviderExtension.java,@link com^vaadin.v7^client.connectors^gridconnector gridconnector .,0,0,Pointer
4863,RpcDataProviderExtension.java,this is currently,0,0,Pointer
4864,RpcDataProviderExtension.java,implemented as an extension hardcoded to support a specific connector type.,0,0,Pointer
4867,RpcDataProviderExtension.java,@since 74,0,0,Pointer
4868,RpcDataProviderExtension.java,@author vaadin ltd,0,0,Pointer
4869,RpcDataProviderExtension.java,"@deprecated as of 80, no replacement available.",0,0,Pointer
4870,RpcDataProviderExtension.java,class for keeping track of current items and valuechangelisteners.,0,0,Pointer
4871,RpcDataProviderExtension.java,@since 76,0,0,Pointer
4901,SelectAllEvent.java,"a select all event, fired by the grid when it needs all rows in data source",0,0,Pointer
4902,SelectAllEvent.java,"to be selected, or when all rows have been selected and are now deselected.",0,0,Pointer
4903,SelectAllEvent.java,@since 74,0,0,Pointer
4904,SelectAllEvent.java,@author vaadin ltd,0,0,Pointer
4905,SelectAllEvent.java,@param t,0,0,Pointer
4906,SelectAllEvent.java,the type of the rows in grid,0,0,Pointer
4918,ShouldWriteDataDelegate.java,@since 75.0,0,0,Pointer
4919,ShouldWriteDataDelegate.java,@author vaadin ltd,0,0,Pointer
4929,SimpleGridUI.java,@author vaadin ltd,0,0,Pointer
4931,SpacerVisibilityChangedEvent.java,event fired when a spacer element is hidden or shown in escalator.,0,0,Pointer
4932,SpacerVisibilityChangedEvent.java,@author vaadin ltd,0,0,Pointer
4933,SpacerVisibilityChangedEvent.java,@since 77.13,0,0,Pointer
4938,TargetDetailsImpl.java,@since 63,0,0,Pointer
4939,TargetDetailsImpl.java,@deprecated replaced in 81 by @link dropevent#gettransferdata string,0,0,Pointer
4944,UnknownExtensionConnector.java,connector used as a placeholder for extensions that are not present in the,0,0,Pointer
4945,UnknownExtensionConnector.java,widgetset.,0,0,Pointer
4946,UnknownExtensionConnector.java,@since 77.4,0,0,Pointer
4947,UnknownExtensionConnector.java,@author vaadin ltd,0,0,Pointer
4952,VaadinPortlet.java,portlet 20 base class.,0,0,Pointer
4953,VaadinPortlet.java,this replaces the servlet in servlet portlet 10,0,0,Pointer
4954,VaadinPortlet.java,deployments and handles various portlet requests from the browser.,0,0,Pointer
4955,VaadinPortlet.java,@author vaadin ltd,0,0,Pointer
4958,VaadinPortlet.java,base class for portlet requests that need access to http servlet,0,0,Pointer
4962,VaadinPortlet.java,portlet request for liferay.,0,0,Pointer
4965,VaadinPortlet.java,portlet request for gatein.,0,0,Pointer
4968,VaadinPortlet.java,portlet request for websphere portal.,0,0,Pointer
4971,VaadinPortlet.java,portlet request for websphere portal.,0,0,Pointer
4974,VaadinPortlet.java,@author vaadin ltd,0,0,Pointer
4975,VaadinPortlet.java,@deprecated as of 70.,0,0,Pointer
4976,VaadinPortlet.java,this is no longer used and only provided for,0,0,Pointer
4977,VaadinPortlet.java,backwards compatibility.,0,0,Pointer
4978,VaadinPortlet.java,each @link requesthandler can,0,0,Pointer
4979,VaadinPortlet.java,individually decide whether it wants to handle a request or,0,0,Pointer
4980,VaadinPortlet.java,not.,0,0,Pointer
4995,VaadinServiceInitListener.java,listener for @link vaadinservice initialization events.,0,0,Pointer
4996,VaadinServiceInitListener.java,the listener can,0,0,Pointer
4997,VaadinServiceInitListener.java,add listeners and request handlers the service.,0,0,Pointer
4999,VaadinServiceInitListener.java,listener instances are by default discovered and instantiated using,0,0,Pointer
5000,VaadinServiceInitListener.java,@link serviceloader .,0,0,Pointer
5001,VaadinServiceInitListener.java,this means that all implementations must have a,0,0,Pointer
5002,VaadinServiceInitListener.java,zero argument constructor and the fully qualified name of the implementation,0,0,Pointer
5003,VaadinServiceInitListener.java,class must be listed on a separate line in a,0,0,Pointer
5004,VaadinServiceInitListener.java,meta inf services com^vaadin.server^vaadinserviceinitlistener file present in,0,0,Pointer
5005,VaadinServiceInitListener.java,the jar file containing the implementation class.,0,0,Pointer
5007,VaadinServiceInitListener.java,"integrations for specific runtime environments, such as osgi or spring, might",0,0,Pointer
5008,VaadinServiceInitListener.java,also provide other ways of discovering listeners.,0,0,Pointer
5009,VaadinServiceInitListener.java,@since 80,0,0,Pointer
5010,VaadinServiceInitListener.java,@author vaadin ltd,0,0,Pointer
5025,VGridLayout.java,private helper class.,0,0,Pointer
5029,VLazyInitItemIdentifiers.java,@author vaadin ltd,0,0,Pointer
5030,VLazyInitItemIdentifiers.java,@deprecated replaced in 81 with,0,0,Pointer
5031,VLazyInitItemIdentifiers.java,ragovercriteria string and,0,0,Pointer
5032,VLazyInitItemIdentifiers.java,@link droptargetextension#setdropcriteria string,0,0,Pointer
5038,VScrollTable.java,vscrolltable is a flowpanel having two widgets in it tablehead component,0,0,Pointer
5039,VScrollTable.java,scrollpanel,0,0,Pointer
5040,VScrollTable.java,"tablehead contains table s header and widgets logic for resizing,",0,0,Pointer
5041,VScrollTable.java,reordering and hiding columns.,0,0,Pointer
5042,VScrollTable.java,scrollpanel contains vscrolltablebody object which handles content.,0,0,Pointer
5043,VScrollTable.java,to save,0,0,Pointer
5044,VScrollTable.java,"some bandwidth and to improve clients responsiveness with loads of data, in",0,0,Pointer
5045,VScrollTable.java,vscrolltablebody all rows are not necessary rendered.,0,0,Pointer
5046,VScrollTable.java,there are spacers in,0,0,Pointer
5047,VScrollTable.java,vscrolltablebody to use the exact same space as non rendered rows would use.,0,0,Pointer
5048,VScrollTable.java,this way we can use seamlessly traditional scrollbars and scrolling to fetch,0,0,Pointer
5049,VScrollTable.java,more rows instead of paging .,0,0,Pointer
5050,VScrollTable.java,in vscrolltable we listen to scroll events.,0,0,Pointer
5051,VScrollTable.java,on horizontal scrolling we also,0,0,Pointer
5052,VScrollTable.java,update tableheads scroll position which has its scrollbars hidden.,0,0,Pointer
5053,VScrollTable.java,on,0,0,Pointer
5054,VScrollTable.java,vertical scroll events we will check if we are reaching the end of area where,0,0,Pointer
5055,VScrollTable.java,we have rows rendered and,0,0,Pointer
5056,VScrollTable.java,todo implement unregistering for child components in cells,0,0,Pointer
5057,VScrollTable.java,to detect if the first visible,0,0,Pointer
5058,VScrollTable.java,these are used when jumping between pages when pressing home and end,0,0,Pointer
5059,VScrollTable.java,changes to manage mousedown and mouseup,0,0,Pointer
5060,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,0,0,Pointer
5061,VScrollTable.java,lost .,0,0,Pointer
5062,VScrollTable.java,example itabpanel just set contained components invisible and back,0,0,Pointer
5063,VScrollTable.java,when changing tabs.,0,0,Pointer
5064,VScrollTable.java,updates first visible row for the case we cannot wait,0,0,Pointer
5065,VScrollTable.java,this method has logic which rows needs to be requested from server when,0,0,Pointer
5066,VScrollTable.java,user scrolls.,0,0,Pointer
5077,VScrollTable.java,simple interface for parts of the table capable of owning a context menu.,0,0,Pointer
5078,VScrollTable.java,@since 72,0,0,Pointer
5079,VScrollTable.java,@author vaadin ltd,0,0,Pointer
5080,VScrollTable.java,to detect if the first visible,0,0,Pointer
5081,VScrollTable.java,these are used when jumping between pages when pressing home and end,0,0,Pointer
5082,VScrollTable.java,changes to manage mousedown and mouseup,0,0,Pointer
5083,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,0,0,Pointer
5084,VScrollTable.java,lost .,0,0,Pointer
5085,VScrollTable.java,example itabpanel just set contained components invisible and back,0,0,Pointer
5086,VScrollTable.java,when changing tabs.,0,0,Pointer
5087,VScrollTable.java,updates first visible row for the case we cannot wait,0,0,Pointer
5088,VScrollTable.java,this method has logic which rows needs to be requested from server when,0,0,Pointer
5089,VScrollTable.java,user scrolls.,0,0,Pointer
5101,VScrollTable.java,@since 72,0,0,Pointer
5102,VScrollTable.java,@author vaadin ltd,0,0,Pointer
5103,VScrollTable.java,to detect if the first visible,0,0,Pointer
5104,VScrollTable.java,these are used when jumping between pages when pressing home and end,0,0,Pointer
5105,VScrollTable.java,changes to manage mousedown and mouseup,0,0,Pointer
5106,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,0,0,Pointer
5107,VScrollTable.java,lost .,0,0,Pointer
5108,VScrollTable.java,example itabpanel just set contained components invisible and back,0,0,Pointer
5109,VScrollTable.java,when changing tabs.,0,0,Pointer
5110,VScrollTable.java,updates first visible row for the case we cannot wait,0,0,Pointer
5111,VScrollTable.java,this method has logic which rows needs to be requested from server when,0,0,Pointer
5112,VScrollTable.java,user scrolls.,0,0,Pointer
1,Abfss.java,azure blob file system implementation of abstractfilesystem.,0,0,deprecation
2,Abfss.java,this impl delegates to the old filesystem,1,0,deprecation
1028,TestConnCache.java,this class tests the client connection caching in a single node,0,0,deprecation
5,AbstractContractGetFileStatusTest.java,test getfilestatus and related listing operations.,1,0,deprecation
6,AbstractContractGetFileStatusTest.java,the tree parameters.,0,0,deprecation
7,AbstractContractGetFileStatusTest.java,kept small to avoid killing object store test runs too much.,1,0,deprecation
8,AbstractContractGetFileStatusTest.java,accept everything.,0,0,deprecation
1032,TestCustomOauthTokenProvider.java,test custom oauth token providers.,1,0,deprecation
9,AbstractContractGetFileStatusTest.java,the tree parameters.,0,0,deprecation
10,AbstractContractGetFileStatusTest.java,kept small to avoid killing object store test runs too much.,1,0,deprecation
11,AbstractContractGetFileStatusTest.java,accept nothing.,0,0,deprecation
1035,TestCustomOauthTokenProvider.java,instead this just checks that the creation works and that everything,1,0,deprecation
12,AbstractContractGetFileStatusTest.java,the tree parameters.,0,0,deprecation
1036,TestCustomOauthTokenProvider.java,is propagated.,1,0,deprecation
13,AbstractContractGetFileStatusTest.java,kept small to avoid killing object store test runs too much.,0,0,deprecation
14,AbstractContractGetFileStatusTest.java,path filter which only expects paths whose final name element,1,0,deprecation
15,AbstractContractGetFileStatusTest.java,equals the @code match field.,0,0,deprecation
16,AbstractContractGetFileStatusTest.java,the tree parameters.,1,0,deprecation
17,AbstractContractGetFileStatusTest.java,kept small to avoid killing object store test runs too much.,0,0,deprecation
18,AbstractContractGetFileStatusTest.java,a filesystem filter which exposes the protected method,1,0,deprecation
1042,TestDataDrivenDBInputFormat.java,test aspects of datadrivendbinputformat,0,0,deprecation
19,AbstractContractGetFileStatusTest.java,"@link #listlocatedstatus path, pathfilter .",1,0,deprecation
1047,TestEditLogFileOutputStream.java,test the editlogfileoutputstream,0,0,deprecation
1049,TestFederationPolicyUtils.java,unit test for @link federationpolicyutils .,1,0,deprecation
1052,TestFileSizeCountTask.java,unit test for file size count task.,0,0,deprecation
1054,TestHandler.java,tests handler interface.,1,0,deprecation
1056,TestHDFSServerPorts.java,this test checks correctness of port usage by hdfs components,0,0,deprecation
1057,TestHDFSServerPorts.java,"namenode, datanode, secondarynamenode and backupnode.",1,0,deprecation
1058,TestHDFSServerPorts.java,the correct behavior is br when a specific port is provided the server must either start on that port or fail by throwing @link java^net.bindexception .,0,0,deprecation
1059,TestHDFSServerPorts.java,br,1,0,deprecation
1060,TestHDFSServerPorts.java,if the port 0 ephemeral then the server should choose a free port and start on it.,0,0,deprecation
1066,TestKeyInputStream.java,tests @link keyinputstream .,1,0,deprecation
44,AbstractS3ACommitterFactory.java,dynamically create the output committer based on subclass type and settings.,0,0,deprecation
1069,TestMetricsVisitor.java,test the metric visitor interface,1,0,deprecation
1071,TestNativeAzureFileSystemUploadLogic.java,"tests for the upload, buffering and flush logic in wasb.",0,0,deprecation
1072,TestNativeAzureFileSystemUploadLogic.java,just an arbitrary number so that the values i write have a predictable,1,0,deprecation
1073,TestNativeAzureFileSystemUploadLogic.java,various scenarios to test in how often we flush data while uploading.,0,0,deprecation
53,ApplicationConstants.java,the type of launch for the container.,1,0,deprecation
1077,TestOmMultipartKeyInfoCodec.java,this class tests ommultipartkeyinfocodec.,0,0,deprecation
54,ApplicationConstants.java,environment for applications.,1,0,deprecation
1079,TestOMVolumeRequest.java,base test class for volume request.,0,0,deprecation
1082,TestOzoneNativeAuthorizer.java,test class for @link ozonenativeauthorizer .,1,0,deprecation
61,ApplicationStateData.java,contains all the state data that needs to be stored persistently for an application,0,0,deprecation
1085,TestProtoBufRpc.java,test for testing protocol buffer based rpc mechanism.,1,0,deprecation
1086,TestProtoBufRpc.java,this test depends on test^proto definition of types in src test proto,0,0,deprecation
1087,TestProtoBufRpc.java,and protobuf service definition from src test test rpc service^proto,1,0,deprecation
66,AutoInputFormat.java,it can currently handle text and sequence files.,0,0,deprecation
1091,TestRDBStore.java,rdbstore tests.,1,0,deprecation
1093,TestRegistrySecurityHelper.java,test for registry security operations,0,0,deprecation
70,BalancingPolicy.java,balancing policy.,1,0,deprecation
74,BalancingPolicy.java,cluster is balanced if each node is balanced.,0,0,deprecation
75,BalancingPolicy.java,cluster is balanced if each pool in each node is balanced.,1,0,deprecation
1099,TestRouterWebServiceUtil.java,test class to validate routerwebserviceutil methods.,0,0,deprecation
1101,TestS3BucketManager.java,tests for s3 bucket manager.,1,0,deprecation
1104,TestSaveNamespace.java,test various failure scenarios during savenamespace operation.,0,0,deprecation
81,BaseRouterWebServicesTest.java,base class for all the routerrmadminservice test cases.,1,0,deprecation
1105,TestSaveNamespace.java,cases covered,0,0,deprecation
1106,TestSaveNamespace.java,ol,1,0,deprecation
1107,TestSaveNamespace.java,li recover from failure while saving into the second storage directory li,0,0,deprecation
1108,TestSaveNamespace.java,li recover from failure while moving current into lastcheckpoint^tmp li,1,0,deprecation
1109,TestSaveNamespace.java,li recover from failure while moving lastcheckpoint^tmp into,0,0,deprecation
86,BatchedRequests.java,a grouping of scheduling requests which are sent to the placementalgorithm,1,0,deprecation
1110,TestSaveNamespace.java,previous^checkpoint li,0,0,deprecation
87,BatchedRequests.java,to place as a batch.,1,0,deprecation
1111,TestSaveNamespace.java,li recover from failure while rolling edits file li,0,0,deprecation
88,BatchedRequests.java,the placement algorithm tends to give more optimal,1,0,deprecation
1112,TestSaveNamespace.java,ol,0,0,deprecation
89,BatchedRequests.java,placements if more requests are batched together.,1,0,deprecation
90,BatchedRequests.java,placementalgorithmoutput attempt the number of times the requests in this,0,0,deprecation
91,BatchedRequests.java,iterator type.,1,0,deprecation
98,BlockPlacementStatusWithNodeGroup.java,an implementation of @see blockplacementstatus for,0,0,deprecation
1122,TestSCMDatanodeHeartbeatDispatcher.java,this class tests the behavior of scmdatanodeheartbeatdispatcher.,1,0,deprecation
1124,TestSequenceFile.java,support for flat files of binary key value pairs.,0,0,deprecation
103,BlocksMap.java,this class maintains the map from a block to its metadata.,1,0,deprecation
1127,TestSeveralNameNodes.java,test that we can start several and run with namenodes on the same minicluster,0,0,deprecation
104,BlocksMap.java,block s metadata currently includes blockcollection it belongs to and,1,0,deprecation
105,BlocksMap.java,the datanodes that store the block.,0,0,deprecation
1130,TestSwiftFileSystemContract.java,this is the full filesystem contract test which requires the,1,0,deprecation
1131,TestSwiftFileSystemContract.java,default config set up to point to a filesystem.,0,0,deprecation
1132,TestSwiftFileSystemContract.java,some of the tests override the base class tests these,1,0,deprecation
109,BlockUtils.java,utils functions to help block functions.,0,0,deprecation
1133,TestSwiftFileSystemContract.java,"are where swiftfs does not implement those features, or",1,0,deprecation
1134,TestSwiftFileSystemContract.java,when the behavior of swiftfs does not match the normal,0,0,deprecation
1135,TestSwiftFileSystemContract.java,contract which normally means that directories and equal files,1,0,deprecation
1136,TestSwiftFileSystemContract.java,are being treated as equal.,0,0,deprecation
116,CapacitySchedulerPlanFollower.java,this class implements a @link planfollower .,1,0,deprecation
117,CapacitySchedulerPlanFollower.java,"this is invoked on a timer, and",0,0,deprecation
118,CapacitySchedulerPlanFollower.java,it is in charge to publish the state of the @link plan s to the underlying,1,0,deprecation
119,CapacitySchedulerPlanFollower.java,@link capacityscheduler .,0,0,deprecation
120,CapacitySchedulerPlanFollower.java,"this implementation does so, by",1,0,deprecation
1144,TestTaskCommit.java,special committer that does not cleanup temporary files in,0,0,deprecation
121,CapacitySchedulerPlanFollower.java,"adding removing resizing leaf queues in the scheduler, thus affecting the",1,0,deprecation
1145,TestTaskCommit.java,aborttask,0,0,deprecation
122,CapacitySchedulerPlanFollower.java,dynamic behavior of the scheduler in a way that is consistent with the,1,0,deprecation
1146,TestTaskCommit.java,the framework s fileoutputcommitter cleans up any temporary,0,0,deprecation
123,CapacitySchedulerPlanFollower.java,content of the plan.,1,0,deprecation
1147,TestTaskCommit.java,files left behind in aborttask.,0,0,deprecation
124,CapacitySchedulerPlanFollower.java,it also updates the plan s view on how much resources,1,0,deprecation
1148,TestTaskCommit.java,we want the test case to,0,0,deprecation
125,CapacitySchedulerPlanFollower.java,are available in the cluster.,1,0,deprecation
1149,TestTaskCommit.java,find these files and hence short circuit aborttask.,0,0,deprecation
126,CapacitySchedulerPlanFollower.java,"this implementation of planfollower is relatively stateless, and it can",1,0,deprecation
1150,TestTaskCommit.java,special committer that always requires commit.,0,0,deprecation
127,CapacitySchedulerPlanFollower.java,synchronize schedulers and plans that have arbitrary changes performing set,1,0,deprecation
128,CapacitySchedulerPlanFollower.java,differences among existing queues .,0,0,deprecation
129,CapacitySchedulerPlanFollower.java,this makes it resilient to frequency of,1,0,deprecation
130,CapacitySchedulerPlanFollower.java,"synchronization, and rm restart issues no catch up is necessary .",0,0,deprecation
1158,TestTaskContext.java,tests context api and @link statusreporter#getprogress via @link taskattemptcontext#getprogress api .,1,0,deprecation
1161,TestTopCLI.java,test class for topcli.,0,0,deprecation
1163,TestUpgradeDomainBlockPlacementPolicy.java,end to end test case for upgrade domain,1,0,deprecation
1164,TestUpgradeDomainBlockPlacementPolicy.java,the test configs upgrade domain for nodes via admin json,0,0,deprecation
1165,TestUpgradeDomainBlockPlacementPolicy.java,config file and put some nodes to decommission state.,1,0,deprecation
1166,TestUpgradeDomainBlockPlacementPolicy.java,the test then verifies replicas are placed on the nodes that,0,0,deprecation
1167,TestUpgradeDomainBlockPlacementPolicy.java,satisfy the upgrade domain policy.,1,0,deprecation
1173,TextInputFormat.java,an @link inputformat for plain text files.,0,0,deprecation
1174,TextInputFormat.java,files are broken into lines.,1,0,deprecation
151,Classpath.java,the output likely will include wildcards in the classpath.,0,0,deprecation
1175,TextInputFormat.java,either linefeed or carriage return are used to signal end of line.,1,0,deprecation
1178,TextInputFormat.java,.,0,0,deprecation
156,Classpath.java,this is useful in situations where wildcard syntax isn t usable.,1,0,deprecation
157,Classpath.java,"with the jar argument, it writes the classpath as a manifest in a jar file.",0,0,deprecation
1186,TimelineDataToRetrieve.java,encapsulates information regarding which data to retrieve for each entity,1,0,deprecation
1187,TimelineDataToRetrieve.java,while querying.,0,0,deprecation
1188,TimelineDataToRetrieve.java,br,1,0,deprecation
1189,TimelineDataToRetrieve.java,data to retrieve contains the following br,0,0,deprecation
1190,TimelineDataToRetrieve.java,ul,1,0,deprecation
1191,TimelineDataToRetrieve.java,li b confstoretrieve b used for deciding which configs to return,0,0,deprecation
1192,TimelineDataToRetrieve.java,in response.,1,0,deprecation
1193,TimelineDataToRetrieve.java,this is represented as a @link timelinefilterlist object,0,0,deprecation
1194,TimelineDataToRetrieve.java,containing @link timelineprefixfilter objects.,1,0,deprecation
1195,TimelineDataToRetrieve.java,these can either be,0,0,deprecation
172,ComparableVersion.java,code source of this file http grepcode^com file repo1^maven.org maven2 org^apache.maven maven artifact 31.1 org apache maven artifact versioning comparableversion^java modifications made on top of the source 1.,1,0,deprecation
1196,TimelineDataToRetrieve.java,exact config keys or prefixes which are then compared against config,0,0,deprecation
173,ComparableVersion.java,changed package org^apache.maven^artifact.versioning to package org^apache.hadoop^util 2.,1,0,deprecation
175,ComparableVersion.java,generic implementation of version comparison.,0,0,deprecation
1199,TimelineDataToRetrieve.java,"or empty, all configurations will be fetched if fieldstoretrieve",1,0,deprecation
176,ComparableVersion.java,p features,0,0,deprecation
1200,TimelineDataToRetrieve.java,contains @link field#configs or @link field#all .,1,0,deprecation
177,ComparableVersion.java,ul,0,0,deprecation
1202,TimelineDataToRetrieve.java,confused with configfilters which is used to decide which entities to,1,0,deprecation
1203,TimelineDataToRetrieve.java,return instead.,0,0,deprecation
1204,TimelineDataToRetrieve.java,li,1,0,deprecation
1206,TimelineDataToRetrieve.java,in response.,0,0,deprecation
1207,TimelineDataToRetrieve.java,this is represented as a @link timelinefilterlist object,1,0,deprecation
1208,TimelineDataToRetrieve.java,containing @link timelineprefixfilter objects.,0,0,deprecation
1209,TimelineDataToRetrieve.java,these can either be,1,0,deprecation
1210,TimelineDataToRetrieve.java,exact metric ids or prefixes which are then compared against metric,0,0,deprecation
188,ComparableVersion.java,li code milestone code or code m code li,1,0,deprecation
189,ComparableVersion.java,li code rc code or code cr code li,0,0,deprecation
1213,TimelineDataToRetrieve.java,"or empty, all metrics will be fetched if fieldstoretrieve contains",1,0,deprecation
190,ComparableVersion.java,li code snapshot code li,0,0,deprecation
191,ComparableVersion.java,li code the empty string code or code ga code or code final code li,1,0,deprecation
192,ComparableVersion.java,li code sp code li,0,0,deprecation
1216,TimelineDataToRetrieve.java,with metricfilters which is used to decide which entities to return,1,0,deprecation
193,ComparableVersion.java,ul,0,0,deprecation
1217,TimelineDataToRetrieve.java,instead.,1,0,deprecation
194,ComparableVersion.java,"unknown qualifiers are considered after known qualifiers, with lexical order always case insensitive ,",0,0,deprecation
1218,TimelineDataToRetrieve.java,li,1,0,deprecation
195,ComparableVersion.java,li,0,0,deprecation
197,ComparableVersion.java,li,1,0,deprecation
1222,TimelineDataToRetrieve.java,"namely entity id, entity type and entity created time.",0,0,deprecation
199,ComparableVersion.java,@see a href https cwiki^apache.org confluence display mavenold versioning versioning on maven wiki a,1,0,deprecation
1223,TimelineDataToRetrieve.java,all fields will,0,0,deprecation
200,ComparableVersion.java,represents a numeric item in the version item list.,1,0,deprecation
201,ComparableVersion.java,"represents a string in the version item list, usually a qualifier.",0,0,deprecation
1225,TimelineDataToRetrieve.java,li,1,0,deprecation
202,ComparableVersion.java,represents a version list item.,0,0,deprecation
203,ComparableVersion.java,this class is used both for the global item list and for sub lists which start,1,0,deprecation
204,ComparableVersion.java,with number in the version specification .,0,0,deprecation
1228,TimelineDataToRetrieve.java,number of metrics to return.,1,0,deprecation
1229,TimelineDataToRetrieve.java,this parameter is ignored if metrics are not to,0,0,deprecation
1230,TimelineDataToRetrieve.java,be fetched.,1,0,deprecation
1231,TimelineDataToRetrieve.java,li,0,0,deprecation
1233,TimelineDataToRetrieve.java,be retrieved.,1,0,deprecation
1235,TimelineDataToRetrieve.java,li,0,0,deprecation
1237,TimelineDataToRetrieve.java,be retrieved.,1,0,deprecation
1239,TimelineDataToRetrieve.java,li,0,0,deprecation
1240,TimelineDataToRetrieve.java,ul,1,0,deprecation
239,ConfigurationException.java,exception to throw in case of a configuration problem.,0,0,deprecation
245,CpuTimeTracker.java,utility for sampling and computing cpu usage.,1,0,deprecation
248,DBProfile.java,user visible configs based rocksdb tuning page.,0,0,deprecation
249,DBProfile.java,documentation for options.,1,0,deprecation
250,DBProfile.java,p,0,0,deprecation
251,DBProfile.java,https github^com facebook rocksdb blob master include rocksdb options^h,1,0,deprecation
252,DBProfile.java,p,0,0,deprecation
253,DBProfile.java,most tuning parameters are based on this url.,1,0,deprecation
254,DBProfile.java,p,0,0,deprecation
255,DBProfile.java,https github^com facebook rocksdb wiki setup options and basic tuning,1,0,deprecation
271,DefaultAnonymizingRumenSerializer.java,default rumen json serializer.,0,0,deprecation
273,DelegatingSSLSocketFactory.java,a @link sslsocketfactory that can delegate to various ssl implementations.,1,0,deprecation
274,DelegatingSSLSocketFactory.java,"specifically, either openssl or jsse can be used.",0,0,deprecation
275,DelegatingSSLSocketFactory.java,openssl offers better,1,0,deprecation
276,DelegatingSSLSocketFactory.java,performance than jsse and is made available via the,0,0,deprecation
277,DelegatingSSLSocketFactory.java,a href https github^com wildfly wildfly openssl wildlfy openssl a,1,0,deprecation
278,DelegatingSSLSocketFactory.java,library.,0,0,deprecation
279,DelegatingSSLSocketFactory.java,p,1,0,deprecation
280,DelegatingSSLSocketFactory.java,the factory has several different modes of operation,0,0,deprecation
281,DelegatingSSLSocketFactory.java,ul,1,0,deprecation
282,DelegatingSSLSocketFactory.java,li openssl uses the wildly openssl library to delegate to the,0,0,deprecation
283,DelegatingSSLSocketFactory.java,system installed openssl.,1,0,deprecation
284,DelegatingSSLSocketFactory.java,if the wildfly openssl integration is not,0,0,deprecation
285,DelegatingSSLSocketFactory.java,"properly setup, an exception is thrown.",0,0,deprecation
286,DelegatingSSLSocketFactory.java,li,0,0,deprecation
289,DelegatingSSLSocketFactory.java,li,0,0,deprecation
291,DelegatingSSLSocketFactory.java,it disables the gcm cipher when running on java 8.,0,0,deprecation
292,DelegatingSSLSocketFactory.java,li,0,0,deprecation
295,DelegatingSSLSocketFactory.java,li,0,0,deprecation
296,DelegatingSSLSocketFactory.java,ul,0,0,deprecation
297,DelegatingSSLSocketFactory.java,p,0,0,deprecation
301,DelegatingSSLSocketFactory.java,p,0,0,deprecation
302,DelegatingSSLSocketFactory.java,default jsse is not truly the the default jsse implementation because,0,0,deprecation
303,DelegatingSSLSocketFactory.java,the gcm cipher is disabled when running on java 8.,0,0,deprecation
304,DelegatingSSLSocketFactory.java,"however, the name",0,0,deprecation
305,DelegatingSSLSocketFactory.java,was not changed in order to preserve backwards compatibility.,0,0,deprecation
306,DelegatingSSLSocketFactory.java,"instead,",0,0,deprecation
307,DelegatingSSLSocketFactory.java,a new mode called default jsse with gcm delegates to the default jsse,0,0,deprecation
308,DelegatingSSLSocketFactory.java,implementation with no changes to the list of enabled ciphers.,0,0,deprecation
309,DelegatingSSLSocketFactory.java,p,0,0,deprecation
1348,TimelineStorageMonitor.java,this abstract class is for monitoring health of timeline storage.,0,0,deprecation
1352,TonyRuntimeFactory.java,implementation of runtimefactory with tony runtime,0,0,deprecation
1355,TypedEvent.java,basic event implementation to implement custom events.,0,0,deprecation
1356,TypedEvent.java,@param t,0,0,deprecation
1360,UniformSizeInputFormat.java,"uniformsizeinputformat extends the inputformat class, to produce",0,0,deprecation
1361,UniformSizeInputFormat.java,input splits for distcp.,0,0,deprecation
1362,UniformSizeInputFormat.java,it looks at the copy listing and groups the contents into input splits such,0,0,deprecation
1363,UniformSizeInputFormat.java,that the total number of bytes to be copied for each input split is,0,0,deprecation
1364,UniformSizeInputFormat.java,uniform.,0,0,deprecation
1370,Utils.java,a utility class.,0,0,deprecation
1371,Utils.java,it provides,0,0,deprecation
1372,Utils.java,a path filter utility to filter out output part files in the output dir,0,0,deprecation
1373,Utils.java,this class filters output part files from the given directory,0,0,deprecation
1374,Utils.java,it does not accept files with filenames logs and success.,0,0,deprecation
1375,Utils.java,this can be used to list paths of output directory as follows,0,0,deprecation
352,DelegationTokenIdentifier.java,a delegation token identifier that is specific to hdfs.,0,0,deprecation
1376,Utils.java,"path filelist fileutil^stat2paths fs^liststatus outdir,",0,0,deprecation
1377,Utils.java,new outputfilesfilter,0,0,deprecation
1378,Utils.java,this class filters log files from directory given,0,0,deprecation
1379,Utils.java,it doesnt accept paths having logs.,0,0,deprecation
1380,Utils.java,this can be used to list paths of output directory as follows,0,0,deprecation
1381,Utils.java,"path filelist fileutil^stat2paths fs^liststatus outdir,",0,0,deprecation
1382,Utils.java,new outputlogfilter,0,0,deprecation
362,DfsServlet.java,a base class for the servlets in dfs.,0,0,deprecation
364,DiskBalancerCluster.java,diskbalancercluster represents the nodes that we are working against.,0,0,deprecation
365,DiskBalancerCluster.java,p,0,0,deprecation
366,DiskBalancerCluster.java,please note,0,0,deprecation
367,DiskBalancerCluster.java,semantics of inclusionlist and exclusionlists.,0,0,deprecation
368,DiskBalancerCluster.java,p,0,0,deprecation
369,DiskBalancerCluster.java,if a non empty inclusionlist is specified then the diskbalancer assumes that,0,0,deprecation
370,DiskBalancerCluster.java,the user is only interested in processing that list of nodes.,0,0,deprecation
371,DiskBalancerCluster.java,this node list,0,0,deprecation
372,DiskBalancerCluster.java,is checked against the exclusionlist and only the nodes in inclusionlist but,0,0,deprecation
373,DiskBalancerCluster.java,not in exclusionlist is processed.,0,0,deprecation
374,DiskBalancerCluster.java,p,0,0,deprecation
375,DiskBalancerCluster.java,"if inclusionlist is empty, then we assume that all live nodes in the nodes is",0,0,deprecation
376,DiskBalancerCluster.java,to be processed by diskbalancer.,0,0,deprecation
1400,VolumeSet.java,volumeset to manage hdds volumes in a datanode.,0,0,deprecation
377,DiskBalancerCluster.java,in that case diskbalancer will avoid any,0,0,deprecation
378,DiskBalancerCluster.java,nodes specified in the exclusionlist but will process all nodes in the,0,0,deprecation
379,DiskBalancerCluster.java,cluster.,0,0,deprecation
1403,WritableComparator.java,a comparator for @link writablecomparable s.,0,0,deprecation
380,DiskBalancerCluster.java,p,0,0,deprecation
1404,WritableComparator.java,p this base implementation uses the natural ordering.,0,0,deprecation
381,DiskBalancerCluster.java,"in other words, an empty inclusionlist is means all the nodes otherwise",0,0,deprecation
1405,WritableComparator.java,to define alternate,0,0,deprecation
382,DiskBalancerCluster.java,only a given list is processed and exclusionlist is always honored.,0,0,deprecation
1406,WritableComparator.java,"orderings, override @link #compare writablecomparable,writablecomparable .",0,0,deprecation
1407,WritableComparator.java,p one may optimize compare intensive operations by overriding,0,0,deprecation
1408,WritableComparator.java,"@link #compare byte ,int,int,byte ,int,int .",0,0,deprecation
1409,WritableComparator.java,static utility methods are,0,0,deprecation
1410,WritableComparator.java,provided to assist in optimized implementations of this method.,0,0,deprecation
401,DistributedSchedulingAllocateRequest.java,"object used by the application master when distributed scheduling is enabled,",0,0,deprecation
1430,YarnAuthorizationProvider.java,an implementation of the interface will provide authorization related,0,0,deprecation
1431,YarnAuthorizationProvider.java,information and enforce permission check.,0,0,deprecation
408,DockerKillCommand.java,encapsulates the docker kill command and its command line arguments.,0,0,deprecation
1432,YarnAuthorizationProvider.java,it is excepted that any of the,0,0,deprecation
1433,YarnAuthorizationProvider.java,methods defined in this interface should be non blocking call and should not,0,0,deprecation
410,EditLogTailer.java,editlogtailer represents a thread which periodically reads from edits,0,0,deprecation
1434,YarnAuthorizationProvider.java,involve expensive computation as these method could be invoked in rpc.,0,0,deprecation
411,EditLogTailer.java,journals and applies the transactions contained within to a given,0,0,deprecation
412,EditLogTailer.java,fsnamesystem.,0,0,deprecation
413,EditLogTailer.java,the thread which does the actual work of tailing edits journals and,0,0,deprecation
414,EditLogTailer.java,applying the transactions to the fsns.,0,0,deprecation
415,EditLogTailer.java,manage the active namenode proxy .,0,0,deprecation
416,EditLogTailer.java,this cannot just be the a single proxy since we could,0,0,deprecation
417,EditLogTailer.java,"failover across a number of namenodes, rather than just between an active and a standby.",0,0,deprecation
418,EditLogTailer.java,p,0,0,deprecation
419,EditLogTailer.java,we lazily get a proxy to one of the configured namenodes and attempt to make the request,0,0,deprecation
1443,YarnServiceJobSubmitter.java,submit a job to cluster.,0,0,deprecation
420,EditLogTailer.java,against it.,0,0,deprecation
421,EditLogTailer.java,"if it doesn t succeed, either because the proxy failed to be created or the request",0,0,deprecation
422,EditLogTailer.java,"failed, we try the next nn in the list.",0,0,deprecation
423,EditLogTailer.java,we try this up to the configuration maximum number of,0,0,deprecation
424,EditLogTailer.java,retries before throwing up our hands.,0,0,deprecation
425,EditLogTailer.java,a working proxy is retained across attempts since we,0,0,deprecation
426,EditLogTailer.java,expect the active namenode to switch rarely.,0,0,deprecation
427,EditLogTailer.java,p,0,0,deprecation
428,EditLogTailer.java,this mechanism is b very bad b for cases where we care about being i fast i it just,0,0,deprecation
429,EditLogTailer.java,blindly goes and tries namenodes.,0,0,deprecation
450,ErasureCodingPolicyManager.java,this manages erasure coding policies predefined and activated in the system.,0,0,deprecation
451,ErasureCodingPolicyManager.java,it loads customized policies and syncs with persisted ones in,0,0,deprecation
452,ErasureCodingPolicyManager.java,namenode image.,0,0,deprecation
453,ErasureCodingPolicyManager.java,this class is instantiated by the fsnamesystem.,0,0,deprecation
459,EventWatcher.java,event watcher the re send a message after timeout.,0,0,deprecation
461,EventWatcher.java,event watcher will send the tracked payload event after a timeout period,0,0,deprecation
462,EventWatcher.java,unless a confirmation from the original event completion event is arrived.,0,0,deprecation
463,EventWatcher.java,@param timeout payload the type of the events which are tracked.,0,0,deprecation
464,EventWatcher.java,@param completion payload the type of event which could cancel the,0,0,deprecation
465,EventWatcher.java,tracking.,0,0,deprecation
477,FairOrderingPolicy.java,an orderingpolicy which orders schedulableentities for fairness see,0,0,deprecation
478,FairOrderingPolicy.java,fairscheduler,0,0,deprecation
479,FairOrderingPolicy.java,"fairsharepolicy , generally, processes with lesser usage are lesser.",0,0,deprecation
480,FairOrderingPolicy.java,if,0,0,deprecation
481,FairOrderingPolicy.java,sizedbasedweight is set to true then an application with high demand,0,0,deprecation
482,FairOrderingPolicy.java,may be prioritized ahead of an application with less usage.,0,0,deprecation
483,FairOrderingPolicy.java,this,0,0,deprecation
484,FairOrderingPolicy.java,"is to offset the tendency to favor small apps, which could result in",0,0,deprecation
486,FairOrderingPolicy.java,"continuously optional, default false",0,0,deprecation
500,FederationPolicyException.java,generic policy exception.,0,0,deprecation
506,FederationStateStoreInvalidInputException.java,"exception thrown by the @code federationmembershipstatestoreinputvalidator ,",0,0,deprecation
511,FileSystemApplicationHistoryStore.java,file system implementation of @link applicationhistorystore .,0,0,deprecation
516,FileSystemApplicationHistoryStore.java,@link #applicationstarted applicationstartdata is supposed to,0,0,deprecation
517,FileSystemApplicationHistoryStore.java,be invoked first when writing any history data of one application and it will,0,0,deprecation
518,FileSystemApplicationHistoryStore.java,"open a file, while @link #applicationfinished applicationfinishdata is",0,0,deprecation
519,FileSystemApplicationHistoryStore.java,supposed to be last writing operation and will close the file.,0,0,deprecation
531,FsConstants.java,filesystem related constants.,0,0,deprecation
537,GetNamespaceInfoResponse.java,api response for listing hdfs namespaces present in the state store.,0,0,deprecation
554,HadoopIllegalArgumentException.java,indicates that a method has been passed illegal or invalid argument.,0,0,deprecation
560,HashResolver.java,order the destinations based on consistent hashing.,0,0,deprecation
562,HttpHeaderConfigurations.java,responsible to keep all abfs http headers here.,0,0,deprecation
564,IDataLoader.java,an idataloader loads data on demand,0,0,deprecation
566,InconsistentS3ClientFactory.java,s3 client factory used for testing with eventual consistency fault injection.,0,0,deprecation
567,InconsistentS3ClientFactory.java,this client is for testing i only i it is in the production,0,0,deprecation
568,InconsistentS3ClientFactory.java,@code hadoop aws module to enable integration tests to use this,0,0,deprecation
569,InconsistentS3ClientFactory.java,just by editing the hadoop configuration used to bring up the client.,0,0,deprecation
574,InfoKeyHandler.java,executes info object.,0,0,deprecation
579,ITestAbfsReadWriteAndSeek.java,"test read, write and seek.",0,0,deprecation
584,ITestAzureNativeContractSeek.java,contract test.,0,0,deprecation
588,ITestCommitOperations.java,this is done with an inconsistent client.,0,0,deprecation
591,ITestListPerformance.java,test list performance.,0,0,deprecation
593,ITestS3Select.java,test the s3 select feature with some basic sql commands.,0,0,deprecation
594,ITestS3Select.java,executed if the destination store declares its support for the feature.,0,0,deprecation
600,KerberosDelegationTokenAuthenticator.java,the code kerberosdelegationtokenauthenticator code provides support for,0,0,deprecation
601,KerberosDelegationTokenAuthenticator.java,kerberos spnego authentication mechanism and support for hadoop delegation,0,0,deprecation
602,KerberosDelegationTokenAuthenticator.java,token operations.,0,0,deprecation
604,KerberosDelegationTokenAuthenticator.java,it falls back to the @link pseudodelegationtokenauthenticator if the http,0,0,deprecation
605,KerberosDelegationTokenAuthenticator.java,endpoint does not trigger a spnego authentication,0,0,deprecation
613,LocalizationStatusPBImpl.java,pb impl of @link localizationstatus .,0,0,deprecation
616,LocatedFileStatus.java,this class defines a filestatus that includes a file s block locations.,0,0,deprecation
618,LoggedTask.java,a @link loggedtask represents a hadoop task that is part of a hadoop job.,0,0,deprecation
619,LoggedTask.java,"it knows about the pssibly empty sequence of attempts, its i o footprint,",0,0,deprecation
620,LoggedTask.java,and its runtime.,0,0,deprecation
621,LoggedTask.java,all of the public methods are simply accessors for the instance variables we,0,0,deprecation
622,LoggedTask.java,want to write out in the json files.,0,0,deprecation
629,LogParserUtil.java,common utility functions for @link logparser .,0,0,deprecation
634,LRUCacheHashMap.java,lru cache with a configurable maximum cache size and access order.,0,0,deprecation
637,MapContext.java,the context that is given to the @link mapper .,0,0,deprecation
638,MapContext.java,@param keyin the key input type to the mapper,0,0,deprecation
639,MapContext.java,@param valuein the value input type to the mapper,0,0,deprecation
640,MapContext.java,@param keyout the key output type from the mapper,0,0,deprecation
641,MapContext.java,@param valueout the value output type from the mapper,0,0,deprecation
649,MetaBlockAlreadyExists.java,exception meta block with the same name already exists.,0,0,deprecation
651,MetricsCache.java,a metrics cache for sinks that don t support sparse updates.,0,0,deprecation
652,MetricsCache.java,cached record,0,0,deprecation
656,NativeBatchProcessor.java,"used to create channel, transfer data and command between java and native",0,0,deprecation
658,NativeSingleLineParser.java,this sample parser will parse the sample log and extract the resource,0,0,deprecation
659,NativeSingleLineParser.java,skyline.,0,0,deprecation
660,NativeSingleLineParser.java,p the expected log format is normalizedjobname numinstances submittime,0,0,deprecation
661,NativeSingleLineParser.java,starttime endtime jobinstancename memusage coreusage,0,0,deprecation
669,Nfs3Status.java,success or error status is reported in nfs3 responses.,0,0,deprecation
671,Node2ObjectsMap.java,this data structure maintains the list of containers that is on a datanode.,0,0,deprecation
672,Node2ObjectsMap.java,this information is built from the dn container reports.,0,0,deprecation
677,NodeUpdateType.java,p,0,0,deprecation
682,NullOutputFormat.java,consume all outputs and put them in dev null.,0,0,deprecation
685,OMNodeDetails.java,this class stores om node details.,0,0,deprecation
686,OMNodeDetails.java,builder class for omnodedetails.,0,0,deprecation
690,OpportunisticContainersStatusPBImpl.java,protocol buffer implementation of opportunisticcontainersstatus.,0,0,deprecation
692,OzoneObj.java,class representing an unique ozone object.,0,0,deprecation
693,OzoneObj.java,ozone objects supported for acl.,0,0,deprecation
694,OzoneObj.java,ozone objects supported for acl.,0,0,deprecation
697,Parser.java,a class for parsing outputs,0,0,deprecation
699,PartialOutputCommitter.java,interface for an @link org^apache.hadoop^mapreduce.outputcommitter,0,0,deprecation
703,PartitionResourcesInfo.java,this class represents queue user resource usage info for a given partition,0,0,deprecation
709,ProcessIdFileReader.java,helper functionality to read the pid from a file.,0,0,deprecation
711,QuasiMonteCarlo.java,a map reduce program that estimates the value of pi,0,0,deprecation
712,QuasiMonteCarlo.java,using a quasi monte carlo qmc method.,0,0,deprecation
713,QuasiMonteCarlo.java,arbitrary integrals can be approximated numerically by qmc methods.,0,0,deprecation
714,QuasiMonteCarlo.java,"in this example,",0,0,deprecation
715,QuasiMonteCarlo.java,"we use a qmc method to approximate the integral i int s f x dx ,",0,0,deprecation
716,QuasiMonteCarlo.java,"where s 0,1 ^2 is a unit square,",0,0,deprecation
717,QuasiMonteCarlo.java,"x x 1,x 2 is a 2 dimensional point,",0,0,deprecation
718,QuasiMonteCarlo.java,"and f is a function describing the inscribed circle of the square s ,",0,0,deprecation
719,QuasiMonteCarlo.java,"f x 1 if 2x 1 1 ^2 2x 2 1 ^2 &lt 1 and f x 0 , otherwise.",0,0,deprecation
720,QuasiMonteCarlo.java,it is easy to see that pi is equal to 4i .,0,0,deprecation
721,QuasiMonteCarlo.java,so an approximation of pi is obtained once i is evaluated numerically.,0,0,deprecation
722,QuasiMonteCarlo.java,there are better methods for computing pi.,0,0,deprecation
723,QuasiMonteCarlo.java,we emphasize numerical approximation of arbitrary integrals in this example.,0,0,deprecation
724,QuasiMonteCarlo.java,"for computing many digits of pi, consider using bbp.",0,0,deprecation
725,QuasiMonteCarlo.java,the implementation is discussed below.,0,0,deprecation
726,QuasiMonteCarlo.java,mapper,0,0,deprecation
727,QuasiMonteCarlo.java,generate points in a unit square,0,0,deprecation
728,QuasiMonteCarlo.java,and then count points inside outside of the inscribed circle of the square.,0,0,deprecation
729,QuasiMonteCarlo.java,reducer,0,0,deprecation
741,QuasiMonteCarlo.java,generate points in a unit square,0,0,deprecation
742,QuasiMonteCarlo.java,and then count points inside outside of the inscribed circle of the square.,0,0,deprecation
775,Query.java,check if a record matches a query.,0,0,deprecation
776,Query.java,the query is usually a partial record.,0,0,deprecation
777,Query.java,@param t type of the record to query.,0,0,deprecation
781,QueueName.java,represents a queue name.,0,0,deprecation
783,RandomKeyGenerator.java,data generator tool to generate as much keys as possible.,0,0,deprecation
784,RandomKeyGenerator.java,wrapper to hold ozone keyvalidate entry.,0,0,deprecation
785,RandomKeyGenerator.java,validates the write done in ozone cluster.,0,0,deprecation
789,ReencryptionUpdater.java,"class for finalizing re encrypt edek operations, by updating file xattrs with",0,0,deprecation
791,ReencryptionUpdater.java,p,0,0,deprecation
792,ReencryptionUpdater.java,the tasks are submitted by reencryptionhandler.,0,0,deprecation
793,ReencryptionUpdater.java,p,0,0,deprecation
794,ReencryptionUpdater.java,"it is assumed only 1 updater will be running, since updating file xattrs",0,0,deprecation
795,ReencryptionUpdater.java,"requires namespace write lock, and performance gain from multi threading",0,0,deprecation
796,ReencryptionUpdater.java,is limited.,0,0,deprecation
797,ReencryptionUpdater.java,class to track re encryption submissions of a single zone.,0,0,deprecation
798,ReencryptionUpdater.java,it contains,0,0,deprecation
799,ReencryptionUpdater.java,"all the submitted futures, and statistics about how far the futures are",0,0,deprecation
800,ReencryptionUpdater.java,processed.,0,0,deprecation
801,ReencryptionUpdater.java,class representing the task for one batch of a re encryption command.,0,0,deprecation
802,ReencryptionUpdater.java,it,0,0,deprecation
803,ReencryptionUpdater.java,also contains statistics about how far this single batch has been executed.,0,0,deprecation
804,ReencryptionUpdater.java,class that encapsulates re encryption details of a file.,0,0,deprecation
830,RegistryInternalConstants.java,internal constants for the registry.,0,0,deprecation
831,RegistryInternalConstants.java,these are the things which aren t visible to users.,0,0,deprecation
834,RegistryOperations.java,registry operations,0,0,deprecation
837,ResourceBlacklistRequest.java,@link resourceblacklistrequest encapsulates the list of resource names which should be added or removed from the em blacklist em of resources for the application.,0,0,deprecation
838,ResourceBlacklistRequest.java,@see resourcerequest,0,0,deprecation
839,ResourceBlacklistRequest.java,@see applicationmasterprotocol#allocate org^apache.hadoop^yarn.api^protocolrecords.allocaterequest,0,0,deprecation
844,ResourceRequestsJsonVerifications.java,performs value verifications on,0,0,deprecation
845,ResourceRequestsJsonVerifications.java,@link org^apache.hadoop^yarn.server^resourcemanager.webapp^dao.resourcerequestinfo,0,0,deprecation
846,ResourceRequestsJsonVerifications.java,objects against the values of @link resourcerequest .,0,0,deprecation
847,ResourceRequestsJsonVerifications.java,with the help of the,0,0,deprecation
848,ResourceRequestsJsonVerifications.java,"@link builder , users can also make verifications of the custom resource",0,0,deprecation
849,ResourceRequestsJsonVerifications.java,types and its values.,0,0,deprecation
850,ResourceRequestsJsonVerifications.java,builder class for @link resourcerequestsjsonverifications .,0,0,deprecation
868,RMAdminRequestInterceptor.java,"defines the contract to be implemented by the request intercepter classes,",0,0,deprecation
873,RSLegacyRawErasureCoderFactory.java,a raw coder factory for the legacy raw reed solomon coder in java.,0,0,deprecation
876,SafeModeException.java,client cannot modified namespace until the safe mode is off.,0,0,deprecation
878,SchedulerQueueManager.java,context of the queues in scheduler.,0,0,deprecation
880,SequenceFileRecordReader.java,an @link recordreader for @link sequencefile s.,0,0,deprecation
883,ShellBasedUnixGroupsMapping.java,a simple shell based implementation of @link groupmappingserviceprovider that exec s the code groups code shell command to fetch the group,0,0,deprecation
887,StandardSocketFactory.java,specialized socketfactory to create sockets with a socks proxy,0,0,deprecation
889,StateStoreFileSystemImpl.java,@link statestoredriver implementation based on a filesystem.,0,0,deprecation
898,StreamBaseRecordReader.java,shared functionality for hadoopstreaming formats.,0,0,deprecation
899,StreamBaseRecordReader.java,a custom reader can be,0,0,deprecation
900,StreamBaseRecordReader.java,defined to be a recordreader with the constructor below and is selected with,0,0,deprecation
901,StreamBaseRecordReader.java,the option bin hadoopstreaming inputreader .,0,0,deprecation
902,StreamBaseRecordReader.java,@see streamxmlrecordreader,0,0,deprecation
909,StructureGenerator.java,this program generates a random namespace structure with the following,0,0,deprecation
910,StructureGenerator.java,constraints,0,0,deprecation
911,StructureGenerator.java,1,0,0,deprecation
912,StructureGenerator.java,"the number of subdirectories is a random number in minwidth, maxwidth .",0,0,deprecation
913,StructureGenerator.java,2,0,0,deprecation
914,StructureGenerator.java,"the maximum depth of each subdirectory is a random number 2 maxdepth 3, maxdepth .",0,0,deprecation
915,StructureGenerator.java,3,0,0,deprecation
916,StructureGenerator.java,files are randomly placed in the empty directories.,0,0,deprecation
917,StructureGenerator.java,the size of each,0,0,deprecation
918,StructureGenerator.java,file follows gaussian distribution.,0,0,deprecation
919,StructureGenerator.java,the generated namespace structure is described by two files in the output,0,0,deprecation
920,StructureGenerator.java,directory.,0,0,deprecation
922,StructureGenerator.java,each line of the second file contains,0,0,deprecation
923,StructureGenerator.java,"the full name of a file and its size, separated by a blank.",0,0,deprecation
924,StructureGenerator.java,the synopsis of the command is,0,0,deprecation
925,StructureGenerator.java,java structuregenerator,0,0,deprecation
926,StructureGenerator.java,maxdepth maxdepth maximum depth of the directory tree default is 5.,0,0,deprecation
927,StructureGenerator.java,minwidth minwidth minimum number of subdirectories per directories default is 1,0,0,deprecation
928,StructureGenerator.java,maxwidth maxwidth maximum number of subdirectories per directories default is 5,0,0,deprecation
929,StructureGenerator.java,numoffiles #offiles the total number of files default is 10.,0,0,deprecation
930,StructureGenerator.java,avgfilesize avgfilesizeinblocks average size of blocks default is 1.,0,0,deprecation
931,StructureGenerator.java,outdir outdir output directory default is the current directory.,0,0,deprecation
932,StructureGenerator.java,seed seed random number generator seed default is the current time.,0,0,deprecation
933,StructureGenerator.java,in memory representation of a directory in memory representation of a file,0,0,deprecation
960,SwiftBadRequestException.java,thrown to indicate that data locality can t be calculated or requested path is incorrect.,0,0,deprecation
964,SwiftRestClient.java,this implements the client side of the swift rest api.,0,0,deprecation
971,SwiftRestClient.java,get the current operation statistics.,0,0,deprecation
972,SwiftRestClient.java,@return a snapshot of the statistics,0,0,deprecation
973,SwiftRestClient.java,base class for all swift rest operations.,0,0,deprecation
974,SwiftRestClient.java,@param m request,0,0,deprecation
975,SwiftRestClient.java,@param r result,0,0,deprecation
976,SwiftRestClient.java,get the current operation statistics.,0,0,deprecation
977,SwiftRestClient.java,@return a snapshot of the statistics,0,0,deprecation
981,SwiftRestClient.java,get the current operation statistics.,0,0,deprecation
982,SwiftRestClient.java,@return a snapshot of the statistics,0,0,deprecation
983,SwiftRestClient.java,generate an auth message.,0,0,deprecation
984,SwiftRestClient.java,@param r response,0,0,deprecation
985,SwiftRestClient.java,get the current operation statistics.,0,0,deprecation
986,SwiftRestClient.java,@return a snapshot of the statistics,0,0,deprecation
987,SwiftRestClient.java,create operation.,0,0,deprecation
989,SwiftRestClient.java,get the current operation statistics.,0,0,deprecation
990,SwiftRestClient.java,@return a snapshot of the statistics,0,0,deprecation
991,SwiftRestClient.java,delete operation.,0,0,deprecation
992,SwiftRestClient.java,@param r,0,0,deprecation
1015,TableConfig.java,class that maintains table configuration.,0,0,deprecation
1017,TestAddBlock.java,test addblockop is written and read correctly,0,0,deprecation
1020,TestAdlContractDeleteLive.java,test delete contract test.,0,0,deprecation
1022,TestAdlContractSeekLive.java,test seek operation on adl file system.,0,0,deprecation
1536,KVStore.java,kvstore instances are thread safe for both reads and writes.,0,0,deprecation
1537,KVStore.java,p,1,0,deprecation
1445,ChunkFetchSuccess.java,response to @link chunkfetchrequest when a chunk exists and has been successfully fetched.,0,0,deprecation
1573,LevelDB.java,implementation of kvstore that uses leveldb as the underlying data store.,1,0,deprecation
1448,ChunkFetchSuccess.java,"similarly, the client side decoding will reuse the netty bytebuf as the buffer.",0,0,deprecation
1576,LocalDiskShuffleDataIO.java,implementation of the @link shuffledataio plugin system that replicates the local shuffle,1,0,deprecation
1577,LocalDiskShuffleDataIO.java,storage and index file functionality that has historically been used from spark 24 and earlier.,0,0,deprecation
1451,ExecutorPlugin.java,a plugin which can be automatically instantiated within each spark executor.,1,0,deprecation
1581,MessageWithHeader.java,a wrapper message that holds two separate pieces a header and a body .,0,0,deprecation
1584,RemoveBlocks.java,request to remove a set of blocks.,1,0,deprecation
1586,StreamHandle.java,identifier for a fixed number of chunks to read from a stream created by an open blocks,0,0,deprecation
1587,StreamHandle.java,message.,1,0,deprecation
1588,StreamHandle.java,this is used by @link org^apache.spark^network.shuffle^oneforoneblockfetcher .,0,0,deprecation
1592,TBoolColumn.java,"the set of fields this struct contains, along with convenience methods for finding and manipulating them.",1,0,deprecation
1594,UploadBlockStream.java,"a request to upload a block, which the destination should receive as a stream.",0,0,deprecation
1595,UploadBlockStream.java,the actual block data is not contained here.,1,0,deprecation
1596,UploadBlockStream.java,it will be passed to the streamcallbackwithid,0,0,deprecation
1469,FlatMapFunction.java,a function that returns zero or more output records from each input record.,1,0,deprecation
1597,UploadBlockStream.java,that is returned from rpchandler^receivestream,0,0,deprecation
1471,JavaRecord.java,java bean class to be used with the example javasqlnetworkwordcount.,1,0,deprecation
1473,JavaStreamingTestExample.java,"perform streaming testing using welch s 2 sample t test on a stream of data, where the data",0,0,deprecation
1474,JavaStreamingTestExample.java,stream arrives as text files in a directory.,1,0,deprecation
1475,JavaStreamingTestExample.java,stops when the two groups are statistically,0,0,deprecation
1476,JavaStreamingTestExample.java,significant p value 005 or after a user specified timeout in number of batches is exceeded.,1,0,deprecation
1477,JavaStreamingTestExample.java,"the rows of the text files must be in the form boolean, double .",0,0,deprecation
1478,JavaStreamingTestExample.java,for example,1,0,deprecation
1479,JavaStreamingTestExample.java,"false, 392",0,0,deprecation
1480,JavaStreamingTestExample.java,"true, 9932",1,0,deprecation
1481,JavaStreamingTestExample.java,usage,0,0,deprecation
1482,JavaStreamingTestExample.java,javastreamingtestexample datadir batchduration numbatchestimeout,0,0,deprecation
1483,JavaStreamingTestExample.java,to run on your local machine using the directory datadir with 5 seconds between each batch and,0,0,deprecation
1484,JavaStreamingTestExample.java,"a timeout after 100 insignificant batches, call",0,0,deprecation
1485,JavaStreamingTestExample.java,bin run example mllib^javastreamingtestexample datadir 5 100,0,0,deprecation
1486,JavaStreamingTestExample.java,as you add text files to datadir the significance test wil continually update every,0,0,deprecation
1487,JavaStreamingTestExample.java,batchduration seconds until the test becomes significant p value 005 or the number of,0,0,deprecation
1488,JavaStreamingTestExample.java,batches processed exceeds numbatchestimeout .,0,0,deprecation
1505,KVStore.java,abstraction for a local key value store for storing app data.,0,0,deprecation
1506,KVStore.java,p,0,0,deprecation
1507,KVStore.java,there are two main features provided by the implementations of this interface,0,0,deprecation
1508,KVStore.java,p,0,0,deprecation
1509,KVStore.java,h3 serialization h3,0,0,deprecation
1510,KVStore.java,p,0,0,deprecation
1511,KVStore.java,"if the underlying data store requires serialization, data will be serialized to and deserialized",0,0,deprecation
1512,KVStore.java,"using a @link kvstoreserializer , which can be customized by the application.",0,0,deprecation
1513,KVStore.java,the serializer is,0,0,deprecation
1514,KVStore.java,"based on jackson, so it supports all the jackson annotations for controlling the serialization of",0,0,deprecation
1515,KVStore.java,app defined types.,0,0,deprecation
1516,KVStore.java,p,0,0,deprecation
1517,KVStore.java,p,0,0,deprecation
1518,KVStore.java,data is also automatically compressed to save disk space.,0,0,deprecation
1519,KVStore.java,p,0,0,deprecation
1520,KVStore.java,h3 automatic key management h3,0,0,deprecation
1521,KVStore.java,p,0,0,deprecation
1522,KVStore.java,"when using the built in key management, the implementation will automatically create unique",0,0,deprecation
1523,KVStore.java,keys for each type written to the store.,0,0,deprecation
1524,KVStore.java,"keys are based on the type name, and always start",0,0,deprecation
1525,KVStore.java,with the prefix character so that it s easy to use both manual and automatic key,0,0,deprecation
1526,KVStore.java,management apis without conflicts .,0,0,deprecation
1527,KVStore.java,p,0,0,deprecation
1528,KVStore.java,p,0,0,deprecation
1529,KVStore.java,another feature of automatic key management is indexing by annotating fields or methods of,0,0,deprecation
1530,KVStore.java,"objects written to the store with @link kvindex , indices are created to sort the data",0,0,deprecation
1531,KVStore.java,by the values of those properties.,0,0,deprecation
1532,KVStore.java,this makes it possible to provide sorting without having,0,0,deprecation
1533,KVStore.java,to load all instances of those types from the store.,0,0,deprecation
1534,KVStore.java,p,0,0,deprecation
1535,KVStore.java,p,0,0,deprecation
2048,ICodeReaderFactory.java,@noreference this interface is not intended to be referenced by clients.,0,0,deprecation
2055,ICPointerType.java,@noimplement this interface is not intended to be implemented by clients.,1,0,deprecation
2058,ICPPAliasTemplateInstance.java,represents an instance of an alias template 145.7 .,0,0,deprecation
2060,ICPPAliasTemplateInstance.java,@noextend this interface is not intended to be extended by clients.,1,0,deprecation
2061,ICPPAliasTemplateInstance.java,@noimplement this interface is not intended to be implemented by clients.,0,0,deprecation
2066,ICPPASTLinkageSpecification.java,this interface represents a linkage specification.,1,0,deprecation
2067,ICPPASTLinkageSpecification.java,eg extern c .,0,0,deprecation
2579,TriggerCellModifier.java,cell modifier used to edit the trigger value.,1,0,deprecation
2068,ICPPASTLinkageSpecification.java,@noextend this interface is not intended to be extended by clients.,0,0,deprecation
2069,ICPPASTLinkageSpecification.java,@noimplement this interface is not intended to be implemented by clients.,1,0,deprecation
2581,TypedCDTViewerFilter.java,see org^eclipse.cdt^internal.ui^dialogs.typedviewerfilter,0,0,deprecation
2582,TypedCDTViewerFilter.java,@noextend this class is not intended to be subclassed by clients.,1,0,deprecation
2585,UncallCommandHandler.java,command handler to trigger an uncall operation,0,0,deprecation
2074,ICPPASTVirtSpecifier.java,a virt specifier at the end of a function declaration.,1,0,deprecation
2075,ICPPASTVirtSpecifier.java,"there are two virt specifiers, final and override .",0,0,deprecation
2076,ICPPASTVirtSpecifier.java,@noimplement this interface is not intended to be implemented by clients.,1,0,deprecation
2077,ICPPASTVirtSpecifier.java,@noextend this interface is not intended to be extended by clients.,0,0,deprecation
2589,UPCKeyword.java,enumeration of keywords that upc adds to c99.,1,0,deprecation
2590,UPCKeyword.java,@author mike kucera,0,0,deprecation
2593,UPCLanguage.java,"implementation of the ilanguage extension point, adds upc as a language to cdt.",1,0,deprecation
2594,UPCLanguage.java,@author mike kucera,0,0,deprecation
2085,ICPPPointerToMemberType.java,@noimplement this interface is not intended to be implemented by clients.,1,0,deprecation
2597,VMHasChildrenUpdate.java,helper class implementation of the @link ihaschildrenupdate update object.,0,0,deprecation
2598,VMHasChildrenUpdate.java,@see vmviewerupdate,1,0,deprecation
2090,ICSourceNotFoundDescription.java,an instance is usually provided by an adapter.,0,0,deprecation
2603,WhiteSpaceOptions.java,manage code formatter white space options on a higher level.,1,0,deprecation
2604,WhiteSpaceOptions.java,preview snippets.,0,0,deprecation
2093,IDsfDebugServicesFactory.java,a factory to create dsf services.,1,0,deprecation
2605,WhiteSpaceOptions.java,"private void createbeforeellipsis map workingvalues, innernode parent createoption parent, workingvalues, formattermessages^whitespaceoptions vararg parameter, defaultcodeformatterconstants^formatter insert space before ellipsis, vararg parameter preview private void createafterellipsis map workingvalues, innernode parent createoption parent, workingvalues, formattermessages^whitespaceoptions vararg parameter, defaultcodeformatterconstants^formatter insert space after ellipsis, vararg parameter preview syntax element tree private innernode createreturntree map workingvalues, innernode parent final innernode root new innernode parent, workingvalues, formattermessages^whitespaceoptions return createoption root, workingvalues, formattermessages^whitespacetabpage before parenthesized expressions, defaultcodeformatterconstants^formatter insert space before parenthesized expression in return, return preview return root private innernode createthrowtree map workingvalues, innernode parent final innernode root new innernode parent, workingvalues, formattermessages^whitespaceoptions throw createoption root, workingvalues, formattermessages^whitespacetabpage before parenthesized expressions, defaultcodeformatterconstants^formatter insert space before parenthesized expression in throw, throw preview return root",0,0,deprecation
2606,WhiteSpaceOptions.java,represents a node in the options tree.,1,0,deprecation
2607,WhiteSpaceOptions.java,preview snippets.,0,0,deprecation
2608,WhiteSpaceOptions.java,"private void createbeforeellipsis map workingvalues, innernode parent createoption parent, workingvalues, formattermessages^whitespaceoptions vararg parameter, defaultcodeformatterconstants^formatter insert space before ellipsis, vararg parameter preview private void createafterellipsis map workingvalues, innernode parent createoption parent, workingvalues, formattermessages^whitespaceoptions vararg parameter, defaultcodeformatterconstants^formatter insert space after ellipsis, vararg parameter preview syntax element tree private innernode createreturntree map workingvalues, innernode parent final innernode root new innernode parent, workingvalues, formattermessages^whitespaceoptions return createoption root, workingvalues, formattermessages^whitespacetabpage before parenthesized expressions, defaultcodeformatterconstants^formatter insert space before parenthesized expression in return, return preview return root private innernode createthrowtree map workingvalues, innernode parent final innernode root new innernode parent, workingvalues, formattermessages^whitespaceoptions throw createoption root, workingvalues, formattermessages^whitespacetabpage before parenthesized expressions, defaultcodeformatterconstants^formatter insert space before parenthesized expression in throw, throw preview return root",1,0,deprecation
2609,WhiteSpaceOptions.java,a node representing a group of options in the tree.,0,0,deprecation
2610,WhiteSpaceOptions.java,preview snippets.,1,0,deprecation
2611,WhiteSpaceOptions.java,"private void createbeforeellipsis map workingvalues, innernode parent createoption parent, workingvalues, formattermessages^whitespaceoptions vararg parameter, defaultcodeformatterconstants^formatter insert space before ellipsis, vararg parameter preview private void createafterellipsis map workingvalues, innernode parent createoption parent, workingvalues, formattermessages^whitespaceoptions vararg parameter, defaultcodeformatterconstants^formatter insert space after ellipsis, vararg parameter preview syntax element tree private innernode createreturntree map workingvalues, innernode parent final innernode root new innernode parent, workingvalues, formattermessages^whitespaceoptions return createoption root, workingvalues, formattermessages^whitespacetabpage before parenthesized expressions, defaultcodeformatterconstants^formatter insert space before parenthesized expression in return, return preview return root private innernode createthrowtree map workingvalues, innernode parent final innernode root new innernode parent, workingvalues, formattermessages^whitespaceoptions throw createoption root, workingvalues, formattermessages^whitespacetabpage before parenthesized expressions, defaultcodeformatterconstants^formatter insert space before parenthesized expression in throw, throw preview return root",0,0,deprecation
2100,IGDBTraceControl.java,the tracecontrol service provides access to the debugger tracing functionality.,1,0,deprecation
2612,WhiteSpaceOptions.java,a node representing a concrete white space option in the tree.,0,0,deprecation
2101,IGDBTraceControl.java,it is used to do such things as start and stop tracing.,1,0,deprecation
2103,IGDBTraceControl.java,gdb specific part,0,0,deprecation
2104,IGDBTraceControl.java,marker interface for a context on which trace operations can be performed,1,0,deprecation
2105,IGDBTraceControl.java,gdb specific part,0,0,deprecation
2106,IGDBTraceControl.java,specific trace record context.,1,0,deprecation
2107,IGDBTraceControl.java,it describes tracing data.,0,0,deprecation
2108,IGDBTraceControl.java,gdb specific part,1,0,deprecation
2109,IGDBTraceControl.java,this is the model data interface that corresponds to itracerecorddmcontext.,0,0,deprecation
2110,IGDBTraceControl.java,gdb specific part,1,0,deprecation
2111,IGDBTraceControl.java,trace events,0,0,deprecation
2623,WordIgnoreProposal.java,proposal to ignore the word during the current editing session.,1,0,deprecation
2625,WorkingCopyTests.java,contains unit test cases for working copies.,0,0,deprecation
1607,AbstractCPropertyTab.java,"in this case, we ll able to use",1,0,deprecation
1608,AbstractCPropertyTab.java,a lot of utility methods via provider link.,0,0,deprecation
1609,AbstractCPropertyTab.java,"in particular, it allows to get current project,",1,0,deprecation
1610,AbstractCPropertyTab.java,configuration etc see icpropertyprovider interface.,0,0,deprecation
1611,AbstractCPropertyTab.java,a standard way to create buttons ins edit del etc,1,0,deprecation
1612,AbstractCPropertyTab.java,and to handle their events see buttonpressed int,0,0,deprecation
1613,AbstractCPropertyTab.java,several utility methods to create widgets in the,1,0,deprecation
1614,AbstractCPropertyTab.java,"uniform manner setuplabel , setuptext etc .",0,0,deprecation
1615,AbstractCPropertyTab.java,means to handle control messages which are the main,1,0,deprecation
2127,IInclude.java,represents an include declaration in a c translation unit.,0,0,deprecation
1616,AbstractCPropertyTab.java,communication way for new cdt model pages and tabs.,1,0,deprecation
2128,IInclude.java,@noextend this interface is not intended to be extended by clients.,0,0,deprecation
2129,IInclude.java,@noimplement this interface is not intended to be implemented by clients.,1,0,deprecation
2136,IMacroEntry.java,@noextend this interface is not intended to be extended by clients.,0,0,deprecation
2137,IMacroEntry.java,@noimplement this interface is not intended to be implemented by clients.,1,0,deprecation
2140,IMIBackend.java,service for controlling the back end process.,0,0,deprecation
2142,IMIBackend.java,event indicating that the back end process has started or terminated.,1,0,deprecation
1631,AbstractTrialUndoActionProvider.java,action for a null rule,0,0,deprecation
1634,AddBreakpointRulerAction.java,ruler action to add breakpoint with a dialog properties.,1,0,deprecation
2146,IMSASTDeclspecList.java,"represents a microsoft attribute specifier, introduced by declspec.",0,0,deprecation
1636,AddLineBreakpointActionDelegate.java,a delegate for the add line breakpoint action.,1,0,deprecation
2148,IMSASTDeclspecList.java,@noextend this interface is not intended to be extended by clients.,0,0,deprecation
2149,IMSASTDeclspecList.java,@noimplement this interface is not intended to be implemented by clients.,1,0,deprecation
1638,AddLineBreakpointActionDelegate.java,initially derived from addfunctionbreakpointactiondelegate,0,0,deprecation
1641,AddMemoryBlocks.java,adds memory blocks to the memory view.,1,0,deprecation
1642,AddMemoryBlocks.java,p,0,0,deprecation
2154,INodeFactory.java,control flow graph node factory,1,0,deprecation
2155,INodeFactory.java,@noextend this interface is not intended to be extended by clients.,0,0,deprecation
2161,IPropertyChangeParticipant.java,p,1,0,deprecation
1650,AddMemoryBlocks.java,p,0,0,deprecation
2162,IPropertyChangeParticipant.java,clients may implement this interface.,1,0,deprecation
2163,IPropertyChangeParticipant.java,p,0,0,deprecation
1652,AddMemoryBlocks.java,"in order to avoid duplicating the addmemoryblocks method one version for expressions, one for memory space address, we pass in a an opaque parameter and let the logic within addmemoryblocks differentiate where needed via isinstanceof request object used to get the memory spaces",1,0,deprecation
1662,AllTemplateEngineTests.java,the test suite will execute all the testcases added to the suite.,0,0,deprecation
2175,IRegisters2.java,service extension of iregisters to manage user defined register groups,1,0,deprecation
1667,AutoconfMacroParameterListValidator.java,this class provides the macro call parameter parsing for the autoconf editor hover,0,0,deprecation
2179,IScannerInfoConsoleParser.java,parses a line of command output looking for scanner info entries.,1,0,deprecation
1668,AutoconfMacroParameterListValidator.java,it is modified from the cdt class cparameterlistvalidator,0,0,deprecation
2180,IScannerInfoConsoleParser.java,@author vhirsl,1,0,deprecation
1669,AutoconfMacroParameterListValidator.java,@author jjohnstn,0,0,deprecation
1673,AutotoolsProblemMarkerInfo.java,@noextend this class is not intended to be subclassed by clients.,1,0,deprecation
2185,ITestItem.java,@noextend this interface is not intended to be extended by clients.,0,0,deprecation
2186,ITestItem.java,@noimplement this interface is not intended to be implemented by clients.,1,0,deprecation
1675,BindingClassifierTest.java,tests for @link bindingclassifier .,0,0,deprecation
2187,ITestItem.java,represents status of the test item.,1,0,deprecation
1678,C99BuildASTParserAction.java,semantic actions called by the c99 parser to build an ast.,0,0,deprecation
1679,C99BuildASTParserAction.java,@author mike kucera,1,0,deprecation
1682,CConfigurationDescriptionCache.java,cconfigurationdescriptioncache is a proxy class for serialization of configuration description data.,0,0,deprecation
2195,IViewInMemory.java,provides the ability to view a variable in the memory view.,1,0,deprecation
1685,CConfigurationDescriptionCache.java,ol,0,0,deprecation
1686,CConfigurationDescriptionCache.java,li initialization,1,0,deprecation
1687,CConfigurationDescriptionCache.java,ul,0,0,deprecation
2199,LanguageSettingsProvidersSerializer.java,helper class handling serialization and notifications for language settings entries @link iclanguagesettingentry .,1,0,deprecation
1688,CConfigurationDescriptionCache.java,li after eclipse started a project is being opened.,0,0,deprecation
2200,LanguageSettingsProvidersSerializer.java,those are for readability of xml only,1,0,deprecation
1689,CConfigurationDescriptionCache.java,a new cconfigurationdescriptioncache is created,0,0,deprecation
2201,LanguageSettingsProvidersSerializer.java,dummy class to represent ill defined provider.,1,0,deprecation
1690,CConfigurationDescriptionCache.java,"with cconfigurationdescriptioncache icstorageelement storage, cprojectdescription parent constructor.",0,0,deprecation
2202,LanguageSettingsProvidersSerializer.java,those are for readability of xml only,1,0,deprecation
1691,CConfigurationDescriptionCache.java,li any clients needed icconfigurationdescription get cconfigurationdescription using constructor,0,0,deprecation
1692,CConfigurationDescriptionCache.java,"cconfigurationdescription cconfigurationdata data, string buildsystemid, icdataproxycontainer cr",1,0,deprecation
2204,LanguageSettingsProvidersSerializer.java,those are for readability of xml only,0,0,deprecation
1693,CConfigurationDescriptionCache.java,where the cconfigurationdescriptioncache is passed as data.,1,0,deprecation
2205,LanguageSettingsProvidersSerializer.java,wrapper for workspace providers to ensure level of indirection.,0,0,deprecation
1694,CConfigurationDescriptionCache.java,the reference to cache is kept in field fcfgcache.,1,0,deprecation
1695,CConfigurationDescriptionCache.java,"li fcfgcache is used to getspecsettings cconfigurationspecsettings, after that fcfgcache is set to null.",0,0,deprecation
1696,CConfigurationDescriptionCache.java,ul,1,0,deprecation
1697,CConfigurationDescriptionCache.java,li user enters project properties settings,0,0,deprecation
2209,LanguageSettingsProvidersSerializer.java,those are for readability of xml only,1,0,deprecation
1698,CConfigurationDescriptionCache.java,ul,0,0,deprecation
2210,LanguageSettingsProvidersSerializer.java,language settings change event implementation.,1,0,deprecation
1699,CConfigurationDescriptionCache.java,li another cconfigurationdescription settings configuration created using the same constructor setting fcfgcache,0,0,deprecation
1700,CConfigurationDescriptionCache.java,to the cconfigurationdescriptioncache.,1,0,deprecation
1701,CConfigurationDescriptionCache.java,ul,0,0,deprecation
1702,CConfigurationDescriptionCache.java,li user changes settings in the settings configuration cconfigurationdescription and saves it,1,0,deprecation
1703,CConfigurationDescriptionCache.java,ul,0,0,deprecation
1704,CConfigurationDescriptionCache.java,li new cconfigurationdescriptioncache is created from the cconfigurationdescription via constructor,1,0,deprecation
1705,CConfigurationDescriptionCache.java,"cconfigurationdescriptioncache icconfigurationdescription basedescription, .",0,0,deprecation
1706,CConfigurationDescriptionCache.java,where,1,0,deprecation
1707,CConfigurationDescriptionCache.java,basedescription is saved as fbasedescription.,0,0,deprecation
2219,MachOBinaryParserPage.java,@noextend this class is not intended to be subclassed by clients.,1,0,deprecation
1708,CConfigurationDescriptionCache.java,li cconfigurationdescriptioncache^applydata .,0,0,deprecation
1709,CConfigurationDescriptionCache.java,is used to persist the data.,1,0,deprecation
2221,ManageConfigRunner.java,@noextend this class is not intended to be subclassed by clients.,0,0,deprecation
1710,CConfigurationDescriptionCache.java,at that point,1,0,deprecation
2223,MIAsyncErrorProcessor.java,in some cases gdb reports exec commands failure after the ^running event is fired.,0,0,deprecation
1712,CConfigurationDescriptionCache.java,ul,1,0,deprecation
1713,CConfigurationDescriptionCache.java,ol,0,0,deprecation
1714,CConfigurationDescriptionCache.java,@see icconfigurationdescription,1,0,deprecation
1715,CConfigurationDescriptionCache.java,@see cconfigurationdescription,0,0,deprecation
1716,CConfigurationDescriptionCache.java,@see cprojectdescriptionevent,1,0,deprecation
2237,MIAsyncErrorProcessor.java,this class handles these type of situations by firing mierrorevent when such an error appears.,0,0,deprecation
2246,MIBreakpointsSynchronizer.java,p,1,0,deprecation
2247,MIBreakpointsSynchronizer.java,"bug 530377 prior to fixing 530377, events that arrived from gdb faster than",0,0,deprecation
2248,MIBreakpointsSynchronizer.java,dsf eclipse fully processed them could cause the state within the,0,0,deprecation
2249,MIBreakpointsSynchronizer.java,synchronizer and manager to become corrupt.,0,0,deprecation
2250,MIBreakpointsSynchronizer.java,this would happen because it,0,0,deprecation
2251,MIBreakpointsSynchronizer.java,"takes multiple dsf stages to complete handling 1 event, so the handling of",0,0,deprecation
2252,MIBreakpointsSynchronizer.java,the next event would become intermingled.,0,0,deprecation
2253,MIBreakpointsSynchronizer.java,that violated many assumptions in,0,0,deprecation
2254,MIBreakpointsSynchronizer.java,the code that the code run in the respective requestmonitor would be on the,0,0,deprecation
2255,MIBreakpointsSynchronizer.java,same state.,0,0,deprecation
2256,MIBreakpointsSynchronizer.java,this is an unsuprising assumption based on the general idea of,0,0,deprecation
2257,MIBreakpointsSynchronizer.java,dsf as not requiring the normal synchronization primitives as everything is,0,0,deprecation
2258,MIBreakpointsSynchronizer.java,single threaded.,0,0,deprecation
2259,MIBreakpointsSynchronizer.java,"to resolve this problem, there is some code",0,0,deprecation
2260,MIBreakpointsSynchronizer.java,@link #queueevent breakpointevent that ensures each event is fully,0,0,deprecation
2261,MIBreakpointsSynchronizer.java,processed before the next event starts processing.,0,0,deprecation
2263,MIBreakpointsSynchronizer.java,catchpoint expressions gdb tracepoint commands,0,0,deprecation
2264,MIBreakpointsSynchronizer.java,class to store an event that needs to be performed by the synchronizer,0,0,deprecation
2265,MIBreakpointsSynchronizer.java,@see mibreakpointssynchronizer class documentation for design comments,0,0,deprecation
1755,CDebugModelPresentation.java,@see idebugmodelpresentation,0,0,deprecation
1757,CElementDelta.java,@see icelementdelta,0,0,deprecation
1759,ClangToolChain.java,the clang toolchain.,0,0,deprecation
1762,ClangToolChain.java,@author dschaefer,0,0,deprecation
1766,CommonBuildTab.java,common utilities for core build launch configuration tabs.,0,0,deprecation
1771,ContainerTabModel.java,@author jjohnstn,0,0,deprecation
1774,CoreBuildGenericLaunchConfigProvider.java,core launch configuration provider used by generic target types.,0,0,deprecation
2287,MIDataListRegisterNames.java,data list register names regno,0,0,deprecation
2288,MIDataListRegisterNames.java,show a list of register names for the current target.,0,0,deprecation
1778,CPPASTProblem.java,c specific implementation allows actions to visit the problem.,0,0,deprecation
1780,CPPASTReferenceOperator.java,reference operator for declarators.,0,0,deprecation
1784,CPPDeferredFunction.java,a compiler would resolve it during instantiation.,0,0,deprecation
1787,CPPImplicitVariable.java,represents a variable implicitly created in c code.,0,0,deprecation
1788,CPPImplicitVariable.java,for example the initializer of a structured binding decomposition dcl^struct.bind,0,0,deprecation
1789,CPPImplicitVariable.java,"code auto first, second decomposed code",0,0,deprecation
2301,MIEnvironmentDirectory.java,environment directory r pathdir,0,0,deprecation
1790,CPPImplicitVariable.java,the code initializerevaluation code has to be supplied.,0,0,deprecation
2302,MIEnvironmentDirectory.java,add directory pathdir to beginning of search path for source files.,0,0,deprecation
2303,MIEnvironmentDirectory.java,r will first reset the path to its default,0,0,deprecation
1798,CPropertyTester.java,a property tester that determines if a file is an executable or a c c project.,0,0,deprecation
1800,CUIPreferenceInitializer.java,this class implements the setting of the cui initial preference store settings.,0,0,deprecation
1801,CUIPreferenceInitializer.java,@noextend this class is not intended to be subclassed by clients.,0,0,deprecation
2313,MIStack.java,provide the data.,0,0,deprecation
2314,MIStack.java,sub classes must supply the miarg object.,0,0,deprecation
2315,MIStack.java,class to track stack depth and debug frames for our internal cache,0,0,deprecation
2316,MIStack.java,"a map of threadid framescacheinfo, that can be cleared based on a context.",0,0,deprecation
2317,MIStack.java,we use this cache for a few reasons,0,0,deprecation
2318,MIStack.java,br,0,0,deprecation
2319,MIStack.java,"first, two commands such as",0,0,deprecation
1808,DefaultEnvironmentContextInfo.java,the default implementation of the icontextinfo used by the environment variable provider,0,0,deprecation
2320,MIStack.java,pre,0,0,deprecation
1809,DefaultEnvironmentContextInfo.java,"used to represent the configuration, project, workspace and eclipse environment contexts",0,0,deprecation
2321,MIStack.java,stack info depth 11,0,0,deprecation
2322,MIStack.java,stack info depth 2,0,0,deprecation
2323,MIStack.java,pre,0,0,deprecation
2324,MIStack.java,would both be sent to gdb because the command cache sees them as different.,0,0,deprecation
2325,MIStack.java,this cache allows us to know that if we already asked for a stack depth,0,0,deprecation
2326,MIStack.java,we can potentially re use the answer.,0,0,deprecation
2327,MIStack.java,br,0,0,deprecation
2328,MIStack.java,the same concept is applicable for the stack list frames command with different limits.,0,0,deprecation
2329,MIStack.java,"also, the stack depth can be deduced from the frames list, so we don t need to ask gdb for it again.",0,0,deprecation
2330,MIStack.java,p,0,0,deprecation
2331,MIStack.java,the second reason is that gdb is unreliable when it comes to returning frames.,0,0,deprecation
2332,MIStack.java,the mi protocol only allows to reply,0,0,deprecation
2333,MIStack.java,with data or with error.,0,0,deprecation
2334,MIStack.java,"when gdb is unwinding sometimes it gets both, and while the console cli protocol has no",0,0,deprecation
2335,MIStack.java,"problem with that, for mi, gdb replies randomly, sometimes with data, sometimes with error.",0,0,deprecation
2336,MIStack.java,if we cache the valid data,0,0,deprecation
2337,MIStack.java,it will eliminate the issue with invalid data on subsequent invocations.,0,0,deprecation
2338,MIStack.java,we don t cache errors.,0,0,deprecation
2339,MIStack.java,base class for the iframedmdata object that uses an miframe object to,0,0,deprecation
1828,DocCommentOwnerBlock.java,project property page for setting documentation comment owner.,0,0,deprecation
2340,MIStack.java,provide the data.,0,0,deprecation
1829,DocCommentOwnerBlock.java,em this class is not intended for use outside of cdt em,0,0,deprecation
2341,MIStack.java,sub classes must provide the miframe object,0,0,deprecation
1830,DocCommentOwnerBlock.java,@noextend this class is not intended to be subclassed by clients.,0,0,deprecation
1831,DocCommentOwnerBlock.java,@noinstantiate this class is not intended to be instantiated by clients.,0,0,deprecation
1836,DOMGCCParserExtensionTestSuite.java,@author jcamelon,0,0,deprecation
1838,DOMParserTestSuite.java,@author jcamelon,0,0,deprecation
1842,DummyPage.java,this class is just to replace a category reference in org^eclipse.cdt^ui that we exclude because we do not bring in the org^eclipse.cdt^managedbuild.ui plug in.,0,0,deprecation
1850,FindStdLibPath.java,the purpose is to find a path where stdc library is located.,0,0,deprecation
1851,FindStdLibPath.java,currently the shell script is only for linux.,0,0,deprecation
1855,FoldingConfigurationBlock.java,configures c editor folding preferences.,0,0,deprecation
1859,FormattedValueTests.java,tests to verify the operation of formattedvaluesvmutil,0,0,deprecation
1861,FormattedValueTests.java,helper class that stores some element paths and nodes using a certain format,0,0,deprecation
2374,MIThreadGroupAddedEvent.java,"thread group added,id i1",0,0,deprecation
1865,GCCKeywords.java,@noextend this interface is not intended to be extended by clients.,0,0,deprecation
1866,GCCKeywords.java,@noinstantiate this class is not intended to be instantiated by clients.,0,0,deprecation
2380,MultiCfgContributedEnvironment.java,@noextend this class is not intended to be subclassed by clients.,0,0,deprecation
2382,MultiLaunchConfigurationTabGroup.java,tab group for launch group.,0,0,deprecation
1873,GdbExpressionVMProvider.java,a specialization of expressionvmprovider that uses a gdb specific variable vm,0,0,deprecation
2386,PDOMDependencyGenerator.java,@author doug schaefer,0,0,deprecation
1875,GdbExpressionVMProvider.java,"to understand why this is necessary, see gdbvariablevmnode.",0,0,deprecation
2387,PDOMDependencyGenerator.java,@noextend this class is not intended to be subclassed by clients.,0,0,deprecation
2388,PDOMDependencyGenerator.java,@noinstantiate this class is not intended to be instantiated by clients.,0,0,deprecation
1879,GDBSourceLookup.java,default implementation of @link igdbsourcelookup,0,0,deprecation
2392,PDOMMacroReferenceName.java,"represents declarations, definitions and references to bindings, except for macros.",0,0,deprecation
2397,ProblemMarkerManager.java,visitors used to filter the element delta changes,0,0,deprecation
1886,GnuMakefileGenerator.java,@noinstantiate this class is not intended to be instantiated by clients.,0,0,deprecation
1887,GnuMakefileGenerator.java,string constants for makefile contents and messages private static final string auto dep comment ^autodeps non nls 1 private static final string message managedmakebuilder^message non nls 1 private static final string build error message ^error non nls 1 private static final string dep incl comment ^module.dep^includes non nls 1 private static final string mod incl comment ^module.make^includes non nls 1 private itool buildtools private boolean buildtoolsused private imanagedbuildinfo info private set outputextensionsset maps of macro names string to values list dependency file variables private vector dependencymakefiles ipath s relative to the top build directory or absolute,0,0,deprecation
1888,GnuMakefileGenerator.java,imanagedbuildermakefilegenerator m e t h o d s,0,0,deprecation
1889,GnuMakefileGenerator.java,m a k e f i l e s p o p u l a t i o n m e t h o d s,0,0,deprecation
2401,ProcessLauncher.java,this class implements external process launching for internal builder.,0,0,deprecation
1890,GnuMakefileGenerator.java,m a i n makefile m a k e f i l e m e t h o d s,0,0,deprecation
1891,GnuMakefileGenerator.java,s o u r c e s sources^mk m a k e f i l e m e t h o d s,0,0,deprecation
1892,GnuMakefileGenerator.java,f r a g m e n t subdir^mk m a k e f i l e m e t h o d s,0,0,deprecation
1893,GnuMakefileGenerator.java,m a k e f i l eg e n e r a t i o n c o m m o n m e t h o d s,0,0,deprecation
2405,ProcStatParser.java,@author marc dumais,0,0,deprecation
1894,GnuMakefileGenerator.java,adds a macro addition prefix to a map of macro names to entries.,0,0,deprecation
1895,GnuMakefileGenerator.java,entry prefixes look like,0,0,deprecation
2407,ProcStatParser.java,@see also http www^linuxhowtos.org system procstat^htm,0,0,deprecation
1896,GnuMakefileGenerator.java,c srcs,0,0,deprecation
1897,GnuMakefileGenerator.java,"addprefix root ,",0,0,deprecation
1898,GnuMakefileGenerator.java,r e s o u r c e v i s i t o r m e t h o d s,0,0,deprecation
2410,QtPDOMNameIndex.java,a data structure for storing lists of pdomnames that are indexed by a string key.,0,0,deprecation
1899,GnuMakefileGenerator.java,o t h e r m e t h o d s,0,0,deprecation
2411,QtPDOMNameIndex.java,"this is equivalent to the java type map string, list pdomname .",0,0,deprecation
1900,GnuMakefileGenerator.java,"process a string denoting a filepath in a way compatible for gnu make rules, handling",0,0,deprecation
1901,GnuMakefileGenerator.java,windows drive letters and whitespace appropriately.,0,0,deprecation
1902,GnuMakefileGenerator.java,p p,0,0,deprecation
2414,RenameCSourceFolderChange.java,@author ee4 graf ifs,0,0,deprecation
1903,GnuMakefileGenerator.java,the context these paths appear in is on the right hand side of a rule header.,0,0,deprecation
1904,GnuMakefileGenerator.java,ie,0,0,deprecation
1905,GnuMakefileGenerator.java,p p,0,0,deprecation
1906,GnuMakefileGenerator.java,target dep1 dep2 dep3,0,0,deprecation
1907,GnuMakefileGenerator.java,p,0,0,deprecation
1908,GnuMakefileGenerator.java,@param path the string denoting the path to process,0,0,deprecation
1909,GnuMakefileGenerator.java,@throws nullpointerexception is path is null,0,0,deprecation
1910,GnuMakefileGenerator.java,@return a suitable make rule compatible path,0,0,deprecation
1912,GnuMakefileGenerator.java,what resources have been changed.,0,0,deprecation
2424,ReturnCheckerTest.java,test for @see returncheckertest class,0,0,deprecation
1913,GnuMakefileGenerator.java,the logic is very simple.,0,0,deprecation
1914,GnuMakefileGenerator.java,if a,0,0,deprecation
1916,GnuMakefileGenerator.java,in which they are located are dirty so the makefile fragments for them,0,0,deprecation
1917,GnuMakefileGenerator.java,have to be regenerated.,0,0,deprecation
1918,GnuMakefileGenerator.java,p,0,0,deprecation
2431,RulerColumnDescriptor.java,instances can be obtained from a @link rulercolumnregistry .,0,0,deprecation
1920,GnuMakefileGenerator.java,itself.,0,0,deprecation
1921,GnuMakefileGenerator.java,we are relying on make to do the right things when confronted,0,0,deprecation
2433,RulerColumnDescriptor.java,@noinstantiate this class is not intended to be instantiated by clients.,0,0,deprecation
1922,GnuMakefileGenerator.java,with a dependency on a moved header file.,0,0,deprecation
1923,GnuMakefileGenerator.java,"that said, make will treat",0,0,deprecation
1924,GnuMakefileGenerator.java,the missing header file in a dependency rule as a target it has to build,0,0,deprecation
1925,GnuMakefileGenerator.java,unless told otherwise.,0,0,deprecation
1926,GnuMakefileGenerator.java,these dummy targets are added to the makefile,0,0,deprecation
1927,GnuMakefileGenerator.java,to avoid a missing target error.,0,0,deprecation
1928,GnuMakefileGenerator.java,string constants for makefile contents and messages private static final string auto dep comment ^autodeps non nls 1 private static final string message managedmakebuilder^message non nls 1 private static final string build error message ^error non nls 1 private static final string dep incl comment ^module.dep^includes non nls 1 private static final string mod incl comment ^module.make^includes non nls 1 private itool buildtools private boolean buildtoolsused private imanagedbuildinfo info private set outputextensionsset maps of macro names string to values list dependency file variables private vector dependencymakefiles ipath s relative to the top build directory or absolute,0,0,deprecation
2440,SCDOptionsEnum.java,enumeration class for scanner configuration affecting command line options,0,0,deprecation
1929,GnuMakefileGenerator.java,imanagedbuildermakefilegenerator m e t h o d s,0,0,deprecation
2441,SCDOptionsEnum.java,@author vhirsl,0,0,deprecation
1930,GnuMakefileGenerator.java,m a k e f i l e s p o p u l a t i o n m e t h o d s,0,0,deprecation
1931,GnuMakefileGenerator.java,m a i n makefile m a k e f i l e m e t h o d s,0,0,deprecation
1932,GnuMakefileGenerator.java,s o u r c e s sources^mk m a k e f i l e m e t h o d s,0,0,deprecation
1933,GnuMakefileGenerator.java,f r a g m e n t subdir^mk m a k e f i l e m e t h o d s,0,0,deprecation
2445,SourceLookupTest.java,tests that interaction with source lookups works as expected.,0,0,deprecation
1934,GnuMakefileGenerator.java,m a k e f i l eg e n e r a t i o n c o m m o n m e t h o d s,0,0,deprecation
1935,GnuMakefileGenerator.java,adds a macro addition prefix to a map of macro names to entries.,0,0,deprecation
1936,GnuMakefileGenerator.java,entry prefixes look like,0,0,deprecation
1937,GnuMakefileGenerator.java,c srcs,0,0,deprecation
1938,GnuMakefileGenerator.java,"addprefix root ,",0,0,deprecation
2450,SourceLookupTest.java,"located in the @link #build path directory, but it is now located in the",0,0,deprecation
1939,GnuMakefileGenerator.java,r e s o u r c e v i s i t o r m e t h o d s,0,0,deprecation
2451,SourceLookupTest.java,@link basetestcase#source path directory.,0,0,deprecation
1940,GnuMakefileGenerator.java,o t h e r m e t h o d s,0,0,deprecation
1941,GnuMakefileGenerator.java,"process a string denoting a filepath in a way compatible for gnu make rules, handling",0,0,deprecation
2453,SourceLookupTest.java,the wild card in sourcelookup ^exe can be one of the following to cover the,0,0,deprecation
1942,GnuMakefileGenerator.java,windows drive letters and whitespace appropriately.,0,0,deprecation
2454,SourceLookupTest.java,different effective types of source lookups that need to be done depending on,0,0,deprecation
1943,GnuMakefileGenerator.java,p p,0,0,deprecation
2455,SourceLookupTest.java,how the program was compiled.,0,0,deprecation
1944,GnuMakefileGenerator.java,the context these paths appear in is on the right hand side of a rule header.,0,0,deprecation
2456,SourceLookupTest.java,each of these options produces different debug,0,0,deprecation
1945,GnuMakefileGenerator.java,ie,0,0,deprecation
2457,SourceLookupTest.java,information about where to find the source file.,0,0,deprecation
1946,GnuMakefileGenerator.java,p p,0,0,deprecation
2458,SourceLookupTest.java,see the makefile for more,0,0,deprecation
1947,GnuMakefileGenerator.java,target dep1 dep2 dep3,0,0,deprecation
2459,SourceLookupTest.java,information.,0,0,deprecation
1948,GnuMakefileGenerator.java,p,0,0,deprecation
2460,SourceLookupTest.java,ul,0,0,deprecation
1949,GnuMakefileGenerator.java,@param path the string denoting the path to process,0,0,deprecation
2461,SourceLookupTest.java,li b ac b absolute and canonical path no .,0,0,deprecation
1950,GnuMakefileGenerator.java,@throws nullpointerexception is path is null,0,0,deprecation
2462,SourceLookupTest.java,.,0,0,deprecation
1951,GnuMakefileGenerator.java,@return a suitable make rule compatible path,0,0,deprecation
2463,SourceLookupTest.java,in path passed to gcc,0,0,deprecation
1952,GnuMakefileGenerator.java,this class is used to recursively walk the project and determine which,0,0,deprecation
2464,SourceLookupTest.java,li,0,0,deprecation
1953,GnuMakefileGenerator.java,modules contribute buildable source files.,0,0,deprecation
2466,SourceLookupTest.java,.,0,0,deprecation
2467,SourceLookupTest.java,in path passed to gcc,0,0,deprecation
2468,SourceLookupTest.java,li,0,0,deprecation
2470,SourceLookupTest.java,.,0,0,deprecation
2471,SourceLookupTest.java,in path passed to gcc,0,0,deprecation
2472,SourceLookupTest.java,li,0,0,deprecation
2474,SourceLookupTest.java,.,0,0,deprecation
2475,SourceLookupTest.java,in path passed to gcc,0,0,deprecation
2476,SourceLookupTest.java,li,0,0,deprecation
2478,SourceLookupTest.java,ul,0,0,deprecation
2531,SpellEvent.java,spell event fired for words detected by a spell check iterator.,0,0,deprecation
2533,StandardCElementLabelProvider.java,celementlabelprovider that respects settings from the appearance preference page.,0,0,deprecation
2534,StandardCElementLabelProvider.java,triggers a viewer update when a preference changes.,0,0,deprecation
2024,GroupDebugContextsCommandHandler.java,command handler to trigger grouping of debug contexts operation.,0,0,deprecation
2539,StringDialogField.java,dialog field containing a label and a text control.,0,0,deprecation
2028,IBHistoryAction.java,action used for the include browser forward backward buttons,0,0,deprecation
2030,IBuildObject.java,@noextend this class is not intended to be subclassed by clients.,0,0,deprecation
2031,IBuildObject.java,@noimplement this interface is not intended to be implemented by clients.,0,0,deprecation
2544,ToggleDynamicPrintfAdapter.java,toggles a dynamic printf in a c c editor.,0,0,deprecation
2036,ICLanguageSettingPathEntry.java,see interface hierarchy for more specifics.,0,0,deprecation
2548,TracepointActionsPropertyPage.java,property page for tracepoint actions,0,0,deprecation
2552,TracingConsole.java,a console that is used to print traces.,0,0,deprecation
2041,ICLibraryFileEntry.java,see @link icsettingentry#library file .,0,0,deprecation
2553,TracingConsole.java,the console is attached to a launch.,0,0,deprecation
2046,ICodeReaderFactory.java,@author jcamelon,0,0,deprecation
3074,CloseablesTest.java,unit tests for @link closeables .,0,0,deprecation
3075,CloseablesTest.java,"p checks proper closing behavior, and ensures that ioexceptions on closeable^close are not",1,0,deprecation
3076,CloseablesTest.java,propagated out from the @link closeables#close method if @code swallowexception is true.,0,0,deprecation
3077,CloseablesTest.java,@author michael lancaster,1,0,deprecation
3082,CollectionTestSuiteBuilder.java,concrete instantiation of @link abstractcollectiontestsuitebuilder for testing collections that,0,0,deprecation
3083,CollectionTestSuiteBuilder.java,do not have a more specific tester like @link listtestsuitebuilder or @link,1,0,deprecation
3084,CollectionTestSuiteBuilder.java,settestsuitebuilder .,0,0,deprecation
3085,CollectionTestSuiteBuilder.java,@author chris povirk,1,0,deprecation
3086,CollectionTestSuiteBuilder.java,@author louis wasserman,0,0,deprecation
4115,SortedSetNavigationTester.java,a generic junit test which tests operations on a sortedset.,1,0,deprecation
4116,SortedSetNavigationTester.java,can t be invoked directly please see,0,0,deprecation
4117,SortedSetNavigationTester.java,@code sortedsettestsuitebuilder .,1,0,deprecation
4118,SortedSetNavigationTester.java,@author jesse wilson,0,0,deprecation
4119,SortedSetNavigationTester.java,@author louis wasserman,1,0,deprecation
3095,ConflictingRequirementsException.java,thrown when requirements on a tester method or class conflict with each other.,0,0,deprecation
3096,ConflictingRequirementsException.java,@author george van den driessche,1,0,deprecation
3099,CountingOutputStream.java,an outputstream that counts the number of bytes written.,0,0,deprecation
3100,CountingOutputStream.java,@author chris nokleberg,1,0,deprecation
4126,SubscriberTest.java,tests for @link subscriber .,0,0,deprecation
4127,SubscriberTest.java,@author cliff biffle,1,0,deprecation
4128,SubscriberTest.java,@author colin decker,0,0,deprecation
3105,DescendingMultiset.java,a skeleton implementation of a descending multiset.,1,0,deprecation
3106,DescendingMultiset.java,only needs @code forwardmultiset and,0,0,deprecation
3107,DescendingMultiset.java,@code entryiterator .,1,0,deprecation
3108,DescendingMultiset.java,@author louis wasserman,0,0,deprecation
4134,TesterRequirements.java,encapsulates the constraints that a class under test must satisfy in order for a tester method to,1,0,deprecation
4135,TesterRequirements.java,be run against that class.,0,0,deprecation
4136,TesterRequirements.java,@author george van den driessche,1,0,deprecation
3113,EqualsTester.java,tester for equals and hashcode methods of a class.,0,0,deprecation
3114,EqualsTester.java,p the simplest use case is,1,0,deprecation
3115,EqualsTester.java,pre,0,0,deprecation
4141,TestStringListGenerator.java,@author kevin bourrillion,1,0,deprecation
3117,EqualsTester.java,pre,0,0,deprecation
3118,EqualsTester.java,"p this tests @code foo^equals foo , @code foo^equals null , and a few other operations.",1,0,deprecation
4143,WrappingScheduledExecutorService.java,an abstract @code scheduledexecutorservice that allows subclasses to @linkplain,0,0,deprecation
3119,EqualsTester.java,"p for more extensive testing, add multiple equality groups.",1,0,deprecation
4144,WrappingScheduledExecutorService.java,#wraptask callable wrap tasks before they are submitted to the underlying executor.,0,0,deprecation
3120,EqualsTester.java,each group should contain objects,1,0,deprecation
4145,WrappingScheduledExecutorService.java,p note that task wrapping may occur even if the task is never executed.,0,0,deprecation
3121,EqualsTester.java,that are equal to each other but unequal to the objects in any other group.,1,0,deprecation
4146,WrappingScheduledExecutorService.java,@author luke sandberg,0,0,deprecation
3122,EqualsTester.java,for example,1,0,deprecation
3123,EqualsTester.java,pre,0,0,deprecation
3124,EqualsTester.java,new equalstester,1,0,deprecation
3125,EqualsTester.java,"addequalitygroup new user page , new user page",0,0,deprecation
3126,EqualsTester.java,addequalitygroup new user sergey,1,0,deprecation
3127,EqualsTester.java,testequals,0,0,deprecation
3128,EqualsTester.java,pre,1,0,deprecation
3129,EqualsTester.java,p this tests,0,0,deprecation
3130,EqualsTester.java,ul,1,0,deprecation
3131,EqualsTester.java,li comparing each object against itself returns true,0,0,deprecation
3133,EqualsTester.java,li comparing each object against an instance of an incompatible class returns false,1,0,deprecation
3134,EqualsTester.java,li comparing each pair of objects within the same equality group returns true,0,0,deprecation
3135,EqualsTester.java,li comparing each pair of objects from different equality groups returns false,1,0,deprecation
3136,EqualsTester.java,li the hash codes of any two equal objects are equal,0,0,deprecation
3137,EqualsTester.java,ul,1,0,deprecation
3140,EqualsTester.java,ul,0,0,deprecation
3146,EqualsTester.java,ul,1,0,deprecation
3147,EqualsTester.java,@author jim mcmaster,0,0,deprecation
3148,EqualsTester.java,@author jige yu,1,0,deprecation
3150,EqualsTester.java,class used to test whether equals correctly handles an instance of an incompatible class.,0,0,deprecation
3151,EqualsTester.java,"since it is a private inner class, the invoker can never pass in an instance to the tester",1,0,deprecation
3182,FeatureSpecificTestSuiteBuilder.java,"creates, based on your criteria, a junit test suite that exhaustively tests the object generated",0,0,deprecation
3183,FeatureSpecificTestSuiteBuilder.java,"by a g, selecting appropriate tests by matching them against specified features.",1,0,deprecation
3184,FeatureSpecificTestSuiteBuilder.java,@param b the concrete type of this builder the self type .,0,0,deprecation
3185,FeatureSpecificTestSuiteBuilder.java,all the builder methods of this,1,0,deprecation
3186,FeatureSpecificTestSuiteBuilder.java,"class such as @link #named return this type, so that builder methods of more derived",0,0,deprecation
3188,FeatureSpecificTestSuiteBuilder.java,@param g the type of the generator to be passed to testers in the generated test suite.,1,0,deprecation
3189,FeatureSpecificTestSuiteBuilder.java,an,0,0,deprecation
3191,FeatureSpecificTestSuiteBuilder.java,information required to parameterize the test.,1,0,deprecation
3192,FeatureSpecificTestSuiteBuilder.java,@author george van den driessche,0,0,deprecation
3205,ForwardingBlockingDequeTest.java,test for @link forwardingblockingdeque,1,0,deprecation
3206,ForwardingBlockingDequeTest.java,@author emily soldal,0,0,deprecation
3209,ForwardingImmutableSet.java,gwt implementation of @link immutableset that forwards to another @code set implementation.,1,0,deprecation
3210,ForwardingImmutableSet.java,@author hayward chan,0,0,deprecation
3214,ForwardingQueueTest.java,tests for @code forwardingqueue .,1,0,deprecation
3215,ForwardingQueueTest.java,@author robert konigsberg,0,0,deprecation
3216,ForwardingQueueTest.java,@author louis wasserman,1,0,deprecation
3220,GwtTestSuite.java,runs all gwt tests.,0,0,deprecation
3221,GwtTestSuite.java,grouping them into a suite is much faster than running each as a one test,1,0,deprecation
3222,GwtTestSuite.java,"suite, as the per suite setup is expensive.",0,0,deprecation
3226,HashFunctionEnum.java,an enum that contains all of the known hash functions.,1,0,deprecation
3227,HashFunctionEnum.java,@author kurt alfred kluever,0,0,deprecation
3230,HostAndPort.java,an immutable representation of a host and port.,1,0,deprecation
3231,HostAndPort.java,p example usage,0,0,deprecation
3232,HostAndPort.java,pre,1,0,deprecation
3233,HostAndPort.java,hostandport hp hostandport^fromstring 2001 db8 1,0,0,deprecation
3235,HostAndPort.java,requirebracketsforipv6,1,0,deprecation
3236,HostAndPort.java,hp^gethost returns 2001 db8 1,0,0,deprecation
3237,HostAndPort.java,hp^getport returns 80,1,0,deprecation
3238,HostAndPort.java,hp^tostring returns 2001 db8 1 80,0,0,deprecation
3239,HostAndPort.java,pre,1,0,deprecation
3240,HostAndPort.java,p here are some examples of recognized formats,0,0,deprecation
3241,HostAndPort.java,ul,1,0,deprecation
3242,HostAndPort.java,li example^com,0,0,deprecation
3244,HostAndPort.java,li 1920.21,1,0,deprecation
3246,HostAndPort.java,li 2001 db8 1 @link #gethost omits brackets,0,0,deprecation
3247,HostAndPort.java,li 2001 db8 1 80 @link #gethost omits brackets,1,0,deprecation
3248,HostAndPort.java,li 2001 db8 1 use @link #requirebracketsforipv6 to prohibit this,0,0,deprecation
3249,HostAndPort.java,ul,1,0,deprecation
3250,HostAndPort.java,"p note that this is not an exhaustive list, because these methods are only concerned with",0,0,deprecation
3251,HostAndPort.java,"brackets, colons, and port numbers.",1,0,deprecation
3253,HostAndPort.java,caller s responsibility.,0,0,deprecation
3254,HostAndPort.java,@author paul marks,1,0,deprecation
3282,ImmutableSetHashFloodingDetectionBenchmark.java,benchmark of implementations of @link immutableset#hashfloodingdetected object .,0,0,deprecation
3285,ImmutableTable_CustomFieldSerializerBase.java,this class contains static utility methods for writing @link immutabletable gwt field,1,0,deprecation
3286,ImmutableTable_CustomFieldSerializerBase.java,serializers.,0,0,deprecation
3287,ImmutableTable_CustomFieldSerializerBase.java,serializers should delegate to @link #serialize and @link #instantiate .,1,0,deprecation
3288,ImmutableTable_CustomFieldSerializerBase.java,@author chris povirk,0,0,deprecation
3293,LazyStackTraceBenchmark.java,quick and dirty benchmark of @link throwables#lazystacktrace throwable .,1,0,deprecation
3294,LazyStackTraceBenchmark.java,we benchmark a caller,0,0,deprecation
3295,LazyStackTraceBenchmark.java,finder implementation that might be used in a logging framework.,1,0,deprecation
3300,LongMathBenchmark.java,benchmarks for the non rounding methods of @code longmath .,0,0,deprecation
3301,LongMathBenchmark.java,@author louis wasserman,1,0,deprecation
3304,MapPutAllTester.java,a generic junit test which tests @code putall operations on a map.,0,0,deprecation
3306,MapPutAllTester.java,please see @link com^google.common^collect.testing^maptestsuitebuilder .,1,0,deprecation
3307,MapPutAllTester.java,@author chris povirk,0,0,deprecation
3308,MapPutAllTester.java,@author kevin bourrillion,1,0,deprecation
3313,MapSerializationTester.java,basic serialization test for maps.,0,0,deprecation
3314,MapSerializationTester.java,@author louis wasserman,1,0,deprecation
3317,MultimapBuilder.java,a builder for a multimap implementation that allows customization of the backing map and value,0,0,deprecation
3318,MultimapBuilder.java,collection implementations used in a particular multimap.,1,0,deprecation
3319,MultimapBuilder.java,p this can be used to easily configure multimap data structure implementations not provided,0,0,deprecation
3320,MultimapBuilder.java,"explicitly in @code com^google.common^collect , for example",1,0,deprecation
3321,MultimapBuilder.java,pre @code,0,0,deprecation
3322,MultimapBuilder.java,"listmultimap string, integer treelistmultimap",1,0,deprecation
3323,MultimapBuilder.java,multimapbuilder^treekeys ^arraylistvalues ^build,0,0,deprecation
3324,MultimapBuilder.java,"setmultimap integer, myenum hashenummultimap",1,0,deprecation
3325,MultimapBuilder.java,multimapbuilder^hashkeys ^enumsetvalues myenum^class ^build,0,0,deprecation
3326,MultimapBuilder.java,pre,1,0,deprecation
3327,MultimapBuilder.java,p @code multimapbuilder instances are immutable.,0,0,deprecation
3328,MultimapBuilder.java,invoking a configuration method has no effect,1,0,deprecation
3329,MultimapBuilder.java,on the receiving instance you must store and use the new builder instance it returns instead.,0,0,deprecation
3330,MultimapBuilder.java,"p the generated multimaps are serializable if the key and value types are serializable, unless",1,0,deprecation
3331,MultimapBuilder.java,stated otherwise in one of the configuration methods.,0,0,deprecation
3332,MultimapBuilder.java,@author louis wasserman,1,0,deprecation
3333,MultimapBuilder.java,@param k0 an upper bound on the key type of the generated multimap.,0,0,deprecation
3334,MultimapBuilder.java,@param v0 an upper bound on the value type of the generated multimap.,1,0,deprecation
3336,MultimapBuilder.java,leaving k and v as upper bounds rather than the actual key and value types allows type,0,0,deprecation
3337,MultimapBuilder.java,parameters to be left implicit more often.,1,0,deprecation
3338,MultimapBuilder.java,cachebuilder uses the same technique.,0,0,deprecation
3339,MultimapBuilder.java,an intermediate stage in a @link multimapbuilder in which the key value collection map,1,0,deprecation
3340,MultimapBuilder.java,"implementation has been specified, but the value collection implementation has not.",0,0,deprecation
3341,MultimapBuilder.java,@param k0 the upper bound on the key type of the generated multimap.,1,0,deprecation
3343,MultimapBuilder.java,leaving k and v as upper bounds rather than the actual key and value types allows type,0,0,deprecation
3344,MultimapBuilder.java,parameters to be left implicit more often.,1,0,deprecation
3345,MultimapBuilder.java,cachebuilder uses the same technique.,0,0,deprecation
3346,MultimapBuilder.java,a specialization of @link multimapbuilder that generates @link listmultimap instances.,1,0,deprecation
3348,MultimapBuilder.java,leaving k and v as upper bounds rather than the actual key and value types allows type,0,0,deprecation
3349,MultimapBuilder.java,parameters to be left implicit more often.,1,0,deprecation
3350,MultimapBuilder.java,cachebuilder uses the same technique.,0,0,deprecation
3353,MultimapBuilder.java,leaving k and v as upper bounds rather than the actual key and value types allows type,1,0,deprecation
3354,MultimapBuilder.java,parameters to be left implicit more often.,0,0,deprecation
3355,MultimapBuilder.java,cachebuilder uses the same technique.,1,0,deprecation
3390,MultimapBuilderTest.java,tests for @link multimapbuilder .,0,0,deprecation
3391,MultimapBuilderTest.java,@author louis wasserman,1,0,deprecation
3394,NullsLastOrdering_CustomFieldSerializer.java,this class implements the gwt serialization of @link nullslastordering .,0,0,deprecation
3395,NullsLastOrdering_CustomFieldSerializer.java,@author chris povirk,1,0,deprecation
3398,ObjectCountHashMap.java,objectcounthashmap is an implementation of @code abstractobjectcountmap that uses arrays to,0,0,deprecation
3399,ObjectCountHashMap.java,store key objects and count values.,1,0,deprecation
3400,ObjectCountHashMap.java,comparing to using a traditional @code hashmap,0,0,deprecation
3401,ObjectCountHashMap.java,"implementation which stores keys and count values as map entries, @code objectcounthashmap",1,0,deprecation
3402,ObjectCountHashMap.java,minimizes object allocation and reduces memory footprint.,0,0,deprecation
3403,ObjectCountHashMap.java,"p in the absence of element deletions, this will iterate over elements in insertion order.",1,0,deprecation
3410,PeekingIterator.java,an iterator that supports a one element lookahead while iterating.,0,0,deprecation
3411,PeekingIterator.java,p see the guava user guide article on a href,1,0,deprecation
3412,PeekingIterator.java,https github^com google guava wiki collectionhelpersexplained#peekingiterator @code,0,0,deprecation
3413,PeekingIterator.java,peekingiterator a .,1,0,deprecation
3414,PeekingIterator.java,@author mick killianey,0,0,deprecation
3415,PeekingIterator.java,@since 20,1,0,deprecation
3422,Preconditions.java,static convenience methods that help a method or constructor check whether it was invoked,0,0,deprecation
3423,Preconditions.java,"correctly that is, whether its i preconditions i were met .",1,0,deprecation
3424,Preconditions.java,"p if the precondition is not met, the @code preconditions method throws an unchecked exception",0,0,deprecation
3425,Preconditions.java,"of a specified type, which helps the method in which the exception was thrown communicate that",1,0,deprecation
3426,Preconditions.java,its caller has made a mistake.,0,0,deprecation
3427,Preconditions.java,this allows constructs such as,1,0,deprecation
3428,Preconditions.java,pre @code,0,0,deprecation
3429,Preconditions.java,public static double sqrt double value,1,0,deprecation
3430,Preconditions.java,if value 0,0,0,deprecation
3431,Preconditions.java,throw new illegalargumentexception input is negative value,1,0,deprecation
3432,Preconditions.java,calculate square root,0,0,deprecation
3433,Preconditions.java,pre,1,0,deprecation
3434,Preconditions.java,p to be replaced with the more compact,0,0,deprecation
3435,Preconditions.java,pre @code,1,0,deprecation
3436,Preconditions.java,public static double sqrt double value,0,0,deprecation
3437,Preconditions.java,"checkargument value 0, input is negative %s , value",1,0,deprecation
3438,Preconditions.java,calculate square root,0,0,deprecation
3439,Preconditions.java,pre,1,0,deprecation
3440,Preconditions.java,"p so that a hypothetical bad caller of this method, such as",0,0,deprecation
3441,Preconditions.java,pre @code,1,0,deprecation
3442,Preconditions.java,void examplebadcaller,0,0,deprecation
3443,Preconditions.java,double d sqrt 10,1,0,deprecation
3444,Preconditions.java,pre,0,0,deprecation
3445,Preconditions.java,p would be flagged as having called @code sqrt with an illegal argument.,1,0,deprecation
3446,Preconditions.java,h3 performance h3,0,0,deprecation
3447,Preconditions.java,p avoid passing message arguments that are expensive to compute your code will always compute,1,0,deprecation
3448,Preconditions.java,"them, even though they usually won t be needed.",0,0,deprecation
3449,Preconditions.java,"if you have such arguments, use the conventional",1,0,deprecation
3450,Preconditions.java,if throw idiom instead.,0,0,deprecation
3451,Preconditions.java,"p depending on your message arguments, memory may be allocated for boxing and varargs array",1,0,deprecation
3452,Preconditions.java,creation.,0,0,deprecation
3453,Preconditions.java,"however, the methods of this class have a large number of overloads that prevent such",1,0,deprecation
3454,Preconditions.java,allocations in many common cases.,0,0,deprecation
3455,Preconditions.java,"p the message string is not formatted unless the exception will be thrown, so the cost of the",1,0,deprecation
3456,Preconditions.java,string formatting itself should not be a concern.,0,0,deprecation
3457,Preconditions.java,"p as with any performance concerns, you should consider profiling your code in a production",1,0,deprecation
3458,Preconditions.java,environment if possible before spending a lot of effort on tweaking a particular element.,0,0,deprecation
3459,Preconditions.java,h3 other types of preconditions h3,1,0,deprecation
3460,Preconditions.java,p not every type of precondition failure is supported by these methods.,0,0,deprecation
3461,Preconditions.java,continue to throw,1,0,deprecation
3462,Preconditions.java,standard jdk exceptions such as @link java^util.nosuchelementexception or @link,0,0,deprecation
3463,Preconditions.java,unsupportedoperationexception in the situations they are intended for.,1,0,deprecation
3464,Preconditions.java,h3 non preconditions h3,0,0,deprecation
3465,Preconditions.java,p it is of course possible to use the methods of this class to check for invalid conditions,1,0,deprecation
3466,Preconditions.java,which are i not the caller s fault i .,0,0,deprecation
3467,Preconditions.java,doing so is b not recommended b because it is,1,0,deprecation
3468,Preconditions.java,misleading to future readers of the code and of stack traces.,0,0,deprecation
3469,Preconditions.java,see a,1,0,deprecation
3470,Preconditions.java,href https github^com google guava wiki conditionalfailuresexplained conditional failures,0,0,deprecation
3471,Preconditions.java,explained a in the guava user guide for more advice.,1,0,deprecation
3472,Preconditions.java,"notably, @link verify offers assertions",0,0,deprecation
3473,Preconditions.java,similar to those in this class for non precondition checks.,1,0,deprecation
3474,Preconditions.java,h3 @code java^util.objects^requirenonnull h3,0,0,deprecation
3475,Preconditions.java,p projects which use @code com^google.common should generally avoid the use of @link,1,0,deprecation
3476,Preconditions.java,java^util.objects#requirenonnull object .,0,0,deprecation
3477,Preconditions.java,"instead, use whichever of @link",1,0,deprecation
3478,Preconditions.java,#checknotnull object or @link verify#verifynotnull object is appropriate to the situation.,0,0,deprecation
3479,Preconditions.java,the same goes for the message accepting overloads.,1,0,deprecation
3480,Preconditions.java,h3 only @code %s is supported h3,0,0,deprecation
3481,Preconditions.java,p @code preconditions uses @link strings#lenientformat to format error message template,1,0,deprecation
3482,Preconditions.java,strings.,0,0,deprecation
3483,Preconditions.java,"this only supports the @code %s specifier, not the full range of @link",1,0,deprecation
3484,Preconditions.java,java^util.formatter specifiers.,0,0,deprecation
3485,Preconditions.java,"however, note that if the number of arguments does not match the",1,0,deprecation
3486,Preconditions.java,"number of occurrences of @code %s in the format string, @code preconditions will still",0,0,deprecation
3487,Preconditions.java,"behave as expected, and will still include all argument values in the error message the message",1,0,deprecation
3488,Preconditions.java,will simply not be formatted exactly as intended.,0,0,deprecation
3489,Preconditions.java,h3 more information h3,1,0,deprecation
3490,Preconditions.java,p see the guava user guide on a,0,0,deprecation
3491,Preconditions.java,href https github^com google guava wiki preconditionsexplained using @code,1,0,deprecation
3492,Preconditions.java,preconditions a .,0,0,deprecation
3493,Preconditions.java,@author kevin bourrillion,1,0,deprecation
3580,RegularImmutableList_CustomFieldSerializer.java,this class implements the gwt serialization of @link regularimmutablelist .,0,0,deprecation
3581,RegularImmutableList_CustomFieldSerializer.java,@author hayward chan,1,0,deprecation
3585,ReserializingTestCollectionGenerator.java,reserializes the sets created by another test set generator.,0,0,deprecation
3587,ReserializingTestCollectionGenerator.java,@author jesse wilson,1,0,deprecation
3590,Resources.java,provides utility methods for working with resources in the classpath.,0,0,deprecation
3594,Resources.java,p all method parameters must be non null unless documented otherwise.,1,0,deprecation
3595,Resources.java,@author chris nokleberg,0,0,deprecation
3596,Resources.java,@author ben yu,1,0,deprecation
3597,Resources.java,@author colin decker,0,0,deprecation
3599,Resources.java,a byte source that reads from a url using @link url#openstream .,1,0,deprecation
3607,SmoothRateLimiter.java,"how is the ratelimiter designed, and why?",0,0,deprecation
3608,SmoothRateLimiter.java,"the primary feature of a ratelimiter is its stable rate , the maximum rate that is should",1,0,deprecation
3609,SmoothRateLimiter.java,allow at normal conditions.,0,0,deprecation
3610,SmoothRateLimiter.java,"this is enforced by throttling incoming requests as needed, ie",1,0,deprecation
3611,SmoothRateLimiter.java,"compute, for an incoming request, the appropriate throttle time, and make the calling thread",0,0,deprecation
3612,SmoothRateLimiter.java,wait as much.,1,0,deprecation
3613,SmoothRateLimiter.java,the simplest way to maintain a rate of qps is to keep the timestamp of the last granted,0,0,deprecation
3614,SmoothRateLimiter.java,"request, and ensure that 1 qps seconds have elapsed since then.",1,0,deprecation
3615,SmoothRateLimiter.java,"for example, for a rate of",0,0,deprecation
3616,SmoothRateLimiter.java,"qps 5 5 tokens per second , if we ensure that a request isn t granted earlier than 200ms after",1,0,deprecation
3617,SmoothRateLimiter.java,"the last one, then we achieve the intended rate.",0,0,deprecation
3618,SmoothRateLimiter.java,if a request comes and the last request was,1,0,deprecation
3619,SmoothRateLimiter.java,"granted only 100ms ago, then we wait for another 100ms.",0,0,deprecation
3620,SmoothRateLimiter.java,"at this rate, serving 15 fresh permits",1,0,deprecation
3621,SmoothRateLimiter.java,ie for an acquire 15 request naturally takes 3 seconds.,0,0,deprecation
3622,SmoothRateLimiter.java,it is important to realize that such a ratelimiter has a very superficial memory of the past,1,0,deprecation
3623,SmoothRateLimiter.java,it only remembers the last request.,0,0,deprecation
3624,SmoothRateLimiter.java,what if the ratelimiter was unused for a long period of,1,0,deprecation
3625,SmoothRateLimiter.java,"time, then a request arrived and was immediately granted?",0,0,deprecation
3626,SmoothRateLimiter.java,this ratelimiter would immediately,1,0,deprecation
3627,SmoothRateLimiter.java,forget about that past underutilization.,0,0,deprecation
3628,SmoothRateLimiter.java,this may result in either underutilization or,1,0,deprecation
3629,SmoothRateLimiter.java,"overflow, depending on the real world consequences of not using the expected rate.",0,0,deprecation
3630,SmoothRateLimiter.java,past underutilization could mean that excess resources are available.,1,0,deprecation
3631,SmoothRateLimiter.java,"then, the ratelimiter",0,0,deprecation
3632,SmoothRateLimiter.java,"should speed up for a while, to take advantage of these resources.",1,0,deprecation
3633,SmoothRateLimiter.java,this is important when the,0,0,deprecation
3634,SmoothRateLimiter.java,"rate is applied to networking limiting bandwidth , where past underutilization typically",1,0,deprecation
3635,SmoothRateLimiter.java,"translates to almost empty buffers , which can be filled immediately.",0,0,deprecation
3636,SmoothRateLimiter.java,"on the other hand, past underutilization could mean that the server responsible for handling",1,0,deprecation
3637,SmoothRateLimiter.java,"the request has become less ready for future requests , ie its caches become stale, and",0,0,deprecation
3638,SmoothRateLimiter.java,requests become more likely to trigger expensive operations a more extreme case of this,0,0,deprecation
3639,SmoothRateLimiter.java,"example is when a server has just booted, and it is mostly busy with getting itself up to",0,0,deprecation
3640,SmoothRateLimiter.java,speed .,0,0,deprecation
3641,SmoothRateLimiter.java,"to deal with such scenarios, we add an extra dimension, that of past underutilization ,",0,0,deprecation
3642,SmoothRateLimiter.java,modeled by storedpermits variable.,0,0,deprecation
3643,SmoothRateLimiter.java,"this variable is zero when there is no underutilization,",0,0,deprecation
3644,SmoothRateLimiter.java,"and it can grow up to maxstoredpermits, for sufficiently large underutilization.",0,0,deprecation
3645,SmoothRateLimiter.java,"so, the",0,0,deprecation
3646,SmoothRateLimiter.java,"requested permits, by an invocation acquire permits , are served from",0,0,deprecation
3647,SmoothRateLimiter.java,stored permits if available,0,0,deprecation
3648,SmoothRateLimiter.java,fresh permits for any remaining permits,0,0,deprecation
3649,SmoothRateLimiter.java,how this works is best explained with an example,0,0,deprecation
3650,SmoothRateLimiter.java,"for a ratelimiter that produces 1 token per second, every second that goes by with the",0,0,deprecation
3651,SmoothRateLimiter.java,"ratelimiter being unused, we increase storedpermits by 1.",0,0,deprecation
3652,SmoothRateLimiter.java,say we leave the ratelimiter unused,0,0,deprecation
3653,SmoothRateLimiter.java,"for 10 seconds ie, we expected a request at time x, but we are at time x 10 seconds before",0,0,deprecation
2630,AbstractCollectionTester.java,base class for collection testers.,0,0,deprecation
3654,SmoothRateLimiter.java,"a request actually arrives this is also related to the point made in the last paragraph , thus",0,0,deprecation
2631,AbstractCollectionTester.java,@param e the element type of the collection to be tested.,0,0,deprecation
3655,SmoothRateLimiter.java,storedpermits becomes 100 assuming maxstoredpermits 100 .,0,0,deprecation
2632,AbstractCollectionTester.java,@author kevin bourrillion,0,0,deprecation
3656,SmoothRateLimiter.java,"at that point, a request of",0,0,deprecation
3657,SmoothRateLimiter.java,acquire 3 arrives.,0,0,deprecation
3658,SmoothRateLimiter.java,"we serve this request out of storedpermits, and reduce that to 70 how",0,0,deprecation
3659,SmoothRateLimiter.java,this is translated to throttling time is discussed later .,0,0,deprecation
2636,AbstractListeningExecutorService.java,abstract @link listeningexecutorservice implementation that creates @link listenablefuture,0,0,deprecation
3660,SmoothRateLimiter.java,"immediately after, assume that an",0,0,deprecation
2637,AbstractListeningExecutorService.java,instances for each @link runnable and @link callable submitted to it.,0,0,deprecation
3661,SmoothRateLimiter.java,acquire 10 request arriving.,0,0,deprecation
2638,AbstractListeningExecutorService.java,these tasks are run,0,0,deprecation
3662,SmoothRateLimiter.java,"we serve the request partly from storedpermits, using all the",0,0,deprecation
2639,AbstractListeningExecutorService.java,with the abstract @link #execute execute runnable method.,0,0,deprecation
3663,SmoothRateLimiter.java,"remaining 70 permits, and the remaining 30, we serve them by fresh permits produced by the",0,0,deprecation
2640,AbstractListeningExecutorService.java,"p in addition to @link #execute , subclasses must implement all methods related to shutdown and",0,0,deprecation
3664,SmoothRateLimiter.java,rate limiter.,0,0,deprecation
2641,AbstractListeningExecutorService.java,termination.,0,0,deprecation
3665,SmoothRateLimiter.java,we already know how much time it takes to serve 3 fresh permits if the rate is,0,0,deprecation
2642,AbstractListeningExecutorService.java,@author chris povirk,0,0,deprecation
3666,SmoothRateLimiter.java,"1 token per second , then this will take 3 seconds.",0,0,deprecation
3667,SmoothRateLimiter.java,but what does it mean to serve 7 stored,0,0,deprecation
3668,SmoothRateLimiter.java,permits?,0,0,deprecation
3669,SmoothRateLimiter.java,"as explained above, there is no unique answer.",0,0,deprecation
3670,SmoothRateLimiter.java,if we are primarily interested to deal,0,0,deprecation
3671,SmoothRateLimiter.java,"with underutilization, then we want stored permits to be given out faster than fresh ones,",0,0,deprecation
3672,SmoothRateLimiter.java,because underutilization free resources for the taking.,0,0,deprecation
3673,SmoothRateLimiter.java,if we are primarily interested to,0,0,deprecation
3674,SmoothRateLimiter.java,"deal with overflow, then stored permits could be given out slower than fresh ones.",0,0,deprecation
3675,SmoothRateLimiter.java,"thus, we",0,0,deprecation
2652,AbstractLoadingCache.java,this class provides a skeletal implementation of the @code cache interface to minimize the,0,0,deprecation
3676,SmoothRateLimiter.java,require a different in each case function that translates storedpermits to throttling time.,0,0,deprecation
2653,AbstractLoadingCache.java,effort required to implement this interface.,0,0,deprecation
3677,SmoothRateLimiter.java,"this role is played by storedpermitstowaittime double storedpermits, double permitstotake .",0,0,deprecation
2654,AbstractLoadingCache.java,"p to implement a cache, the programmer needs only to extend this class and provide an",0,0,deprecation
3678,SmoothRateLimiter.java,the,0,0,deprecation
3679,SmoothRateLimiter.java,underlying model is a continuous function mapping storedpermits from 00 to maxstoredpermits,0,0,deprecation
2656,AbstractLoadingCache.java,@link,0,0,deprecation
3681,SmoothRateLimiter.java,storedpermits,0,0,deprecation
3682,SmoothRateLimiter.java,essentially measure unused time we spend unused time buying storing permits.,0,0,deprecation
3683,SmoothRateLimiter.java,rate is,0,0,deprecation
3684,SmoothRateLimiter.java,"permits time , thus 1 rate time permits .",0,0,deprecation
3685,SmoothRateLimiter.java,"thus, 1 rate time permits times",0,0,deprecation
2662,AbstractLoadingCache.java,all other methods throw,0,0,deprecation
2664,AbstractLoadingCache.java,@author charles fry,0,0,deprecation
3688,SmoothRateLimiter.java,of requested permits.,0,0,deprecation
3697,SmoothRateLimiter.java,this guarantees that we handle,0,0,deprecation
3701,SmoothRateLimiter.java,integrals .,0,0,deprecation
3704,SmoothRateLimiter.java,cost as fresh ones 1 qps is the cost for each .,0,0,deprecation
2681,AbstractMultimap.java,"a skeleton @code multimap implementation, not necessarily in terms of a @code map .",0,0,deprecation
2682,AbstractMultimap.java,@author louis wasserman,0,0,deprecation
2685,AbstractMultimapTester.java,superclass for all @code multimap testers.,0,0,deprecation
3709,SmoothRateLimiter.java,underutilization.,0,0,deprecation
2686,AbstractMultimapTester.java,@author louis wasserman,0,0,deprecation
2689,AbstractSortedKeySortedSetMultimap.java,basic implementation of a @link sortedsetmultimap with a sorted key set.,0,0,deprecation
3713,SmoothRateLimiter.java,"last, but not least consider a ratelimiter with rate of 1 permit per second, currently",0,0,deprecation
2690,AbstractSortedKeySortedSetMultimap.java,p this superclass allows @code treemultimap to override methods to return navigable set and,0,0,deprecation
3714,SmoothRateLimiter.java,"completely unused, and an expensive acquire 100 request comes.",0,0,deprecation
2691,AbstractSortedKeySortedSetMultimap.java,"map types in non gwt only, while gwt code will inherit the sortedmap sortedset overrides.",0,0,deprecation
3715,SmoothRateLimiter.java,it would be nonsensical to just,0,0,deprecation
2692,AbstractSortedKeySortedSetMultimap.java,@author louis wasserman,0,0,deprecation
3717,SmoothRateLimiter.java,why wait without doing anything?,0,0,deprecation
3718,SmoothRateLimiter.java,a much,0,0,deprecation
3720,SmoothRateLimiter.java,"instead , and postpone subsequent requests as needed.",0,0,deprecation
2697,ArbitraryInstances.java,"supplies an arbitrary default instance for a wide range of types, often useful in testing",0,0,deprecation
2698,ArbitraryInstances.java,utilities.,0,0,deprecation
3722,SmoothRateLimiter.java,"task immediately, and postpone by 100 seconds future requests, thus we allow for work to get",0,0,deprecation
2699,ArbitraryInstances.java,"p covers arrays, enums and common types defined in @code java^lang , @code java^lang.reflect ,",0,0,deprecation
2700,ArbitraryInstances.java,"@code java^io , @code java^nio , @code java^math , @code java^util , @code",0,0,deprecation
3724,SmoothRateLimiter.java,this has important consequences it means that the ratelimiter doesn t remember the time of the,0,0,deprecation
2701,ArbitraryInstances.java,"java^util.concurrent , @code java^util.regex , @code com^google.common^base , @code",0,0,deprecation
3725,SmoothRateLimiter.java,"last request, but it remembers the expected time of the next request.",0,0,deprecation
2702,ArbitraryInstances.java,com^google.common^collect and @code com^google.common^primitives .,0,0,deprecation
3726,SmoothRateLimiter.java,this also enables,0,0,deprecation
2703,ArbitraryInstances.java,"in addition, if the type",0,0,deprecation
3727,SmoothRateLimiter.java,us to tell immediately see tryacquire timeout whether a particular timeout is enough to get,0,0,deprecation
2704,ArbitraryInstances.java,"exposes at least one public static final constant of the same type, one of the constants will be",0,0,deprecation
3728,SmoothRateLimiter.java,"us to the point of the next scheduling time, since we always maintain that.",0,0,deprecation
2705,ArbitraryInstances.java,used or if the class exposes a public parameter less constructor then it will be new d and,0,0,deprecation
3729,SmoothRateLimiter.java,and what we mean by,0,0,deprecation
2706,ArbitraryInstances.java,returned.,0,0,deprecation
3730,SmoothRateLimiter.java,an unused ratelimiter is also defined by that notion when we observe that the,0,0,deprecation
2707,ArbitraryInstances.java,p all default instances returned by @link #get are generics safe.,0,0,deprecation
3731,SmoothRateLimiter.java,"expected arrival time of the next request is actually in the past, then the difference now",0,0,deprecation
2708,ArbitraryInstances.java,clients won t get type,0,0,deprecation
3732,SmoothRateLimiter.java,"past is the amount of time that the ratelimiter was formally unused, and it is that amount of",0,0,deprecation
2709,ArbitraryInstances.java,"errors for using @code get comparator^class as a @code comparator foo , for example.",0,0,deprecation
3733,SmoothRateLimiter.java,time which we translate to storedpermits.,0,0,deprecation
2710,ArbitraryInstances.java,immutable empty instances are returned for collection types @code for string @code 0 for,0,0,deprecation
3734,SmoothRateLimiter.java,we increase storedpermits with the amount of permits,0,0,deprecation
2711,ArbitraryInstances.java,number types reasonable default instance for other stateless types.,0,0,deprecation
3735,SmoothRateLimiter.java,that would have been produced in that idle time .,0,0,deprecation
2712,ArbitraryInstances.java,"for mutable types, a fresh",0,0,deprecation
3736,SmoothRateLimiter.java,"so, if rate 1 permit per second, and",0,0,deprecation
2713,ArbitraryInstances.java,instance is created each time @code get is called.,0,0,deprecation
3737,SmoothRateLimiter.java,"arrivals come exactly one second after the previous, then storedpermits is never increased",0,0,deprecation
2714,ArbitraryInstances.java,@author kevin bourrillion,0,0,deprecation
3738,SmoothRateLimiter.java,we would only increase it for arrivals later than the expected one second.,0,0,deprecation
2715,ArbitraryInstances.java,@author ben yu,0,0,deprecation
3739,SmoothRateLimiter.java,the time when the next request no matter its size will be granted.,0,0,deprecation
3740,SmoothRateLimiter.java,"after granting a request,",0,0,deprecation
3741,SmoothRateLimiter.java,this is pushed further in the future.,0,0,deprecation
3742,SmoothRateLimiter.java,large requests push this further than small requests.,0,0,deprecation
3743,SmoothRateLimiter.java,this implements the following function where coldinterval coldfactor stableinterval.,0,0,deprecation
3744,SmoothRateLimiter.java,pre,0,0,deprecation
3745,SmoothRateLimiter.java,^ throttling,0,0,deprecation
3746,SmoothRateLimiter.java,cold,0,0,deprecation
3747,SmoothRateLimiter.java,interval .,0,0,deprecation
3748,SmoothRateLimiter.java,warmup period is the area of the trapezoid between,0,0,deprecation
3749,SmoothRateLimiter.java,thresholdpermits and maxpermits,0,0,deprecation
3750,SmoothRateLimiter.java,stable warm .,0,0,deprecation
3751,SmoothRateLimiter.java,interval .,0,0,deprecation
3752,SmoothRateLimiter.java,up .,0,0,deprecation
3753,SmoothRateLimiter.java,period.,0,0,deprecation
3754,SmoothRateLimiter.java,0 storedpermits,0,0,deprecation
3755,SmoothRateLimiter.java,0 thresholdpermits maxpermits,0,0,deprecation
3756,SmoothRateLimiter.java,pre,0,0,deprecation
3757,SmoothRateLimiter.java,"before going into the details of this particular function, let s keep in mind the basics",0,0,deprecation
3758,SmoothRateLimiter.java,ol,0,0,deprecation
3759,SmoothRateLimiter.java,li the state of the ratelimiter storedpermits is a vertical line in this figure.,0,0,deprecation
3760,SmoothRateLimiter.java,"li when the ratelimiter is not used, this goes right up to maxpermits",0,0,deprecation
3761,SmoothRateLimiter.java,"li when the ratelimiter is used, this goes left down to zero , since if we have",0,0,deprecation
3762,SmoothRateLimiter.java,"storedpermits, we serve from those first",0,0,deprecation
3763,SmoothRateLimiter.java,"li when unused , we go right at a constant rate!",0,0,deprecation
3764,SmoothRateLimiter.java,the rate at which we move to the right is,0,0,deprecation
3766,SmoothRateLimiter.java,this ensures that the time it takes to go from 0 to,0,0,deprecation
3768,SmoothRateLimiter.java,"li when used , the time it takes, as explained in the introductory class note, is equal to",0,0,deprecation
3769,SmoothRateLimiter.java,"the integral of our function, between x permits and x k permits, assuming we want to",0,0,deprecation
2746,ArrayListMultimapGwtSerializationDependencies.java,a dummy superclass to support gwt serialization of the element types of an @link,0,0,deprecation
3770,SmoothRateLimiter.java,spend k saved permits.,0,0,deprecation
2747,ArrayListMultimapGwtSerializationDependencies.java,arraylistmultimap .,0,0,deprecation
3771,SmoothRateLimiter.java,ol,0,0,deprecation
2748,ArrayListMultimapGwtSerializationDependencies.java,the gwt supersource for this class contains a field for each type.,0,0,deprecation
3772,SmoothRateLimiter.java,"p in summary, the time it takes to move to the left spend k permits , is equal to the area of",0,0,deprecation
2749,ArrayListMultimapGwtSerializationDependencies.java,"p for details about this hack, see @link gwtserializationdependencies , which takes the same",0,0,deprecation
3773,SmoothRateLimiter.java,the function of width k.,0,0,deprecation
2750,ArrayListMultimapGwtSerializationDependencies.java,approach but with a subclass rather than a superclass.,0,0,deprecation
3774,SmoothRateLimiter.java,"p assuming we have saturated demand, the time to go from maxpermits to thresholdpermits is",0,0,deprecation
3775,SmoothRateLimiter.java,equal to warmupperiod.,0,0,deprecation
3776,SmoothRateLimiter.java,and the time to go from thresholdpermits to 0 is warmupperiod 2.,0,0,deprecation
3777,SmoothRateLimiter.java,the,0,0,deprecation
3778,SmoothRateLimiter.java,reason that this is warmupperiod 2 is to maintain the behavior of the original implementation,0,0,deprecation
3779,SmoothRateLimiter.java,where coldfactor was hard coded as 3.,0,0,deprecation
3780,SmoothRateLimiter.java,p it remains to calculate thresholdspermits and maxpermits.,0,0,deprecation
2757,AtomicDoubleArrayTest.java,source,0,0,deprecation
2758,AtomicDoubleArrayTest.java,http gee^cs.oswego^edu cgi bin viewcvs^cgi jsr166 src test tck jsr166e atomicdoublearraytest^java?revision 113,0,0,deprecation
3782,SmoothRateLimiter.java,li the time to go from thresholdpermits to 0 is equal to the integral of the function,0,0,deprecation
2759,AtomicDoubleArrayTest.java,modified to adapt to guava coding conventions,0,0,deprecation
3783,SmoothRateLimiter.java,between 0 and thresholdpermits.,0,0,deprecation
2760,AtomicDoubleArrayTest.java,unit test for @link atomicdoublearray .,0,0,deprecation
3784,SmoothRateLimiter.java,this is thresholdpermits stableintervals.,0,0,deprecation
3787,SmoothRateLimiter.java,therefore,0,0,deprecation
2765,BaseEncodingBenchmark.java,benchmark for @code baseencoding performance.,0,0,deprecation
3789,SmoothRateLimiter.java,thresholdpermits 05 warmupperiod stableinterval,0,0,deprecation
2767,BloomFilter.java,a bloom filter for instances of @code t .,0,0,deprecation
3791,SmoothRateLimiter.java,li the time to go from maxpermits to thresholdpermits is equal to the integral of the,0,0,deprecation
2768,BloomFilter.java,a bloom filter offers an approximate containment test,0,0,deprecation
3792,SmoothRateLimiter.java,function between thresholdpermits and maxpermits.,0,0,deprecation
2769,BloomFilter.java,"with one sided error if it claims that an element is contained in it, this might be in error,",0,0,deprecation
3793,SmoothRateLimiter.java,this is the area of the pictured,0,0,deprecation
2770,BloomFilter.java,"but if it claims that an element is i not i contained in it, then this is definitely true.",0,0,deprecation
3794,SmoothRateLimiter.java,"trapezoid, and it is equal to 05 stableinterval coldinterval maxpermits",0,0,deprecation
2771,BloomFilter.java,"p if you are unfamiliar with bloom filters, this nice a",0,0,deprecation
3795,SmoothRateLimiter.java,thresholdpermits .,0,0,deprecation
2772,BloomFilter.java,href http llimllib^github.com bloomfilter tutorial tutorial a may help you understand how,0,0,deprecation
2773,BloomFilter.java,they work.,0,0,deprecation
2774,BloomFilter.java,p the false positive probability @code fpp of a bloom filter is defined as the probability,0,0,deprecation
3798,SmoothRateLimiter.java,maxpermits thresholdpermits 2 warmupperiod stableinterval coldinterval,0,0,deprecation
2775,BloomFilter.java,that @linkplain #mightcontain object will erroneously return @code true for an object that,0,0,deprecation
2776,BloomFilter.java,has not actually been put in the @code bloomfilter .,0,0,deprecation
2777,BloomFilter.java,p bloom filters are serializable.,0,0,deprecation
3801,SmoothRateLimiter.java,"how is the ratelimiter designed, and why?",0,0,deprecation
2778,BloomFilter.java,they also support a more compact serial representation via the,0,0,deprecation
3802,SmoothRateLimiter.java,"the primary feature of a ratelimiter is its stable rate , the maximum rate that is should",0,0,deprecation
2779,BloomFilter.java,@link #writeto and @link #readfrom methods.,0,0,deprecation
3803,SmoothRateLimiter.java,allow at normal conditions.,0,0,deprecation
2780,BloomFilter.java,both serialized forms will continue to be,0,0,deprecation
3804,SmoothRateLimiter.java,"this is enforced by throttling incoming requests as needed, ie",0,0,deprecation
2781,BloomFilter.java,supported by future versions of this library.,0,0,deprecation
3805,SmoothRateLimiter.java,"compute, for an incoming request, the appropriate throttle time, and make the calling thread",0,0,deprecation
3806,SmoothRateLimiter.java,wait as much.,0,0,deprecation
3807,SmoothRateLimiter.java,the simplest way to maintain a rate of qps is to keep the timestamp of the last granted,0,0,deprecation
3808,SmoothRateLimiter.java,"request, and ensure that 1 qps seconds have elapsed since then.",0,0,deprecation
3809,SmoothRateLimiter.java,"for example, for a rate of",0,0,deprecation
3810,SmoothRateLimiter.java,"qps 5 5 tokens per second , if we ensure that a request isn t granted earlier than 200ms after",0,0,deprecation
3811,SmoothRateLimiter.java,"the last one, then we achieve the intended rate.",0,0,deprecation
2788,BloomFilter.java,@param t the type of instances that the @code bloomfilter accepts,0,0,deprecation
3812,SmoothRateLimiter.java,if a request comes and the last request was,0,0,deprecation
2789,BloomFilter.java,@author dimitris andreou,0,0,deprecation
3813,SmoothRateLimiter.java,"granted only 100ms ago, then we wait for another 100ms.",0,0,deprecation
2790,BloomFilter.java,@author kevin bourrillion,0,0,deprecation
3814,SmoothRateLimiter.java,"at this rate, serving 15 fresh permits",0,0,deprecation
3815,SmoothRateLimiter.java,ie for an acquire 15 request naturally takes 3 seconds.,0,0,deprecation
2792,BloomFilter.java,"cheat sheet m total bits n expected insertions b m n, bits per insertion p expected false positive probability 1 optimal k b ln2 2 p 1 e ^ kn m ^k 3 for optimal k p 2 ^ k 06185^b 4 for optimal k m nlnp ln2 ^ 2",0,0,deprecation
3816,SmoothRateLimiter.java,it is important to realize that such a ratelimiter has a very superficial memory of the past,0,0,deprecation
2793,BloomFilter.java,"a strategy to translate t instances, to @code numhashfunctions bit indexes.",0,0,deprecation
3817,SmoothRateLimiter.java,it only remembers the last request.,0,0,deprecation
2794,BloomFilter.java,p implementations should be collections of pure functions ie stateless .,0,0,deprecation
3818,SmoothRateLimiter.java,what if the ratelimiter was unused for a long period of,0,0,deprecation
3819,SmoothRateLimiter.java,"time, then a request arrived and was immediately granted?",0,0,deprecation
3820,SmoothRateLimiter.java,this ratelimiter would immediately,0,0,deprecation
3821,SmoothRateLimiter.java,forget about that past underutilization.,0,0,deprecation
3822,SmoothRateLimiter.java,this may result in either underutilization or,0,0,deprecation
3823,SmoothRateLimiter.java,"overflow, depending on the real world consequences of not using the expected rate.",0,0,deprecation
3824,SmoothRateLimiter.java,past underutilization could mean that excess resources are available.,0,0,deprecation
3825,SmoothRateLimiter.java,"then, the ratelimiter",0,0,deprecation
3826,SmoothRateLimiter.java,"should speed up for a while, to take advantage of these resources.",0,0,deprecation
3827,SmoothRateLimiter.java,this is important when the,0,0,deprecation
3828,SmoothRateLimiter.java,"rate is applied to networking limiting bandwidth , where past underutilization typically",0,0,deprecation
3829,SmoothRateLimiter.java,"translates to almost empty buffers , which can be filled immediately.",0,0,deprecation
3830,SmoothRateLimiter.java,"on the other hand, past underutilization could mean that the server responsible for handling",0,0,deprecation
3831,SmoothRateLimiter.java,"the request has become less ready for future requests , ie its caches become stale, and",0,0,deprecation
3832,SmoothRateLimiter.java,requests become more likely to trigger expensive operations a more extreme case of this,0,0,deprecation
3833,SmoothRateLimiter.java,"example is when a server has just booted, and it is mostly busy with getting itself up to",0,0,deprecation
3834,SmoothRateLimiter.java,speed .,0,0,deprecation
3835,SmoothRateLimiter.java,"to deal with such scenarios, we add an extra dimension, that of past underutilization ,",0,0,deprecation
3836,SmoothRateLimiter.java,modeled by storedpermits variable.,0,0,deprecation
3837,SmoothRateLimiter.java,"this variable is zero when there is no underutilization,",0,0,deprecation
3838,SmoothRateLimiter.java,"and it can grow up to maxstoredpermits, for sufficiently large underutilization.",0,0,deprecation
3839,SmoothRateLimiter.java,"so, the",0,0,deprecation
3840,SmoothRateLimiter.java,"requested permits, by an invocation acquire permits , are served from",0,0,deprecation
3841,SmoothRateLimiter.java,stored permits if available,0,0,deprecation
3842,SmoothRateLimiter.java,fresh permits for any remaining permits,0,0,deprecation
3843,SmoothRateLimiter.java,how this works is best explained with an example,0,0,deprecation
3844,SmoothRateLimiter.java,"for a ratelimiter that produces 1 token per second, every second that goes by with the",0,0,deprecation
3845,SmoothRateLimiter.java,"ratelimiter being unused, we increase storedpermits by 1.",0,0,deprecation
3846,SmoothRateLimiter.java,say we leave the ratelimiter unused,0,0,deprecation
3847,SmoothRateLimiter.java,"for 10 seconds ie, we expected a request at time x, but we are at time x 10 seconds before",0,0,deprecation
3848,SmoothRateLimiter.java,"a request actually arrives this is also related to the point made in the last paragraph , thus",0,0,deprecation
3849,SmoothRateLimiter.java,storedpermits becomes 100 assuming maxstoredpermits 100 .,0,0,deprecation
3850,SmoothRateLimiter.java,"at that point, a request of",0,0,deprecation
3851,SmoothRateLimiter.java,acquire 3 arrives.,0,0,deprecation
3852,SmoothRateLimiter.java,"we serve this request out of storedpermits, and reduce that to 70 how",0,0,deprecation
3853,SmoothRateLimiter.java,this is translated to throttling time is discussed later .,0,0,deprecation
3854,SmoothRateLimiter.java,"immediately after, assume that an",0,0,deprecation
3855,SmoothRateLimiter.java,acquire 10 request arriving.,0,0,deprecation
2832,CacheBuilder.java,a builder of @link loadingcache and @link cache instances having any combination of the,0,0,deprecation
3856,SmoothRateLimiter.java,"we serve the request partly from storedpermits, using all the",0,0,deprecation
2833,CacheBuilder.java,following features,0,0,deprecation
3857,SmoothRateLimiter.java,"remaining 70 permits, and the remaining 30, we serve them by fresh permits produced by the",0,0,deprecation
2834,CacheBuilder.java,ul,0,0,deprecation
3858,SmoothRateLimiter.java,rate limiter.,0,0,deprecation
2835,CacheBuilder.java,li automatic loading of entries into the cache,0,0,deprecation
3859,SmoothRateLimiter.java,we already know how much time it takes to serve 3 fresh permits if the rate is,0,0,deprecation
2836,CacheBuilder.java,li least recently used eviction when a maximum size is exceeded,0,0,deprecation
3860,SmoothRateLimiter.java,"1 token per second , then this will take 3 seconds.",0,0,deprecation
2837,CacheBuilder.java,"li time based expiration of entries, measured since last access or last write",0,0,deprecation
3861,SmoothRateLimiter.java,but what does it mean to serve 7 stored,0,0,deprecation
2838,CacheBuilder.java,li keys automatically wrapped in @linkplain weakreference weak references,0,0,deprecation
3862,SmoothRateLimiter.java,permits?,0,0,deprecation
2839,CacheBuilder.java,li values automatically wrapped in @linkplain weakreference weak or @linkplain,0,0,deprecation
3863,SmoothRateLimiter.java,"as explained above, there is no unique answer.",0,0,deprecation
2840,CacheBuilder.java,softreference soft references,0,0,deprecation
3864,SmoothRateLimiter.java,if we are primarily interested to deal,0,0,deprecation
2841,CacheBuilder.java,li notification of evicted or otherwise removed entries,0,0,deprecation
3865,SmoothRateLimiter.java,"with underutilization, then we want stored permits to be given out faster than fresh ones,",0,0,deprecation
3866,SmoothRateLimiter.java,because underutilization free resources for the taking.,0,0,deprecation
2843,CacheBuilder.java,ul,0,0,deprecation
3867,SmoothRateLimiter.java,if we are primarily interested to,0,0,deprecation
2844,CacheBuilder.java,p these features are all optional caches can be created using all or none of them.,0,0,deprecation
3868,SmoothRateLimiter.java,"deal with overflow, then stored permits could be given out slower than fresh ones.",0,0,deprecation
2845,CacheBuilder.java,by default,0,0,deprecation
3869,SmoothRateLimiter.java,"thus, we",0,0,deprecation
2846,CacheBuilder.java,cache instances created by @code cachebuilder will not perform any type of eviction.,0,0,deprecation
3870,SmoothRateLimiter.java,require a different in each case function that translates storedpermits to throttling time.,0,0,deprecation
2847,CacheBuilder.java,p usage example,0,0,deprecation
3871,SmoothRateLimiter.java,"this role is played by storedpermitstowaittime double storedpermits, double permitstotake .",0,0,deprecation
2848,CacheBuilder.java,pre @code,0,0,deprecation
3872,SmoothRateLimiter.java,the,0,0,deprecation
2849,CacheBuilder.java,"loadingcache key, graph graphs cachebuilder^newbuilder",0,0,deprecation
3873,SmoothRateLimiter.java,underlying model is a continuous function mapping storedpermits from 00 to maxstoredpermits,0,0,deprecation
2850,CacheBuilder.java,maximumsize 10000,0,0,deprecation
2851,CacheBuilder.java,expireafterwrite duration^ofminutes 10,0,0,deprecation
3875,SmoothRateLimiter.java,storedpermits,0,0,deprecation
2852,CacheBuilder.java,removallistener my listener,0,0,deprecation
3876,SmoothRateLimiter.java,essentially measure unused time we spend unused time buying storing permits.,0,0,deprecation
2853,CacheBuilder.java,build,0,0,deprecation
3877,SmoothRateLimiter.java,rate is,0,0,deprecation
2854,CacheBuilder.java,"new cacheloader key, graph",0,0,deprecation
3878,SmoothRateLimiter.java,"permits time , thus 1 rate time permits .",0,0,deprecation
2855,CacheBuilder.java,public graph load key key throws anyexception,0,0,deprecation
3879,SmoothRateLimiter.java,"thus, 1 rate time permits times",0,0,deprecation
2856,CacheBuilder.java,return createexpensivegraph key,0,0,deprecation
2857,CacheBuilder.java,pre,0,0,deprecation
2858,CacheBuilder.java,"p or equivalently,",0,0,deprecation
3882,SmoothRateLimiter.java,of requested permits.,0,0,deprecation
2859,CacheBuilder.java,pre @code,0,0,deprecation
2860,CacheBuilder.java,in real life this would come from a command line flag or config file,0,0,deprecation
2863,CacheBuilder.java,removallistener my listener,0,0,deprecation
2864,CacheBuilder.java,build,0,0,deprecation
2865,CacheBuilder.java,"new cacheloader key, graph",0,0,deprecation
2866,CacheBuilder.java,public graph load key key throws anyexception,0,0,deprecation
2867,CacheBuilder.java,return createexpensivegraph key,0,0,deprecation
3891,SmoothRateLimiter.java,this guarantees that we handle,0,0,deprecation
2868,CacheBuilder.java,pre,0,0,deprecation
2869,CacheBuilder.java,p the returned cache is implemented as a hash table with similar performance characteristics to,0,0,deprecation
2870,CacheBuilder.java,@link concurrenthashmap .,0,0,deprecation
2871,CacheBuilder.java,it implements all optional operations of the @link loadingcache and,0,0,deprecation
3895,SmoothRateLimiter.java,integrals .,0,0,deprecation
2872,CacheBuilder.java,@link cache interfaces.,0,0,deprecation
2873,CacheBuilder.java,the @code asmap view and its collection views have i weakly,0,0,deprecation
2874,CacheBuilder.java,consistent iterators i .,0,0,deprecation
3898,SmoothRateLimiter.java,cost as fresh ones 1 qps is the cost for each .,0,0,deprecation
2875,CacheBuilder.java,"this means that they are safe for concurrent use, but if other threads",0,0,deprecation
2876,CacheBuilder.java,"modify the cache after the iterator is created, it is undefined which of these changes, if any,",0,0,deprecation
2877,CacheBuilder.java,are reflected in that iterator.,0,0,deprecation
2878,CacheBuilder.java,these iterators never throw @link,0,0,deprecation
2879,CacheBuilder.java,concurrentmodificationexception .,0,0,deprecation
3903,SmoothRateLimiter.java,underutilization.,0,0,deprecation
2880,CacheBuilder.java,"p b note b by default, the returned cache uses equality comparisons the @link",0,0,deprecation
2881,CacheBuilder.java,object#equals equals method to determine equality for keys or values.,0,0,deprecation
2882,CacheBuilder.java,"however, if @link",0,0,deprecation
2883,CacheBuilder.java,"#weakkeys was specified, the cache uses identity @code comparisons instead for keys.",0,0,deprecation
3907,SmoothRateLimiter.java,"last, but not least consider a ratelimiter with rate of 1 permit per second, currently",0,0,deprecation
2884,CacheBuilder.java,"likewise, if @link #weakvalues or @link #softvalues was specified, the cache uses identity",0,0,deprecation
3908,SmoothRateLimiter.java,"completely unused, and an expensive acquire 100 request comes.",0,0,deprecation
2885,CacheBuilder.java,comparisons for values.,0,0,deprecation
3909,SmoothRateLimiter.java,it would be nonsensical to just,0,0,deprecation
2886,CacheBuilder.java,p entries are automatically evicted from the cache when any of @linkplain #maximumsize long,0,0,deprecation
2887,CacheBuilder.java,"maximumsize , @linkplain #maximumweight long maximumweight , @linkplain #expireafterwrite",0,0,deprecation
3911,SmoothRateLimiter.java,why wait without doing anything?,0,0,deprecation
2888,CacheBuilder.java,"expireafterwrite , @linkplain #expireafteraccess expireafteraccess , @linkplain #weakkeys",0,0,deprecation
3912,SmoothRateLimiter.java,a much,0,0,deprecation
2889,CacheBuilder.java,"weakkeys , @linkplain #weakvalues weakvalues , or @linkplain #softvalues softvalues are",0,0,deprecation
2890,CacheBuilder.java,requested.,0,0,deprecation
3914,SmoothRateLimiter.java,"instead , and postpone subsequent requests as needed.",0,0,deprecation
2891,CacheBuilder.java,p if @linkplain #maximumsize long maximumsize or @linkplain #maximumweight long,0,0,deprecation
2892,CacheBuilder.java,maximumweight is requested entries may be evicted on each cache modification.,0,0,deprecation
3916,SmoothRateLimiter.java,"task immediately, and postpone by 100 seconds future requests, thus we allow for work to get",0,0,deprecation
2893,CacheBuilder.java,p if @linkplain #expireafterwrite expireafterwrite or @linkplain #expireafteraccess,0,0,deprecation
2894,CacheBuilder.java,"expireafteraccess is requested entries may be evicted on each cache modification, on occasional",0,0,deprecation
3918,SmoothRateLimiter.java,this has important consequences it means that the ratelimiter doesn t remember the time of the,0,0,deprecation
2895,CacheBuilder.java,"cache accesses, or on calls to @link cache#cleanup .",0,0,deprecation
3919,SmoothRateLimiter.java,"last request, but it remembers the expected time of the next request.",0,0,deprecation
2896,CacheBuilder.java,expired entries may be counted by @link,0,0,deprecation
3920,SmoothRateLimiter.java,this also enables,0,0,deprecation
2897,CacheBuilder.java,"cache#size , but will never be visible to read or write operations.",0,0,deprecation
3921,SmoothRateLimiter.java,us to tell immediately see tryacquire timeout whether a particular timeout is enough to get,0,0,deprecation
2898,CacheBuilder.java,"p if @linkplain #weakkeys weakkeys , @linkplain #weakvalues weakvalues , or @linkplain",0,0,deprecation
3922,SmoothRateLimiter.java,"us to the point of the next scheduling time, since we always maintain that.",0,0,deprecation
3923,SmoothRateLimiter.java,and what we mean by,0,0,deprecation
2900,CacheBuilder.java,be reclaimed by the garbage collector.,0,0,deprecation
3924,SmoothRateLimiter.java,an unused ratelimiter is also defined by that notion when we observe that the,0,0,deprecation
2901,CacheBuilder.java,entries with reclaimed keys or values may be removed from,0,0,deprecation
3925,SmoothRateLimiter.java,"expected arrival time of the next request is actually in the past, then the difference now",0,0,deprecation
2902,CacheBuilder.java,"the cache on each cache modification, on occasional cache accesses, or on calls to @link",0,0,deprecation
3926,SmoothRateLimiter.java,"past is the amount of time that the ratelimiter was formally unused, and it is that amount of",0,0,deprecation
2903,CacheBuilder.java,"cache#cleanup such entries may be counted in @link cache#size , but will never be visible to",0,0,deprecation
3927,SmoothRateLimiter.java,time which we translate to storedpermits.,0,0,deprecation
2904,CacheBuilder.java,read or write operations.,0,0,deprecation
3928,SmoothRateLimiter.java,we increase storedpermits with the amount of permits,0,0,deprecation
2905,CacheBuilder.java,p certain cache configurations will result in the accrual of periodic maintenance tasks which,0,0,deprecation
3929,SmoothRateLimiter.java,that would have been produced in that idle time .,0,0,deprecation
2906,CacheBuilder.java,"will be performed during write operations, or during occasional read operations in the absence of",0,0,deprecation
3930,SmoothRateLimiter.java,"so, if rate 1 permit per second, and",0,0,deprecation
2907,CacheBuilder.java,writes.,0,0,deprecation
3931,SmoothRateLimiter.java,"arrivals come exactly one second after the previous, then storedpermits is never increased",0,0,deprecation
2908,CacheBuilder.java,"the @link cache#cleanup method of the returned cache will also perform maintenance, but",0,0,deprecation
3932,SmoothRateLimiter.java,we would only increase it for arrivals later than the expected one second.,0,0,deprecation
2909,CacheBuilder.java,calling it should not be necessary with a high throughput cache.,0,0,deprecation
3933,SmoothRateLimiter.java,the time when the next request no matter its size will be granted.,0,0,deprecation
2910,CacheBuilder.java,only caches built with,0,0,deprecation
3934,SmoothRateLimiter.java,"after granting a request,",0,0,deprecation
2911,CacheBuilder.java,"@linkplain #removallistener removallistener , @linkplain #expireafterwrite expireafterwrite ,",0,0,deprecation
3935,SmoothRateLimiter.java,this is pushed further in the future.,0,0,deprecation
2912,CacheBuilder.java,"@linkplain #expireafteraccess expireafteraccess , @linkplain #weakkeys weakkeys , @linkplain",0,0,deprecation
3936,SmoothRateLimiter.java,large requests push this further than small requests.,0,0,deprecation
2913,CacheBuilder.java,"#weakvalues weakvalues , or @linkplain #softvalues softvalues perform periodic maintenance.",0,0,deprecation
3937,SmoothRateLimiter.java,"this implements a bursty ratelimiter, where storedpermits are translated to zero throttling.",0,0,deprecation
3938,SmoothRateLimiter.java,the maximum number of permits that can be saved when the ratelimiter is unused is defined in,0,0,deprecation
2915,CacheBuilder.java,retain all the configuration properties of the original cache.,0,0,deprecation
3939,SmoothRateLimiter.java,"terms of time, in this sense if a ratelimiter is 2qps, and this time is specified as 10",0,0,deprecation
2916,CacheBuilder.java,note that the serialized form does,0,0,deprecation
3940,SmoothRateLimiter.java,"seconds, we can save up to 2 10 20 permits.",0,0,deprecation
2917,CacheBuilder.java,"i not i include cache contents, but only configuration.",0,0,deprecation
2918,CacheBuilder.java,p see the guava user guide article on a,0,0,deprecation
2919,CacheBuilder.java,href https github^com google guava wiki cachesexplained caching a for a higher level,0,0,deprecation
2920,CacheBuilder.java,explanation.,0,0,deprecation
2922,CacheBuilder.java,this is,0,0,deprecation
2923,CacheBuilder.java,normally @code object unless it is constrained by using a method like @code,0,0,deprecation
2924,CacheBuilder.java,#removallistener,0,0,deprecation
2926,CacheBuilder.java,this is,0,0,deprecation
2927,CacheBuilder.java,normally @code object unless it is constrained by using a method like @code,0,0,deprecation
2928,CacheBuilder.java,#removallistener,0,0,deprecation
2929,CacheBuilder.java,@author charles fry,0,0,deprecation
2930,CacheBuilder.java,@author kevin bourrillion,0,0,deprecation
3040,CacheLoaderTest.java,unit tests for @link cacheloader .,0,0,deprecation
3041,CacheLoaderTest.java,@author charles fry,0,0,deprecation
3044,CacheManualTest.java,@author charles fry,0,0,deprecation
3046,ClassToInstanceMap.java,"a map, each entry of which maps a java a href http tinyurl^com 2cmwkz raw type a to an",0,0,deprecation
3047,ClassToInstanceMap.java,instance of that type.,0,0,deprecation
3048,ClassToInstanceMap.java,"in addition to implementing @code map , the additional type safe",0,0,deprecation
3049,ClassToInstanceMap.java,operations @link #putinstance and @link #getinstance are available.,0,0,deprecation
3050,ClassToInstanceMap.java,"p like any other @code map class, object , this map may contain entries for primitive types,",0,0,deprecation
3051,ClassToInstanceMap.java,and a primitive type and its corresponding wrapper type may map to different values.,0,0,deprecation
3052,ClassToInstanceMap.java,p see the guava user guide article on a href,0,0,deprecation
3053,ClassToInstanceMap.java,https github^com google guava wiki newcollectiontypesexplained#classtoinstancemap @code,0,0,deprecation
3054,ClassToInstanceMap.java,classtoinstancemap a .,0,0,deprecation
3055,ClassToInstanceMap.java,"p to map a generic type to an instance of that type, use @link",0,0,deprecation
3056,ClassToInstanceMap.java,com^google.common^reflect.typetoinstancemap instead.,0,0,deprecation
3057,ClassToInstanceMap.java,@param b the common supertype that all entries must share often this is simply @link object,0,0,deprecation
3058,ClassToInstanceMap.java,@author kevin bourrillion,0,0,deprecation
4151,AbstractModule.java,a support class for @link module s which reduces repetition and results in a more readable,0,0,deprecation
4152,AbstractModule.java,configuration.,1,0,deprecation
4153,AbstractModule.java,"simply extend this class, implement @link #configure , and call the inherited",0,0,deprecation
4154,AbstractModule.java,methods which mirror those found in @link binder .,1,0,deprecation
4155,AbstractModule.java,for example,0,0,deprecation
4156,AbstractModule.java,pre,1,0,deprecation
4157,AbstractModule.java,public class mymodule extends abstractmodule,0,0,deprecation
4158,AbstractModule.java,protected void configure,1,0,deprecation
4159,AbstractModule.java,bind service^class ^to serviceimpl^class ^in singleton^class,0,0,deprecation
4160,AbstractModule.java,bind creditcardpaymentservice^class,1,0,deprecation
4161,AbstractModule.java,bind paymentservice^class ^to creditcardpaymentservice^class,0,0,deprecation
4162,AbstractModule.java,bindconstant ^annotatedwith names^named port ^to 8080,1,0,deprecation
4163,AbstractModule.java,pre,0,0,deprecation
4164,AbstractModule.java,@author crazybob@google^com bob lee,1,0,deprecation
4179,Binder.java,collects configuration information primarily i bindings i which will be used to create an,0,0,deprecation
4180,Binder.java,@link injector .,1,0,deprecation
4181,Binder.java,guice provides this object to your application s @link module implementors so,0,0,deprecation
4182,Binder.java,they may each contribute their own bindings and other registrations.,1,0,deprecation
4183,Binder.java,h3 the guice binding edsl h3,0,0,deprecation
4184,Binder.java,"guice uses an i embedded domain specific language i , or edsl, to help you create bindings",1,0,deprecation
4185,Binder.java,simply and readably.,0,0,deprecation
4188,Binder.java,javadocs b .,1,0,deprecation
4189,Binder.java,"instead, you should consult the series of examples below.",0,0,deprecation
4190,Binder.java,"to save space, these",1,0,deprecation
4191,Binder.java,"examples omit the opening @code binder , just as you will if your module extends @link",0,0,deprecation
4192,Binder.java,abstractmodule .,1,0,deprecation
4193,Binder.java,pre,0,0,deprecation
4196,Binder.java,does not change guice s default behavior.,1,0,deprecation
4198,Binder.java,@link module class to serve as an explicit i manifest i for the services it provides.,0,0,deprecation
4199,Binder.java,"also,",1,0,deprecation
4201,Binder.java,given explicitly.,0,0,deprecation
4202,Binder.java,pre,1,0,deprecation
4204,Binder.java,specifies that a request for a @code service instance with no binding annotations should be,0,0,deprecation
4205,Binder.java,treated as if it were a request for a @code serviceimpl instance.,1,0,deprecation
4206,Binder.java,this i overrides i the,0,0,deprecation
4207,Binder.java,function of any @link implementedby @implementedby or @link providedby @providedby,1,0,deprecation
4208,Binder.java,"annotations found on @code service , since guice will have already moved on to @code",0,0,deprecation
4209,Binder.java,serviceimpl before it reaches the point when it starts looking for these annotations.,1,0,deprecation
4210,Binder.java,pre,0,0,deprecation
4212,Binder.java,"in this example, @code serviceprovider must extend or implement @code provider service .",1,0,deprecation
4213,Binder.java,this,0,0,deprecation
4214,Binder.java,binding specifies that guice should resolve an unannotated injection request for @code service,1,0,deprecation
4215,Binder.java,"by first resolving an instance of @code serviceprovider in the regular way, then calling @link",0,0,deprecation
4216,Binder.java,provider#get get on the resulting provider instance to obtain the @code service instance.,1,0,deprecation
4217,Binder.java,"p the @link provider you use here does not have to be a factory that is, a provider which",0,0,deprecation
4473,DefaultMethodInterceptionTest.java,tests for interception of default methods.,1,0,deprecation
4218,Binder.java,always i creates i each instance it provides.,0,0,deprecation
4474,DefaultMethodInterceptionTest.java,@author cgdecker@google^com colin decker,1,0,deprecation
4475,DefaultMethodInterceptionTest.java,interface with a default method annotated to be intercepted.,0,0,deprecation
4220,Binder.java,follow.,1,0,deprecation
4476,DefaultMethodInterceptionTest.java,foo implementation that does not override the default method.,0,0,deprecation
4221,Binder.java,you can then use guice s concept of @link scope scopes to guide when creation should,1,0,deprecation
4477,DefaultMethodInterceptionTest.java,a base class defining a method with the same signature as foo s default method.,0,0,deprecation
4222,Binder.java,happen letting guice work for you .,1,0,deprecation
4478,DefaultMethodInterceptionTest.java,foo implementation that should use superclass method rather than default method.,0,0,deprecation
4223,Binder.java,pre,1,0,deprecation
4226,Binder.java,@code @red .,0,0,deprecation
4227,Binder.java,if your module also includes bindings for particular i values i of the,1,0,deprecation
4229,Binder.java,of @code @red that have no exact match in the bindings.,0,0,deprecation
4230,Binder.java,pre,1,0,deprecation
4231,Binder.java,bind serviceimpl^class ^in singleton^class,0,0,deprecation
4487,Element.java,an internal binding annotation applied to each element in a multibinding.,1,0,deprecation
4232,Binder.java,"or, alternatively",0,0,deprecation
4488,Element.java,all elements are,0,0,deprecation
4489,Element.java,assigned a globally unique id to allow different modules to contribute multibindings,0,0,deprecation
4234,Binder.java,either of these statements places the @code serviceimpl class into singleton scope.,0,0,deprecation
4490,Element.java,independently.,0,0,deprecation
4235,Binder.java,guice will,0,0,deprecation
4491,Element.java,@author jessewilson@google^com jesse wilson,0,0,deprecation
4236,Binder.java,create only one instance of @code serviceimpl and will reuse it for all injection requests of,0,0,deprecation
4238,Binder.java,note that it is still possible to bind another instance of @code serviceimpl if the,0,0,deprecation
4240,Binder.java,guice is not overly,0,0,deprecation
4497,EncounterImpl.java,@author jessewilson@google^com jesse wilson,0,0,deprecation
4242,Binder.java,with i enabling i your application to share only one instance if that s all you tell guice you,0,0,deprecation
4243,Binder.java,need.,0,0,deprecation
4499,ImplicitBindingTest.java,"@author crazybob@google^com bob lee an enum cannot be implemented by anything, so it should not be possible to have a successful valid jitable binding",0,0,deprecation
4245,Binder.java,an annotation on the @code serviceimpl class.,0,0,deprecation
4246,Binder.java,"p besides @link singleton @link scopes#singleton , there are servlet specific scopes",0,0,deprecation
4502,ManagedFilterPipeline.java,"central routing dispatch class handles lifecycle of managed filters, and delegates to the servlet",0,0,deprecation
4247,Binder.java,"available in @code com^google.inject^servlet.servletscopes , and your modules can contribute",0,0,deprecation
4503,ManagedFilterPipeline.java,pipeline.,0,0,deprecation
4248,Binder.java,their own custom scopes for use here as well.,0,0,deprecation
4504,ManagedFilterPipeline.java,@author dhanji@gmail^com dhanji r. prasanna,0,0,deprecation
4249,Binder.java,pre,0,0,deprecation
4250,Binder.java,bind new typeliteral&lt paymentservice&lt creditcard,0,0,deprecation
4508,PrivateElementProcessor,handles @code binder^newprivatebinder elements.,0,0,deprecation
4253,Binder.java,it tells guice how to,0,0,deprecation
4509,PrivateElementProcessor,@author jessewilson@google^com jesse wilson,0,0,deprecation
4254,Binder.java,honor an injection request for an element of type @code paymentservice creditcard .,0,0,deprecation
4255,Binder.java,the class,0,0,deprecation
4256,Binder.java,@code creditcardpaymentservice must implement the @code paymentservice creditcard interface.,0,0,deprecation
4512,ProxyFactoryTest.java,@author crazybob@google^com bob lee,0,0,deprecation
4257,Binder.java,"guice cannot currently bind or inject a generic type, such as @code set e all type parameters",0,0,deprecation
4258,Binder.java,must be fully specified.,0,0,deprecation
4514,SpiUtils.java,utilities for testing the multibinder & mapbinder extension spi.,0,0,deprecation
4259,Binder.java,pre,0,0,deprecation
4515,SpiUtils.java,@author sameb@google^com sam berlin,0,0,deprecation
4260,Binder.java,bind service^class ^toinstance new serviceimpl,0,0,deprecation
4261,Binder.java,"or, alternatively",0,0,deprecation
4518,SpiUtils.java,the kind of binding.,0,0,deprecation
4519,SpiUtils.java,the result of the binding.,0,0,deprecation
4265,Binder.java,@code service injection requests.,0,0,deprecation
4266,Binder.java,"when the @link injector is created, it will automatically",0,0,deprecation
4268,Binder.java,serviceimpl is simply ignored.,0,0,deprecation
4270,Binder.java,that you can t control.,0,0,deprecation
4271,Binder.java,pre,0,0,deprecation
4273,Binder.java,sets up a constant binding.,0,0,deprecation
4274,Binder.java,constant injections must always be annotated.,0,0,deprecation
4275,Binder.java,when a constant,0,0,deprecation
4276,Binder.java,"binding s value is a string, it is eligible for conversion to all primitive types, to @link",0,0,deprecation
4277,Binder.java,"enum#valueof class, string all enums , and to @link class#forname class literals .",0,0,deprecation
4278,Binder.java,conversions,0,0,deprecation
4279,Binder.java,"for other types can be configured using @link #converttotypes matcher, typeconverter",0,0,deprecation
4280,Binder.java,converttotypes .,0,0,deprecation
4281,Binder.java,pre,0,0,deprecation
4282,Binder.java,@literal @ color red color red a member variable field,0,0,deprecation
4283,Binder.java,red mymodule^class.getdeclaredfield red ^getannotation color^class,0,0,deprecation
4285,Binder.java,if your binding annotation has parameters you can apply different bindings to different specific,0,0,deprecation
4286,Binder.java,values of your annotation.,0,0,deprecation
4287,Binder.java,getting your hands on the right instance of the annotation is a bit of,0,0,deprecation
4288,Binder.java,"a pain one approach, shown above, is to apply a prototype annotation to a field in your module",0,0,deprecation
4290,Binder.java,pre,0,0,deprecation
4291,Binder.java,bind service^class,0,0,deprecation
4292,Binder.java,annotatedwith names^named blue,0,0,deprecation
4294,Binder.java,"differentiating by names is a common enough use case that we provided a standard annotation,",0,0,deprecation
4295,Binder.java,@link com^google.inject^name.named @named .,0,0,deprecation
4296,Binder.java,"because of guice s library support, binding by name",0,0,deprecation
4297,Binder.java,is quite easier than in the arbitrary binding annotation case we just saw.,0,0,deprecation
4298,Binder.java,"however, remember that",0,0,deprecation
4299,Binder.java,these names will live in a single flat namespace with all the other names used in your,0,0,deprecation
4300,Binder.java,application.,0,0,deprecation
4301,Binder.java,pre,0,0,deprecation
4302,Binder.java,constructor t lonector getlonectorfromserviceimplviareflection,0,0,deprecation
4303,Binder.java,bind serviceimpl^class,0,0,deprecation
4306,Binder.java,implementation.,0,0,deprecation
4307,Binder.java,it means that we do not need to place @literal @ inject on any of the,0,0,deprecation
4308,Binder.java,constructors and that guice treats the provided constructor as though it were annotated so.,0,0,deprecation
4309,Binder.java,it is,0,0,deprecation
4310,Binder.java,useful for cases where you cannot modify existing classes and is a bit simpler than using a,0,0,deprecation
4311,Binder.java,@link provider .,0,0,deprecation
4312,Binder.java,p the above list of examples is far from exhaustive.,0,0,deprecation
4313,Binder.java,if you can think of how the concepts of one,0,0,deprecation
4314,Binder.java,"example might coexist with the concepts from another, you can most likely weave the two together.",0,0,deprecation
4315,Binder.java,"if the two concepts make no sense with each other, you most likely won t be able to do it.",0,0,deprecation
4316,Binder.java,in a,0,0,deprecation
4318,Binder.java,"runtime, as soon as you try to create your injector.",0,0,deprecation
4319,Binder.java,"p the other methods of binder such as @link #bindscope , @link #bindinterceptor , @link",0,0,deprecation
4320,Binder.java,"#install , @link #requeststaticinjection , @link #adderror and @link #currentstage are not",0,0,deprecation
4321,Binder.java,"part of the binding edsl you can learn how to use these in the usual way, from the method",0,0,deprecation
4322,Binder.java,documentation.,0,0,deprecation
4323,Binder.java,@author crazybob@google^com bob lee,0,0,deprecation
4324,Binder.java,@author jessewilson@google^com jesse wilson,0,0,deprecation
4325,Binder.java,@author kevinb@google^com kevin bourrillion,0,0,deprecation
5120,VScrollTable.java,dom^client.blurevent,0,0,deprecation
5121,VScrollTable.java,non javadoc,1,0,deprecation
5124,VScrollTable.java,to detect if the first visible,0,0,deprecation
5125,VScrollTable.java,these are used when jumping between pages when pressing home and end,1,0,deprecation
5126,VScrollTable.java,changes to manage mousedown and mouseup,0,0,deprecation
5127,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,1,0,deprecation
5128,VScrollTable.java,lost .,0,0,deprecation
5129,VScrollTable.java,example itabpanel just set contained components invisible and back,1,0,deprecation
5130,VScrollTable.java,when changing tabs.,0,0,deprecation
5131,VScrollTable.java,updates first visible row for the case we cannot wait,1,0,deprecation
5132,VScrollTable.java,this method has logic which rows needs to be requested from server when,0,0,deprecation
5133,VScrollTable.java,user scrolls.,1,0,deprecation
5134,VScrollTable.java,non javadoc,0,0,deprecation
5135,VScrollTable.java,@see,1,0,deprecation
5136,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,0,0,deprecation
5137,VScrollTable.java,dom^client.focusevent,1,0,deprecation
5138,VScrollTable.java,non javadoc,0,0,deprecation
5139,VScrollTable.java,@see,1,0,deprecation
5140,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,0,0,deprecation
5141,VScrollTable.java,dom^client.blurevent,1,0,deprecation
5142,VScrollTable.java,non javadoc,0,0,deprecation
5144,VScrollTable.java,for internal use only.,1,0,deprecation
5146,VScrollTable.java,overwrites onbrowserevent function on focusablescrollpanel to give event,0,0,deprecation
5147,VScrollTable.java,access to touchcontextprovider.,1,0,deprecation
5148,VScrollTable.java,has to be public to give tableconnector,0,0,deprecation
5151,VScrollTable.java,@author vaadin ltd,1,0,deprecation
5152,VScrollTable.java,to detect if the first visible,0,0,deprecation
5153,VScrollTable.java,these are used when jumping between pages when pressing home and end,1,0,deprecation
5154,VScrollTable.java,changes to manage mousedown and mouseup,0,0,deprecation
5155,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,1,0,deprecation
5156,VScrollTable.java,lost .,0,0,deprecation
5157,VScrollTable.java,example itabpanel just set contained components invisible and back,1,0,deprecation
5158,VScrollTable.java,when changing tabs.,0,0,deprecation
5159,VScrollTable.java,updates first visible row for the case we cannot wait,1,0,deprecation
5160,VScrollTable.java,this method has logic which rows needs to be requested from server when,0,0,deprecation
5161,VScrollTable.java,user scrolls.,1,0,deprecation
5162,VScrollTable.java,non javadoc,0,0,deprecation
5163,VScrollTable.java,@see,1,0,deprecation
5164,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,0,0,deprecation
5165,VScrollTable.java,dom^client.focusevent,1,0,deprecation
5166,VScrollTable.java,non javadoc,0,0,deprecation
5167,VScrollTable.java,@see,1,0,deprecation
5168,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,0,0,deprecation
5169,VScrollTable.java,dom^client.blurevent,1,0,deprecation
5170,VScrollTable.java,non javadoc,0,0,deprecation
5172,VScrollTable.java,used to recall the position of an open context menu if we need to close,1,0,deprecation
5175,VScrollTable.java,for internal use only.,0,0,deprecation
5177,VScrollTable.java,to detect if the first visible,1,0,deprecation
5178,VScrollTable.java,these are used when jumping between pages when pressing home and end,0,0,deprecation
5179,VScrollTable.java,changes to manage mousedown and mouseup,1,0,deprecation
5180,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,0,0,deprecation
5181,VScrollTable.java,lost .,1,0,deprecation
5182,VScrollTable.java,example itabpanel just set contained components invisible and back,0,0,deprecation
5183,VScrollTable.java,when changing tabs.,1,0,deprecation
5184,VScrollTable.java,updates first visible row for the case we cannot wait,0,0,deprecation
5185,VScrollTable.java,this method has logic which rows needs to be requested from server when,1,0,deprecation
5186,VScrollTable.java,user scrolls.,0,0,deprecation
5187,VScrollTable.java,non javadoc,1,0,deprecation
5188,VScrollTable.java,@see,0,0,deprecation
5189,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,1,0,deprecation
5190,VScrollTable.java,dom^client.focusevent,0,0,deprecation
5191,VScrollTable.java,non javadoc,1,0,deprecation
5192,VScrollTable.java,@see,0,0,deprecation
5193,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,1,0,deprecation
5194,VScrollTable.java,dom^client.blurevent,0,0,deprecation
5195,VScrollTable.java,non javadoc,1,0,deprecation
5197,VScrollTable.java,for internal use only.,0,0,deprecation
5199,VScrollTable.java,to detect if the first visible,1,0,deprecation
5200,VScrollTable.java,these are used when jumping between pages when pressing home and end,0,0,deprecation
5201,VScrollTable.java,changes to manage mousedown and mouseup,1,0,deprecation
5202,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,0,0,deprecation
5203,VScrollTable.java,lost .,1,0,deprecation
5204,VScrollTable.java,example itabpanel just set contained components invisible and back,0,0,deprecation
5205,VScrollTable.java,when changing tabs.,1,0,deprecation
5206,VScrollTable.java,updates first visible row for the case we cannot wait,0,0,deprecation
5207,VScrollTable.java,this method has logic which rows needs to be requested from server when,1,0,deprecation
5208,VScrollTable.java,user scrolls.,0,0,deprecation
5209,VScrollTable.java,non javadoc,1,0,deprecation
5210,VScrollTable.java,@see,0,0,deprecation
5211,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,1,0,deprecation
5212,VScrollTable.java,dom^client.focusevent,0,0,deprecation
5213,VScrollTable.java,non javadoc,1,0,deprecation
5214,VScrollTable.java,@see,0,0,deprecation
5215,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,1,0,deprecation
5216,VScrollTable.java,dom^client.blurevent,0,0,deprecation
5217,VScrollTable.java,non javadoc,1,0,deprecation
5220,VScrollTable.java,reordering disabled and clicking on it resets sorting.,0,0,deprecation
5221,VScrollTable.java,to detect if the first visible,1,0,deprecation
5222,VScrollTable.java,these are used when jumping between pages when pressing home and end,0,0,deprecation
5223,VScrollTable.java,changes to manage mousedown and mouseup,1,0,deprecation
5224,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,0,0,deprecation
5225,VScrollTable.java,lost .,1,0,deprecation
5226,VScrollTable.java,example itabpanel just set contained components invisible and back,0,0,deprecation
5227,VScrollTable.java,when changing tabs.,1,0,deprecation
5228,VScrollTable.java,updates first visible row for the case we cannot wait,0,0,deprecation
5229,VScrollTable.java,this method has logic which rows needs to be requested from server when,1,0,deprecation
5230,VScrollTable.java,user scrolls.,0,0,deprecation
5231,VScrollTable.java,non javadoc,1,0,deprecation
5232,VScrollTable.java,@see,0,0,deprecation
5233,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,1,0,deprecation
5234,VScrollTable.java,dom^client.focusevent,0,0,deprecation
5235,VScrollTable.java,non javadoc,1,0,deprecation
5236,VScrollTable.java,@see,0,0,deprecation
5237,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,1,0,deprecation
5238,VScrollTable.java,dom^client.blurevent,0,0,deprecation
5239,VScrollTable.java,non javadoc,1,0,deprecation
5242,VScrollTable.java,to detect if the first visible,0,0,deprecation
5243,VScrollTable.java,these are used when jumping between pages when pressing home and end,1,0,deprecation
5244,VScrollTable.java,changes to manage mousedown and mouseup,0,0,deprecation
5245,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,1,0,deprecation
5246,VScrollTable.java,lost .,0,0,deprecation
5247,VScrollTable.java,example itabpanel just set contained components invisible and back,1,0,deprecation
5248,VScrollTable.java,when changing tabs.,0,0,deprecation
5249,VScrollTable.java,updates first visible row for the case we cannot wait,1,0,deprecation
5250,VScrollTable.java,this method has logic which rows needs to be requested from server when,0,0,deprecation
5251,VScrollTable.java,user scrolls.,1,0,deprecation
5252,VScrollTable.java,non javadoc,0,0,deprecation
5253,VScrollTable.java,@see,1,0,deprecation
5254,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,0,0,deprecation
5255,VScrollTable.java,dom^client.focusevent,1,0,deprecation
5256,VScrollTable.java,non javadoc,0,0,deprecation
5257,VScrollTable.java,@see,1,0,deprecation
5258,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,0,0,deprecation
5259,VScrollTable.java,dom^client.blurevent,1,0,deprecation
5260,VScrollTable.java,non javadoc,0,0,deprecation
5263,VScrollTable.java,reordering disabled and clicking on it resets sorting.,1,0,deprecation
5264,VScrollTable.java,to detect if the first visible,0,0,deprecation
5265,VScrollTable.java,these are used when jumping between pages when pressing home and end,1,0,deprecation
5266,VScrollTable.java,changes to manage mousedown and mouseup,0,0,deprecation
5267,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,1,0,deprecation
5268,VScrollTable.java,lost .,0,0,deprecation
5269,VScrollTable.java,example itabpanel just set contained components invisible and back,1,0,deprecation
5270,VScrollTable.java,when changing tabs.,0,0,deprecation
5271,VScrollTable.java,updates first visible row for the case we cannot wait,1,0,deprecation
5272,VScrollTable.java,this method has logic which rows needs to be requested from server when,0,0,deprecation
5273,VScrollTable.java,user scrolls.,1,0,deprecation
5274,VScrollTable.java,non javadoc,0,0,deprecation
5275,VScrollTable.java,@see,1,0,deprecation
5276,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,0,0,deprecation
5277,VScrollTable.java,dom^client.focusevent,1,0,deprecation
5278,VScrollTable.java,non javadoc,0,0,deprecation
5279,VScrollTable.java,@see,1,0,deprecation
5280,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,0,0,deprecation
5281,VScrollTable.java,dom^client.blurevent,1,0,deprecation
5282,VScrollTable.java,non javadoc,0,0,deprecation
5285,VScrollTable.java,to detect if the first visible,1,0,deprecation
5286,VScrollTable.java,these are used when jumping between pages when pressing home and end,0,0,deprecation
5287,VScrollTable.java,changes to manage mousedown and mouseup,1,0,deprecation
5288,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,0,0,deprecation
5289,VScrollTable.java,lost .,1,0,deprecation
5290,VScrollTable.java,example itabpanel just set contained components invisible and back,0,0,deprecation
5291,VScrollTable.java,when changing tabs.,1,0,deprecation
5292,VScrollTable.java,updates first visible row for the case we cannot wait,0,0,deprecation
5293,VScrollTable.java,this method has logic which rows needs to be requested from server when,1,0,deprecation
5294,VScrollTable.java,user scrolls.,0,0,deprecation
5295,VScrollTable.java,non javadoc,1,0,deprecation
5296,VScrollTable.java,@see,0,0,deprecation
5297,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,1,0,deprecation
5298,VScrollTable.java,dom^client.focusevent,0,0,deprecation
5299,VScrollTable.java,non javadoc,1,0,deprecation
5300,VScrollTable.java,@see,0,0,deprecation
5301,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,1,0,deprecation
5302,VScrollTable.java,dom^client.blurevent,0,0,deprecation
5303,VScrollTable.java,non javadoc,1,0,deprecation
5305,VScrollTable.java,this panel can only contain vscrolltablerow type of widgets.,0,0,deprecation
5306,VScrollTable.java,this,1,0,deprecation
5307,VScrollTable.java,"simulates very large table, keeping spacers which take room of",0,0,deprecation
5308,VScrollTable.java,unrendered rows.,1,0,deprecation
5362,VTextArea.java,this class represents a multiline textfield textarea .,0,0,deprecation
5366,VTextArea.java,@author vaadin ltd.,1,0,deprecation
5371,VUpload.java,@author vaadin ltd,0,0,deprecation
5373,Window.java,a component that represents a floating popup window that can be added to a,1,0,deprecation
5374,Window.java,@link ui .,0,0,deprecation
5375,Window.java,a window is added to a @code ui using,1,0,deprecation
5376,Window.java,@link ui#addwindow window .,0,0,deprecation
5377,Window.java,p,1,0,deprecation
5378,Window.java,the contents of a window is set using @link #setcontent component or by,0,0,deprecation
5379,Window.java,"using the @link #window string, component constructor.",1,0,deprecation
5380,Window.java,p,0,0,deprecation
5381,Window.java,p,1,0,deprecation
5382,Window.java,a window can be positioned on the screen using absolute coordinates pixels,0,0,deprecation
5383,Window.java,or set to be centered using @link #center,1,0,deprecation
5384,Window.java,p,0,0,deprecation
5385,Window.java,p,1,0,deprecation
5386,Window.java,the caption is displayed in the window header.,0,0,deprecation
5387,Window.java,p,1,0,deprecation
5388,Window.java,p,0,0,deprecation
5389,Window.java,"in vaadin versions prior to 70.0, window was also used as application level",1,0,deprecation
5390,Window.java,windows.,0,0,deprecation
5391,Window.java,this function is now covered by the @link ui class.,1,0,deprecation
5392,Window.java,p,0,0,deprecation
5393,Window.java,@author vaadin ltd.,1,0,deprecation
5395,Window.java,non javadoc,0,0,deprecation
5396,Window.java,@see com^vaadin.ui^panel#paintcontent com^vaadin.server^painttarget,1,0,deprecation
5397,Window.java,non javadoc,0,0,deprecation
5398,Window.java,"@see com^vaadin.ui^panel#changevariables java^lang.object, java^util.map",1,0,deprecation
5399,Window.java,event which is fired when the window order position is changed.,0,0,deprecation
5400,Window.java,@see ui^windoworderupdateevent,1,0,deprecation
5401,Window.java,@author vaadin ltd,0,0,deprecation
5402,Window.java,non javadoc,1,0,deprecation
5403,Window.java,@see com^vaadin.ui^panel#paintcontent com^vaadin.server^painttarget,0,0,deprecation
5404,Window.java,non javadoc,1,0,deprecation
5405,Window.java,"@see com^vaadin.ui^panel#changevariables java^lang.object, java^util.map",0,0,deprecation
5406,Window.java,an interface used for listening to window order change events.,1,0,deprecation
5408,Window.java,non javadoc,0,0,deprecation
5409,Window.java,@see com^vaadin.ui^panel#paintcontent com^vaadin.server^painttarget,1,0,deprecation
5410,Window.java,non javadoc,0,0,deprecation
5411,Window.java,"@see com^vaadin.ui^panel#changevariables java^lang.object, java^util.map",0,0,deprecation
5412,Window.java,an interface used for listening to window close events.,0,0,deprecation
5413,Window.java,add the,0,0,deprecation
5414,Window.java,closelistener to a window and,0,0,deprecation
5415,Window.java,@link closelistener#windowclose closeevent will be called whenever the,0,0,deprecation
5416,Window.java,user closes the window.,0,0,deprecation
5417,Window.java,p,0,0,deprecation
5420,Window.java,p,0,0,deprecation
5421,Window.java,non javadoc,0,0,deprecation
5422,Window.java,@see com^vaadin.ui^panel#paintcontent com^vaadin.server^painttarget,0,0,deprecation
5423,Window.java,non javadoc,0,0,deprecation
5424,Window.java,"@see com^vaadin.ui^panel#changevariables java^lang.object, java^util.map",0,0,deprecation
5426,Window.java,@author vaadin ltd,0,0,deprecation
5428,Window.java,non javadoc,0,0,deprecation
5429,Window.java,@see com^vaadin.ui^panel#paintcontent com^vaadin.server^painttarget,0,0,deprecation
5430,Window.java,non javadoc,0,0,deprecation
5431,Window.java,"@see com^vaadin.ui^panel#changevariables java^lang.object, java^util.map",0,0,deprecation
5432,Window.java,an interface used for listening to window maximize restore events.,0,0,deprecation
5433,Window.java,add,0,0,deprecation
5434,Window.java,the windowmodechangelistener to a window and,0,0,deprecation
5435,Window.java,@link windowmodechangelistener#windowmodechanged windowmodechangeevent,0,0,deprecation
5436,Window.java,will be called whenever the window is maximized,0,0,deprecation
5437,Window.java,@link windowmode#maximized or restored @link windowmode#normal .,0,0,deprecation
5438,Window.java,non javadoc,0,0,deprecation
5439,Window.java,@see com^vaadin.ui^panel#paintcontent com^vaadin.server^painttarget,0,0,deprecation
5440,Window.java,non javadoc,0,0,deprecation
5441,Window.java,"@see com^vaadin.ui^panel#changevariables java^lang.object, java^util.map",0,0,deprecation
5442,Window.java,resize events are fired whenever the client side fires a resize event,0,0,deprecation
5443,Window.java,eg the browser window is resized .,0,0,deprecation
5444,Window.java,the frequency may vary across,0,0,deprecation
5445,Window.java,browsers.,0,0,deprecation
5446,Window.java,non javadoc,0,0,deprecation
5447,Window.java,@see com^vaadin.ui^panel#paintcontent com^vaadin.server^painttarget,0,0,deprecation
5448,Window.java,non javadoc,0,0,deprecation
5449,Window.java,"@see com^vaadin.ui^panel#changevariables java^lang.object, java^util.map",0,0,deprecation
5452,Window.java,non javadoc,0,0,deprecation
5453,Window.java,@see com^vaadin.ui^panel#paintcontent com^vaadin.server^painttarget,0,0,deprecation
5454,Window.java,non javadoc,0,0,deprecation
5455,Window.java,"@see com^vaadin.ui^panel#changevariables java^lang.object, java^util.map",0,0,deprecation
5456,Window.java,a @link shortcutlistener specifically made to define a keyboard,0,0,deprecation
5457,Window.java,shortcut that closes the window.,0,0,deprecation
5458,Window.java,pre,0,0,deprecation
5459,Window.java,code,0,0,deprecation
5460,Window.java,within the window using helper,0,0,deprecation
5462,Window.java,or globally,0,0,deprecation
5463,Window.java,"getui ^addaction new window^closeshortcut window, keycode^escape",0,0,deprecation
5464,Window.java,code,0,0,deprecation
5465,Window.java,pre,0,0,deprecation
5518,XhrConnectionError.java,xhrconnectionerror provides detail about an error which occurred during an,0,0,deprecation
5519,XhrConnectionError.java,xhr request to the server.,0,0,deprecation
5521,XhrConnectionError.java,@author vaadin ltd,0,0,deprecation
4524,AbstractFocusable.java,an abstract base class for focusable components.,0,0,deprecation
4528,AbstractFocusable.java,@author vaadin ltd,0,0,deprecation
4533,AbstractMultiSelectState.java,shared state for @code abstractmultiselect .,0,0,deprecation
4534,AbstractMultiSelectState.java,@author vaadin ltd,0,0,deprecation
4540,AbstractProperty.java,abstract base class for @link property implementations.,0,0,deprecation
4541,AbstractProperty.java,handles listener management for @link valuechangelistener s and,0,0,deprecation
4542,AbstractProperty.java,@link readonlystatuschangelistener s.,0,0,deprecation
4547,AbstractProperty.java,an code event code object specifying the property whose read only,0,0,deprecation
4548,AbstractProperty.java,status has been changed.,0,0,deprecation
4566,AbstractSingleComponentContainerState.java,default shared state implementation for abstractsinglecomponentcontainer.,0,0,deprecation
4572,AdjacentElementsWithTooltipsTest.java,@author vaadin ltd,0,0,deprecation
4575,ApplicationConfiguration.java,helper class for reading configuration options from the bootstap,0,0,deprecation
4578,ApplicationConfiguration.java,wraps a native javascript object containing fields for an error message.,0,0,deprecation
4584,BootstrapPageResponse.java,a representation of a bootstrap page being generated.,0,0,deprecation
4585,BootstrapPageResponse.java,the bootstrap page,0,0,deprecation
4586,BootstrapPageResponse.java,contains of the full dom of the html document as well as the http headers,0,0,deprecation
4587,BootstrapPageResponse.java,that will be included in the corresponding http response.,0,0,deprecation
4588,BootstrapPageResponse.java,@author vaadin ltd,0,0,deprecation
4596,ButtonRenderer.java,a renderer that displays a button with a textual caption.,0,0,deprecation
4597,ButtonRenderer.java,the value of the,0,0,deprecation
4598,ButtonRenderer.java,corresponding property is used as the caption.,0,0,deprecation
4599,ButtonRenderer.java,click listeners can be added,0,0,deprecation
4600,ButtonRenderer.java,"to the renderer, invoked when any of the rendered buttons is clicked.",0,0,deprecation
4602,ButtonRenderer.java,@author vaadin ltd,0,0,deprecation
4610,ClientRpcWriter.java,serializes @link clientrpc client rpc invocations to json.,0,0,deprecation
4611,ClientRpcWriter.java,@author vaadin ltd,0,0,deprecation
4616,ColorPickerServerRpc.java,rpc interface for abstractcolorpicker.,0,0,deprecation
4620,ComboBoxState.java,shared state for the combobox component.,0,0,deprecation
4624,DeclarativeValueProvider.java,value provider class for declarative support.,0,0,deprecation
4626,DeclarativeValueProvider.java,provides a straightforward mapping between an item and its value.,0,0,deprecation
4627,DeclarativeValueProvider.java,@param t,0,0,deprecation
4628,DeclarativeValueProvider.java,item type,0,0,deprecation
4633,DoubleRangeValidator.java,validator for validating that a @link double is inside a given range.,0,0,deprecation
4634,DoubleRangeValidator.java,@author vaadin ltd.,0,0,deprecation
4640,FooterDoubleClickHandler.java,handler for @link griddoubleclickevent s that happen in the footer of the,0,0,deprecation
4641,FooterDoubleClickHandler.java,grid.,0,0,deprecation
4643,FooterDoubleClickHandler.java,@author vaadin ltd,0,0,deprecation
4649,Grid.java,a grid component for displaying tabular data.,0,0,deprecation
4650,Grid.java,@author vaadin ltd,0,0,deprecation
4652,Grid.java,@param t,0,0,deprecation
4653,Grid.java,the grid bean type,0,0,deprecation
4654,Grid.java,header and footer,0,0,deprecation
4658,Grid.java,@param t,0,0,deprecation
4659,Grid.java,the grid bean type,0,0,deprecation
4660,Grid.java,header and footer,0,0,deprecation
4661,Grid.java,selection mode representing the built in selection models in grid.,0,0,deprecation
4663,Grid.java,these enums can be used in @link grid#setselectionmode selectionmode,0,0,deprecation
4665,Grid.java,@see grid#setselectionmode selectionmode,0,0,deprecation
4666,Grid.java,@see grid#setselectionmodel gridselectionmodel,0,0,deprecation
4667,Grid.java,header and footer,0,0,deprecation
4669,Grid.java,header and footer,0,0,deprecation
4672,Grid.java,header and footer,0,0,deprecation
4674,Grid.java,@param t,0,0,deprecation
4675,Grid.java,the grid bean type,0,0,deprecation
4676,Grid.java,header and footer,0,0,deprecation
4679,Grid.java,usage,0,0,deprecation
4680,Grid.java,pre,0,0,deprecation
4681,Grid.java,grid^addcontextclicklistener event &gt notification^show,0,0,deprecation
4682,Grid.java,gridcontextclickevent&lt person&gt event ^getitem clicked,0,0,deprecation
4683,Grid.java,pre,0,0,deprecation
4684,Grid.java,@param t,0,0,deprecation
4685,Grid.java,the grid bean type,0,0,deprecation
4686,Grid.java,header and footer,0,0,deprecation
4687,Grid.java,an event that is fired when a column s visibility changes.,0,0,deprecation
4689,Grid.java,header and footer,0,0,deprecation
4690,Grid.java,a helper base class for creating extensions for the grid component.,0,0,deprecation
4691,Grid.java,@param t,0,0,deprecation
4692,Grid.java,header and footer,0,0,deprecation
4693,Grid.java,class for managing visible details rows.,0,0,deprecation
4694,Grid.java,@param t,0,0,deprecation
4695,Grid.java,the grid bean type,0,0,deprecation
4696,Grid.java,header and footer,0,0,deprecation
4699,Grid.java,@param t,0,0,deprecation
4700,Grid.java,the grid bean type,0,0,deprecation
4731,GridManyColumnsV7.java,test ui for grid initial rendering performance profiling.,0,0,deprecation
4733,GridSelectionModel.java,the server side interface that controls grid s selection state.,0,0,deprecation
4734,GridSelectionModel.java,selectionmodel should extend @link abstractgridextension .,0,0,deprecation
4735,GridSelectionModel.java,@author vaadin ltd,0,0,deprecation
4737,GridSelectionModel.java,@param t,0,0,deprecation
4738,GridSelectionModel.java,the grid bean type,0,0,deprecation
4739,GridSelectionModel.java,@see abstractselectionmodel,0,0,deprecation
4740,GridSelectionModel.java,@see singleselectionmodel,0,0,deprecation
4741,GridSelectionModel.java,@see multiselectionmodel,0,0,deprecation
4750,HeaderRow.java,a header row in a grid.,0,0,deprecation
4751,HeaderRow.java,@author vaadin ltd,0,0,deprecation
4756,InternalContainerAnnotationForJS.java,annotation enabling using multiple @link javascript @javascript,0,0,deprecation
4757,InternalContainerAnnotationForJS.java,annotations.,0,0,deprecation
4761,InternalContainerAnnotationForJS.java,@author vaadin ltd,0,0,deprecation
4767,MyPickerConnector.java,mini tutorial code for,0,0,deprecation
4768,MyPickerConnector.java,"https vaadin^com wiki wiki main widget%20styling%20using%20only%20css,",0,0,deprecation
4769,MyPickerConnector.java,https,0,0,deprecation
4770,MyPickerConnector.java,vaadin^com wiki wiki main lightweight%20calculations%20of%20widget%20l,0,0,deprecation
4772,MyPickerConnector.java,@author vaadin ltd,0,0,deprecation
4782,NotEmptyValidatorTest.java,@author vaadin ltd,0,0,deprecation
4784,PopupView.java,a component for displaying a two different views to data.,0,0,deprecation
4785,PopupView.java,the minimized view,0,0,deprecation
4786,PopupView.java,"is normally used to render the component, and when it is clicked the full",0,0,deprecation
4787,PopupView.java,view is displayed on a popup.,0,0,deprecation
4788,PopupView.java,the inner class @link popupview^content is,0,0,deprecation
4789,PopupView.java,used to deliver contents to this component.,0,0,deprecation
4790,PopupView.java,@author vaadin ltd.,0,0,deprecation
4791,PopupView.java,constructors,0,0,deprecation
4792,PopupView.java,methods inherited from abstractcomponentcontainer.,0,0,deprecation
4793,PopupView.java,these are unnecessary,0,0,deprecation
4794,PopupView.java,but mandatory .,0,0,deprecation
4795,PopupView.java,most of them are not supported in this implementation.,0,0,deprecation
4801,PopupView.java,constructors,0,0,deprecation
4802,PopupView.java,methods inherited from abstractcomponentcontainer.,0,0,deprecation
4803,PopupView.java,these are unnecessary,0,0,deprecation
4804,PopupView.java,but mandatory .,0,0,deprecation
4805,PopupView.java,most of them are not supported in this implementation.,0,0,deprecation
4806,PopupView.java,this event is received by the popupvisibilitylisteners when the,0,0,deprecation
4807,PopupView.java,visibility of the popup changes.,0,0,deprecation
4808,PopupView.java,you can get the new visibility directly,0,0,deprecation
4809,PopupView.java,"with @link #ispopupvisible , or get the popupview that produced the",0,0,deprecation
4810,PopupView.java,event with @link #getpopupview .,0,0,deprecation
4811,PopupView.java,constructors,0,0,deprecation
4812,PopupView.java,methods inherited from abstractcomponentcontainer.,0,0,deprecation
4813,PopupView.java,these are unnecessary,0,0,deprecation
4814,PopupView.java,but mandatory .,0,0,deprecation
4815,PopupView.java,most of them are not supported in this implementation.,0,0,deprecation
4816,PopupView.java,defines a listener that can receive a popupvisibilityevent when the,0,0,deprecation
4817,PopupView.java,visibility of the popup changes.,0,0,deprecation
4847,PortletDummyRequestHandler.java,request handler which provides a dummy html response to any resource request,0,0,deprecation
4848,PortletDummyRequestHandler.java,with the resource id dummy.,0,0,deprecation
4849,PortletDummyRequestHandler.java,@author vaadin ltd,0,0,deprecation
4857,RequiredTextFieldTest.java,test for ^v required style,0,0,deprecation
4858,RequiredTextFieldTest.java,@author vaadin ltd,0,0,deprecation
4861,RpcDataProviderExtension.java,provides vaadin server side container data source to a,0,0,deprecation
4862,RpcDataProviderExtension.java,@link com^vaadin.v7^client.connectors^gridconnector gridconnector .,0,0,deprecation
4863,RpcDataProviderExtension.java,this is currently,0,0,deprecation
4864,RpcDataProviderExtension.java,implemented as an extension hardcoded to support a specific connector type.,0,0,deprecation
4868,RpcDataProviderExtension.java,@author vaadin ltd,0,0,deprecation
4870,RpcDataProviderExtension.java,class for keeping track of current items and valuechangelisteners.,0,0,deprecation
4886,RpcDataProviderExtension.java,"@see grid#addvaluechangelistener com^vaadin.v7^data.container, object, object",0,0,deprecation
4887,RpcDataProviderExtension.java,"grid#addvaluechangelistener container, object, object",0,0,deprecation
4888,RpcDataProviderExtension.java,@see grid#valuechangelisteners,0,0,deprecation
4901,SelectAllEvent.java,"a select all event, fired by the grid when it needs all rows in data source",0,0,deprecation
4902,SelectAllEvent.java,"to be selected, or when all rows have been selected and are now deselected.",0,0,deprecation
4904,SelectAllEvent.java,@author vaadin ltd,0,0,deprecation
4905,SelectAllEvent.java,@param t,0,0,deprecation
4906,SelectAllEvent.java,the type of the rows in grid,0,0,deprecation
4915,ShouldWriteDataDelegate.java,delegate used by @link designcontext to determine whether container data,0,0,deprecation
4916,ShouldWriteDataDelegate.java,should be written out for a component.,0,0,deprecation
4917,ShouldWriteDataDelegate.java,@see designcontext#shouldwritedata component,0,0,deprecation
4919,ShouldWriteDataDelegate.java,@author vaadin ltd,0,0,deprecation
4929,SimpleGridUI.java,@author vaadin ltd,0,0,deprecation
4931,SpacerVisibilityChangedEvent.java,event fired when a spacer element is hidden or shown in escalator.,0,0,deprecation
4932,SpacerVisibilityChangedEvent.java,@author vaadin ltd,0,0,deprecation
4937,TargetDetailsImpl.java,a hashmap backed implementation of @link targetdetails for termina^^^n.,0,0,deprecation
4944,UnknownExtensionConnector.java,connector used as a placeholder for extensions that are not present in the,0,0,deprecation
4945,UnknownExtensionConnector.java,widgetset.,0,0,deprecation
4947,UnknownExtensionConnector.java,@author vaadin ltd,0,0,deprecation
4952,VaadinPortlet.java,portlet 20 base class.,0,0,deprecation
4953,VaadinPortlet.java,this replaces the servlet in servlet portlet 10,0,0,deprecation
4954,VaadinPortlet.java,deployments and handles various portlet requests from the browser.,0,0,deprecation
4955,VaadinPortlet.java,@author vaadin ltd,0,0,deprecation
4958,VaadinPortlet.java,base class for portlet requests that need access to http servlet,0,0,deprecation
4962,VaadinPortlet.java,portlet request for liferay.,0,0,deprecation
4965,VaadinPortlet.java,portlet request for gatein.,0,0,deprecation
4968,VaadinPortlet.java,portlet request for websphere portal.,0,0,deprecation
4971,VaadinPortlet.java,portlet request for websphere portal.,0,0,deprecation
4974,VaadinPortlet.java,@author vaadin ltd,0,0,deprecation
4995,VaadinServiceInitListener.java,listener for @link vaadinservice initialization events.,0,0,deprecation
4996,VaadinServiceInitListener.java,the listener can,0,0,deprecation
4997,VaadinServiceInitListener.java,add listeners and request handlers the service.,0,0,deprecation
4999,VaadinServiceInitListener.java,listener instances are by default discovered and instantiated using,0,0,deprecation
5000,VaadinServiceInitListener.java,@link serviceloader .,0,0,deprecation
5001,VaadinServiceInitListener.java,this means that all implementations must have a,0,0,deprecation
5002,VaadinServiceInitListener.java,zero argument constructor and the fully qualified name of the implementation,0,0,deprecation
5003,VaadinServiceInitListener.java,class must be listed on a separate line in a,0,0,deprecation
5004,VaadinServiceInitListener.java,meta inf services com^vaadin.server^vaadinserviceinitlistener file present in,0,0,deprecation
5005,VaadinServiceInitListener.java,the jar file containing the implementation class.,0,0,deprecation
5007,VaadinServiceInitListener.java,"integrations for specific runtime environments, such as osgi or spring, might",0,0,deprecation
5008,VaadinServiceInitListener.java,also provide other ways of discovering listeners.,0,0,deprecation
5010,VaadinServiceInitListener.java,@author vaadin ltd,0,0,deprecation
5025,VGridLayout.java,private helper class.,0,0,deprecation
5029,VLazyInitItemIdentifiers.java,@author vaadin ltd,0,0,deprecation
5038,VScrollTable.java,vscrolltable is a flowpanel having two widgets in it tablehead component,0,0,deprecation
5039,VScrollTable.java,scrollpanel,0,0,deprecation
5040,VScrollTable.java,"tablehead contains table s header and widgets logic for resizing,",0,0,deprecation
5041,VScrollTable.java,reordering and hiding columns.,0,0,deprecation
5042,VScrollTable.java,scrollpanel contains vscrolltablebody object which handles content.,0,0,deprecation
5043,VScrollTable.java,to save,0,0,deprecation
5044,VScrollTable.java,"some bandwidth and to improve clients responsiveness with loads of data, in",0,0,deprecation
5045,VScrollTable.java,vscrolltablebody all rows are not necessary rendered.,0,0,deprecation
5046,VScrollTable.java,there are spacers in,0,0,deprecation
5047,VScrollTable.java,vscrolltablebody to use the exact same space as non rendered rows would use.,0,0,deprecation
5048,VScrollTable.java,this way we can use seamlessly traditional scrollbars and scrolling to fetch,0,0,deprecation
5049,VScrollTable.java,more rows instead of paging .,0,0,deprecation
5050,VScrollTable.java,in vscrolltable we listen to scroll events.,0,0,deprecation
5051,VScrollTable.java,on horizontal scrolling we also,0,0,deprecation
5052,VScrollTable.java,update tableheads scroll position which has its scrollbars hidden.,0,0,deprecation
5053,VScrollTable.java,on,0,0,deprecation
5054,VScrollTable.java,vertical scroll events we will check if we are reaching the end of area where,0,0,deprecation
5055,VScrollTable.java,we have rows rendered and,0,0,deprecation
5056,VScrollTable.java,todo implement unregistering for child components in cells,0,0,deprecation
5057,VScrollTable.java,to detect if the first visible,0,0,deprecation
5058,VScrollTable.java,these are used when jumping between pages when pressing home and end,0,0,deprecation
5059,VScrollTable.java,changes to manage mousedown and mouseup,0,0,deprecation
5060,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,0,0,deprecation
5061,VScrollTable.java,lost .,0,0,deprecation
5062,VScrollTable.java,example itabpanel just set contained components invisible and back,0,0,deprecation
5063,VScrollTable.java,when changing tabs.,0,0,deprecation
5064,VScrollTable.java,updates first visible row for the case we cannot wait,0,0,deprecation
5065,VScrollTable.java,this method has logic which rows needs to be requested from server when,0,0,deprecation
5066,VScrollTable.java,user scrolls.,0,0,deprecation
5067,VScrollTable.java,non javadoc,0,0,deprecation
5068,VScrollTable.java,@see,0,0,deprecation
5069,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,0,0,deprecation
5070,VScrollTable.java,dom^client.focusevent,0,0,deprecation
5071,VScrollTable.java,non javadoc,0,0,deprecation
5072,VScrollTable.java,@see,0,0,deprecation
5073,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,0,0,deprecation
5074,VScrollTable.java,dom^client.blurevent,0,0,deprecation
5075,VScrollTable.java,non javadoc,0,0,deprecation
5077,VScrollTable.java,simple interface for parts of the table capable of owning a context menu.,0,0,deprecation
5079,VScrollTable.java,@author vaadin ltd,0,0,deprecation
5080,VScrollTable.java,to detect if the first visible,0,0,deprecation
5081,VScrollTable.java,these are used when jumping between pages when pressing home and end,0,0,deprecation
5082,VScrollTable.java,changes to manage mousedown and mouseup,0,0,deprecation
5083,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,0,0,deprecation
5084,VScrollTable.java,lost .,0,0,deprecation
5085,VScrollTable.java,example itabpanel just set contained components invisible and back,0,0,deprecation
5086,VScrollTable.java,when changing tabs.,0,0,deprecation
5087,VScrollTable.java,updates first visible row for the case we cannot wait,0,0,deprecation
5088,VScrollTable.java,this method has logic which rows needs to be requested from server when,0,0,deprecation
5089,VScrollTable.java,user scrolls.,0,0,deprecation
5090,VScrollTable.java,non javadoc,0,0,deprecation
5091,VScrollTable.java,@see,0,0,deprecation
5092,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,0,0,deprecation
5093,VScrollTable.java,dom^client.focusevent,0,0,deprecation
5094,VScrollTable.java,non javadoc,0,0,deprecation
5095,VScrollTable.java,@see,0,0,deprecation
5096,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,0,0,deprecation
5097,VScrollTable.java,dom^client.blurevent,0,0,deprecation
5098,VScrollTable.java,non javadoc,0,0,deprecation
5100,VScrollTable.java,handles showing context menu on long press from a touch screen.,0,0,deprecation
5102,VScrollTable.java,@author vaadin ltd,0,0,deprecation
5103,VScrollTable.java,to detect if the first visible,0,0,deprecation
5104,VScrollTable.java,these are used when jumping between pages when pressing home and end,0,0,deprecation
5105,VScrollTable.java,changes to manage mousedown and mouseup,0,0,deprecation
5106,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,0,0,deprecation
5107,VScrollTable.java,lost .,0,0,deprecation
5108,VScrollTable.java,example itabpanel just set contained components invisible and back,0,0,deprecation
5109,VScrollTable.java,when changing tabs.,0,0,deprecation
5110,VScrollTable.java,updates first visible row for the case we cannot wait,0,0,deprecation
5111,VScrollTable.java,this method has logic which rows needs to be requested from server when,0,0,deprecation
5112,VScrollTable.java,user scrolls.,0,0,deprecation
5113,VScrollTable.java,non javadoc,0,0,deprecation
5114,VScrollTable.java,@see,0,0,deprecation
5115,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,0,0,deprecation
5116,VScrollTable.java,dom^client.focusevent,0,0,deprecation
5117,VScrollTable.java,non javadoc,0,0,deprecation
5118,VScrollTable.java,@see,0,0,deprecation
5119,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,0,0,deprecation
1,Abfss.java,azure blob file system implementation of abstractfilesystem.,0,0,rational
2,Abfss.java,this impl delegates to the old filesystem,1,0,rational
1028,TestConnCache.java,this class tests the client connection caching in a single node,0,0,rational
5,AbstractContractGetFileStatusTest.java,test getfilestatus and related listing operations.,1,0,rational
6,AbstractContractGetFileStatusTest.java,the tree parameters.,0,0,rational
7,AbstractContractGetFileStatusTest.java,kept small to avoid killing object store test runs too much.,1,0,rational
8,AbstractContractGetFileStatusTest.java,accept everything.,0,0,rational
1032,TestCustomOauthTokenProvider.java,test custom oauth token providers.,1,0,rational
9,AbstractContractGetFileStatusTest.java,the tree parameters.,0,0,rational
10,AbstractContractGetFileStatusTest.java,kept small to avoid killing object store test runs too much.,1,0,rational
11,AbstractContractGetFileStatusTest.java,accept nothing.,0,0,rational
1035,TestCustomOauthTokenProvider.java,instead this just checks that the creation works and that everything,1,0,rational
12,AbstractContractGetFileStatusTest.java,the tree parameters.,0,0,rational
1036,TestCustomOauthTokenProvider.java,is propagated.,1,0,rational
13,AbstractContractGetFileStatusTest.java,kept small to avoid killing object store test runs too much.,0,0,rational
14,AbstractContractGetFileStatusTest.java,path filter which only expects paths whose final name element,1,0,rational
15,AbstractContractGetFileStatusTest.java,equals the @code match field.,0,0,rational
16,AbstractContractGetFileStatusTest.java,the tree parameters.,1,0,rational
17,AbstractContractGetFileStatusTest.java,kept small to avoid killing object store test runs too much.,0,0,rational
18,AbstractContractGetFileStatusTest.java,a filesystem filter which exposes the protected method,1,0,rational
1042,TestDataDrivenDBInputFormat.java,test aspects of datadrivendbinputformat,0,0,rational
19,AbstractContractGetFileStatusTest.java,"@link #listlocatedstatus path, pathfilter .",1,0,rational
1047,TestEditLogFileOutputStream.java,test the editlogfileoutputstream,0,0,rational
1049,TestFederationPolicyUtils.java,unit test for @link federationpolicyutils .,1,0,rational
1052,TestFileSizeCountTask.java,unit test for file size count task.,0,0,rational
1054,TestHandler.java,tests handler interface.,1,0,rational
1056,TestHDFSServerPorts.java,this test checks correctness of port usage by hdfs components,0,0,rational
1057,TestHDFSServerPorts.java,"namenode, datanode, secondarynamenode and backupnode.",1,0,rational
1058,TestHDFSServerPorts.java,the correct behavior is br when a specific port is provided the server must either start on that port or fail by throwing @link java^net.bindexception .,0,0,rational
1059,TestHDFSServerPorts.java,br,1,0,rational
1060,TestHDFSServerPorts.java,if the port 0 ephemeral then the server should choose a free port and start on it.,0,0,rational
1066,TestKeyInputStream.java,tests @link keyinputstream .,1,0,rational
44,AbstractS3ACommitterFactory.java,dynamically create the output committer based on subclass type and settings.,0,0,rational
1069,TestMetricsVisitor.java,test the metric visitor interface,1,0,rational
1071,TestNativeAzureFileSystemUploadLogic.java,"tests for the upload, buffering and flush logic in wasb.",0,0,rational
1072,TestNativeAzureFileSystemUploadLogic.java,just an arbitrary number so that the values i write have a predictable,1,0,rational
53,ApplicationConstants.java,the type of launch for the container.,0,0,rational
1077,TestOmMultipartKeyInfoCodec.java,this class tests ommultipartkeyinfocodec.,1,0,rational
54,ApplicationConstants.java,environment for applications.,0,0,rational
1082,TestOzoneNativeAuthorizer.java,test class for @link ozonenativeauthorizer .,1,0,rational
1085,TestProtoBufRpc.java,test for testing protocol buffer based rpc mechanism.,0,0,rational
1086,TestProtoBufRpc.java,this test depends on test^proto definition of types in src test proto,1,0,rational
1087,TestProtoBufRpc.java,and protobuf service definition from src test test rpc service^proto,0,0,rational
66,AutoInputFormat.java,it can currently handle text and sequence files.,1,0,rational
1091,TestRDBStore.java,rdbstore tests.,0,0,rational
1093,TestRegistrySecurityHelper.java,test for registry security operations,1,0,rational
70,BalancingPolicy.java,balancing policy.,0,0,rational
1099,TestRouterWebServiceUtil.java,test class to validate routerwebserviceutil methods.,1,0,rational
1101,TestS3BucketManager.java,tests for s3 bucket manager.,0,0,rational
1104,TestSaveNamespace.java,test various failure scenarios during savenamespace operation.,1,0,rational
81,BaseRouterWebServicesTest.java,base class for all the routerrmadminservice test cases.,0,0,rational
1105,TestSaveNamespace.java,cases covered,1,0,rational
1106,TestSaveNamespace.java,ol,0,0,rational
1107,TestSaveNamespace.java,li recover from failure while saving into the second storage directory li,1,0,rational
1108,TestSaveNamespace.java,li recover from failure while moving current into lastcheckpoint^tmp li,0,0,rational
1109,TestSaveNamespace.java,li recover from failure while moving lastcheckpoint^tmp into,1,0,rational
86,BatchedRequests.java,a grouping of scheduling requests which are sent to the placementalgorithm,0,0,rational
1110,TestSaveNamespace.java,previous^checkpoint li,1,0,rational
87,BatchedRequests.java,to place as a batch.,0,0,rational
1111,TestSaveNamespace.java,li recover from failure while rolling edits file li,1,0,rational
88,BatchedRequests.java,the placement algorithm tends to give more optimal,0,0,rational
1112,TestSaveNamespace.java,ol,1,0,rational
89,BatchedRequests.java,placements if more requests are batched together.,0,0,rational
90,BatchedRequests.java,placementalgorithmoutput attempt the number of times the requests in this,1,0,rational
91,BatchedRequests.java,iterator type.,0,0,rational
98,BlockPlacementStatusWithNodeGroup.java,an implementation of @see blockplacementstatus for,1,0,rational
1122,TestSCMDatanodeHeartbeatDispatcher.java,this class tests the behavior of scmdatanodeheartbeatdispatcher.,0,0,rational
1124,TestSequenceFile.java,support for flat files of binary key value pairs.,1,0,rational
103,BlocksMap.java,this class maintains the map from a block to its metadata.,0,0,rational
1127,TestSeveralNameNodes.java,test that we can start several and run with namenodes on the same minicluster,1,0,rational
104,BlocksMap.java,block s metadata currently includes blockcollection it belongs to and,0,0,rational
105,BlocksMap.java,the datanodes that store the block.,1,0,rational
1130,TestSwiftFileSystemContract.java,this is the full filesystem contract test which requires the,0,0,rational
1131,TestSwiftFileSystemContract.java,default config set up to point to a filesystem.,1,0,rational
116,CapacitySchedulerPlanFollower.java,this class implements a @link planfollower .,0,0,rational
117,CapacitySchedulerPlanFollower.java,"this is invoked on a timer, and",1,0,rational
118,CapacitySchedulerPlanFollower.java,it is in charge to publish the state of the @link plan s to the underlying,0,0,rational
119,CapacitySchedulerPlanFollower.java,@link capacityscheduler .,1,0,rational
120,CapacitySchedulerPlanFollower.java,"this implementation does so, by",0,0,rational
1144,TestTaskCommit.java,special committer that does not cleanup temporary files in,1,0,rational
121,CapacitySchedulerPlanFollower.java,"adding removing resizing leaf queues in the scheduler, thus affecting the",0,0,rational
1145,TestTaskCommit.java,aborttask,1,0,rational
122,CapacitySchedulerPlanFollower.java,dynamic behavior of the scheduler in a way that is consistent with the,0,0,rational
123,CapacitySchedulerPlanFollower.java,content of the plan.,1,0,rational
124,CapacitySchedulerPlanFollower.java,it also updates the plan s view on how much resources,0,0,rational
125,CapacitySchedulerPlanFollower.java,are available in the cluster.,1,0,rational
1150,TestTaskCommit.java,special committer that always requires commit.,0,0,rational
1158,TestTaskContext.java,tests context api and @link statusreporter#getprogress via @link taskattemptcontext#getprogress api .,1,0,rational
1161,TestTopCLI.java,test class for topcli.,0,0,rational
1163,TestUpgradeDomainBlockPlacementPolicy.java,end to end test case for upgrade domain,1,0,rational
1164,TestUpgradeDomainBlockPlacementPolicy.java,the test configs upgrade domain for nodes via admin json,0,0,rational
1165,TestUpgradeDomainBlockPlacementPolicy.java,config file and put some nodes to decommission state.,1,0,rational
1166,TestUpgradeDomainBlockPlacementPolicy.java,the test then verifies replicas are placed on the nodes that,0,0,rational
1167,TestUpgradeDomainBlockPlacementPolicy.java,satisfy the upgrade domain policy.,1,0,rational
1173,TextInputFormat.java,an @link inputformat for plain text files.,0,0,rational
1174,TextInputFormat.java,files are broken into lines.,1,0,rational
151,Classpath.java,the output likely will include wildcards in the classpath.,0,0,rational
1175,TextInputFormat.java,either linefeed or carriage return are used to signal end of line.,1,0,rational
1178,TextInputFormat.java,.,0,0,rational
156,Classpath.java,this is useful in situations where wildcard syntax isn t usable.,1,0,rational
157,Classpath.java,"with the jar argument, it writes the classpath as a manifest in a jar file.",0,0,rational
1186,TimelineDataToRetrieve.java,encapsulates information regarding which data to retrieve for each entity,1,0,rational
1187,TimelineDataToRetrieve.java,while querying.,0,0,rational
1188,TimelineDataToRetrieve.java,br,1,0,rational
1189,TimelineDataToRetrieve.java,data to retrieve contains the following br,0,0,rational
1190,TimelineDataToRetrieve.java,ul,1,0,rational
1191,TimelineDataToRetrieve.java,li b confstoretrieve b used for deciding which configs to return,0,0,rational
1192,TimelineDataToRetrieve.java,in response.,1,0,rational
1193,TimelineDataToRetrieve.java,this is represented as a @link timelinefilterlist object,0,0,rational
1194,TimelineDataToRetrieve.java,containing @link timelineprefixfilter objects.,1,0,rational
1195,TimelineDataToRetrieve.java,these can either be,0,0,rational
172,ComparableVersion.java,code source of this file http grepcode^com file repo1^maven.org maven2 org^apache.maven maven artifact 31.1 org apache maven artifact versioning comparableversion^java modifications made on top of the source 1.,1,0,rational
1196,TimelineDataToRetrieve.java,exact config keys or prefixes which are then compared against config,0,0,rational
173,ComparableVersion.java,changed package org^apache.maven^artifact.versioning to package org^apache.hadoop^util 2.,1,0,rational
175,ComparableVersion.java,generic implementation of version comparison.,0,0,rational
1199,TimelineDataToRetrieve.java,"or empty, all configurations will be fetched if fieldstoretrieve",1,0,rational
176,ComparableVersion.java,p features,0,0,rational
1200,TimelineDataToRetrieve.java,contains @link field#configs or @link field#all .,1,0,rational
177,ComparableVersion.java,ul,0,0,rational
1202,TimelineDataToRetrieve.java,confused with configfilters which is used to decide which entities to,1,0,rational
1203,TimelineDataToRetrieve.java,return instead.,0,0,rational
1204,TimelineDataToRetrieve.java,li,1,0,rational
1206,TimelineDataToRetrieve.java,in response.,0,0,rational
1207,TimelineDataToRetrieve.java,this is represented as a @link timelinefilterlist object,1,0,rational
1208,TimelineDataToRetrieve.java,containing @link timelineprefixfilter objects.,0,0,rational
1209,TimelineDataToRetrieve.java,these can either be,1,0,rational
1210,TimelineDataToRetrieve.java,exact metric ids or prefixes which are then compared against metric,0,0,rational
188,ComparableVersion.java,li code milestone code or code m code li,1,0,rational
189,ComparableVersion.java,li code rc code or code cr code li,0,0,rational
1213,TimelineDataToRetrieve.java,"or empty, all metrics will be fetched if fieldstoretrieve contains",1,0,rational
190,ComparableVersion.java,li code snapshot code li,0,0,rational
191,ComparableVersion.java,li code the empty string code or code ga code or code final code li,1,0,rational
192,ComparableVersion.java,li code sp code li,0,0,rational
1216,TimelineDataToRetrieve.java,with metricfilters which is used to decide which entities to return,1,0,rational
193,ComparableVersion.java,ul,0,0,rational
1217,TimelineDataToRetrieve.java,instead.,1,0,rational
194,ComparableVersion.java,"unknown qualifiers are considered after known qualifiers, with lexical order always case insensitive ,",0,0,rational
1218,TimelineDataToRetrieve.java,li,1,0,rational
195,ComparableVersion.java,li,0,0,rational
197,ComparableVersion.java,li,1,0,rational
1222,TimelineDataToRetrieve.java,"namely entity id, entity type and entity created time.",0,0,rational
199,ComparableVersion.java,@see a href https cwiki^apache.org confluence display mavenold versioning versioning on maven wiki a,1,0,rational
1223,TimelineDataToRetrieve.java,all fields will,0,0,rational
200,ComparableVersion.java,represents a numeric item in the version item list.,1,0,rational
201,ComparableVersion.java,"represents a string in the version item list, usually a qualifier.",0,0,rational
1225,TimelineDataToRetrieve.java,li,1,0,rational
202,ComparableVersion.java,represents a version list item.,0,0,rational
203,ComparableVersion.java,this class is used both for the global item list and for sub lists which start,1,0,rational
204,ComparableVersion.java,with number in the version specification .,0,0,rational
1228,TimelineDataToRetrieve.java,number of metrics to return.,1,0,rational
1229,TimelineDataToRetrieve.java,this parameter is ignored if metrics are not to,0,0,rational
1230,TimelineDataToRetrieve.java,be fetched.,1,0,rational
1231,TimelineDataToRetrieve.java,li,0,0,rational
1233,TimelineDataToRetrieve.java,be retrieved.,1,0,rational
1235,TimelineDataToRetrieve.java,li,0,0,rational
1237,TimelineDataToRetrieve.java,be retrieved.,1,0,rational
1239,TimelineDataToRetrieve.java,li,0,0,rational
1240,TimelineDataToRetrieve.java,ul,1,0,rational
239,ConfigurationException.java,exception to throw in case of a configuration problem.,0,0,rational
248,DBProfile.java,user visible configs based rocksdb tuning page.,1,0,rational
249,DBProfile.java,documentation for options.,0,0,rational
250,DBProfile.java,p,1,0,rational
251,DBProfile.java,https github^com facebook rocksdb blob master include rocksdb options^h,0,0,rational
252,DBProfile.java,p,1,0,rational
253,DBProfile.java,most tuning parameters are based on this url.,0,0,rational
254,DBProfile.java,p,1,0,rational
255,DBProfile.java,https github^com facebook rocksdb wiki setup options and basic tuning,0,0,rational
271,DefaultAnonymizingRumenSerializer.java,default rumen json serializer.,1,0,rational
273,DelegatingSSLSocketFactory.java,a @link sslsocketfactory that can delegate to various ssl implementations.,0,0,rational
274,DelegatingSSLSocketFactory.java,"specifically, either openssl or jsse can be used.",1,0,rational
275,DelegatingSSLSocketFactory.java,openssl offers better,0,0,rational
276,DelegatingSSLSocketFactory.java,performance than jsse and is made available via the,1,0,rational
277,DelegatingSSLSocketFactory.java,a href https github^com wildfly wildfly openssl wildlfy openssl a,0,0,rational
278,DelegatingSSLSocketFactory.java,library.,1,0,rational
280,DelegatingSSLSocketFactory.java,the factory has several different modes of operation,0,0,rational
281,DelegatingSSLSocketFactory.java,ul,1,0,rational
282,DelegatingSSLSocketFactory.java,li openssl uses the wildly openssl library to delegate to the,0,0,rational
283,DelegatingSSLSocketFactory.java,system installed openssl.,1,0,rational
284,DelegatingSSLSocketFactory.java,if the wildfly openssl integration is not,0,0,rational
285,DelegatingSSLSocketFactory.java,"properly setup, an exception is thrown.",0,0,rational
286,DelegatingSSLSocketFactory.java,li,0,0,rational
289,DelegatingSSLSocketFactory.java,li,0,0,rational
291,DelegatingSSLSocketFactory.java,it disables the gcm cipher when running on java 8.,0,0,rational
292,DelegatingSSLSocketFactory.java,li,0,0,rational
295,DelegatingSSLSocketFactory.java,li,0,0,rational
296,DelegatingSSLSocketFactory.java,ul,0,0,rational
1352,TonyRuntimeFactory.java,implementation of runtimefactory with tony runtime,0,0,rational
1356,TypedEvent.java,@param t,0,0,rational
1360,UniformSizeInputFormat.java,"uniformsizeinputformat extends the inputformat class, to produce",0,0,rational
1361,UniformSizeInputFormat.java,input splits for distcp.,0,0,rational
1362,UniformSizeInputFormat.java,it looks at the copy listing and groups the contents into input splits such,0,0,rational
1363,UniformSizeInputFormat.java,that the total number of bytes to be copied for each input split is,0,0,rational
1364,UniformSizeInputFormat.java,uniform.,0,0,rational
1370,Utils.java,a utility class.,0,0,rational
1371,Utils.java,it provides,0,0,rational
1372,Utils.java,a path filter utility to filter out output part files in the output dir,0,0,rational
1373,Utils.java,this class filters output part files from the given directory,0,0,rational
1374,Utils.java,it does not accept files with filenames logs and success.,0,0,rational
1375,Utils.java,this can be used to list paths of output directory as follows,0,0,rational
352,DelegationTokenIdentifier.java,a delegation token identifier that is specific to hdfs.,0,0,rational
1376,Utils.java,"path filelist fileutil^stat2paths fs^liststatus outdir,",0,0,rational
1377,Utils.java,new outputfilesfilter,0,0,rational
1378,Utils.java,this class filters log files from directory given,0,0,rational
1379,Utils.java,it doesnt accept paths having logs.,0,0,rational
1380,Utils.java,this can be used to list paths of output directory as follows,0,0,rational
1381,Utils.java,"path filelist fileutil^stat2paths fs^liststatus outdir,",0,0,rational
1382,Utils.java,new outputlogfilter,0,0,rational
362,DfsServlet.java,a base class for the servlets in dfs.,0,0,rational
364,DiskBalancerCluster.java,diskbalancercluster represents the nodes that we are working against.,0,0,rational
365,DiskBalancerCluster.java,p,0,0,rational
366,DiskBalancerCluster.java,please note,0,0,rational
367,DiskBalancerCluster.java,semantics of inclusionlist and exclusionlists.,0,0,rational
368,DiskBalancerCluster.java,p,0,0,rational
369,DiskBalancerCluster.java,if a non empty inclusionlist is specified then the diskbalancer assumes that,0,0,rational
370,DiskBalancerCluster.java,the user is only interested in processing that list of nodes.,0,0,rational
371,DiskBalancerCluster.java,this node list,0,0,rational
372,DiskBalancerCluster.java,is checked against the exclusionlist and only the nodes in inclusionlist but,0,0,rational
373,DiskBalancerCluster.java,not in exclusionlist is processed.,0,0,rational
374,DiskBalancerCluster.java,p,0,0,rational
375,DiskBalancerCluster.java,"if inclusionlist is empty, then we assume that all live nodes in the nodes is",0,0,rational
376,DiskBalancerCluster.java,to be processed by diskbalancer.,0,0,rational
1400,VolumeSet.java,volumeset to manage hdds volumes in a datanode.,0,0,rational
377,DiskBalancerCluster.java,in that case diskbalancer will avoid any,0,0,rational
378,DiskBalancerCluster.java,nodes specified in the exclusionlist but will process all nodes in the,0,0,rational
379,DiskBalancerCluster.java,cluster.,0,0,rational
1403,WritableComparator.java,a comparator for @link writablecomparable s.,0,0,rational
380,DiskBalancerCluster.java,p,0,0,rational
1404,WritableComparator.java,p this base implementation uses the natural ordering.,0,0,rational
381,DiskBalancerCluster.java,"in other words, an empty inclusionlist is means all the nodes otherwise",0,0,rational
1405,WritableComparator.java,to define alternate,0,0,rational
382,DiskBalancerCluster.java,only a given list is processed and exclusionlist is always honored.,0,0,rational
1406,WritableComparator.java,"orderings, override @link #compare writablecomparable,writablecomparable .",0,0,rational
1407,WritableComparator.java,p one may optimize compare intensive operations by overriding,0,0,rational
1408,WritableComparator.java,"@link #compare byte ,int,int,byte ,int,int .",0,0,rational
1409,WritableComparator.java,static utility methods are,0,0,rational
1410,WritableComparator.java,provided to assist in optimized implementations of this method.,0,0,rational
401,DistributedSchedulingAllocateRequest.java,"object used by the application master when distributed scheduling is enabled,",0,0,rational
1430,YarnAuthorizationProvider.java,an implementation of the interface will provide authorization related,0,0,rational
1431,YarnAuthorizationProvider.java,information and enforce permission check.,0,0,rational
408,DockerKillCommand.java,encapsulates the docker kill command and its command line arguments.,0,0,rational
410,EditLogTailer.java,editlogtailer represents a thread which periodically reads from edits,0,0,rational
411,EditLogTailer.java,journals and applies the transactions contained within to a given,0,0,rational
412,EditLogTailer.java,fsnamesystem.,0,0,rational
413,EditLogTailer.java,the thread which does the actual work of tailing edits journals and,0,0,rational
414,EditLogTailer.java,applying the transactions to the fsns.,0,0,rational
1443,YarnServiceJobSubmitter.java,submit a job to cluster.,0,0,rational
450,ErasureCodingPolicyManager.java,this manages erasure coding policies predefined and activated in the system.,0,0,rational
451,ErasureCodingPolicyManager.java,it loads customized policies and syncs with persisted ones in,0,0,rational
452,ErasureCodingPolicyManager.java,namenode image.,0,0,rational
453,ErasureCodingPolicyManager.java,this class is instantiated by the fsnamesystem.,0,0,rational
459,EventWatcher.java,event watcher the re send a message after timeout.,0,0,rational
463,EventWatcher.java,@param timeout payload the type of the events which are tracked.,0,0,rational
464,EventWatcher.java,@param completion payload the type of event which could cancel the,0,0,rational
465,EventWatcher.java,tracking.,0,0,rational
477,FairOrderingPolicy.java,an orderingpolicy which orders schedulableentities for fairness see,0,0,rational
478,FairOrderingPolicy.java,fairscheduler,0,0,rational
479,FairOrderingPolicy.java,"fairsharepolicy , generally, processes with lesser usage are lesser.",0,0,rational
480,FairOrderingPolicy.java,if,0,0,rational
481,FairOrderingPolicy.java,sizedbasedweight is set to true then an application with high demand,0,0,rational
482,FairOrderingPolicy.java,may be prioritized ahead of an application with less usage.,0,0,rational
483,FairOrderingPolicy.java,this,0,0,rational
484,FairOrderingPolicy.java,"is to offset the tendency to favor small apps, which could result in",0,0,rational
486,FairOrderingPolicy.java,"continuously optional, default false",0,0,rational
500,FederationPolicyException.java,generic policy exception.,0,0,rational
506,FederationStateStoreInvalidInputException.java,"exception thrown by the @code federationmembershipstatestoreinputvalidator ,",0,0,rational
511,FileSystemApplicationHistoryStore.java,file system implementation of @link applicationhistorystore .,0,0,rational
516,FileSystemApplicationHistoryStore.java,@link #applicationstarted applicationstartdata is supposed to,0,0,rational
517,FileSystemApplicationHistoryStore.java,be invoked first when writing any history data of one application and it will,0,0,rational
518,FileSystemApplicationHistoryStore.java,"open a file, while @link #applicationfinished applicationfinishdata is",0,0,rational
519,FileSystemApplicationHistoryStore.java,supposed to be last writing operation and will close the file.,0,0,rational
531,FsConstants.java,filesystem related constants.,0,0,rational
537,GetNamespaceInfoResponse.java,api response for listing hdfs namespaces present in the state store.,0,0,rational
554,HadoopIllegalArgumentException.java,indicates that a method has been passed illegal or invalid argument.,0,0,rational
560,HashResolver.java,order the destinations based on consistent hashing.,0,0,rational
562,HttpHeaderConfigurations.java,responsible to keep all abfs http headers here.,0,0,rational
564,IDataLoader.java,an idataloader loads data on demand,0,0,rational
566,InconsistentS3ClientFactory.java,s3 client factory used for testing with eventual consistency fault injection.,0,0,rational
567,InconsistentS3ClientFactory.java,this client is for testing i only i it is in the production,0,0,rational
568,InconsistentS3ClientFactory.java,@code hadoop aws module to enable integration tests to use this,0,0,rational
569,InconsistentS3ClientFactory.java,just by editing the hadoop configuration used to bring up the client.,0,0,rational
574,InfoKeyHandler.java,executes info object.,0,0,rational
579,ITestAbfsReadWriteAndSeek.java,"test read, write and seek.",0,0,rational
584,ITestAzureNativeContractSeek.java,contract test.,0,0,rational
588,ITestCommitOperations.java,this is done with an inconsistent client.,0,0,rational
591,ITestListPerformance.java,test list performance.,0,0,rational
593,ITestS3Select.java,test the s3 select feature with some basic sql commands.,0,0,rational
594,ITestS3Select.java,executed if the destination store declares its support for the feature.,0,0,rational
600,KerberosDelegationTokenAuthenticator.java,the code kerberosdelegationtokenauthenticator code provides support for,0,0,rational
601,KerberosDelegationTokenAuthenticator.java,kerberos spnego authentication mechanism and support for hadoop delegation,0,0,rational
602,KerberosDelegationTokenAuthenticator.java,token operations.,0,0,rational
604,KerberosDelegationTokenAuthenticator.java,it falls back to the @link pseudodelegationtokenauthenticator if the http,0,0,rational
605,KerberosDelegationTokenAuthenticator.java,endpoint does not trigger a spnego authentication,0,0,rational
613,LocalizationStatusPBImpl.java,pb impl of @link localizationstatus .,0,0,rational
616,LocatedFileStatus.java,this class defines a filestatus that includes a file s block locations.,0,0,rational
618,LoggedTask.java,a @link loggedtask represents a hadoop task that is part of a hadoop job.,0,0,rational
619,LoggedTask.java,"it knows about the pssibly empty sequence of attempts, its i o footprint,",0,0,rational
620,LoggedTask.java,and its runtime.,0,0,rational
621,LoggedTask.java,all of the public methods are simply accessors for the instance variables we,0,0,rational
622,LoggedTask.java,want to write out in the json files.,0,0,rational
629,LogParserUtil.java,common utility functions for @link logparser .,0,0,rational
632,LogWebService.java,support only atsv2 client only.,0,0,rational
634,LRUCacheHashMap.java,lru cache with a configurable maximum cache size and access order.,0,0,rational
637,MapContext.java,the context that is given to the @link mapper .,0,0,rational
638,MapContext.java,@param keyin the key input type to the mapper,0,0,rational
639,MapContext.java,@param valuein the value input type to the mapper,0,0,rational
640,MapContext.java,@param keyout the key output type from the mapper,0,0,rational
641,MapContext.java,@param valueout the value output type from the mapper,0,0,rational
649,MetaBlockAlreadyExists.java,exception meta block with the same name already exists.,0,0,rational
651,MetricsCache.java,a metrics cache for sinks that don t support sparse updates.,0,0,rational
652,MetricsCache.java,cached record,0,0,rational
658,NativeSingleLineParser.java,this sample parser will parse the sample log and extract the resource,0,0,rational
659,NativeSingleLineParser.java,skyline.,0,0,rational
660,NativeSingleLineParser.java,p the expected log format is normalizedjobname numinstances submittime,0,0,rational
661,NativeSingleLineParser.java,starttime endtime jobinstancename memusage coreusage,0,0,rational
669,Nfs3Status.java,success or error status is reported in nfs3 responses.,0,0,rational
671,Node2ObjectsMap.java,this data structure maintains the list of containers that is on a datanode.,0,0,rational
672,Node2ObjectsMap.java,this information is built from the dn container reports.,0,0,rational
677,NodeUpdateType.java,p,0,0,rational
682,NullOutputFormat.java,consume all outputs and put them in dev null.,0,0,rational
685,OMNodeDetails.java,this class stores om node details.,0,0,rational
686,OMNodeDetails.java,builder class for omnodedetails.,0,0,rational
690,OpportunisticContainersStatusPBImpl.java,protocol buffer implementation of opportunisticcontainersstatus.,0,0,rational
692,OzoneObj.java,class representing an unique ozone object.,0,0,rational
693,OzoneObj.java,ozone objects supported for acl.,0,0,rational
694,OzoneObj.java,ozone objects supported for acl.,0,0,rational
697,Parser.java,a class for parsing outputs,0,0,rational
699,PartialOutputCommitter.java,interface for an @link org^apache.hadoop^mapreduce.outputcommitter,0,0,rational
709,ProcessIdFileReader.java,helper functionality to read the pid from a file.,0,0,rational
711,QuasiMonteCarlo.java,a map reduce program that estimates the value of pi,0,0,rational
712,QuasiMonteCarlo.java,using a quasi monte carlo qmc method.,0,0,rational
713,QuasiMonteCarlo.java,arbitrary integrals can be approximated numerically by qmc methods.,0,0,rational
714,QuasiMonteCarlo.java,"in this example,",0,0,rational
715,QuasiMonteCarlo.java,"we use a qmc method to approximate the integral i int s f x dx ,",0,0,rational
716,QuasiMonteCarlo.java,"where s 0,1 ^2 is a unit square,",0,0,rational
717,QuasiMonteCarlo.java,"x x 1,x 2 is a 2 dimensional point,",0,0,rational
718,QuasiMonteCarlo.java,"and f is a function describing the inscribed circle of the square s ,",0,0,rational
719,QuasiMonteCarlo.java,"f x 1 if 2x 1 1 ^2 2x 2 1 ^2 &lt 1 and f x 0 , otherwise.",0,0,rational
720,QuasiMonteCarlo.java,it is easy to see that pi is equal to 4i .,0,0,rational
721,QuasiMonteCarlo.java,so an approximation of pi is obtained once i is evaluated numerically.,0,0,rational
722,QuasiMonteCarlo.java,there are better methods for computing pi.,0,0,rational
723,QuasiMonteCarlo.java,we emphasize numerical approximation of arbitrary integrals in this example.,0,0,rational
724,QuasiMonteCarlo.java,"for computing many digits of pi, consider using bbp.",0,0,rational
725,QuasiMonteCarlo.java,the implementation is discussed below.,0,0,rational
726,QuasiMonteCarlo.java,mapper,0,0,rational
727,QuasiMonteCarlo.java,generate points in a unit square,0,0,rational
728,QuasiMonteCarlo.java,and then count points inside outside of the inscribed circle of the square.,0,0,rational
729,QuasiMonteCarlo.java,reducer,0,0,rational
741,QuasiMonteCarlo.java,generate points in a unit square,0,0,rational
742,QuasiMonteCarlo.java,and then count points inside outside of the inscribed circle of the square.,0,0,rational
775,Query.java,check if a record matches a query.,0,0,rational
776,Query.java,the query is usually a partial record.,0,0,rational
777,Query.java,@param t type of the record to query.,0,0,rational
781,QueueName.java,represents a queue name.,0,0,rational
783,RandomKeyGenerator.java,data generator tool to generate as much keys as possible.,0,0,rational
784,RandomKeyGenerator.java,wrapper to hold ozone keyvalidate entry.,0,0,rational
785,RandomKeyGenerator.java,validates the write done in ozone cluster.,0,0,rational
791,ReencryptionUpdater.java,p,0,0,rational
792,ReencryptionUpdater.java,the tasks are submitted by reencryptionhandler.,0,0,rational
793,ReencryptionUpdater.java,p,0,0,rational
794,ReencryptionUpdater.java,"it is assumed only 1 updater will be running, since updating file xattrs",0,0,rational
795,ReencryptionUpdater.java,"requires namespace write lock, and performance gain from multi threading",0,0,rational
796,ReencryptionUpdater.java,is limited.,0,0,rational
797,ReencryptionUpdater.java,class to track re encryption submissions of a single zone.,0,0,rational
798,ReencryptionUpdater.java,it contains,0,0,rational
799,ReencryptionUpdater.java,"all the submitted futures, and statistics about how far the futures are",0,0,rational
800,ReencryptionUpdater.java,processed.,0,0,rational
801,ReencryptionUpdater.java,class representing the task for one batch of a re encryption command.,0,0,rational
802,ReencryptionUpdater.java,it,0,0,rational
803,ReencryptionUpdater.java,also contains statistics about how far this single batch has been executed.,0,0,rational
804,ReencryptionUpdater.java,class that encapsulates re encryption details of a file.,0,0,rational
830,RegistryInternalConstants.java,internal constants for the registry.,0,0,rational
834,RegistryOperations.java,registry operations,0,0,rational
837,ResourceBlacklistRequest.java,@link resourceblacklistrequest encapsulates the list of resource names which should be added or removed from the em blacklist em of resources for the application.,0,0,rational
838,ResourceBlacklistRequest.java,@see resourcerequest,0,0,rational
839,ResourceBlacklistRequest.java,@see applicationmasterprotocol#allocate org^apache.hadoop^yarn.api^protocolrecords.allocaterequest,0,0,rational
844,ResourceRequestsJsonVerifications.java,performs value verifications on,0,0,rational
845,ResourceRequestsJsonVerifications.java,@link org^apache.hadoop^yarn.server^resourcemanager.webapp^dao.resourcerequestinfo,0,0,rational
846,ResourceRequestsJsonVerifications.java,objects against the values of @link resourcerequest .,0,0,rational
847,ResourceRequestsJsonVerifications.java,with the help of the,0,0,rational
848,ResourceRequestsJsonVerifications.java,"@link builder , users can also make verifications of the custom resource",0,0,rational
849,ResourceRequestsJsonVerifications.java,types and its values.,0,0,rational
850,ResourceRequestsJsonVerifications.java,builder class for @link resourcerequestsjsonverifications .,0,0,rational
868,RMAdminRequestInterceptor.java,"defines the contract to be implemented by the request intercepter classes,",0,0,rational
873,RSLegacyRawErasureCoderFactory.java,a raw coder factory for the legacy raw reed solomon coder in java.,0,0,rational
876,SafeModeException.java,client cannot modified namespace until the safe mode is off.,0,0,rational
878,SchedulerQueueManager.java,context of the queues in scheduler.,0,0,rational
880,SequenceFileRecordReader.java,an @link recordreader for @link sequencefile s.,0,0,rational
883,ShellBasedUnixGroupsMapping.java,a simple shell based implementation of @link groupmappingserviceprovider that exec s the code groups code shell command to fetch the group,0,0,rational
887,StandardSocketFactory.java,specialized socketfactory to create sockets with a socks proxy,0,0,rational
889,StateStoreFileSystemImpl.java,@link statestoredriver implementation based on a filesystem.,0,0,rational
898,StreamBaseRecordReader.java,shared functionality for hadoopstreaming formats.,0,0,rational
899,StreamBaseRecordReader.java,a custom reader can be,0,0,rational
900,StreamBaseRecordReader.java,defined to be a recordreader with the constructor below and is selected with,0,0,rational
901,StreamBaseRecordReader.java,the option bin hadoopstreaming inputreader .,0,0,rational
902,StreamBaseRecordReader.java,@see streamxmlrecordreader,0,0,rational
909,StructureGenerator.java,this program generates a random namespace structure with the following,0,0,rational
910,StructureGenerator.java,constraints,0,0,rational
911,StructureGenerator.java,1,0,0,rational
912,StructureGenerator.java,"the number of subdirectories is a random number in minwidth, maxwidth .",0,0,rational
913,StructureGenerator.java,2,0,0,rational
914,StructureGenerator.java,"the maximum depth of each subdirectory is a random number 2 maxdepth 3, maxdepth .",0,0,rational
915,StructureGenerator.java,3,0,0,rational
916,StructureGenerator.java,files are randomly placed in the empty directories.,0,0,rational
917,StructureGenerator.java,the size of each,0,0,rational
918,StructureGenerator.java,file follows gaussian distribution.,0,0,rational
919,StructureGenerator.java,the generated namespace structure is described by two files in the output,0,0,rational
920,StructureGenerator.java,directory.,0,0,rational
922,StructureGenerator.java,each line of the second file contains,0,0,rational
923,StructureGenerator.java,"the full name of a file and its size, separated by a blank.",0,0,rational
924,StructureGenerator.java,the synopsis of the command is,0,0,rational
925,StructureGenerator.java,java structuregenerator,0,0,rational
926,StructureGenerator.java,maxdepth maxdepth maximum depth of the directory tree default is 5.,0,0,rational
927,StructureGenerator.java,minwidth minwidth minimum number of subdirectories per directories default is 1,0,0,rational
928,StructureGenerator.java,maxwidth maxwidth maximum number of subdirectories per directories default is 5,0,0,rational
929,StructureGenerator.java,numoffiles #offiles the total number of files default is 10.,0,0,rational
930,StructureGenerator.java,avgfilesize avgfilesizeinblocks average size of blocks default is 1.,0,0,rational
931,StructureGenerator.java,outdir outdir output directory default is the current directory.,0,0,rational
932,StructureGenerator.java,seed seed random number generator seed default is the current time.,0,0,rational
933,StructureGenerator.java,in memory representation of a directory in memory representation of a file,0,0,rational
960,SwiftBadRequestException.java,thrown to indicate that data locality can t be calculated or requested path is incorrect.,0,0,rational
961,SwiftBadRequestException.java,data locality can t be calculated if openstack swift version is old.,0,0,rational
964,SwiftRestClient.java,this implements the client side of the swift rest api.,0,0,rational
971,SwiftRestClient.java,get the current operation statistics.,0,0,rational
972,SwiftRestClient.java,@return a snapshot of the statistics,0,0,rational
973,SwiftRestClient.java,base class for all swift rest operations.,0,0,rational
974,SwiftRestClient.java,@param m request,0,0,rational
975,SwiftRestClient.java,@param r result,0,0,rational
976,SwiftRestClient.java,get the current operation statistics.,0,0,rational
977,SwiftRestClient.java,@return a snapshot of the statistics,0,0,rational
981,SwiftRestClient.java,get the current operation statistics.,0,0,rational
982,SwiftRestClient.java,@return a snapshot of the statistics,0,0,rational
983,SwiftRestClient.java,generate an auth message.,0,0,rational
984,SwiftRestClient.java,@param r response,0,0,rational
985,SwiftRestClient.java,get the current operation statistics.,0,0,rational
986,SwiftRestClient.java,@return a snapshot of the statistics,0,0,rational
987,SwiftRestClient.java,create operation.,0,0,rational
989,SwiftRestClient.java,get the current operation statistics.,0,0,rational
990,SwiftRestClient.java,@return a snapshot of the statistics,0,0,rational
991,SwiftRestClient.java,delete operation.,0,0,rational
992,SwiftRestClient.java,@param r,0,0,rational
1015,TableConfig.java,class that maintains table configuration.,0,0,rational
1017,TestAddBlock.java,test addblockop is written and read correctly,0,0,rational
1020,TestAdlContractDeleteLive.java,test delete contract test.,0,0,rational
1022,TestAdlContractSeekLive.java,test seek operation on adl file system.,0,0,rational
1536,KVStore.java,kvstore instances are thread safe for both reads and writes.,0,0,rational
1537,KVStore.java,p,1,0,rational
1445,ChunkFetchSuccess.java,response to @link chunkfetchrequest when a chunk exists and has been successfully fetched.,0,0,rational
1573,LevelDB.java,implementation of kvstore that uses leveldb as the underlying data store.,1,0,rational
1448,ChunkFetchSuccess.java,"similarly, the client side decoding will reuse the netty bytebuf as the buffer.",0,0,rational
1576,LocalDiskShuffleDataIO.java,implementation of the @link shuffledataio plugin system that replicates the local shuffle,1,0,rational
1577,LocalDiskShuffleDataIO.java,storage and index file functionality that has historically been used from spark 24 and earlier.,0,0,rational
1451,ExecutorPlugin.java,a plugin which can be automatically instantiated within each spark executor.,1,0,rational
1581,MessageWithHeader.java,a wrapper message that holds two separate pieces a header and a body .,0,0,rational
1584,RemoveBlocks.java,request to remove a set of blocks.,1,0,rational
1586,StreamHandle.java,identifier for a fixed number of chunks to read from a stream created by an open blocks,0,0,rational
1587,StreamHandle.java,message.,1,0,rational
1588,StreamHandle.java,this is used by @link org^apache.spark^network.shuffle^oneforoneblockfetcher .,0,0,rational
1592,TBoolColumn.java,"the set of fields this struct contains, along with convenience methods for finding and manipulating them.",1,0,rational
1594,UploadBlockStream.java,"a request to upload a block, which the destination should receive as a stream.",0,0,rational
1595,UploadBlockStream.java,the actual block data is not contained here.,1,0,rational
1596,UploadBlockStream.java,it will be passed to the streamcallbackwithid,0,0,rational
1469,FlatMapFunction.java,a function that returns zero or more output records from each input record.,1,0,rational
1597,UploadBlockStream.java,that is returned from rpchandler^receivestream,0,0,rational
1471,JavaRecord.java,java bean class to be used with the example javasqlnetworkwordcount.,1,0,rational
1473,JavaStreamingTestExample.java,"perform streaming testing using welch s 2 sample t test on a stream of data, where the data",0,0,rational
1474,JavaStreamingTestExample.java,stream arrives as text files in a directory.,1,0,rational
1475,JavaStreamingTestExample.java,stops when the two groups are statistically,0,0,rational
1476,JavaStreamingTestExample.java,significant p value 005 or after a user specified timeout in number of batches is exceeded.,1,0,rational
1477,JavaStreamingTestExample.java,"the rows of the text files must be in the form boolean, double .",0,0,rational
1478,JavaStreamingTestExample.java,for example,1,0,rational
1479,JavaStreamingTestExample.java,"false, 392",0,0,rational
1480,JavaStreamingTestExample.java,"true, 9932",1,0,rational
1481,JavaStreamingTestExample.java,usage,0,0,rational
1482,JavaStreamingTestExample.java,javastreamingtestexample datadir batchduration numbatchestimeout,0,0,rational
1483,JavaStreamingTestExample.java,to run on your local machine using the directory datadir with 5 seconds between each batch and,0,0,rational
1484,JavaStreamingTestExample.java,"a timeout after 100 insignificant batches, call",0,0,rational
1485,JavaStreamingTestExample.java,bin run example mllib^javastreamingtestexample datadir 5 100,0,0,rational
1486,JavaStreamingTestExample.java,as you add text files to datadir the significance test wil continually update every,0,0,rational
1487,JavaStreamingTestExample.java,batchduration seconds until the test becomes significant p value 005 or the number of,0,0,rational
1488,JavaStreamingTestExample.java,batches processed exceeds numbatchestimeout .,0,0,rational
1505,KVStore.java,abstraction for a local key value store for storing app data.,0,0,rational
1506,KVStore.java,p,0,0,rational
1507,KVStore.java,there are two main features provided by the implementations of this interface,0,0,rational
1508,KVStore.java,p,0,0,rational
1509,KVStore.java,h3 serialization h3,0,0,rational
1510,KVStore.java,p,0,0,rational
1511,KVStore.java,"if the underlying data store requires serialization, data will be serialized to and deserialized",0,0,rational
1512,KVStore.java,"using a @link kvstoreserializer , which can be customized by the application.",0,0,rational
1513,KVStore.java,the serializer is,0,0,rational
1514,KVStore.java,"based on jackson, so it supports all the jackson annotations for controlling the serialization of",0,0,rational
1515,KVStore.java,app defined types.,0,0,rational
1516,KVStore.java,p,0,0,rational
1517,KVStore.java,p,0,0,rational
1518,KVStore.java,data is also automatically compressed to save disk space.,0,0,rational
1519,KVStore.java,p,0,0,rational
1520,KVStore.java,h3 automatic key management h3,0,0,rational
1521,KVStore.java,p,0,0,rational
1522,KVStore.java,"when using the built in key management, the implementation will automatically create unique",0,0,rational
1523,KVStore.java,keys for each type written to the store.,0,0,rational
1524,KVStore.java,"keys are based on the type name, and always start",0,0,rational
1525,KVStore.java,with the prefix character so that it s easy to use both manual and automatic key,0,0,rational
1526,KVStore.java,management apis without conflicts .,0,0,rational
1527,KVStore.java,p,0,0,rational
1528,KVStore.java,p,0,0,rational
1529,KVStore.java,another feature of automatic key management is indexing by annotating fields or methods of,0,0,rational
1530,KVStore.java,"objects written to the store with @link kvindex , indices are created to sort the data",0,0,rational
1531,KVStore.java,by the values of those properties.,0,0,rational
1532,KVStore.java,this makes it possible to provide sorting without having,0,0,rational
1533,KVStore.java,to load all instances of those types from the store.,0,0,rational
1534,KVStore.java,p,0,0,rational
1535,KVStore.java,p,0,0,rational
2048,ICodeReaderFactory.java,@noreference this interface is not intended to be referenced by clients.,0,0,rational
2055,ICPointerType.java,@noimplement this interface is not intended to be implemented by clients.,1,0,rational
2058,ICPPAliasTemplateInstance.java,represents an instance of an alias template 145.7 .,0,0,rational
2059,ICPPAliasTemplateInstance.java,@since 55,1,0,rational
2060,ICPPAliasTemplateInstance.java,@noextend this interface is not intended to be extended by clients.,0,0,rational
2061,ICPPAliasTemplateInstance.java,@noimplement this interface is not intended to be implemented by clients.,1,0,rational
2066,ICPPASTLinkageSpecification.java,this interface represents a linkage specification.,0,0,rational
2067,ICPPASTLinkageSpecification.java,eg extern c .,1,0,rational
2579,TriggerCellModifier.java,cell modifier used to edit the trigger value.,0,0,rational
2068,ICPPASTLinkageSpecification.java,@noextend this interface is not intended to be extended by clients.,1,0,rational
2069,ICPPASTLinkageSpecification.java,@noimplement this interface is not intended to be implemented by clients.,0,0,rational
2581,TypedCDTViewerFilter.java,see org^eclipse.cdt^internal.ui^dialogs.typedviewerfilter,1,0,rational
2582,TypedCDTViewerFilter.java,@noextend this class is not intended to be subclassed by clients.,0,0,rational
2585,UncallCommandHandler.java,command handler to trigger an uncall operation,1,0,rational
2074,ICPPASTVirtSpecifier.java,a virt specifier at the end of a function declaration.,0,0,rational
2586,UncallCommandHandler.java,@since 70,1,0,rational
2075,ICPPASTVirtSpecifier.java,"there are two virt specifiers, final and override .",0,0,rational
2076,ICPPASTVirtSpecifier.java,@noimplement this interface is not intended to be implemented by clients.,1,0,rational
2077,ICPPASTVirtSpecifier.java,@noextend this interface is not intended to be extended by clients.,0,0,rational
2589,UPCKeyword.java,enumeration of keywords that upc adds to c99.,1,0,rational
2078,ICPPASTVirtSpecifier.java,@since 57,0,0,rational
2590,UPCKeyword.java,@author mike kucera,1,0,rational
2593,UPCLanguage.java,"implementation of the ilanguage extension point, adds upc as a language to cdt.",0,0,rational
2594,UPCLanguage.java,@author mike kucera,1,0,rational
2085,ICPPPointerToMemberType.java,@noimplement this interface is not intended to be implemented by clients.,0,0,rational
2597,VMHasChildrenUpdate.java,helper class implementation of the @link ihaschildrenupdate update object.,1,0,rational
2598,VMHasChildrenUpdate.java,@see vmviewerupdate,0,0,rational
2599,VMHasChildrenUpdate.java,@since 10,1,0,rational
2090,ICSourceNotFoundDescription.java,an instance is usually provided by an adapter.,0,0,rational
2603,WhiteSpaceOptions.java,manage code formatter white space options on a higher level.,1,0,rational
2604,WhiteSpaceOptions.java,preview snippets.,0,0,rational
2093,IDsfDebugServicesFactory.java,a factory to create dsf services.,1,0,rational
2605,WhiteSpaceOptions.java,"private void createbeforeellipsis map workingvalues, innernode parent createoption parent, workingvalues, formattermessages^whitespaceoptions vararg parameter, defaultcodeformatterconstants^formatter insert space before ellipsis, vararg parameter preview private void createafterellipsis map workingvalues, innernode parent createoption parent, workingvalues, formattermessages^whitespaceoptions vararg parameter, defaultcodeformatterconstants^formatter insert space after ellipsis, vararg parameter preview syntax element tree private innernode createreturntree map workingvalues, innernode parent final innernode root new innernode parent, workingvalues, formattermessages^whitespaceoptions return createoption root, workingvalues, formattermessages^whitespacetabpage before parenthesized expressions, defaultcodeformatterconstants^formatter insert space before parenthesized expression in return, return preview return root private innernode createthrowtree map workingvalues, innernode parent final innernode root new innernode parent, workingvalues, formattermessages^whitespaceoptions throw createoption root, workingvalues, formattermessages^whitespacetabpage before parenthesized expressions, defaultcodeformatterconstants^formatter insert space before parenthesized expression in throw, throw preview return root",0,0,rational
2606,WhiteSpaceOptions.java,represents a node in the options tree.,1,0,rational
2607,WhiteSpaceOptions.java,preview snippets.,0,0,rational
2096,IDsfDebugServicesFactory.java,@since 11,1,0,rational
2608,WhiteSpaceOptions.java,"private void createbeforeellipsis map workingvalues, innernode parent createoption parent, workingvalues, formattermessages^whitespaceoptions vararg parameter, defaultcodeformatterconstants^formatter insert space before ellipsis, vararg parameter preview private void createafterellipsis map workingvalues, innernode parent createoption parent, workingvalues, formattermessages^whitespaceoptions vararg parameter, defaultcodeformatterconstants^formatter insert space after ellipsis, vararg parameter preview syntax element tree private innernode createreturntree map workingvalues, innernode parent final innernode root new innernode parent, workingvalues, formattermessages^whitespaceoptions return createoption root, workingvalues, formattermessages^whitespacetabpage before parenthesized expressions, defaultcodeformatterconstants^formatter insert space before parenthesized expression in return, return preview return root private innernode createthrowtree map workingvalues, innernode parent final innernode root new innernode parent, workingvalues, formattermessages^whitespaceoptions throw createoption root, workingvalues, formattermessages^whitespacetabpage before parenthesized expressions, defaultcodeformatterconstants^formatter insert space before parenthesized expression in throw, throw preview return root",0,0,rational
2609,WhiteSpaceOptions.java,a node representing a group of options in the tree.,1,0,rational
2610,WhiteSpaceOptions.java,preview snippets.,0,0,rational
2611,WhiteSpaceOptions.java,"private void createbeforeellipsis map workingvalues, innernode parent createoption parent, workingvalues, formattermessages^whitespaceoptions vararg parameter, defaultcodeformatterconstants^formatter insert space before ellipsis, vararg parameter preview private void createafterellipsis map workingvalues, innernode parent createoption parent, workingvalues, formattermessages^whitespaceoptions vararg parameter, defaultcodeformatterconstants^formatter insert space after ellipsis, vararg parameter preview syntax element tree private innernode createreturntree map workingvalues, innernode parent final innernode root new innernode parent, workingvalues, formattermessages^whitespaceoptions return createoption root, workingvalues, formattermessages^whitespacetabpage before parenthesized expressions, defaultcodeformatterconstants^formatter insert space before parenthesized expression in return, return preview return root private innernode createthrowtree map workingvalues, innernode parent final innernode root new innernode parent, workingvalues, formattermessages^whitespaceoptions throw createoption root, workingvalues, formattermessages^whitespacetabpage before parenthesized expressions, defaultcodeformatterconstants^formatter insert space before parenthesized expression in throw, throw preview return root",1,0,rational
2100,IGDBTraceControl.java,the tracecontrol service provides access to the debugger tracing functionality.,0,0,rational
2612,WhiteSpaceOptions.java,a node representing a concrete white space option in the tree.,1,0,rational
2102,IGDBTraceControl.java,@since 30,0,0,rational
2103,IGDBTraceControl.java,gdb specific part,1,0,rational
2104,IGDBTraceControl.java,marker interface for a context on which trace operations can be performed,0,0,rational
2105,IGDBTraceControl.java,gdb specific part,1,0,rational
2106,IGDBTraceControl.java,specific trace record context.,0,0,rational
2107,IGDBTraceControl.java,it describes tracing data.,1,0,rational
2108,IGDBTraceControl.java,gdb specific part,0,0,rational
2109,IGDBTraceControl.java,this is the model data interface that corresponds to itracerecorddmcontext.,1,0,rational
2110,IGDBTraceControl.java,gdb specific part,0,0,rational
2111,IGDBTraceControl.java,trace events,1,0,rational
2623,WordIgnoreProposal.java,proposal to ignore the word during the current editing session.,0,0,rational
2112,IGDBTraceControl.java,gdb specific part @since 44,1,0,rational
2625,WorkingCopyTests.java,contains unit test cases for working copies.,0,0,rational
2127,IInclude.java,represents an include declaration in a c translation unit.,1,0,rational
2128,IInclude.java,@noextend this interface is not intended to be extended by clients.,0,0,rational
2129,IInclude.java,@noimplement this interface is not intended to be implemented by clients.,1,0,rational
2136,IMacroEntry.java,@noextend this interface is not intended to be extended by clients.,0,0,rational
2137,IMacroEntry.java,@noimplement this interface is not intended to be implemented by clients.,1,0,rational
2140,IMIBackend.java,service for controlling the back end process.,0,0,rational
2141,IMIBackend.java,@since 11,1,0,rational
2142,IMIBackend.java,event indicating that the back end process has started or terminated.,0,0,rational
1631,AbstractTrialUndoActionProvider.java,action for a null rule,1,0,rational
1634,AddBreakpointRulerAction.java,ruler action to add breakpoint with a dialog properties.,0,0,rational
2146,IMSASTDeclspecList.java,"represents a microsoft attribute specifier, introduced by declspec.",1,0,rational
2147,IMSASTDeclspecList.java,@since 66,0,0,rational
1636,AddLineBreakpointActionDelegate.java,a delegate for the add line breakpoint action.,1,0,rational
2148,IMSASTDeclspecList.java,@noextend this interface is not intended to be extended by clients.,0,0,rational
2149,IMSASTDeclspecList.java,@noimplement this interface is not intended to be implemented by clients.,1,0,rational
1638,AddLineBreakpointActionDelegate.java,initially derived from addfunctionbreakpointactiondelegate,0,0,rational
1641,AddMemoryBlocks.java,adds memory blocks to the memory view.,1,0,rational
1642,AddMemoryBlocks.java,p,0,0,rational
2154,INodeFactory.java,control flow graph node factory,1,0,rational
2155,INodeFactory.java,@noextend this interface is not intended to be extended by clients.,0,0,rational
2161,IPropertyChangeParticipant.java,p,1,0,rational
1650,AddMemoryBlocks.java,p,0,0,rational
2162,IPropertyChangeParticipant.java,clients may implement this interface.,1,0,rational
1651,AddMemoryBlocks.java,@since 32,0,0,rational
2163,IPropertyChangeParticipant.java,p,1,0,rational
1652,AddMemoryBlocks.java,"in order to avoid duplicating the addmemoryblocks method one version for expressions, one for memory space address, we pass in a an opaque parameter and let the logic within addmemoryblocks differentiate where needed via isinstanceof request object used to get the memory spaces",0,0,rational
2164,IPropertyChangeParticipant.java,@since 50,1,0,rational
2172,IRefreshAllTarget.java,@since 11,0,0,rational
1662,AllTemplateEngineTests.java,the test suite will execute all the testcases added to the suite.,1,0,rational
1663,AllTemplateEngineTests.java,@since 40,0,0,rational
2175,IRegisters2.java,service extension of iregisters to manage user defined register groups,1,0,rational
2176,IRegisters2.java,@since 26,0,0,rational
1667,AutoconfMacroParameterListValidator.java,this class provides the macro call parameter parsing for the autoconf editor hover,1,0,rational
2179,IScannerInfoConsoleParser.java,parses a line of command output looking for scanner info entries.,0,0,rational
1668,AutoconfMacroParameterListValidator.java,it is modified from the cdt class cparameterlistvalidator,1,0,rational
2180,IScannerInfoConsoleParser.java,@author vhirsl,0,0,rational
1669,AutoconfMacroParameterListValidator.java,@author jjohnstn,1,0,rational
1673,AutotoolsProblemMarkerInfo.java,@noextend this class is not intended to be subclassed by clients.,0,0,rational
2185,ITestItem.java,@noextend this interface is not intended to be extended by clients.,1,0,rational
2186,ITestItem.java,@noimplement this interface is not intended to be implemented by clients.,0,0,rational
1675,BindingClassifierTest.java,tests for @link bindingclassifier .,1,0,rational
2187,ITestItem.java,represents status of the test item.,0,0,rational
1678,C99BuildASTParserAction.java,semantic actions called by the c99 parser to build an ast.,1,0,rational
1679,C99BuildASTParserAction.java,@author mike kucera,0,0,rational
1682,CConfigurationDescriptionCache.java,cconfigurationdescriptioncache is a proxy class for serialization of configuration description data.,1,0,rational
2195,IViewInMemory.java,provides the ability to view a variable in the memory view.,0,0,rational
2196,IViewInMemory.java,@since 74,1,0,rational
1685,CConfigurationDescriptionCache.java,ol,0,0,rational
1686,CConfigurationDescriptionCache.java,li initialization,1,0,rational
1687,CConfigurationDescriptionCache.java,ul,0,0,rational
2199,LanguageSettingsProvidersSerializer.java,helper class handling serialization and notifications for language settings entries @link iclanguagesettingentry .,1,0,rational
1688,CConfigurationDescriptionCache.java,li after eclipse started a project is being opened.,0,0,rational
2200,LanguageSettingsProvidersSerializer.java,those are for readability of xml only,1,0,rational
1689,CConfigurationDescriptionCache.java,a new cconfigurationdescriptioncache is created,0,0,rational
2201,LanguageSettingsProvidersSerializer.java,dummy class to represent ill defined provider.,1,0,rational
1690,CConfigurationDescriptionCache.java,"with cconfigurationdescriptioncache icstorageelement storage, cprojectdescription parent constructor.",0,0,rational
2202,LanguageSettingsProvidersSerializer.java,those are for readability of xml only,1,0,rational
1691,CConfigurationDescriptionCache.java,li any clients needed icconfigurationdescription get cconfigurationdescription using constructor,0,0,rational
1692,CConfigurationDescriptionCache.java,"cconfigurationdescription cconfigurationdata data, string buildsystemid, icdataproxycontainer cr",1,0,rational
2204,LanguageSettingsProvidersSerializer.java,those are for readability of xml only,0,0,rational
1693,CConfigurationDescriptionCache.java,where the cconfigurationdescriptioncache is passed as data.,1,0,rational
2205,LanguageSettingsProvidersSerializer.java,wrapper for workspace providers to ensure level of indirection.,0,0,rational
1694,CConfigurationDescriptionCache.java,the reference to cache is kept in field fcfgcache.,1,0,rational
1695,CConfigurationDescriptionCache.java,"li fcfgcache is used to getspecsettings cconfigurationspecsettings, after that fcfgcache is set to null.",0,0,rational
1696,CConfigurationDescriptionCache.java,ul,1,0,rational
1697,CConfigurationDescriptionCache.java,li user enters project properties settings,0,0,rational
2209,LanguageSettingsProvidersSerializer.java,those are for readability of xml only,1,0,rational
1698,CConfigurationDescriptionCache.java,ul,0,0,rational
2210,LanguageSettingsProvidersSerializer.java,language settings change event implementation.,1,0,rational
1699,CConfigurationDescriptionCache.java,li another cconfigurationdescription settings configuration created using the same constructor setting fcfgcache,0,0,rational
1700,CConfigurationDescriptionCache.java,to the cconfigurationdescriptioncache.,1,0,rational
1701,CConfigurationDescriptionCache.java,ul,0,0,rational
1702,CConfigurationDescriptionCache.java,li user changes settings in the settings configuration cconfigurationdescription and saves it,1,0,rational
1703,CConfigurationDescriptionCache.java,ul,0,0,rational
1704,CConfigurationDescriptionCache.java,li new cconfigurationdescriptioncache is created from the cconfigurationdescription via constructor,1,0,rational
1705,CConfigurationDescriptionCache.java,"cconfigurationdescriptioncache icconfigurationdescription basedescription, .",0,0,rational
1706,CConfigurationDescriptionCache.java,where,1,0,rational
1707,CConfigurationDescriptionCache.java,basedescription is saved as fbasedescription.,0,0,rational
2219,MachOBinaryParserPage.java,@noextend this class is not intended to be subclassed by clients.,1,0,rational
1708,CConfigurationDescriptionCache.java,li cconfigurationdescriptioncache^applydata .,0,0,rational
1709,CConfigurationDescriptionCache.java,is used to persist the data.,1,0,rational
2221,ManageConfigRunner.java,@noextend this class is not intended to be subclassed by clients.,0,0,rational
1710,CConfigurationDescriptionCache.java,at that point,1,0,rational
1712,CConfigurationDescriptionCache.java,ul,0,0,rational
1713,CConfigurationDescriptionCache.java,ol,1,0,rational
1714,CConfigurationDescriptionCache.java,@see icconfigurationdescription,0,0,rational
1715,CConfigurationDescriptionCache.java,@see cconfigurationdescription,1,0,rational
1716,CConfigurationDescriptionCache.java,@see cprojectdescriptionevent,0,0,rational
2237,MIAsyncErrorProcessor.java,this class handles these type of situations by firing mierrorevent when such an error appears.,1,0,rational
2238,MIAsyncErrorProcessor.java,@since 53,0,0,rational
2246,MIBreakpointsSynchronizer.java,p,1,0,rational
2247,MIBreakpointsSynchronizer.java,"bug 530377 prior to fixing 530377, events that arrived from gdb faster than",0,0,rational
2248,MIBreakpointsSynchronizer.java,dsf eclipse fully processed them could cause the state within the,1,0,rational
2249,MIBreakpointsSynchronizer.java,synchronizer and manager to become corrupt.,0,0,rational
2250,MIBreakpointsSynchronizer.java,this would happen because it,0,0,rational
2251,MIBreakpointsSynchronizer.java,"takes multiple dsf stages to complete handling 1 event, so the handling of",0,0,rational
2252,MIBreakpointsSynchronizer.java,the next event would become intermingled.,0,0,rational
2253,MIBreakpointsSynchronizer.java,that violated many assumptions in,0,0,rational
2254,MIBreakpointsSynchronizer.java,the code that the code run in the respective requestmonitor would be on the,0,0,rational
2255,MIBreakpointsSynchronizer.java,same state.,0,0,rational
2256,MIBreakpointsSynchronizer.java,this is an unsuprising assumption based on the general idea of,0,0,rational
2257,MIBreakpointsSynchronizer.java,dsf as not requiring the normal synchronization primitives as everything is,0,0,rational
2258,MIBreakpointsSynchronizer.java,single threaded.,0,0,rational
2259,MIBreakpointsSynchronizer.java,"to resolve this problem, there is some code",0,0,rational
2260,MIBreakpointsSynchronizer.java,@link #queueevent breakpointevent that ensures each event is fully,0,0,rational
2261,MIBreakpointsSynchronizer.java,processed before the next event starts processing.,0,0,rational
2262,MIBreakpointsSynchronizer.java,@since 42,0,0,rational
2263,MIBreakpointsSynchronizer.java,catchpoint expressions gdb tracepoint commands,0,0,rational
2264,MIBreakpointsSynchronizer.java,class to store an event that needs to be performed by the synchronizer,0,0,rational
2265,MIBreakpointsSynchronizer.java,@see mibreakpointssynchronizer class documentation for design comments,0,0,rational
1755,CDebugModelPresentation.java,@see idebugmodelpresentation,0,0,rational
1757,CElementDelta.java,@see icelementdelta,0,0,rational
1759,ClangToolChain.java,the clang toolchain.,0,0,rational
1762,ClangToolChain.java,@author dschaefer,0,0,rational
1766,CommonBuildTab.java,common utilities for core build launch configuration tabs.,0,0,rational
1767,CommonBuildTab.java,@since 91,0,0,rational
1770,ContainerTabModel.java,@since 12.1,0,0,rational
1771,ContainerTabModel.java,@author jjohnstn,0,0,rational
1774,CoreBuildGenericLaunchConfigProvider.java,core launch configuration provider used by generic target types.,0,0,rational
1775,CoreBuildGenericLaunchConfigProvider.java,@since 83,0,0,rational
2287,MIDataListRegisterNames.java,data list register names regno,0,0,rational
2288,MIDataListRegisterNames.java,show a list of register names for the current target.,0,0,rational
1778,CPPASTProblem.java,c specific implementation allows actions to visit the problem.,0,0,rational
1780,CPPASTReferenceOperator.java,reference operator for declarators.,0,0,rational
1784,CPPDeferredFunction.java,a compiler would resolve it during instantiation.,0,0,rational
1787,CPPImplicitVariable.java,represents a variable implicitly created in c code.,0,0,rational
1788,CPPImplicitVariable.java,for example the initializer of a structured binding decomposition dcl^struct.bind,0,0,rational
1789,CPPImplicitVariable.java,"code auto first, second decomposed code",0,0,rational
2301,MIEnvironmentDirectory.java,environment directory r pathdir,0,0,rational
1790,CPPImplicitVariable.java,the code initializerevaluation code has to be supplied.,0,0,rational
2302,MIEnvironmentDirectory.java,add directory pathdir to beginning of search path for source files.,0,0,rational
2303,MIEnvironmentDirectory.java,r will first reset the path to its default,0,0,rational
2309,MIReverseDebugEnabler.java,@since 42,0,0,rational
1798,CPropertyTester.java,a property tester that determines if a file is an executable or a c c project.,0,0,rational
1800,CUIPreferenceInitializer.java,this class implements the setting of the cui initial preference store settings.,0,0,rational
1801,CUIPreferenceInitializer.java,@noextend this class is not intended to be subclassed by clients.,0,0,rational
2314,MIStack.java,sub classes must supply the miarg object.,0,0,rational
2315,MIStack.java,class to track stack depth and debug frames for our internal cache,0,0,rational
1808,DefaultEnvironmentContextInfo.java,the default implementation of the icontextinfo used by the environment variable provider,0,0,rational
1810,DefaultEnvironmentContextInfo.java,@since 30,0,0,rational
1823,DisplayDsfExecutor.java,@since 10,0,0,rational
1828,DocCommentOwnerBlock.java,project property page for setting documentation comment owner.,0,0,rational
1829,DocCommentOwnerBlock.java,em this class is not intended for use outside of cdt em,0,0,rational
1830,DocCommentOwnerBlock.java,@noextend this class is not intended to be subclassed by clients.,0,0,rational
1831,DocCommentOwnerBlock.java,@noinstantiate this class is not intended to be instantiated by clients.,0,0,rational
1836,DOMGCCParserExtensionTestSuite.java,@author jcamelon,0,0,rational
1838,DOMParserTestSuite.java,@author jcamelon,0,0,rational
1840,DsfDebugUITools.java,@since 11,0,0,rational
1847,ElementNumberFormatsContribution.java,@since 22,0,0,rational
1851,FindStdLibPath.java,currently the shell script is only for linux.,0,0,rational
1855,FoldingConfigurationBlock.java,configures c editor folding preferences.,0,0,rational
1856,FoldingConfigurationBlock.java,@since 30,0,0,rational
1859,FormattedValueTests.java,tests to verify the operation of formattedvaluesvmutil,0,0,rational
1860,FormattedValueTests.java,@since 22,0,0,rational
2372,MIThreadCreatedEvent.java,this can only be detected by gdb mi after gdb 68.,0,0,rational
1861,FormattedValueTests.java,helper class that stores some element paths and nodes using a certain format,0,0,rational
2374,MIThreadGroupAddedEvent.java,"thread group added,id i1",0,0,rational
2375,MIThreadGroupAddedEvent.java,this can only be detected by gdb mi with gdb 72.,0,0,rational
2376,MIThreadGroupAddedEvent.java,@since 51,0,0,rational
1865,GCCKeywords.java,@noextend this interface is not intended to be extended by clients.,0,0,rational
1866,GCCKeywords.java,@noinstantiate this class is not intended to be instantiated by clients.,0,0,rational
2380,MultiCfgContributedEnvironment.java,@noextend this class is not intended to be subclassed by clients.,0,0,rational
1869,GDBControl_7_12.java,need a new finallaunchsequence for gdb 712,0,0,rational
1870,GDBControl_7_12.java,@since 52,0,0,rational
2382,MultiLaunchConfigurationTabGroup.java,tab group for launch group.,0,0,rational
2383,MultiLaunchConfigurationTabGroup.java,"@deprecated see bug 517722, launch groups are now part of platform.",0,0,rational
1873,GdbExpressionVMProvider.java,a specialization of expressionvmprovider that uses a gdb specific variable vm,0,0,rational
2386,PDOMDependencyGenerator.java,@author doug schaefer,0,0,rational
1875,GdbExpressionVMProvider.java,"to understand why this is necessary, see gdbvariablevmnode.",0,0,rational
2387,PDOMDependencyGenerator.java,@noextend this class is not intended to be subclassed by clients.,0,0,rational
2388,PDOMDependencyGenerator.java,@noinstantiate this class is not intended to be instantiated by clients.,0,0,rational
1879,GDBSourceLookup.java,default implementation of @link igdbsourcelookup,0,0,rational
1880,GDBSourceLookup.java,@since 50,0,0,rational
2392,PDOMMacroReferenceName.java,"represents declarations, definitions and references to bindings, except for macros.",0,0,rational
1885,GnuMakefileGenerator.java,@since 12,0,0,rational
2397,ProblemMarkerManager.java,visitors used to filter the element delta changes,0,0,rational
1886,GnuMakefileGenerator.java,@noinstantiate this class is not intended to be instantiated by clients.,0,0,rational
1887,GnuMakefileGenerator.java,string constants for makefile contents and messages private static final string auto dep comment ^autodeps non nls 1 private static final string message managedmakebuilder^message non nls 1 private static final string build error message ^error non nls 1 private static final string dep incl comment ^module.dep^includes non nls 1 private static final string mod incl comment ^module.make^includes non nls 1 private itool buildtools private boolean buildtoolsused private imanagedbuildinfo info private set outputextensionsset maps of macro names string to values list dependency file variables private vector dependencymakefiles ipath s relative to the top build directory or absolute,0,0,rational
1888,GnuMakefileGenerator.java,imanagedbuildermakefilegenerator m e t h o d s,0,0,rational
1889,GnuMakefileGenerator.java,m a k e f i l e s p o p u l a t i o n m e t h o d s,0,0,rational
2401,ProcessLauncher.java,this class implements external process launching for internal builder.,0,0,rational
1890,GnuMakefileGenerator.java,m a i n makefile m a k e f i l e m e t h o d s,0,0,rational
1891,GnuMakefileGenerator.java,s o u r c e s sources^mk m a k e f i l e m e t h o d s,0,0,rational
1892,GnuMakefileGenerator.java,f r a g m e n t subdir^mk m a k e f i l e m e t h o d s,0,0,rational
1893,GnuMakefileGenerator.java,m a k e f i l eg e n e r a t i o n c o m m o n m e t h o d s,0,0,rational
2405,ProcStatParser.java,@author marc dumais,0,0,rational
1894,GnuMakefileGenerator.java,adds a macro addition prefix to a map of macro names to entries.,0,0,rational
1895,GnuMakefileGenerator.java,entry prefixes look like,0,0,rational
2407,ProcStatParser.java,@see also http www^linuxhowtos.org system procstat^htm,0,0,rational
1896,GnuMakefileGenerator.java,c srcs,0,0,rational
1897,GnuMakefileGenerator.java,"addprefix root ,",0,0,rational
1898,GnuMakefileGenerator.java,r e s o u r c e v i s i t o r m e t h o d s,0,0,rational
2410,QtPDOMNameIndex.java,a data structure for storing lists of pdomnames that are indexed by a string key.,0,0,rational
1899,GnuMakefileGenerator.java,o t h e r m e t h o d s,0,0,rational
2411,QtPDOMNameIndex.java,"this is equivalent to the java type map string, list pdomname .",0,0,rational
1900,GnuMakefileGenerator.java,"process a string denoting a filepath in a way compatible for gnu make rules, handling",0,0,rational
1901,GnuMakefileGenerator.java,windows drive letters and whitespace appropriately.,0,0,rational
1902,GnuMakefileGenerator.java,p p,0,0,rational
2414,RenameCSourceFolderChange.java,@author ee4 graf ifs,0,0,rational
1903,GnuMakefileGenerator.java,the context these paths appear in is on the right hand side of a rule header.,0,0,rational
1904,GnuMakefileGenerator.java,ie,0,0,rational
1905,GnuMakefileGenerator.java,p p,0,0,rational
1906,GnuMakefileGenerator.java,target dep1 dep2 dep3,0,0,rational
1907,GnuMakefileGenerator.java,p,0,0,rational
1908,GnuMakefileGenerator.java,@param path the string denoting the path to process,0,0,rational
1909,GnuMakefileGenerator.java,@throws nullpointerexception is path is null,0,0,rational
1910,GnuMakefileGenerator.java,@return a suitable make rule compatible path,0,0,rational
1912,GnuMakefileGenerator.java,what resources have been changed.,0,0,rational
2424,ReturnCheckerTest.java,test for @see returncheckertest class,0,0,rational
1913,GnuMakefileGenerator.java,the logic is very simple.,0,0,rational
1914,GnuMakefileGenerator.java,if a,0,0,rational
1916,GnuMakefileGenerator.java,in which they are located are dirty so the makefile fragments for them,0,0,rational
1917,GnuMakefileGenerator.java,have to be regenerated.,0,0,rational
1918,GnuMakefileGenerator.java,p,0,0,rational
2431,RulerColumnDescriptor.java,instances can be obtained from a @link rulercolumnregistry .,0,0,rational
1920,GnuMakefileGenerator.java,itself.,0,0,rational
2432,RulerColumnDescriptor.java,@since 72,0,0,rational
1921,GnuMakefileGenerator.java,we are relying on make to do the right things when confronted,0,0,rational
2433,RulerColumnDescriptor.java,@noinstantiate this class is not intended to be instantiated by clients.,0,0,rational
1922,GnuMakefileGenerator.java,with a dependency on a moved header file.,0,0,rational
1923,GnuMakefileGenerator.java,"that said, make will treat",0,0,rational
1924,GnuMakefileGenerator.java,the missing header file in a dependency rule as a target it has to build,0,0,rational
1925,GnuMakefileGenerator.java,unless told otherwise.,0,0,rational
1926,GnuMakefileGenerator.java,these dummy targets are added to the makefile,0,0,rational
1927,GnuMakefileGenerator.java,to avoid a missing target error.,0,0,rational
1928,GnuMakefileGenerator.java,string constants for makefile contents and messages private static final string auto dep comment ^autodeps non nls 1 private static final string message managedmakebuilder^message non nls 1 private static final string build error message ^error non nls 1 private static final string dep incl comment ^module.dep^includes non nls 1 private static final string mod incl comment ^module.make^includes non nls 1 private itool buildtools private boolean buildtoolsused private imanagedbuildinfo info private set outputextensionsset maps of macro names string to values list dependency file variables private vector dependencymakefiles ipath s relative to the top build directory or absolute,0,0,rational
2440,SCDOptionsEnum.java,enumeration class for scanner configuration affecting command line options,0,0,rational
1929,GnuMakefileGenerator.java,imanagedbuildermakefilegenerator m e t h o d s,0,0,rational
2441,SCDOptionsEnum.java,@author vhirsl,0,0,rational
1930,GnuMakefileGenerator.java,m a k e f i l e s p o p u l a t i o n m e t h o d s,0,0,rational
1931,GnuMakefileGenerator.java,m a i n makefile m a k e f i l e m e t h o d s,0,0,rational
1932,GnuMakefileGenerator.java,s o u r c e s sources^mk m a k e f i l e m e t h o d s,0,0,rational
1933,GnuMakefileGenerator.java,f r a g m e n t subdir^mk m a k e f i l e m e t h o d s,0,0,rational
2445,SourceLookupTest.java,tests that interaction with source lookups works as expected.,0,0,rational
1934,GnuMakefileGenerator.java,m a k e f i l eg e n e r a t i o n c o m m o n m e t h o d s,0,0,rational
2446,SourceLookupTest.java,p,0,0,rational
1935,GnuMakefileGenerator.java,adds a macro addition prefix to a map of macro names to entries.,0,0,rational
1936,GnuMakefileGenerator.java,entry prefixes look like,0,0,rational
1937,GnuMakefileGenerator.java,c srcs,0,0,rational
1938,GnuMakefileGenerator.java,"addprefix root ,",0,0,rational
2450,SourceLookupTest.java,"located in the @link #build path directory, but it is now located in the",0,0,rational
1939,GnuMakefileGenerator.java,r e s o u r c e v i s i t o r m e t h o d s,0,0,rational
2451,SourceLookupTest.java,@link basetestcase#source path directory.,0,0,rational
1940,GnuMakefileGenerator.java,o t h e r m e t h o d s,0,0,rational
2452,SourceLookupTest.java,p,0,0,rational
1941,GnuMakefileGenerator.java,"process a string denoting a filepath in a way compatible for gnu make rules, handling",0,0,rational
2453,SourceLookupTest.java,the wild card in sourcelookup ^exe can be one of the following to cover the,0,0,rational
1942,GnuMakefileGenerator.java,windows drive letters and whitespace appropriately.,0,0,rational
2454,SourceLookupTest.java,different effective types of source lookups that need to be done depending on,0,0,rational
1943,GnuMakefileGenerator.java,p p,0,0,rational
2455,SourceLookupTest.java,how the program was compiled.,0,0,rational
1944,GnuMakefileGenerator.java,the context these paths appear in is on the right hand side of a rule header.,0,0,rational
2456,SourceLookupTest.java,each of these options produces different debug,0,0,rational
1945,GnuMakefileGenerator.java,ie,0,0,rational
2457,SourceLookupTest.java,information about where to find the source file.,0,0,rational
1946,GnuMakefileGenerator.java,p p,0,0,rational
2458,SourceLookupTest.java,see the makefile for more,0,0,rational
1947,GnuMakefileGenerator.java,target dep1 dep2 dep3,0,0,rational
2459,SourceLookupTest.java,information.,0,0,rational
1948,GnuMakefileGenerator.java,p,0,0,rational
2460,SourceLookupTest.java,ul,0,0,rational
1949,GnuMakefileGenerator.java,@param path the string denoting the path to process,0,0,rational
2461,SourceLookupTest.java,li b ac b absolute and canonical path no .,0,0,rational
1950,GnuMakefileGenerator.java,@throws nullpointerexception is path is null,0,0,rational
2462,SourceLookupTest.java,.,0,0,rational
1951,GnuMakefileGenerator.java,@return a suitable make rule compatible path,0,0,rational
2463,SourceLookupTest.java,in path passed to gcc,0,0,rational
1952,GnuMakefileGenerator.java,this class is used to recursively walk the project and determine which,0,0,rational
2464,SourceLookupTest.java,li,0,0,rational
1953,GnuMakefileGenerator.java,modules contribute buildable source files.,0,0,rational
2466,SourceLookupTest.java,.,0,0,rational
2467,SourceLookupTest.java,in path passed to gcc,0,0,rational
2468,SourceLookupTest.java,li,0,0,rational
2470,SourceLookupTest.java,.,0,0,rational
2471,SourceLookupTest.java,in path passed to gcc,0,0,rational
2472,SourceLookupTest.java,li,0,0,rational
2474,SourceLookupTest.java,.,0,0,rational
2475,SourceLookupTest.java,in path passed to gcc,0,0,rational
2476,SourceLookupTest.java,li,0,0,rational
2478,SourceLookupTest.java,ul,0,0,rational
2479,SourceLookupTest.java,"in addition, there can also be a b dwarf2 b in the name.",0,0,rational
2480,SourceLookupTest.java,that means it is,0,0,rational
2481,SourceLookupTest.java,"designed to run with gdb 74, see comment in makefile for olddwarfflags.",0,0,rational
2482,SourceLookupTest.java,p,0,0,rational
2483,SourceLookupTest.java,the result of the variations on compilation arguments means that some of the,0,0,rational
2484,SourceLookupTest.java,tests are parameterised.,0,0,rational
2485,SourceLookupTest.java,p,0,0,rational
2486,SourceLookupTest.java,some of the cdt source lookup features require newer versions of gdb than,0,0,rational
2487,SourceLookupTest.java,"others, therefore the relevant tests use assumegdbversion methods to be",0,0,rational
2488,SourceLookupTest.java,skipped when appropriate.,0,0,rational
2531,SpellEvent.java,spell event fired for words detected by a spell check iterator.,0,0,rational
2533,StandardCElementLabelProvider.java,celementlabelprovider that respects settings from the appearance preference page.,0,0,rational
2534,StandardCElementLabelProvider.java,triggers a viewer update when a preference changes.,0,0,rational
2535,StandardCElementLabelProvider.java,@deprecated use @link appearanceawarelabelprovider instead.,0,0,rational
2024,GroupDebugContextsCommandHandler.java,command handler to trigger grouping of debug contexts operation.,0,0,rational
2025,GroupDebugContextsCommandHandler.java,@since 71,0,0,rational
2539,StringDialogField.java,dialog field containing a label and a text control.,0,0,rational
2028,IBHistoryAction.java,action used for the include browser forward backward buttons,0,0,rational
2030,IBuildObject.java,@noextend this class is not intended to be subclassed by clients.,0,0,rational
2031,IBuildObject.java,@noimplement this interface is not intended to be implemented by clients.,0,0,rational
2544,ToggleDynamicPrintfAdapter.java,toggles a dynamic printf in a c c editor.,0,0,rational
2545,ToggleDynamicPrintfAdapter.java,@since 75,0,0,rational
2036,ICLanguageSettingPathEntry.java,see interface hierarchy for more specifics.,0,0,rational
2548,TracepointActionsPropertyPage.java,property page for tracepoint actions,0,0,rational
2549,TracepointActionsPropertyPage.java,@since 21,0,0,rational
2552,TracingConsole.java,a console that is used to print traces.,0,0,rational
2041,ICLibraryFileEntry.java,see @link icsettingentry#library file .,0,0,rational
2553,TracingConsole.java,the console is attached to a launch.,0,0,rational
2046,ICodeReaderFactory.java,@author jcamelon,0,0,rational
2558,TracingConsole.java,@since 21,0,0,rational
2047,ICodeReaderFactory.java,@deprecated replaced by @link includefilecontentprovider,0,0,rational
2559,TracingConsole.java,this class was moved from package org^eclipse.cdt^dsf.gdb^internal.ui^tracing,0,0,rational
3074,CloseablesTest.java,unit tests for @link closeables .,0,0,rational
3075,CloseablesTest.java,"p checks proper closing behavior, and ensures that ioexceptions on closeable^close are not",1,0,rational
3076,CloseablesTest.java,propagated out from the @link closeables#close method if @code swallowexception is true.,0,0,rational
3077,CloseablesTest.java,@author michael lancaster,1,0,rational
3082,CollectionTestSuiteBuilder.java,concrete instantiation of @link abstractcollectiontestsuitebuilder for testing collections that,0,0,rational
3083,CollectionTestSuiteBuilder.java,do not have a more specific tester like @link listtestsuitebuilder or @link,1,0,rational
3084,CollectionTestSuiteBuilder.java,settestsuitebuilder .,0,0,rational
3085,CollectionTestSuiteBuilder.java,@author chris povirk,1,0,rational
3086,CollectionTestSuiteBuilder.java,@author louis wasserman,0,0,rational
4115,SortedSetNavigationTester.java,a generic junit test which tests operations on a sortedset.,1,0,rational
4116,SortedSetNavigationTester.java,can t be invoked directly please see,0,0,rational
4117,SortedSetNavigationTester.java,@code sortedsettestsuitebuilder .,1,0,rational
4118,SortedSetNavigationTester.java,@author jesse wilson,0,0,rational
4119,SortedSetNavigationTester.java,@author louis wasserman,1,0,rational
3095,ConflictingRequirementsException.java,thrown when requirements on a tester method or class conflict with each other.,0,0,rational
3096,ConflictingRequirementsException.java,@author george van den driessche,1,0,rational
3099,CountingOutputStream.java,an outputstream that counts the number of bytes written.,0,0,rational
3100,CountingOutputStream.java,@author chris nokleberg,1,0,rational
3101,CountingOutputStream.java,@since 10,0,0,rational
4126,SubscriberTest.java,tests for @link subscriber .,1,0,rational
4127,SubscriberTest.java,@author cliff biffle,0,0,rational
4128,SubscriberTest.java,@author colin decker,1,0,rational
3105,DescendingMultiset.java,a skeleton implementation of a descending multiset.,0,0,rational
3106,DescendingMultiset.java,only needs @code forwardmultiset and,1,0,rational
3107,DescendingMultiset.java,@code entryiterator .,0,0,rational
3108,DescendingMultiset.java,@author louis wasserman,1,0,rational
4134,TesterRequirements.java,encapsulates the constraints that a class under test must satisfy in order for a tester method to,0,0,rational
4135,TesterRequirements.java,be run against that class.,1,0,rational
4136,TesterRequirements.java,@author george van den driessche,0,0,rational
3113,EqualsTester.java,tester for equals and hashcode methods of a class.,1,0,rational
3114,EqualsTester.java,p the simplest use case is,0,0,rational
3115,EqualsTester.java,pre,1,0,rational
4141,TestStringListGenerator.java,@author kevin bourrillion,0,0,rational
3117,EqualsTester.java,pre,1,0,rational
4143,WrappingScheduledExecutorService.java,an abstract @code scheduledexecutorservice that allows subclasses to @linkplain,0,0,rational
4144,WrappingScheduledExecutorService.java,#wraptask callable wrap tasks before they are submitted to the underlying executor.,1,0,rational
4145,WrappingScheduledExecutorService.java,p note that task wrapping may occur even if the task is never executed.,0,0,rational
3121,EqualsTester.java,that are equal to each other but unequal to the objects in any other group.,1,0,rational
4146,WrappingScheduledExecutorService.java,@author luke sandberg,0,0,rational
3122,EqualsTester.java,for example,1,0,rational
3123,EqualsTester.java,pre,0,0,rational
3124,EqualsTester.java,new equalstester,1,0,rational
3125,EqualsTester.java,"addequalitygroup new user page , new user page",0,0,rational
3126,EqualsTester.java,addequalitygroup new user sergey,1,0,rational
3127,EqualsTester.java,testequals,0,0,rational
3128,EqualsTester.java,pre,1,0,rational
3147,EqualsTester.java,@author jim mcmaster,0,0,rational
3148,EqualsTester.java,@author jige yu,1,0,rational
3149,EqualsTester.java,@since 100,0,0,rational
3150,EqualsTester.java,class used to test whether equals correctly handles an instance of an incompatible class.,1,0,rational
3151,EqualsTester.java,"since it is a private inner class, the invoker can never pass in an instance to the tester",0,0,rational
3182,FeatureSpecificTestSuiteBuilder.java,"creates, based on your criteria, a junit test suite that exhaustively tests the object generated",1,0,rational
3183,FeatureSpecificTestSuiteBuilder.java,"by a g, selecting appropriate tests by matching them against specified features.",0,0,rational
3184,FeatureSpecificTestSuiteBuilder.java,@param b the concrete type of this builder the self type .,1,0,rational
3185,FeatureSpecificTestSuiteBuilder.java,all the builder methods of this,0,0,rational
3186,FeatureSpecificTestSuiteBuilder.java,"class such as @link #named return this type, so that builder methods of more derived",1,0,rational
3188,FeatureSpecificTestSuiteBuilder.java,@param g the type of the generator to be passed to testers in the generated test suite.,0,0,rational
3189,FeatureSpecificTestSuiteBuilder.java,an,1,0,rational
3191,FeatureSpecificTestSuiteBuilder.java,information required to parameterize the test.,0,0,rational
3192,FeatureSpecificTestSuiteBuilder.java,@author george van den driessche,1,0,rational
3205,ForwardingBlockingDequeTest.java,test for @link forwardingblockingdeque,0,0,rational
3206,ForwardingBlockingDequeTest.java,@author emily soldal,1,0,rational
3209,ForwardingImmutableSet.java,gwt implementation of @link immutableset that forwards to another @code set implementation.,0,0,rational
3210,ForwardingImmutableSet.java,@author hayward chan,1,0,rational
3214,ForwardingQueueTest.java,tests for @code forwardingqueue .,0,0,rational
3215,ForwardingQueueTest.java,@author robert konigsberg,1,0,rational
3216,ForwardingQueueTest.java,@author louis wasserman,0,0,rational
3220,GwtTestSuite.java,runs all gwt tests.,1,0,rational
3226,HashFunctionEnum.java,an enum that contains all of the known hash functions.,0,0,rational
3227,HashFunctionEnum.java,@author kurt alfred kluever,1,0,rational
3230,HostAndPort.java,an immutable representation of a host and port.,0,0,rational
3231,HostAndPort.java,p example usage,1,0,rational
3232,HostAndPort.java,pre,0,0,rational
3233,HostAndPort.java,hostandport hp hostandport^fromstring 2001 db8 1,1,0,rational
3235,HostAndPort.java,requirebracketsforipv6,0,0,rational
3236,HostAndPort.java,hp^gethost returns 2001 db8 1,1,0,rational
3237,HostAndPort.java,hp^getport returns 80,0,0,rational
3238,HostAndPort.java,hp^tostring returns 2001 db8 1 80,1,0,rational
3239,HostAndPort.java,pre,0,0,rational
3240,HostAndPort.java,p here are some examples of recognized formats,1,0,rational
3241,HostAndPort.java,ul,0,0,rational
3242,HostAndPort.java,li example^com,1,0,rational
3244,HostAndPort.java,li 1920.21,0,0,rational
3246,HostAndPort.java,li 2001 db8 1 @link #gethost omits brackets,1,0,rational
3247,HostAndPort.java,li 2001 db8 1 80 @link #gethost omits brackets,0,0,rational
3248,HostAndPort.java,li 2001 db8 1 use @link #requirebracketsforipv6 to prohibit this,1,0,rational
3249,HostAndPort.java,ul,0,0,rational
3250,HostAndPort.java,"p note that this is not an exhaustive list, because these methods are only concerned with",1,0,rational
3251,HostAndPort.java,"brackets, colons, and port numbers.",0,0,rational
3253,HostAndPort.java,caller s responsibility.,1,0,rational
3254,HostAndPort.java,@author paul marks,0,0,rational
3255,HostAndPort.java,@since 100,1,0,rational
3282,ImmutableSetHashFloodingDetectionBenchmark.java,benchmark of implementations of @link immutableset#hashfloodingdetected object .,0,0,rational
3285,ImmutableTable_CustomFieldSerializerBase.java,this class contains static utility methods for writing @link immutabletable gwt field,1,0,rational
3286,ImmutableTable_CustomFieldSerializerBase.java,serializers.,0,0,rational
3287,ImmutableTable_CustomFieldSerializerBase.java,serializers should delegate to @link #serialize and @link #instantiate .,1,0,rational
3288,ImmutableTable_CustomFieldSerializerBase.java,@author chris povirk,0,0,rational
3293,LazyStackTraceBenchmark.java,quick and dirty benchmark of @link throwables#lazystacktrace throwable .,1,0,rational
3300,LongMathBenchmark.java,benchmarks for the non rounding methods of @code longmath .,0,0,rational
3301,LongMathBenchmark.java,@author louis wasserman,1,0,rational
3304,MapPutAllTester.java,a generic junit test which tests @code putall operations on a map.,0,0,rational
3306,MapPutAllTester.java,please see @link com^google.common^collect.testing^maptestsuitebuilder .,1,0,rational
3307,MapPutAllTester.java,@author chris povirk,0,0,rational
3308,MapPutAllTester.java,@author kevin bourrillion,1,0,rational
3313,MapSerializationTester.java,basic serialization test for maps.,0,0,rational
3314,MapSerializationTester.java,@author louis wasserman,1,0,rational
3317,MultimapBuilder.java,a builder for a multimap implementation that allows customization of the backing map and value,0,0,rational
3318,MultimapBuilder.java,collection implementations used in a particular multimap.,1,0,rational
3319,MultimapBuilder.java,p this can be used to easily configure multimap data structure implementations not provided,0,0,rational
3320,MultimapBuilder.java,"explicitly in @code com^google.common^collect , for example",1,0,rational
3321,MultimapBuilder.java,pre @code,0,0,rational
3322,MultimapBuilder.java,"listmultimap string, integer treelistmultimap",1,0,rational
3323,MultimapBuilder.java,multimapbuilder^treekeys ^arraylistvalues ^build,0,0,rational
3324,MultimapBuilder.java,"setmultimap integer, myenum hashenummultimap",1,0,rational
3325,MultimapBuilder.java,multimapbuilder^hashkeys ^enumsetvalues myenum^class ^build,0,0,rational
3326,MultimapBuilder.java,pre,1,0,rational
3327,MultimapBuilder.java,p @code multimapbuilder instances are immutable.,0,0,rational
3328,MultimapBuilder.java,invoking a configuration method has no effect,1,0,rational
3329,MultimapBuilder.java,on the receiving instance you must store and use the new builder instance it returns instead.,0,0,rational
3330,MultimapBuilder.java,"p the generated multimaps are serializable if the key and value types are serializable, unless",1,0,rational
3331,MultimapBuilder.java,stated otherwise in one of the configuration methods.,0,0,rational
3332,MultimapBuilder.java,@author louis wasserman,1,0,rational
3333,MultimapBuilder.java,@param k0 an upper bound on the key type of the generated multimap.,0,0,rational
3334,MultimapBuilder.java,@param v0 an upper bound on the value type of the generated multimap.,1,0,rational
3335,MultimapBuilder.java,@since 160,0,0,rational
3336,MultimapBuilder.java,leaving k and v as upper bounds rather than the actual key and value types allows type,1,0,rational
3337,MultimapBuilder.java,parameters to be left implicit more often.,0,0,rational
3338,MultimapBuilder.java,cachebuilder uses the same technique.,1,0,rational
3339,MultimapBuilder.java,an intermediate stage in a @link multimapbuilder in which the key value collection map,0,0,rational
3340,MultimapBuilder.java,"implementation has been specified, but the value collection implementation has not.",1,0,rational
3341,MultimapBuilder.java,@param k0 the upper bound on the key type of the generated multimap.,0,0,rational
3342,MultimapBuilder.java,@since 160,1,0,rational
3343,MultimapBuilder.java,leaving k and v as upper bounds rather than the actual key and value types allows type,0,0,rational
3344,MultimapBuilder.java,parameters to be left implicit more often.,1,0,rational
3345,MultimapBuilder.java,cachebuilder uses the same technique.,0,0,rational
3346,MultimapBuilder.java,a specialization of @link multimapbuilder that generates @link listmultimap instances.,1,0,rational
3347,MultimapBuilder.java,@since 160,0,0,rational
3348,MultimapBuilder.java,leaving k and v as upper bounds rather than the actual key and value types allows type,1,0,rational
3349,MultimapBuilder.java,parameters to be left implicit more often.,0,0,rational
3350,MultimapBuilder.java,cachebuilder uses the same technique.,1,0,rational
3352,MultimapBuilder.java,@since 160,0,0,rational
3353,MultimapBuilder.java,leaving k and v as upper bounds rather than the actual key and value types allows type,1,0,rational
3354,MultimapBuilder.java,parameters to be left implicit more often.,0,0,rational
3355,MultimapBuilder.java,cachebuilder uses the same technique.,1,0,rational
3357,MultimapBuilder.java,@since 160,0,0,rational
3390,MultimapBuilderTest.java,tests for @link multimapbuilder .,1,0,rational
3391,MultimapBuilderTest.java,@author louis wasserman,0,0,rational
3394,NullsLastOrdering_CustomFieldSerializer.java,this class implements the gwt serialization of @link nullslastordering .,1,0,rational
3395,NullsLastOrdering_CustomFieldSerializer.java,@author chris povirk,0,0,rational
3398,ObjectCountHashMap.java,objectcounthashmap is an implementation of @code abstractobjectcountmap that uses arrays to,1,0,rational
3399,ObjectCountHashMap.java,store key objects and count values.,0,0,rational
3403,ObjectCountHashMap.java,"p in the absence of element deletions, this will iterate over elements in insertion order.",1,0,rational
3410,PeekingIterator.java,an iterator that supports a one element lookahead while iterating.,0,0,rational
3411,PeekingIterator.java,p see the guava user guide article on a href,1,0,rational
3412,PeekingIterator.java,https github^com google guava wiki collectionhelpersexplained#peekingiterator @code,0,0,rational
3413,PeekingIterator.java,peekingiterator a .,1,0,rational
3414,PeekingIterator.java,@author mick killianey,0,0,rational
3415,PeekingIterator.java,@since 20,1,0,rational
3422,Preconditions.java,static convenience methods that help a method or constructor check whether it was invoked,0,0,rational
3423,Preconditions.java,"correctly that is, whether its i preconditions i were met .",1,0,rational
3424,Preconditions.java,"p if the precondition is not met, the @code preconditions method throws an unchecked exception",0,0,rational
3425,Preconditions.java,"of a specified type, which helps the method in which the exception was thrown communicate that",1,0,rational
3426,Preconditions.java,its caller has made a mistake.,0,0,rational
3427,Preconditions.java,this allows constructs such as,1,0,rational
3428,Preconditions.java,pre @code,0,0,rational
3429,Preconditions.java,public static double sqrt double value,1,0,rational
3430,Preconditions.java,if value 0,0,0,rational
3431,Preconditions.java,throw new illegalargumentexception input is negative value,1,0,rational
3432,Preconditions.java,calculate square root,0,0,rational
3433,Preconditions.java,pre,1,0,rational
3434,Preconditions.java,p to be replaced with the more compact,0,0,rational
3435,Preconditions.java,pre @code,1,0,rational
3436,Preconditions.java,public static double sqrt double value,0,0,rational
3437,Preconditions.java,"checkargument value 0, input is negative %s , value",1,0,rational
3438,Preconditions.java,calculate square root,0,0,rational
3439,Preconditions.java,pre,1,0,rational
3440,Preconditions.java,"p so that a hypothetical bad caller of this method, such as",0,0,rational
3441,Preconditions.java,pre @code,1,0,rational
3442,Preconditions.java,void examplebadcaller,0,0,rational
3443,Preconditions.java,double d sqrt 10,1,0,rational
3444,Preconditions.java,pre,0,0,rational
3445,Preconditions.java,p would be flagged as having called @code sqrt with an illegal argument.,1,0,rational
3446,Preconditions.java,h3 performance h3,0,0,rational
3447,Preconditions.java,p avoid passing message arguments that are expensive to compute your code will always compute,1,0,rational
3448,Preconditions.java,"them, even though they usually won t be needed.",0,0,rational
3449,Preconditions.java,"if you have such arguments, use the conventional",1,0,rational
3450,Preconditions.java,if throw idiom instead.,0,0,rational
3451,Preconditions.java,"p depending on your message arguments, memory may be allocated for boxing and varargs array",1,0,rational
3452,Preconditions.java,creation.,0,0,rational
3453,Preconditions.java,"however, the methods of this class have a large number of overloads that prevent such",1,0,rational
3454,Preconditions.java,allocations in many common cases.,0,0,rational
3455,Preconditions.java,"p the message string is not formatted unless the exception will be thrown, so the cost of the",1,0,rational
3456,Preconditions.java,string formatting itself should not be a concern.,0,0,rational
3457,Preconditions.java,"p as with any performance concerns, you should consider profiling your code in a production",1,0,rational
3458,Preconditions.java,environment if possible before spending a lot of effort on tweaking a particular element.,0,0,rational
3459,Preconditions.java,h3 other types of preconditions h3,1,0,rational
3460,Preconditions.java,p not every type of precondition failure is supported by these methods.,0,0,rational
3461,Preconditions.java,continue to throw,1,0,rational
3462,Preconditions.java,standard jdk exceptions such as @link java^util.nosuchelementexception or @link,0,0,rational
3463,Preconditions.java,unsupportedoperationexception in the situations they are intended for.,1,0,rational
3464,Preconditions.java,h3 non preconditions h3,0,0,rational
3465,Preconditions.java,p it is of course possible to use the methods of this class to check for invalid conditions,1,0,rational
3466,Preconditions.java,which are i not the caller s fault i .,0,0,rational
3467,Preconditions.java,doing so is b not recommended b because it is,1,0,rational
3468,Preconditions.java,misleading to future readers of the code and of stack traces.,0,0,rational
3469,Preconditions.java,see a,1,0,rational
3470,Preconditions.java,href https github^com google guava wiki conditionalfailuresexplained conditional failures,0,0,rational
3471,Preconditions.java,explained a in the guava user guide for more advice.,1,0,rational
3472,Preconditions.java,"notably, @link verify offers assertions",0,0,rational
3473,Preconditions.java,similar to those in this class for non precondition checks.,1,0,rational
3474,Preconditions.java,h3 @code java^util.objects^requirenonnull h3,0,0,rational
3475,Preconditions.java,p projects which use @code com^google.common should generally avoid the use of @link,1,0,rational
3476,Preconditions.java,java^util.objects#requirenonnull object .,0,0,rational
3477,Preconditions.java,"instead, use whichever of @link",1,0,rational
3478,Preconditions.java,#checknotnull object or @link verify#verifynotnull object is appropriate to the situation.,0,0,rational
3479,Preconditions.java,the same goes for the message accepting overloads.,1,0,rational
3480,Preconditions.java,h3 only @code %s is supported h3,0,0,rational
3481,Preconditions.java,p @code preconditions uses @link strings#lenientformat to format error message template,1,0,rational
3482,Preconditions.java,strings.,0,0,rational
3483,Preconditions.java,"this only supports the @code %s specifier, not the full range of @link",1,0,rational
3484,Preconditions.java,java^util.formatter specifiers.,0,0,rational
3485,Preconditions.java,"however, note that if the number of arguments does not match the",1,0,rational
3486,Preconditions.java,"number of occurrences of @code %s in the format string, @code preconditions will still",0,0,rational
3487,Preconditions.java,"behave as expected, and will still include all argument values in the error message the message",1,0,rational
3488,Preconditions.java,will simply not be formatted exactly as intended.,0,0,rational
3489,Preconditions.java,h3 more information h3,1,0,rational
3490,Preconditions.java,p see the guava user guide on a,0,0,rational
3491,Preconditions.java,href https github^com google guava wiki preconditionsexplained using @code,1,0,rational
3492,Preconditions.java,preconditions a .,0,0,rational
3493,Preconditions.java,@author kevin bourrillion,1,0,rational
3494,Preconditions.java,@since 20,0,0,rational
3580,RegularImmutableList_CustomFieldSerializer.java,this class implements the gwt serialization of @link regularimmutablelist .,1,0,rational
3581,RegularImmutableList_CustomFieldSerializer.java,@author hayward chan,0,0,rational
3585,ReserializingTestCollectionGenerator.java,reserializes the sets created by another test set generator.,1,0,rational
3587,ReserializingTestCollectionGenerator.java,@author jesse wilson,0,0,rational
3590,Resources.java,provides utility methods for working with resources in the classpath.,1,0,rational
3594,Resources.java,p all method parameters must be non null unless documented otherwise.,0,0,rational
3595,Resources.java,@author chris nokleberg,1,0,rational
3596,Resources.java,@author ben yu,0,0,rational
3597,Resources.java,@author colin decker,1,0,rational
3598,Resources.java,@since 10,0,0,rational
3599,Resources.java,a byte source that reads from a url using @link url#openstream .,1,0,rational
3607,SmoothRateLimiter.java,"how is the ratelimiter designed, and why?",0,0,rational
3608,SmoothRateLimiter.java,"the primary feature of a ratelimiter is its stable rate , the maximum rate that is should",1,0,rational
3609,SmoothRateLimiter.java,allow at normal conditions.,0,0,rational
3610,SmoothRateLimiter.java,"this is enforced by throttling incoming requests as needed, ie",1,0,rational
3611,SmoothRateLimiter.java,"compute, for an incoming request, the appropriate throttle time, and make the calling thread",0,0,rational
3612,SmoothRateLimiter.java,wait as much.,1,0,rational
3613,SmoothRateLimiter.java,the simplest way to maintain a rate of qps is to keep the timestamp of the last granted,0,0,rational
3614,SmoothRateLimiter.java,"request, and ensure that 1 qps seconds have elapsed since then.",1,0,rational
3615,SmoothRateLimiter.java,"for example, for a rate of",0,0,rational
3616,SmoothRateLimiter.java,"qps 5 5 tokens per second , if we ensure that a request isn t granted earlier than 200ms after",1,0,rational
3617,SmoothRateLimiter.java,"the last one, then we achieve the intended rate.",0,0,rational
3618,SmoothRateLimiter.java,if a request comes and the last request was,1,0,rational
3619,SmoothRateLimiter.java,"granted only 100ms ago, then we wait for another 100ms.",0,0,rational
3620,SmoothRateLimiter.java,"at this rate, serving 15 fresh permits",1,0,rational
3621,SmoothRateLimiter.java,ie for an acquire 15 request naturally takes 3 seconds.,0,0,rational
3630,SmoothRateLimiter.java,past underutilization could mean that excess resources are available.,1,0,rational
3631,SmoothRateLimiter.java,"then, the ratelimiter",0,0,rational
3632,SmoothRateLimiter.java,"should speed up for a while, to take advantage of these resources.",1,0,rational
3633,SmoothRateLimiter.java,this is important when the,0,0,rational
3634,SmoothRateLimiter.java,"rate is applied to networking limiting bandwidth , where past underutilization typically",1,0,rational
3635,SmoothRateLimiter.java,"translates to almost empty buffers , which can be filled immediately.",0,0,rational
3636,SmoothRateLimiter.java,"on the other hand, past underutilization could mean that the server responsible for handling",1,0,rational
3637,SmoothRateLimiter.java,"the request has become less ready for future requests , ie its caches become stale, and",0,0,rational
3638,SmoothRateLimiter.java,requests become more likely to trigger expensive operations a more extreme case of this,1,0,rational
3639,SmoothRateLimiter.java,"example is when a server has just booted, and it is mostly busy with getting itself up to",0,0,rational
3640,SmoothRateLimiter.java,speed .,1,0,rational
3641,SmoothRateLimiter.java,"to deal with such scenarios, we add an extra dimension, that of past underutilization ,",0,0,rational
3642,SmoothRateLimiter.java,modeled by storedpermits variable.,1,0,rational
3643,SmoothRateLimiter.java,"this variable is zero when there is no underutilization,",0,0,rational
3644,SmoothRateLimiter.java,"and it can grow up to maxstoredpermits, for sufficiently large underutilization.",1,0,rational
3645,SmoothRateLimiter.java,"so, the",0,0,rational
3646,SmoothRateLimiter.java,"requested permits, by an invocation acquire permits , are served from",1,0,rational
3647,SmoothRateLimiter.java,stored permits if available,0,0,rational
3648,SmoothRateLimiter.java,fresh permits for any remaining permits,0,0,rational
3649,SmoothRateLimiter.java,how this works is best explained with an example,0,0,rational
3650,SmoothRateLimiter.java,"for a ratelimiter that produces 1 token per second, every second that goes by with the",0,0,rational
3651,SmoothRateLimiter.java,"ratelimiter being unused, we increase storedpermits by 1.",0,0,rational
3652,SmoothRateLimiter.java,say we leave the ratelimiter unused,0,0,rational
3653,SmoothRateLimiter.java,"for 10 seconds ie, we expected a request at time x, but we are at time x 10 seconds before",0,0,rational
2630,AbstractCollectionTester.java,base class for collection testers.,0,0,rational
3654,SmoothRateLimiter.java,"a request actually arrives this is also related to the point made in the last paragraph , thus",0,0,rational
2631,AbstractCollectionTester.java,@param e the element type of the collection to be tested.,0,0,rational
3655,SmoothRateLimiter.java,storedpermits becomes 100 assuming maxstoredpermits 100 .,0,0,rational
2632,AbstractCollectionTester.java,@author kevin bourrillion,0,0,rational
3656,SmoothRateLimiter.java,"at that point, a request of",0,0,rational
3657,SmoothRateLimiter.java,acquire 3 arrives.,0,0,rational
3658,SmoothRateLimiter.java,"we serve this request out of storedpermits, and reduce that to 70 how",0,0,rational
3659,SmoothRateLimiter.java,this is translated to throttling time is discussed later .,0,0,rational
2636,AbstractListeningExecutorService.java,abstract @link listeningexecutorservice implementation that creates @link listenablefuture,0,0,rational
3660,SmoothRateLimiter.java,"immediately after, assume that an",0,0,rational
2637,AbstractListeningExecutorService.java,instances for each @link runnable and @link callable submitted to it.,0,0,rational
3661,SmoothRateLimiter.java,acquire 10 request arriving.,0,0,rational
2638,AbstractListeningExecutorService.java,these tasks are run,0,0,rational
3662,SmoothRateLimiter.java,"we serve the request partly from storedpermits, using all the",0,0,rational
2639,AbstractListeningExecutorService.java,with the abstract @link #execute execute runnable method.,0,0,rational
3663,SmoothRateLimiter.java,"remaining 70 permits, and the remaining 30, we serve them by fresh permits produced by the",0,0,rational
2640,AbstractListeningExecutorService.java,"p in addition to @link #execute , subclasses must implement all methods related to shutdown and",0,0,rational
3664,SmoothRateLimiter.java,rate limiter.,0,0,rational
2641,AbstractListeningExecutorService.java,termination.,0,0,rational
3665,SmoothRateLimiter.java,we already know how much time it takes to serve 3 fresh permits if the rate is,0,0,rational
2642,AbstractListeningExecutorService.java,@author chris povirk,0,0,rational
3666,SmoothRateLimiter.java,"1 token per second , then this will take 3 seconds.",0,0,rational
2643,AbstractListeningExecutorService.java,@since 140,0,0,rational
3667,SmoothRateLimiter.java,but what does it mean to serve 7 stored,0,0,rational
3668,SmoothRateLimiter.java,permits?,0,0,rational
3669,SmoothRateLimiter.java,"as explained above, there is no unique answer.",0,0,rational
3670,SmoothRateLimiter.java,if we are primarily interested to deal,0,0,rational
3671,SmoothRateLimiter.java,"with underutilization, then we want stored permits to be given out faster than fresh ones,",0,0,rational
3672,SmoothRateLimiter.java,because underutilization free resources for the taking.,0,0,rational
3673,SmoothRateLimiter.java,if we are primarily interested to,0,0,rational
3674,SmoothRateLimiter.java,"deal with overflow, then stored permits could be given out slower than fresh ones.",0,0,rational
3675,SmoothRateLimiter.java,"thus, we",0,0,rational
3676,SmoothRateLimiter.java,require a different in each case function that translates storedpermits to throttling time.,0,0,rational
3677,SmoothRateLimiter.java,"this role is played by storedpermitstowaittime double storedpermits, double permitstotake .",0,0,rational
2654,AbstractLoadingCache.java,"p to implement a cache, the programmer needs only to extend this class and provide an",0,0,rational
3678,SmoothRateLimiter.java,the,0,0,rational
3679,SmoothRateLimiter.java,underlying model is a continuous function mapping storedpermits from 00 to maxstoredpermits,0,0,rational
2656,AbstractLoadingCache.java,@link,0,0,rational
3681,SmoothRateLimiter.java,storedpermits,0,0,rational
3682,SmoothRateLimiter.java,essentially measure unused time we spend unused time buying storing permits.,0,0,rational
3683,SmoothRateLimiter.java,rate is,0,0,rational
3684,SmoothRateLimiter.java,"permits time , thus 1 rate time permits .",0,0,rational
3685,SmoothRateLimiter.java,"thus, 1 rate time permits times",0,0,rational
2662,AbstractLoadingCache.java,all other methods throw,0,0,rational
2664,AbstractLoadingCache.java,@author charles fry,0,0,rational
3688,SmoothRateLimiter.java,of requested permits.,0,0,rational
2665,AbstractLoadingCache.java,@since 110,0,0,rational
3697,SmoothRateLimiter.java,this guarantees that we handle,0,0,rational
3701,SmoothRateLimiter.java,integrals .,0,0,rational
3704,SmoothRateLimiter.java,cost as fresh ones 1 qps is the cost for each .,0,0,rational
2681,AbstractMultimap.java,"a skeleton @code multimap implementation, not necessarily in terms of a @code map .",0,0,rational
2682,AbstractMultimap.java,@author louis wasserman,0,0,rational
2685,AbstractMultimapTester.java,superclass for all @code multimap testers.,0,0,rational
3709,SmoothRateLimiter.java,underutilization.,0,0,rational
2686,AbstractMultimapTester.java,@author louis wasserman,0,0,rational
2689,AbstractSortedKeySortedSetMultimap.java,basic implementation of a @link sortedsetmultimap with a sorted key set.,0,0,rational
3713,SmoothRateLimiter.java,"last, but not least consider a ratelimiter with rate of 1 permit per second, currently",0,0,rational
3714,SmoothRateLimiter.java,"completely unused, and an expensive acquire 100 request comes.",0,0,rational
3715,SmoothRateLimiter.java,it would be nonsensical to just,0,0,rational
2692,AbstractSortedKeySortedSetMultimap.java,@author louis wasserman,0,0,rational
3717,SmoothRateLimiter.java,why wait without doing anything?,0,0,rational
3718,SmoothRateLimiter.java,a much,0,0,rational
3720,SmoothRateLimiter.java,"instead , and postpone subsequent requests as needed.",0,0,rational
2697,ArbitraryInstances.java,"supplies an arbitrary default instance for a wide range of types, often useful in testing",0,0,rational
2698,ArbitraryInstances.java,utilities.,0,0,rational
3722,SmoothRateLimiter.java,"task immediately, and postpone by 100 seconds future requests, thus we allow for work to get",0,0,rational
2699,ArbitraryInstances.java,"p covers arrays, enums and common types defined in @code java^lang , @code java^lang.reflect ,",0,0,rational
2700,ArbitraryInstances.java,"@code java^io , @code java^nio , @code java^math , @code java^util , @code",0,0,rational
3724,SmoothRateLimiter.java,this has important consequences it means that the ratelimiter doesn t remember the time of the,0,0,rational
2701,ArbitraryInstances.java,"java^util.concurrent , @code java^util.regex , @code com^google.common^base , @code",0,0,rational
3725,SmoothRateLimiter.java,"last request, but it remembers the expected time of the next request.",0,0,rational
2702,ArbitraryInstances.java,com^google.common^collect and @code com^google.common^primitives .,0,0,rational
3726,SmoothRateLimiter.java,this also enables,0,0,rational
2703,ArbitraryInstances.java,"in addition, if the type",0,0,rational
3727,SmoothRateLimiter.java,us to tell immediately see tryacquire timeout whether a particular timeout is enough to get,0,0,rational
2704,ArbitraryInstances.java,"exposes at least one public static final constant of the same type, one of the constants will be",0,0,rational
3728,SmoothRateLimiter.java,"us to the point of the next scheduling time, since we always maintain that.",0,0,rational
2705,ArbitraryInstances.java,used or if the class exposes a public parameter less constructor then it will be new d and,0,0,rational
3729,SmoothRateLimiter.java,and what we mean by,0,0,rational
2706,ArbitraryInstances.java,returned.,0,0,rational
3730,SmoothRateLimiter.java,an unused ratelimiter is also defined by that notion when we observe that the,0,0,rational
2707,ArbitraryInstances.java,p all default instances returned by @link #get are generics safe.,0,0,rational
3731,SmoothRateLimiter.java,"expected arrival time of the next request is actually in the past, then the difference now",0,0,rational
2708,ArbitraryInstances.java,clients won t get type,0,0,rational
3732,SmoothRateLimiter.java,"past is the amount of time that the ratelimiter was formally unused, and it is that amount of",0,0,rational
2709,ArbitraryInstances.java,"errors for using @code get comparator^class as a @code comparator foo , for example.",0,0,rational
3733,SmoothRateLimiter.java,time which we translate to storedpermits.,0,0,rational
2710,ArbitraryInstances.java,immutable empty instances are returned for collection types @code for string @code 0 for,0,0,rational
3734,SmoothRateLimiter.java,we increase storedpermits with the amount of permits,0,0,rational
2711,ArbitraryInstances.java,number types reasonable default instance for other stateless types.,0,0,rational
3735,SmoothRateLimiter.java,that would have been produced in that idle time .,0,0,rational
2712,ArbitraryInstances.java,"for mutable types, a fresh",0,0,rational
3736,SmoothRateLimiter.java,"so, if rate 1 permit per second, and",0,0,rational
2713,ArbitraryInstances.java,instance is created each time @code get is called.,0,0,rational
3737,SmoothRateLimiter.java,"arrivals come exactly one second after the previous, then storedpermits is never increased",0,0,rational
2714,ArbitraryInstances.java,@author kevin bourrillion,0,0,rational
3738,SmoothRateLimiter.java,we would only increase it for arrivals later than the expected one second.,0,0,rational
2715,ArbitraryInstances.java,@author ben yu,0,0,rational
3739,SmoothRateLimiter.java,the time when the next request no matter its size will be granted.,0,0,rational
2716,ArbitraryInstances.java,@since 120,0,0,rational
3740,SmoothRateLimiter.java,"after granting a request,",0,0,rational
3741,SmoothRateLimiter.java,this is pushed further in the future.,0,0,rational
3742,SmoothRateLimiter.java,large requests push this further than small requests.,0,0,rational
3743,SmoothRateLimiter.java,this implements the following function where coldinterval coldfactor stableinterval.,0,0,rational
3744,SmoothRateLimiter.java,pre,0,0,rational
3745,SmoothRateLimiter.java,^ throttling,0,0,rational
3746,SmoothRateLimiter.java,cold,0,0,rational
3747,SmoothRateLimiter.java,interval .,0,0,rational
3748,SmoothRateLimiter.java,warmup period is the area of the trapezoid between,0,0,rational
3749,SmoothRateLimiter.java,thresholdpermits and maxpermits,0,0,rational
3750,SmoothRateLimiter.java,stable warm .,0,0,rational
3751,SmoothRateLimiter.java,interval .,0,0,rational
3752,SmoothRateLimiter.java,up .,0,0,rational
3753,SmoothRateLimiter.java,period.,0,0,rational
3754,SmoothRateLimiter.java,0 storedpermits,0,0,rational
3755,SmoothRateLimiter.java,0 thresholdpermits maxpermits,0,0,rational
3756,SmoothRateLimiter.java,pre,0,0,rational
3757,SmoothRateLimiter.java,"before going into the details of this particular function, let s keep in mind the basics",0,0,rational
3758,SmoothRateLimiter.java,ol,0,0,rational
3759,SmoothRateLimiter.java,li the state of the ratelimiter storedpermits is a vertical line in this figure.,0,0,rational
3760,SmoothRateLimiter.java,"li when the ratelimiter is not used, this goes right up to maxpermits",0,0,rational
3761,SmoothRateLimiter.java,"li when the ratelimiter is used, this goes left down to zero , since if we have",0,0,rational
3762,SmoothRateLimiter.java,"storedpermits, we serve from those first",0,0,rational
3763,SmoothRateLimiter.java,"li when unused , we go right at a constant rate!",0,0,rational
3764,SmoothRateLimiter.java,the rate at which we move to the right is,0,0,rational
3766,SmoothRateLimiter.java,this ensures that the time it takes to go from 0 to,0,0,rational
3768,SmoothRateLimiter.java,"li when used , the time it takes, as explained in the introductory class note, is equal to",0,0,rational
3769,SmoothRateLimiter.java,"the integral of our function, between x permits and x k permits, assuming we want to",0,0,rational
2746,ArrayListMultimapGwtSerializationDependencies.java,a dummy superclass to support gwt serialization of the element types of an @link,0,0,rational
3770,SmoothRateLimiter.java,spend k saved permits.,0,0,rational
2747,ArrayListMultimapGwtSerializationDependencies.java,arraylistmultimap .,0,0,rational
3771,SmoothRateLimiter.java,ol,0,0,rational
2748,ArrayListMultimapGwtSerializationDependencies.java,the gwt supersource for this class contains a field for each type.,0,0,rational
3772,SmoothRateLimiter.java,"p in summary, the time it takes to move to the left spend k permits , is equal to the area of",0,0,rational
2749,ArrayListMultimapGwtSerializationDependencies.java,"p for details about this hack, see @link gwtserializationdependencies , which takes the same",0,0,rational
3773,SmoothRateLimiter.java,the function of width k.,0,0,rational
2750,ArrayListMultimapGwtSerializationDependencies.java,approach but with a subclass rather than a superclass.,0,0,rational
3774,SmoothRateLimiter.java,"p assuming we have saturated demand, the time to go from maxpermits to thresholdpermits is",0,0,rational
3775,SmoothRateLimiter.java,equal to warmupperiod.,0,0,rational
3776,SmoothRateLimiter.java,and the time to go from thresholdpermits to 0 is warmupperiod 2.,0,0,rational
3777,SmoothRateLimiter.java,the,0,0,rational
3778,SmoothRateLimiter.java,reason that this is warmupperiod 2 is to maintain the behavior of the original implementation,0,0,rational
3779,SmoothRateLimiter.java,where coldfactor was hard coded as 3.,0,0,rational
3780,SmoothRateLimiter.java,p it remains to calculate thresholdspermits and maxpermits.,0,0,rational
2757,AtomicDoubleArrayTest.java,source,0,0,rational
2758,AtomicDoubleArrayTest.java,http gee^cs.oswego^edu cgi bin viewcvs^cgi jsr166 src test tck jsr166e atomicdoublearraytest^java?revision 113,0,0,rational
3782,SmoothRateLimiter.java,li the time to go from thresholdpermits to 0 is equal to the integral of the function,0,0,rational
2759,AtomicDoubleArrayTest.java,modified to adapt to guava coding conventions,0,0,rational
3783,SmoothRateLimiter.java,between 0 and thresholdpermits.,0,0,rational
2760,AtomicDoubleArrayTest.java,unit test for @link atomicdoublearray .,0,0,rational
3784,SmoothRateLimiter.java,this is thresholdpermits stableintervals.,0,0,rational
3787,SmoothRateLimiter.java,therefore,0,0,rational
2765,BaseEncodingBenchmark.java,benchmark for @code baseencoding performance.,0,0,rational
3789,SmoothRateLimiter.java,thresholdpermits 05 warmupperiod stableinterval,0,0,rational
2767,BloomFilter.java,a bloom filter for instances of @code t .,0,0,rational
3791,SmoothRateLimiter.java,li the time to go from maxpermits to thresholdpermits is equal to the integral of the,0,0,rational
2768,BloomFilter.java,a bloom filter offers an approximate containment test,0,0,rational
3792,SmoothRateLimiter.java,function between thresholdpermits and maxpermits.,0,0,rational
2769,BloomFilter.java,"with one sided error if it claims that an element is contained in it, this might be in error,",0,0,rational
3793,SmoothRateLimiter.java,this is the area of the pictured,0,0,rational
2770,BloomFilter.java,"but if it claims that an element is i not i contained in it, then this is definitely true.",0,0,rational
3794,SmoothRateLimiter.java,"trapezoid, and it is equal to 05 stableinterval coldinterval maxpermits",0,0,rational
2771,BloomFilter.java,"p if you are unfamiliar with bloom filters, this nice a",0,0,rational
3795,SmoothRateLimiter.java,thresholdpermits .,0,0,rational
2772,BloomFilter.java,href http llimllib^github.com bloomfilter tutorial tutorial a may help you understand how,0,0,rational
2773,BloomFilter.java,they work.,0,0,rational
2774,BloomFilter.java,p the false positive probability @code fpp of a bloom filter is defined as the probability,0,0,rational
3798,SmoothRateLimiter.java,maxpermits thresholdpermits 2 warmupperiod stableinterval coldinterval,0,0,rational
2775,BloomFilter.java,that @linkplain #mightcontain object will erroneously return @code true for an object that,0,0,rational
2776,BloomFilter.java,has not actually been put in the @code bloomfilter .,0,0,rational
2777,BloomFilter.java,p bloom filters are serializable.,0,0,rational
3801,SmoothRateLimiter.java,"how is the ratelimiter designed, and why?",0,0,rational
2778,BloomFilter.java,they also support a more compact serial representation via the,0,0,rational
3802,SmoothRateLimiter.java,"the primary feature of a ratelimiter is its stable rate , the maximum rate that is should",0,0,rational
2779,BloomFilter.java,@link #writeto and @link #readfrom methods.,0,0,rational
3803,SmoothRateLimiter.java,allow at normal conditions.,0,0,rational
2780,BloomFilter.java,both serialized forms will continue to be,0,0,rational
3804,SmoothRateLimiter.java,"this is enforced by throttling incoming requests as needed, ie",0,0,rational
2781,BloomFilter.java,supported by future versions of this library.,0,0,rational
3805,SmoothRateLimiter.java,"compute, for an incoming request, the appropriate throttle time, and make the calling thread",0,0,rational
2782,BloomFilter.java,"however, serial forms generated by newer versions",0,0,rational
3806,SmoothRateLimiter.java,wait as much.,0,0,rational
2783,BloomFilter.java,"of the code may not be readable by older versions of the code eg, a serialized bloom filter",0,0,rational
3807,SmoothRateLimiter.java,the simplest way to maintain a rate of qps is to keep the timestamp of the last granted,0,0,rational
2784,BloomFilter.java,generated today may i not i be readable by a binary that was compiled 6 months ago .,0,0,rational
3808,SmoothRateLimiter.java,"request, and ensure that 1 qps seconds have elapsed since then.",0,0,rational
2785,BloomFilter.java,"p as of guava 230, this class is thread safe and lock free.",0,0,rational
3809,SmoothRateLimiter.java,"for example, for a rate of",0,0,rational
2786,BloomFilter.java,it internally uses atomics and,0,0,rational
3810,SmoothRateLimiter.java,"qps 5 5 tokens per second , if we ensure that a request isn t granted earlier than 200ms after",0,0,rational
2787,BloomFilter.java,compare and swap to ensure correctness when multiple threads are used to access it.,0,0,rational
3811,SmoothRateLimiter.java,"the last one, then we achieve the intended rate.",0,0,rational
2788,BloomFilter.java,@param t the type of instances that the @code bloomfilter accepts,0,0,rational
3812,SmoothRateLimiter.java,if a request comes and the last request was,0,0,rational
2789,BloomFilter.java,@author dimitris andreou,0,0,rational
3813,SmoothRateLimiter.java,"granted only 100ms ago, then we wait for another 100ms.",0,0,rational
2790,BloomFilter.java,@author kevin bourrillion,0,0,rational
3814,SmoothRateLimiter.java,"at this rate, serving 15 fresh permits",0,0,rational
2791,BloomFilter.java,@since 110 thread safe since 230,0,0,rational
3815,SmoothRateLimiter.java,ie for an acquire 15 request naturally takes 3 seconds.,0,0,rational
2792,BloomFilter.java,"cheat sheet m total bits n expected insertions b m n, bits per insertion p expected false positive probability 1 optimal k b ln2 2 p 1 e ^ kn m ^k 3 for optimal k p 2 ^ k 06185^b 4 for optimal k m nlnp ln2 ^ 2",0,0,rational
2793,BloomFilter.java,"a strategy to translate t instances, to @code numhashfunctions bit indexes.",0,0,rational
2794,BloomFilter.java,p implementations should be collections of pure functions ie stateless .,0,0,rational
3824,SmoothRateLimiter.java,past underutilization could mean that excess resources are available.,0,0,rational
3825,SmoothRateLimiter.java,"then, the ratelimiter",0,0,rational
3826,SmoothRateLimiter.java,"should speed up for a while, to take advantage of these resources.",0,0,rational
3827,SmoothRateLimiter.java,this is important when the,0,0,rational
3828,SmoothRateLimiter.java,"rate is applied to networking limiting bandwidth , where past underutilization typically",0,0,rational
3829,SmoothRateLimiter.java,"translates to almost empty buffers , which can be filled immediately.",0,0,rational
3830,SmoothRateLimiter.java,"on the other hand, past underutilization could mean that the server responsible for handling",0,0,rational
3831,SmoothRateLimiter.java,"the request has become less ready for future requests , ie its caches become stale, and",0,0,rational
3832,SmoothRateLimiter.java,requests become more likely to trigger expensive operations a more extreme case of this,0,0,rational
3833,SmoothRateLimiter.java,"example is when a server has just booted, and it is mostly busy with getting itself up to",0,0,rational
3834,SmoothRateLimiter.java,speed .,0,0,rational
3835,SmoothRateLimiter.java,"to deal with such scenarios, we add an extra dimension, that of past underutilization ,",0,0,rational
3836,SmoothRateLimiter.java,modeled by storedpermits variable.,0,0,rational
3837,SmoothRateLimiter.java,"this variable is zero when there is no underutilization,",0,0,rational
3838,SmoothRateLimiter.java,"and it can grow up to maxstoredpermits, for sufficiently large underutilization.",0,0,rational
3839,SmoothRateLimiter.java,"so, the",0,0,rational
3840,SmoothRateLimiter.java,"requested permits, by an invocation acquire permits , are served from",0,0,rational
3841,SmoothRateLimiter.java,stored permits if available,0,0,rational
3842,SmoothRateLimiter.java,fresh permits for any remaining permits,0,0,rational
3843,SmoothRateLimiter.java,how this works is best explained with an example,0,0,rational
3844,SmoothRateLimiter.java,"for a ratelimiter that produces 1 token per second, every second that goes by with the",0,0,rational
3845,SmoothRateLimiter.java,"ratelimiter being unused, we increase storedpermits by 1.",0,0,rational
3846,SmoothRateLimiter.java,say we leave the ratelimiter unused,0,0,rational
3847,SmoothRateLimiter.java,"for 10 seconds ie, we expected a request at time x, but we are at time x 10 seconds before",0,0,rational
3848,SmoothRateLimiter.java,"a request actually arrives this is also related to the point made in the last paragraph , thus",0,0,rational
3849,SmoothRateLimiter.java,storedpermits becomes 100 assuming maxstoredpermits 100 .,0,0,rational
3850,SmoothRateLimiter.java,"at that point, a request of",0,0,rational
3851,SmoothRateLimiter.java,acquire 3 arrives.,0,0,rational
3852,SmoothRateLimiter.java,"we serve this request out of storedpermits, and reduce that to 70 how",0,0,rational
3853,SmoothRateLimiter.java,this is translated to throttling time is discussed later .,0,0,rational
3854,SmoothRateLimiter.java,"immediately after, assume that an",0,0,rational
3855,SmoothRateLimiter.java,acquire 10 request arriving.,0,0,rational
2832,CacheBuilder.java,a builder of @link loadingcache and @link cache instances having any combination of the,0,0,rational
3856,SmoothRateLimiter.java,"we serve the request partly from storedpermits, using all the",0,0,rational
2833,CacheBuilder.java,following features,0,0,rational
3857,SmoothRateLimiter.java,"remaining 70 permits, and the remaining 30, we serve them by fresh permits produced by the",0,0,rational
2834,CacheBuilder.java,ul,0,0,rational
3858,SmoothRateLimiter.java,rate limiter.,0,0,rational
2835,CacheBuilder.java,li automatic loading of entries into the cache,0,0,rational
3859,SmoothRateLimiter.java,we already know how much time it takes to serve 3 fresh permits if the rate is,0,0,rational
2836,CacheBuilder.java,li least recently used eviction when a maximum size is exceeded,0,0,rational
3860,SmoothRateLimiter.java,"1 token per second , then this will take 3 seconds.",0,0,rational
2837,CacheBuilder.java,"li time based expiration of entries, measured since last access or last write",0,0,rational
3861,SmoothRateLimiter.java,but what does it mean to serve 7 stored,0,0,rational
2838,CacheBuilder.java,li keys automatically wrapped in @linkplain weakreference weak references,0,0,rational
3862,SmoothRateLimiter.java,permits?,0,0,rational
2839,CacheBuilder.java,li values automatically wrapped in @linkplain weakreference weak or @linkplain,0,0,rational
3863,SmoothRateLimiter.java,"as explained above, there is no unique answer.",0,0,rational
2840,CacheBuilder.java,softreference soft references,0,0,rational
3864,SmoothRateLimiter.java,if we are primarily interested to deal,0,0,rational
2841,CacheBuilder.java,li notification of evicted or otherwise removed entries,0,0,rational
3865,SmoothRateLimiter.java,"with underutilization, then we want stored permits to be given out faster than fresh ones,",0,0,rational
3866,SmoothRateLimiter.java,because underutilization free resources for the taking.,0,0,rational
2843,CacheBuilder.java,ul,0,0,rational
3867,SmoothRateLimiter.java,if we are primarily interested to,0,0,rational
2844,CacheBuilder.java,p these features are all optional caches can be created using all or none of them.,0,0,rational
3868,SmoothRateLimiter.java,"deal with overflow, then stored permits could be given out slower than fresh ones.",0,0,rational
2845,CacheBuilder.java,by default,0,0,rational
3869,SmoothRateLimiter.java,"thus, we",0,0,rational
2846,CacheBuilder.java,cache instances created by @code cachebuilder will not perform any type of eviction.,0,0,rational
3870,SmoothRateLimiter.java,require a different in each case function that translates storedpermits to throttling time.,0,0,rational
2847,CacheBuilder.java,p usage example,0,0,rational
3871,SmoothRateLimiter.java,"this role is played by storedpermitstowaittime double storedpermits, double permitstotake .",0,0,rational
2848,CacheBuilder.java,pre @code,0,0,rational
3872,SmoothRateLimiter.java,the,0,0,rational
2849,CacheBuilder.java,"loadingcache key, graph graphs cachebuilder^newbuilder",0,0,rational
3873,SmoothRateLimiter.java,underlying model is a continuous function mapping storedpermits from 00 to maxstoredpermits,0,0,rational
2850,CacheBuilder.java,maximumsize 10000,0,0,rational
2851,CacheBuilder.java,expireafterwrite duration^ofminutes 10,0,0,rational
3875,SmoothRateLimiter.java,storedpermits,0,0,rational
2852,CacheBuilder.java,removallistener my listener,0,0,rational
3876,SmoothRateLimiter.java,essentially measure unused time we spend unused time buying storing permits.,0,0,rational
2853,CacheBuilder.java,build,0,0,rational
3877,SmoothRateLimiter.java,rate is,0,0,rational
2854,CacheBuilder.java,"new cacheloader key, graph",0,0,rational
3878,SmoothRateLimiter.java,"permits time , thus 1 rate time permits .",0,0,rational
2855,CacheBuilder.java,public graph load key key throws anyexception,0,0,rational
3879,SmoothRateLimiter.java,"thus, 1 rate time permits times",0,0,rational
2856,CacheBuilder.java,return createexpensivegraph key,0,0,rational
2857,CacheBuilder.java,pre,0,0,rational
2858,CacheBuilder.java,"p or equivalently,",0,0,rational
3882,SmoothRateLimiter.java,of requested permits.,0,0,rational
2859,CacheBuilder.java,pre @code,0,0,rational
2860,CacheBuilder.java,in real life this would come from a command line flag or config file,0,0,rational
2863,CacheBuilder.java,removallistener my listener,0,0,rational
2864,CacheBuilder.java,build,0,0,rational
2865,CacheBuilder.java,"new cacheloader key, graph",0,0,rational
2866,CacheBuilder.java,public graph load key key throws anyexception,0,0,rational
2867,CacheBuilder.java,return createexpensivegraph key,0,0,rational
3891,SmoothRateLimiter.java,this guarantees that we handle,0,0,rational
2868,CacheBuilder.java,pre,0,0,rational
2869,CacheBuilder.java,p the returned cache is implemented as a hash table with similar performance characteristics to,0,0,rational
2870,CacheBuilder.java,@link concurrenthashmap .,0,0,rational
2871,CacheBuilder.java,it implements all optional operations of the @link loadingcache and,0,0,rational
3895,SmoothRateLimiter.java,integrals .,0,0,rational
2872,CacheBuilder.java,@link cache interfaces.,0,0,rational
2873,CacheBuilder.java,the @code asmap view and its collection views have i weakly,0,0,rational
2874,CacheBuilder.java,consistent iterators i .,0,0,rational
3898,SmoothRateLimiter.java,cost as fresh ones 1 qps is the cost for each .,0,0,rational
2875,CacheBuilder.java,"this means that they are safe for concurrent use, but if other threads",0,0,rational
2876,CacheBuilder.java,"modify the cache after the iterator is created, it is undefined which of these changes, if any,",0,0,rational
2877,CacheBuilder.java,are reflected in that iterator.,0,0,rational
2878,CacheBuilder.java,these iterators never throw @link,0,0,rational
2879,CacheBuilder.java,concurrentmodificationexception .,0,0,rational
3903,SmoothRateLimiter.java,underutilization.,0,0,rational
2880,CacheBuilder.java,"p b note b by default, the returned cache uses equality comparisons the @link",0,0,rational
2881,CacheBuilder.java,object#equals equals method to determine equality for keys or values.,0,0,rational
2882,CacheBuilder.java,"however, if @link",0,0,rational
2883,CacheBuilder.java,"#weakkeys was specified, the cache uses identity @code comparisons instead for keys.",0,0,rational
3907,SmoothRateLimiter.java,"last, but not least consider a ratelimiter with rate of 1 permit per second, currently",0,0,rational
2884,CacheBuilder.java,"likewise, if @link #weakvalues or @link #softvalues was specified, the cache uses identity",0,0,rational
3908,SmoothRateLimiter.java,"completely unused, and an expensive acquire 100 request comes.",0,0,rational
2885,CacheBuilder.java,comparisons for values.,0,0,rational
3909,SmoothRateLimiter.java,it would be nonsensical to just,0,0,rational
2886,CacheBuilder.java,p entries are automatically evicted from the cache when any of @linkplain #maximumsize long,0,0,rational
2887,CacheBuilder.java,"maximumsize , @linkplain #maximumweight long maximumweight , @linkplain #expireafterwrite",0,0,rational
3911,SmoothRateLimiter.java,why wait without doing anything?,0,0,rational
2888,CacheBuilder.java,"expireafterwrite , @linkplain #expireafteraccess expireafteraccess , @linkplain #weakkeys",0,0,rational
3912,SmoothRateLimiter.java,a much,0,0,rational
2889,CacheBuilder.java,"weakkeys , @linkplain #weakvalues weakvalues , or @linkplain #softvalues softvalues are",0,0,rational
2890,CacheBuilder.java,requested.,0,0,rational
3914,SmoothRateLimiter.java,"instead , and postpone subsequent requests as needed.",0,0,rational
2891,CacheBuilder.java,p if @linkplain #maximumsize long maximumsize or @linkplain #maximumweight long,0,0,rational
2892,CacheBuilder.java,maximumweight is requested entries may be evicted on each cache modification.,0,0,rational
3916,SmoothRateLimiter.java,"task immediately, and postpone by 100 seconds future requests, thus we allow for work to get",0,0,rational
2893,CacheBuilder.java,p if @linkplain #expireafterwrite expireafterwrite or @linkplain #expireafteraccess,0,0,rational
2894,CacheBuilder.java,"expireafteraccess is requested entries may be evicted on each cache modification, on occasional",0,0,rational
3918,SmoothRateLimiter.java,this has important consequences it means that the ratelimiter doesn t remember the time of the,0,0,rational
2895,CacheBuilder.java,"cache accesses, or on calls to @link cache#cleanup .",0,0,rational
3919,SmoothRateLimiter.java,"last request, but it remembers the expected time of the next request.",0,0,rational
2896,CacheBuilder.java,expired entries may be counted by @link,0,0,rational
3920,SmoothRateLimiter.java,this also enables,0,0,rational
2897,CacheBuilder.java,"cache#size , but will never be visible to read or write operations.",0,0,rational
3921,SmoothRateLimiter.java,us to tell immediately see tryacquire timeout whether a particular timeout is enough to get,0,0,rational
2898,CacheBuilder.java,"p if @linkplain #weakkeys weakkeys , @linkplain #weakvalues weakvalues , or @linkplain",0,0,rational
3922,SmoothRateLimiter.java,"us to the point of the next scheduling time, since we always maintain that.",0,0,rational
3923,SmoothRateLimiter.java,and what we mean by,0,0,rational
2900,CacheBuilder.java,be reclaimed by the garbage collector.,0,0,rational
3924,SmoothRateLimiter.java,an unused ratelimiter is also defined by that notion when we observe that the,0,0,rational
2901,CacheBuilder.java,entries with reclaimed keys or values may be removed from,0,0,rational
3925,SmoothRateLimiter.java,"expected arrival time of the next request is actually in the past, then the difference now",0,0,rational
2902,CacheBuilder.java,"the cache on each cache modification, on occasional cache accesses, or on calls to @link",0,0,rational
3926,SmoothRateLimiter.java,"past is the amount of time that the ratelimiter was formally unused, and it is that amount of",0,0,rational
2903,CacheBuilder.java,"cache#cleanup such entries may be counted in @link cache#size , but will never be visible to",0,0,rational
3927,SmoothRateLimiter.java,time which we translate to storedpermits.,0,0,rational
2904,CacheBuilder.java,read or write operations.,0,0,rational
3928,SmoothRateLimiter.java,we increase storedpermits with the amount of permits,0,0,rational
2905,CacheBuilder.java,p certain cache configurations will result in the accrual of periodic maintenance tasks which,0,0,rational
3929,SmoothRateLimiter.java,that would have been produced in that idle time .,0,0,rational
2906,CacheBuilder.java,"will be performed during write operations, or during occasional read operations in the absence of",0,0,rational
3930,SmoothRateLimiter.java,"so, if rate 1 permit per second, and",0,0,rational
2907,CacheBuilder.java,writes.,0,0,rational
3931,SmoothRateLimiter.java,"arrivals come exactly one second after the previous, then storedpermits is never increased",0,0,rational
2908,CacheBuilder.java,"the @link cache#cleanup method of the returned cache will also perform maintenance, but",0,0,rational
3932,SmoothRateLimiter.java,we would only increase it for arrivals later than the expected one second.,0,0,rational
2909,CacheBuilder.java,calling it should not be necessary with a high throughput cache.,0,0,rational
3933,SmoothRateLimiter.java,the time when the next request no matter its size will be granted.,0,0,rational
2910,CacheBuilder.java,only caches built with,0,0,rational
3934,SmoothRateLimiter.java,"after granting a request,",0,0,rational
2911,CacheBuilder.java,"@linkplain #removallistener removallistener , @linkplain #expireafterwrite expireafterwrite ,",0,0,rational
3935,SmoothRateLimiter.java,this is pushed further in the future.,0,0,rational
2912,CacheBuilder.java,"@linkplain #expireafteraccess expireafteraccess , @linkplain #weakkeys weakkeys , @linkplain",0,0,rational
3936,SmoothRateLimiter.java,large requests push this further than small requests.,0,0,rational
2913,CacheBuilder.java,"#weakvalues weakvalues , or @linkplain #softvalues softvalues perform periodic maintenance.",0,0,rational
2915,CacheBuilder.java,retain all the configuration properties of the original cache.,0,0,rational
2916,CacheBuilder.java,note that the serialized form does,0,0,rational
2917,CacheBuilder.java,"i not i include cache contents, but only configuration.",0,0,rational
2918,CacheBuilder.java,p see the guava user guide article on a,0,0,rational
2919,CacheBuilder.java,href https github^com google guava wiki cachesexplained caching a for a higher level,0,0,rational
2920,CacheBuilder.java,explanation.,0,0,rational
2922,CacheBuilder.java,this is,0,0,rational
2923,CacheBuilder.java,normally @code object unless it is constrained by using a method like @code,0,0,rational
2924,CacheBuilder.java,#removallistener,0,0,rational
2926,CacheBuilder.java,this is,0,0,rational
2927,CacheBuilder.java,normally @code object unless it is constrained by using a method like @code,0,0,rational
2928,CacheBuilder.java,#removallistener,0,0,rational
2929,CacheBuilder.java,@author charles fry,0,0,rational
2930,CacheBuilder.java,@author kevin bourrillion,0,0,rational
2931,CacheBuilder.java,@since 100,0,0,rational
3040,CacheLoaderTest.java,unit tests for @link cacheloader .,0,0,rational
3041,CacheLoaderTest.java,@author charles fry,0,0,rational
3044,CacheManualTest.java,@author charles fry,0,0,rational
3046,ClassToInstanceMap.java,"a map, each entry of which maps a java a href http tinyurl^com 2cmwkz raw type a to an",0,0,rational
3047,ClassToInstanceMap.java,instance of that type.,0,0,rational
3048,ClassToInstanceMap.java,"in addition to implementing @code map , the additional type safe",0,0,rational
3049,ClassToInstanceMap.java,operations @link #putinstance and @link #getinstance are available.,0,0,rational
3050,ClassToInstanceMap.java,"p like any other @code map class, object , this map may contain entries for primitive types,",0,0,rational
3051,ClassToInstanceMap.java,and a primitive type and its corresponding wrapper type may map to different values.,0,0,rational
3052,ClassToInstanceMap.java,p see the guava user guide article on a href,0,0,rational
3053,ClassToInstanceMap.java,https github^com google guava wiki newcollectiontypesexplained#classtoinstancemap @code,0,0,rational
3054,ClassToInstanceMap.java,classtoinstancemap a .,0,0,rational
3055,ClassToInstanceMap.java,"p to map a generic type to an instance of that type, use @link",0,0,rational
3056,ClassToInstanceMap.java,com^google.common^reflect.typetoinstancemap instead.,0,0,rational
3057,ClassToInstanceMap.java,@param b the common supertype that all entries must share often this is simply @link object,0,0,rational
3058,ClassToInstanceMap.java,@author kevin bourrillion,0,0,rational
3059,ClassToInstanceMap.java,@since 20,0,0,rational
4151,AbstractModule.java,a support class for @link module s which reduces repetition and results in a more readable,0,0,rational
4152,AbstractModule.java,configuration.,1,0,rational
4153,AbstractModule.java,"simply extend this class, implement @link #configure , and call the inherited",0,0,rational
4154,AbstractModule.java,methods which mirror those found in @link binder .,1,0,rational
4155,AbstractModule.java,for example,0,0,rational
4156,AbstractModule.java,pre,1,0,rational
4157,AbstractModule.java,public class mymodule extends abstractmodule,0,0,rational
4158,AbstractModule.java,protected void configure,1,0,rational
4159,AbstractModule.java,bind service^class ^to serviceimpl^class ^in singleton^class,0,0,rational
4160,AbstractModule.java,bind creditcardpaymentservice^class,1,0,rational
4161,AbstractModule.java,bind paymentservice^class ^to creditcardpaymentservice^class,0,0,rational
4162,AbstractModule.java,bindconstant ^annotatedwith names^named port ^to 8080,1,0,rational
4163,AbstractModule.java,pre,0,0,rational
4164,AbstractModule.java,@author crazybob@google^com bob lee,1,0,rational
4179,Binder.java,collects configuration information primarily i bindings i which will be used to create an,0,0,rational
4180,Binder.java,@link injector .,1,0,rational
4181,Binder.java,guice provides this object to your application s @link module implementors so,0,0,rational
4182,Binder.java,they may each contribute their own bindings and other registrations.,1,0,rational
4183,Binder.java,h3 the guice binding edsl h3,0,0,rational
4184,Binder.java,"guice uses an i embedded domain specific language i , or edsl, to help you create bindings",1,0,rational
4185,Binder.java,simply and readably.,0,0,rational
4188,Binder.java,javadocs b .,1,0,rational
4189,Binder.java,"instead, you should consult the series of examples below.",0,0,rational
4190,Binder.java,"to save space, these",1,0,rational
4191,Binder.java,"examples omit the opening @code binder , just as you will if your module extends @link",0,0,rational
4192,Binder.java,abstractmodule .,1,0,rational
4193,Binder.java,pre,0,0,rational
4196,Binder.java,does not change guice s default behavior.,1,0,rational
4198,Binder.java,@link module class to serve as an explicit i manifest i for the services it provides.,0,0,rational
4199,Binder.java,"also,",1,0,rational
4201,Binder.java,given explicitly.,0,0,rational
4202,Binder.java,pre,1,0,rational
4204,Binder.java,specifies that a request for a @code service instance with no binding annotations should be,0,0,rational
4205,Binder.java,treated as if it were a request for a @code serviceimpl instance.,1,0,rational
4206,Binder.java,this i overrides i the,0,0,rational
4207,Binder.java,function of any @link implementedby @implementedby or @link providedby @providedby,1,0,rational
4208,Binder.java,"annotations found on @code service , since guice will have already moved on to @code",0,0,rational
4209,Binder.java,serviceimpl before it reaches the point when it starts looking for these annotations.,1,0,rational
4210,Binder.java,pre,0,0,rational
4212,Binder.java,"in this example, @code serviceprovider must extend or implement @code provider service .",1,0,rational
4213,Binder.java,this,0,0,rational
4214,Binder.java,binding specifies that guice should resolve an unannotated injection request for @code service,1,0,rational
4215,Binder.java,"by first resolving an instance of @code serviceprovider in the regular way, then calling @link",0,0,rational
4216,Binder.java,provider#get get on the resulting provider instance to obtain the @code service instance.,1,0,rational
4217,Binder.java,"p the @link provider you use here does not have to be a factory that is, a provider which",0,0,rational
4473,DefaultMethodInterceptionTest.java,tests for interception of default methods.,1,0,rational
4218,Binder.java,always i creates i each instance it provides.,0,0,rational
4474,DefaultMethodInterceptionTest.java,@author cgdecker@google^com colin decker,1,0,rational
4475,DefaultMethodInterceptionTest.java,interface with a default method annotated to be intercepted.,0,0,rational
4220,Binder.java,follow.,1,0,rational
4476,DefaultMethodInterceptionTest.java,foo implementation that does not override the default method.,0,0,rational
4221,Binder.java,you can then use guice s concept of @link scope scopes to guide when creation should,1,0,rational
4477,DefaultMethodInterceptionTest.java,a base class defining a method with the same signature as foo s default method.,0,0,rational
4222,Binder.java,happen letting guice work for you .,1,0,rational
4478,DefaultMethodInterceptionTest.java,foo implementation that should use superclass method rather than default method.,0,0,rational
4223,Binder.java,pre,1,0,rational
4226,Binder.java,@code @red .,0,0,rational
4227,Binder.java,if your module also includes bindings for particular i values i of the,1,0,rational
4229,Binder.java,of @code @red that have no exact match in the bindings.,0,0,rational
4230,Binder.java,pre,1,0,rational
4231,Binder.java,bind serviceimpl^class ^in singleton^class,0,0,rational
4487,Element.java,an internal binding annotation applied to each element in a multibinding.,1,0,rational
4232,Binder.java,"or, alternatively",0,0,rational
4488,Element.java,all elements are,0,0,rational
4489,Element.java,assigned a globally unique id to allow different modules to contribute multibindings,0,0,rational
4234,Binder.java,either of these statements places the @code serviceimpl class into singleton scope.,0,0,rational
4490,Element.java,independently.,0,0,rational
4235,Binder.java,guice will,0,0,rational
4491,Element.java,@author jessewilson@google^com jesse wilson,0,0,rational
4236,Binder.java,create only one instance of @code serviceimpl and will reuse it for all injection requests of,0,0,rational
4238,Binder.java,note that it is still possible to bind another instance of @code serviceimpl if the,0,0,rational
4240,Binder.java,guice is not overly,0,0,rational
4497,EncounterImpl.java,@author jessewilson@google^com jesse wilson,0,0,rational
4242,Binder.java,with i enabling i your application to share only one instance if that s all you tell guice you,0,0,rational
4243,Binder.java,need.,0,0,rational
4245,Binder.java,an annotation on the @code serviceimpl class.,0,0,rational
4246,Binder.java,"p besides @link singleton @link scopes#singleton , there are servlet specific scopes",0,0,rational
4502,ManagedFilterPipeline.java,"central routing dispatch class handles lifecycle of managed filters, and delegates to the servlet",0,0,rational
4247,Binder.java,"available in @code com^google.inject^servlet.servletscopes , and your modules can contribute",0,0,rational
4503,ManagedFilterPipeline.java,pipeline.,0,0,rational
4248,Binder.java,their own custom scopes for use here as well.,0,0,rational
4504,ManagedFilterPipeline.java,@author dhanji@gmail^com dhanji r. prasanna,0,0,rational
4249,Binder.java,pre,0,0,rational
4250,Binder.java,bind new typeliteral&lt paymentservice&lt creditcard,0,0,rational
4508,PrivateElementProcessor,handles @code binder^newprivatebinder elements.,0,0,rational
4253,Binder.java,it tells guice how to,0,0,rational
4509,PrivateElementProcessor,@author jessewilson@google^com jesse wilson,0,0,rational
4254,Binder.java,honor an injection request for an element of type @code paymentservice creditcard .,0,0,rational
4255,Binder.java,the class,0,0,rational
4256,Binder.java,@code creditcardpaymentservice must implement the @code paymentservice creditcard interface.,0,0,rational
4512,ProxyFactoryTest.java,@author crazybob@google^com bob lee,0,0,rational
4257,Binder.java,"guice cannot currently bind or inject a generic type, such as @code set e all type parameters",0,0,rational
4258,Binder.java,must be fully specified.,0,0,rational
4514,SpiUtils.java,utilities for testing the multibinder & mapbinder extension spi.,0,0,rational
4259,Binder.java,pre,0,0,rational
4515,SpiUtils.java,@author sameb@google^com sam berlin,0,0,rational
4260,Binder.java,bind service^class ^toinstance new serviceimpl,0,0,rational
4261,Binder.java,"or, alternatively",0,0,rational
4518,SpiUtils.java,the kind of binding.,0,0,rational
4519,SpiUtils.java,the result of the binding.,0,0,rational
4265,Binder.java,@code service injection requests.,0,0,rational
4266,Binder.java,"when the @link injector is created, it will automatically",0,0,rational
4268,Binder.java,serviceimpl is simply ignored.,0,0,rational
4270,Binder.java,that you can t control.,0,0,rational
4271,Binder.java,pre,0,0,rational
4273,Binder.java,sets up a constant binding.,0,0,rational
4274,Binder.java,constant injections must always be annotated.,0,0,rational
4275,Binder.java,when a constant,0,0,rational
4276,Binder.java,"binding s value is a string, it is eligible for conversion to all primitive types, to @link",0,0,rational
4277,Binder.java,"enum#valueof class, string all enums , and to @link class#forname class literals .",0,0,rational
4278,Binder.java,conversions,0,0,rational
4279,Binder.java,"for other types can be configured using @link #converttotypes matcher, typeconverter",0,0,rational
4280,Binder.java,converttotypes .,0,0,rational
4281,Binder.java,pre,0,0,rational
4282,Binder.java,@literal @ color red color red a member variable field,0,0,rational
4283,Binder.java,red mymodule^class.getdeclaredfield red ^getannotation color^class,0,0,rational
4285,Binder.java,if your binding annotation has parameters you can apply different bindings to different specific,0,0,rational
4286,Binder.java,values of your annotation.,0,0,rational
4287,Binder.java,getting your hands on the right instance of the annotation is a bit of,0,0,rational
4288,Binder.java,"a pain one approach, shown above, is to apply a prototype annotation to a field in your module",0,0,rational
4290,Binder.java,pre,0,0,rational
4291,Binder.java,bind service^class,0,0,rational
4292,Binder.java,annotatedwith names^named blue,0,0,rational
4294,Binder.java,"differentiating by names is a common enough use case that we provided a standard annotation,",0,0,rational
4295,Binder.java,@link com^google.inject^name.named @named .,0,0,rational
4296,Binder.java,"because of guice s library support, binding by name",0,0,rational
4297,Binder.java,is quite easier than in the arbitrary binding annotation case we just saw.,0,0,rational
4298,Binder.java,"however, remember that",0,0,rational
4299,Binder.java,these names will live in a single flat namespace with all the other names used in your,0,0,rational
4300,Binder.java,application.,0,0,rational
4301,Binder.java,pre,0,0,rational
4302,Binder.java,constructor t lonector getlonectorfromserviceimplviareflection,0,0,rational
4303,Binder.java,bind serviceimpl^class,0,0,rational
4306,Binder.java,implementation.,0,0,rational
4307,Binder.java,it means that we do not need to place @literal @ inject on any of the,0,0,rational
4308,Binder.java,constructors and that guice treats the provided constructor as though it were annotated so.,0,0,rational
4309,Binder.java,it is,0,0,rational
4310,Binder.java,useful for cases where you cannot modify existing classes and is a bit simpler than using a,0,0,rational
4311,Binder.java,@link provider .,0,0,rational
4312,Binder.java,p the above list of examples is far from exhaustive.,0,0,rational
4313,Binder.java,if you can think of how the concepts of one,0,0,rational
4314,Binder.java,"example might coexist with the concepts from another, you can most likely weave the two together.",0,0,rational
4315,Binder.java,"if the two concepts make no sense with each other, you most likely won t be able to do it.",0,0,rational
4316,Binder.java,in a,0,0,rational
4318,Binder.java,"runtime, as soon as you try to create your injector.",0,0,rational
4319,Binder.java,"p the other methods of binder such as @link #bindscope , @link #bindinterceptor , @link",0,0,rational
4320,Binder.java,"#install , @link #requeststaticinjection , @link #adderror and @link #currentstage are not",0,0,rational
4321,Binder.java,"part of the binding edsl you can learn how to use these in the usual way, from the method",0,0,rational
4322,Binder.java,documentation.,0,0,rational
4323,Binder.java,@author crazybob@google^com bob lee,0,0,rational
4324,Binder.java,@author jessewilson@google^com jesse wilson,0,0,rational
4325,Binder.java,@author kevinb@google^com kevin bourrillion,0,0,rational
5120,VScrollTable.java,dom^client.blurevent,0,0,rational
5121,VScrollTable.java,non javadoc,1,0,rational
5134,VScrollTable.java,non javadoc,0,0,rational
5135,VScrollTable.java,@see,1,0,rational
5136,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,0,0,rational
5137,VScrollTable.java,dom^client.focusevent,1,0,rational
5138,VScrollTable.java,non javadoc,0,0,rational
5139,VScrollTable.java,@see,1,0,rational
5140,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,0,0,rational
5141,VScrollTable.java,dom^client.blurevent,1,0,rational
5142,VScrollTable.java,non javadoc,0,0,rational
5144,VScrollTable.java,for internal use only.,1,0,rational
5146,VScrollTable.java,overwrites onbrowserevent function on focusablescrollpanel to give event,0,0,rational
5147,VScrollTable.java,access to touchcontextprovider.,1,0,rational
5148,VScrollTable.java,has to be public to give tableconnector,0,0,rational
5150,VScrollTable.java,@since 72,1,0,rational
5151,VScrollTable.java,@author vaadin ltd,0,0,rational
5162,VScrollTable.java,non javadoc,1,0,rational
5163,VScrollTable.java,@see,0,0,rational
5164,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,1,0,rational
5165,VScrollTable.java,dom^client.focusevent,0,0,rational
5166,VScrollTable.java,non javadoc,1,0,rational
5167,VScrollTable.java,@see,0,0,rational
5168,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,1,0,rational
5169,VScrollTable.java,dom^client.blurevent,0,0,rational
5170,VScrollTable.java,non javadoc,1,0,rational
5172,VScrollTable.java,used to recall the position of an open context menu if we need to close,0,0,rational
5175,VScrollTable.java,for internal use only.,1,0,rational
5187,VScrollTable.java,non javadoc,0,0,rational
5188,VScrollTable.java,@see,1,0,rational
5189,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,0,0,rational
5190,VScrollTable.java,dom^client.focusevent,1,0,rational
5191,VScrollTable.java,non javadoc,0,0,rational
5192,VScrollTable.java,@see,1,0,rational
5193,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,0,0,rational
5194,VScrollTable.java,dom^client.blurevent,1,0,rational
5195,VScrollTable.java,non javadoc,0,0,rational
5197,VScrollTable.java,for internal use only.,1,0,rational
5209,VScrollTable.java,non javadoc,0,0,rational
5210,VScrollTable.java,@see,1,0,rational
5211,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,0,0,rational
5212,VScrollTable.java,dom^client.focusevent,1,0,rational
5213,VScrollTable.java,non javadoc,0,0,rational
5214,VScrollTable.java,@see,1,0,rational
5215,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,0,0,rational
5216,VScrollTable.java,dom^client.blurevent,1,0,rational
5217,VScrollTable.java,non javadoc,0,0,rational
5220,VScrollTable.java,reordering disabled and clicking on it resets sorting.,1,0,rational
5231,VScrollTable.java,non javadoc,0,0,rational
5232,VScrollTable.java,@see,1,0,rational
5233,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,0,0,rational
5234,VScrollTable.java,dom^client.focusevent,1,0,rational
5235,VScrollTable.java,non javadoc,0,0,rational
5236,VScrollTable.java,@see,1,0,rational
5237,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,0,0,rational
5238,VScrollTable.java,dom^client.blurevent,1,0,rational
5239,VScrollTable.java,non javadoc,0,0,rational
5252,VScrollTable.java,non javadoc,1,0,rational
5253,VScrollTable.java,@see,0,0,rational
5254,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,1,0,rational
5255,VScrollTable.java,dom^client.focusevent,0,0,rational
5256,VScrollTable.java,non javadoc,1,0,rational
5257,VScrollTable.java,@see,0,0,rational
5258,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,1,0,rational
5259,VScrollTable.java,dom^client.blurevent,0,0,rational
5260,VScrollTable.java,non javadoc,1,0,rational
5263,VScrollTable.java,reordering disabled and clicking on it resets sorting.,0,0,rational
5274,VScrollTable.java,non javadoc,1,0,rational
5275,VScrollTable.java,@see,0,0,rational
5276,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,1,0,rational
5277,VScrollTable.java,dom^client.focusevent,0,0,rational
5278,VScrollTable.java,non javadoc,1,0,rational
5279,VScrollTable.java,@see,0,0,rational
5280,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,1,0,rational
5281,VScrollTable.java,dom^client.blurevent,0,0,rational
5282,VScrollTable.java,non javadoc,1,0,rational
5295,VScrollTable.java,non javadoc,0,0,rational
5296,VScrollTable.java,@see,1,0,rational
5297,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,0,0,rational
5298,VScrollTable.java,dom^client.focusevent,1,0,rational
5299,VScrollTable.java,non javadoc,0,0,rational
5300,VScrollTable.java,@see,1,0,rational
5301,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,0,0,rational
5302,VScrollTable.java,dom^client.blurevent,1,0,rational
5303,VScrollTable.java,non javadoc,0,0,rational
5362,VTextArea.java,this class represents a multiline textfield textarea .,1,0,rational
5366,VTextArea.java,@author vaadin ltd.,0,0,rational
5371,VUpload.java,@author vaadin ltd,1,0,rational
5373,Window.java,a component that represents a floating popup window that can be added to a,0,0,rational
5374,Window.java,@link ui .,1,0,rational
5375,Window.java,a window is added to a @code ui using,0,0,rational
5376,Window.java,@link ui#addwindow window .,1,0,rational
5377,Window.java,p,0,0,rational
5378,Window.java,the contents of a window is set using @link #setcontent component or by,1,0,rational
5379,Window.java,"using the @link #window string, component constructor.",0,0,rational
5380,Window.java,p,1,0,rational
5381,Window.java,p,0,0,rational
5382,Window.java,a window can be positioned on the screen using absolute coordinates pixels,1,0,rational
5383,Window.java,or set to be centered using @link #center,0,0,rational
5384,Window.java,p,1,0,rational
5385,Window.java,p,0,0,rational
5386,Window.java,the caption is displayed in the window header.,1,0,rational
5387,Window.java,p,0,0,rational
5388,Window.java,p,1,0,rational
5389,Window.java,"in vaadin versions prior to 70.0, window was also used as application level",0,0,rational
5390,Window.java,windows.,1,0,rational
5391,Window.java,this function is now covered by the @link ui class.,0,0,rational
5392,Window.java,p,1,0,rational
5393,Window.java,@author vaadin ltd.,0,0,rational
5394,Window.java,@since 30,1,0,rational
5395,Window.java,non javadoc,0,0,rational
5396,Window.java,@see com^vaadin.ui^panel#paintcontent com^vaadin.server^painttarget,1,0,rational
5397,Window.java,non javadoc,0,0,rational
5398,Window.java,"@see com^vaadin.ui^panel#changevariables java^lang.object, java^util.map",1,0,rational
5399,Window.java,event which is fired when the window order position is changed.,0,0,rational
5400,Window.java,@see ui^windoworderupdateevent,1,0,rational
5401,Window.java,@author vaadin ltd,0,0,rational
5402,Window.java,non javadoc,1,0,rational
5403,Window.java,@see com^vaadin.ui^panel#paintcontent com^vaadin.server^painttarget,0,0,rational
5404,Window.java,non javadoc,1,0,rational
5405,Window.java,"@see com^vaadin.ui^panel#changevariables java^lang.object, java^util.map",0,0,rational
5406,Window.java,an interface used for listening to window order change events.,1,0,rational
5408,Window.java,non javadoc,0,0,rational
5409,Window.java,@see com^vaadin.ui^panel#paintcontent com^vaadin.server^painttarget,1,0,rational
5410,Window.java,non javadoc,0,0,rational
5411,Window.java,"@see com^vaadin.ui^panel#changevariables java^lang.object, java^util.map",1,0,rational
5412,Window.java,an interface used for listening to window close events.,0,0,rational
5413,Window.java,add the,1,0,rational
5414,Window.java,closelistener to a window and,0,0,rational
5415,Window.java,@link closelistener#windowclose closeevent will be called whenever the,1,0,rational
5416,Window.java,user closes the window.,0,0,rational
5417,Window.java,p,1,0,rational
5420,Window.java,p,0,0,rational
5421,Window.java,non javadoc,1,0,rational
5422,Window.java,@see com^vaadin.ui^panel#paintcontent com^vaadin.server^painttarget,0,0,rational
5423,Window.java,non javadoc,1,0,rational
5424,Window.java,"@see com^vaadin.ui^panel#changevariables java^lang.object, java^util.map",0,0,rational
5426,Window.java,@author vaadin ltd,1,0,rational
5428,Window.java,non javadoc,0,0,rational
5429,Window.java,@see com^vaadin.ui^panel#paintcontent com^vaadin.server^painttarget,1,0,rational
5430,Window.java,non javadoc,0,0,rational
5431,Window.java,"@see com^vaadin.ui^panel#changevariables java^lang.object, java^util.map",1,0,rational
5432,Window.java,an interface used for listening to window maximize restore events.,0,0,rational
5433,Window.java,add,1,0,rational
5434,Window.java,the windowmodechangelistener to a window and,0,0,rational
5435,Window.java,@link windowmodechangelistener#windowmodechanged windowmodechangeevent,1,0,rational
5436,Window.java,will be called whenever the window is maximized,0,0,rational
5437,Window.java,@link windowmode#maximized or restored @link windowmode#normal .,1,0,rational
5438,Window.java,non javadoc,0,0,rational
5439,Window.java,@see com^vaadin.ui^panel#paintcontent com^vaadin.server^painttarget,1,0,rational
5440,Window.java,non javadoc,0,0,rational
5441,Window.java,"@see com^vaadin.ui^panel#changevariables java^lang.object, java^util.map",1,0,rational
5442,Window.java,resize events are fired whenever the client side fires a resize event,0,0,rational
5443,Window.java,eg the browser window is resized .,1,0,rational
5444,Window.java,the frequency may vary across,0,0,rational
5445,Window.java,browsers.,1,0,rational
5446,Window.java,non javadoc,0,0,rational
5447,Window.java,@see com^vaadin.ui^panel#paintcontent com^vaadin.server^painttarget,1,0,rational
5448,Window.java,non javadoc,0,0,rational
5449,Window.java,"@see com^vaadin.ui^panel#changevariables java^lang.object, java^util.map",1,0,rational
5452,Window.java,non javadoc,0,0,rational
5453,Window.java,@see com^vaadin.ui^panel#paintcontent com^vaadin.server^painttarget,1,0,rational
5454,Window.java,non javadoc,0,0,rational
5455,Window.java,"@see com^vaadin.ui^panel#changevariables java^lang.object, java^util.map",1,0,rational
5456,Window.java,a @link shortcutlistener specifically made to define a keyboard,0,0,rational
5457,Window.java,shortcut that closes the window.,1,0,rational
5458,Window.java,pre,0,0,rational
5459,Window.java,code,1,0,rational
5460,Window.java,within the window using helper,0,0,rational
5462,Window.java,or globally,1,0,rational
5463,Window.java,"getui ^addaction new window^closeshortcut window, keycode^escape",0,0,rational
5464,Window.java,code,1,0,rational
5465,Window.java,pre,0,0,rational
5518,XhrConnectionError.java,xhrconnectionerror provides detail about an error which occurred during an,0,0,rational
5519,XhrConnectionError.java,xhr request to the server.,0,0,rational
5520,XhrConnectionError.java,@since 76,0,0,rational
5521,XhrConnectionError.java,@author vaadin ltd,0,0,rational
4524,AbstractFocusable.java,an abstract base class for focusable components.,0,0,rational
4527,AbstractFocusable.java,@since 76,0,0,rational
4528,AbstractFocusable.java,@author vaadin ltd,0,0,rational
4533,AbstractMultiSelectState.java,shared state for @code abstractmultiselect .,0,0,rational
4534,AbstractMultiSelectState.java,@author vaadin ltd,0,0,rational
4535,AbstractMultiSelectState.java,@since 80,0,0,rational
4540,AbstractProperty.java,abstract base class for @link property implementations.,0,0,rational
4541,AbstractProperty.java,handles listener management for @link valuechangelistener s and,0,0,rational
4542,AbstractProperty.java,@link readonlystatuschangelistener s.,0,0,rational
4543,AbstractProperty.java,@since 66,0,0,rational
4544,AbstractProperty.java,"@deprecated as of 80, replaced by @link valueprovider , @link setter , see",0,0,rational
4545,AbstractProperty.java,@link binder,0,0,rational
4546,AbstractProperty.java,legacypropertyhelper has been removed in vaadin 8 events,0,0,rational
4547,AbstractProperty.java,an code event code object specifying the property whose read only,0,0,rational
4548,AbstractProperty.java,status has been changed.,0,0,rational
4549,AbstractProperty.java,legacypropertyhelper has been removed in vaadin 8 events,0,0,rational
4566,AbstractSingleComponentContainerState.java,default shared state implementation for abstractsinglecomponentcontainer.,0,0,rational
4567,AbstractSingleComponentContainerState.java,@since 80,0,0,rational
4572,AdjacentElementsWithTooltipsTest.java,@author vaadin ltd,0,0,rational
4575,ApplicationConfiguration.java,helper class for reading configuration options from the bootstap,0,0,rational
4577,ApplicationConfiguration.java,@since 70,0,0,rational
4578,ApplicationConfiguration.java,wraps a native javascript object containing fields for an error message.,0,0,rational
4579,ApplicationConfiguration.java,@since 70,0,0,rational
4584,BootstrapPageResponse.java,a representation of a bootstrap page being generated.,0,0,rational
4585,BootstrapPageResponse.java,the bootstrap page,0,0,rational
4586,BootstrapPageResponse.java,contains of the full dom of the html document as well as the http headers,0,0,rational
4587,BootstrapPageResponse.java,that will be included in the corresponding http response.,0,0,rational
4588,BootstrapPageResponse.java,@author vaadin ltd,0,0,rational
4589,BootstrapPageResponse.java,@since 70.0,0,0,rational
4596,ButtonRenderer.java,a renderer that displays a button with a textual caption.,0,0,rational
4597,ButtonRenderer.java,the value of the,0,0,rational
4598,ButtonRenderer.java,corresponding property is used as the caption.,0,0,rational
4599,ButtonRenderer.java,click listeners can be added,0,0,rational
4600,ButtonRenderer.java,"to the renderer, invoked when any of the rendered buttons is clicked.",0,0,rational
4601,ButtonRenderer.java,@since 74,0,0,rational
4602,ButtonRenderer.java,@author vaadin ltd,0,0,rational
4610,ClientRpcWriter.java,serializes @link clientrpc client rpc invocations to json.,0,0,rational
4611,ClientRpcWriter.java,@author vaadin ltd,0,0,rational
4612,ClientRpcWriter.java,@since 71,0,0,rational
4616,ColorPickerServerRpc.java,rpc interface for abstractcolorpicker.,0,0,rational
4617,ColorPickerServerRpc.java,@since 70.0,0,0,rational
4620,ComboBoxState.java,shared state for the combobox component.,0,0,rational
4621,ComboBoxState.java,@since 70,0,0,rational
4624,DeclarativeValueProvider.java,value provider class for declarative support.,0,0,rational
4626,DeclarativeValueProvider.java,provides a straightforward mapping between an item and its value.,0,0,rational
4627,DeclarativeValueProvider.java,@param t,0,0,rational
4628,DeclarativeValueProvider.java,item type,0,0,rational
4633,DoubleRangeValidator.java,validator for validating that a @link double is inside a given range.,0,0,rational
4634,DoubleRangeValidator.java,@author vaadin ltd.,0,0,rational
4635,DoubleRangeValidator.java,@since 80,0,0,rational
4640,FooterDoubleClickHandler.java,handler for @link griddoubleclickevent s that happen in the footer of the,0,0,rational
4641,FooterDoubleClickHandler.java,grid.,0,0,rational
4642,FooterDoubleClickHandler.java,@since 74,0,0,rational
4643,FooterDoubleClickHandler.java,@author vaadin ltd,0,0,rational
4649,Grid.java,a grid component for displaying tabular data.,0,0,rational
4650,Grid.java,@author vaadin ltd,0,0,rational
4651,Grid.java,@since 80,0,0,rational
4652,Grid.java,@param t,0,0,rational
4653,Grid.java,the grid bean type,0,0,rational
4654,Grid.java,header and footer,0,0,rational
4658,Grid.java,@param t,0,0,rational
4659,Grid.java,the grid bean type,0,0,rational
4660,Grid.java,header and footer,0,0,rational
4661,Grid.java,selection mode representing the built in selection models in grid.,0,0,rational
4663,Grid.java,these enums can be used in @link grid#setselectionmode selectionmode,0,0,rational
4665,Grid.java,@see grid#setselectionmode selectionmode,0,0,rational
4666,Grid.java,@see grid#setselectionmodel gridselectionmodel,0,0,rational
4667,Grid.java,header and footer,0,0,rational
4669,Grid.java,header and footer,0,0,rational
4672,Grid.java,header and footer,0,0,rational
4674,Grid.java,@param t,0,0,rational
4675,Grid.java,the grid bean type,0,0,rational
4676,Grid.java,header and footer,0,0,rational
4679,Grid.java,usage,0,0,rational
4680,Grid.java,pre,0,0,rational
4681,Grid.java,grid^addcontextclicklistener event &gt notification^show,0,0,rational
4682,Grid.java,gridcontextclickevent&lt person&gt event ^getitem clicked,0,0,rational
4683,Grid.java,pre,0,0,rational
4684,Grid.java,@param t,0,0,rational
4685,Grid.java,the grid bean type,0,0,rational
4686,Grid.java,header and footer,0,0,rational
4687,Grid.java,an event that is fired when a column s visibility changes.,0,0,rational
4688,Grid.java,@since 75.0,0,0,rational
4689,Grid.java,header and footer,0,0,rational
4690,Grid.java,a helper base class for creating extensions for the grid component.,0,0,rational
4691,Grid.java,@param t,0,0,rational
4692,Grid.java,header and footer,0,0,rational
4693,Grid.java,class for managing visible details rows.,0,0,rational
4694,Grid.java,@param t,0,0,rational
4695,Grid.java,the grid bean type,0,0,rational
4696,Grid.java,header and footer,0,0,rational
4699,Grid.java,@param t,0,0,rational
4700,Grid.java,the grid bean type,0,0,rational
4731,GridManyColumnsV7.java,test ui for grid initial rendering performance profiling.,0,0,rational
4733,GridSelectionModel.java,the server side interface that controls grid s selection state.,0,0,rational
4734,GridSelectionModel.java,selectionmodel should extend @link abstractgridextension .,0,0,rational
4735,GridSelectionModel.java,@author vaadin ltd,0,0,rational
4737,GridSelectionModel.java,@param t,0,0,rational
4738,GridSelectionModel.java,the grid bean type,0,0,rational
4739,GridSelectionModel.java,@see abstractselectionmodel,0,0,rational
4740,GridSelectionModel.java,@see singleselectionmodel,0,0,rational
4741,GridSelectionModel.java,@see multiselectionmodel,0,0,rational
4750,HeaderRow.java,a header row in a grid.,0,0,rational
4751,HeaderRow.java,@author vaadin ltd,0,0,rational
4752,HeaderRow.java,@since 80,0,0,rational
4756,InternalContainerAnnotationForJS.java,annotation enabling using multiple @link javascript @javascript,0,0,rational
4757,InternalContainerAnnotationForJS.java,annotations.,0,0,rational
4761,InternalContainerAnnotationForJS.java,@author vaadin ltd,0,0,rational
4762,InternalContainerAnnotationForJS.java,@since 80,0,0,rational
4767,MyPickerConnector.java,mini tutorial code for,0,0,rational
4768,MyPickerConnector.java,"https vaadin^com wiki wiki main widget%20styling%20using%20only%20css,",0,0,rational
4769,MyPickerConnector.java,https,0,0,rational
4770,MyPickerConnector.java,vaadin^com wiki wiki main lightweight%20calculations%20of%20widget%20l,0,0,rational
4772,MyPickerConnector.java,@author vaadin ltd,0,0,rational
4773,MyPickerConnector.java,@since 70.0,0,0,rational
4782,NotEmptyValidatorTest.java,@author vaadin ltd,0,0,rational
4784,PopupView.java,a component for displaying a two different views to data.,0,0,rational
4785,PopupView.java,the minimized view,0,0,rational
4786,PopupView.java,"is normally used to render the component, and when it is clicked the full",0,0,rational
4787,PopupView.java,view is displayed on a popup.,0,0,rational
4788,PopupView.java,the inner class @link popupview^content is,0,0,rational
4789,PopupView.java,used to deliver contents to this component.,0,0,rational
4790,PopupView.java,@author vaadin ltd.,0,0,rational
4806,PopupView.java,this event is received by the popupvisibilitylisteners when the,0,0,rational
4807,PopupView.java,visibility of the popup changes.,0,0,rational
4808,PopupView.java,you can get the new visibility directly,0,0,rational
4809,PopupView.java,"with @link #ispopupvisible , or get the popupview that produced the",0,0,rational
4810,PopupView.java,event with @link #getpopupview .,0,0,rational
4816,PopupView.java,defines a listener that can receive a popupvisibilityevent when the,0,0,rational
4817,PopupView.java,visibility of the popup changes.,0,0,rational
4847,PortletDummyRequestHandler.java,request handler which provides a dummy html response to any resource request,0,0,rational
4848,PortletDummyRequestHandler.java,with the resource id dummy.,0,0,rational
4849,PortletDummyRequestHandler.java,@author vaadin ltd,0,0,rational
4850,PortletDummyRequestHandler.java,@since 71,0,0,rational
4855,QueryBuilder.java,"@deprecated as of 80, no replacement available.",0,0,rational
4857,RequiredTextFieldTest.java,test for ^v required style,0,0,rational
4858,RequiredTextFieldTest.java,@author vaadin ltd,0,0,rational
4861,RpcDataProviderExtension.java,provides vaadin server side container data source to a,0,0,rational
4862,RpcDataProviderExtension.java,@link com^vaadin.v7^client.connectors^gridconnector gridconnector .,0,0,rational
4863,RpcDataProviderExtension.java,this is currently,0,0,rational
4864,RpcDataProviderExtension.java,implemented as an extension hardcoded to support a specific connector type.,0,0,rational
4867,RpcDataProviderExtension.java,@since 74,0,0,rational
4868,RpcDataProviderExtension.java,@author vaadin ltd,0,0,rational
4869,RpcDataProviderExtension.java,"@deprecated as of 80, no replacement available.",0,0,rational
4870,RpcDataProviderExtension.java,class for keeping track of current items and valuechangelisteners.,0,0,rational
4871,RpcDataProviderExtension.java,@since 76,0,0,rational
4886,RpcDataProviderExtension.java,"@see grid#addvaluechangelistener com^vaadin.v7^data.container, object, object",0,0,rational
4887,RpcDataProviderExtension.java,"grid#addvaluechangelistener container, object, object",0,0,rational
4888,RpcDataProviderExtension.java,@see grid#valuechangelisteners,0,0,rational
4903,SelectAllEvent.java,@since 74,0,0,rational
4904,SelectAllEvent.java,@author vaadin ltd,0,0,rational
4905,SelectAllEvent.java,@param t,0,0,rational
4906,SelectAllEvent.java,the type of the rows in grid,0,0,rational
4917,ShouldWriteDataDelegate.java,@see designcontext#shouldwritedata component,0,0,rational
4918,ShouldWriteDataDelegate.java,@since 75.0,0,0,rational
4919,ShouldWriteDataDelegate.java,@author vaadin ltd,0,0,rational
4929,SimpleGridUI.java,@author vaadin ltd,0,0,rational
4932,SpacerVisibilityChangedEvent.java,@author vaadin ltd,0,0,rational
4933,SpacerVisibilityChangedEvent.java,@since 77.13,0,0,rational
4937,TargetDetailsImpl.java,a hashmap backed implementation of @link targetdetails for termina^^^n.,0,0,rational
4938,TargetDetailsImpl.java,@since 63,0,0,rational
4939,TargetDetailsImpl.java,@deprecated replaced in 81 by @link dropevent#gettransferdata string,0,0,rational
4944,UnknownExtensionConnector.java,connector used as a placeholder for extensions that are not present in the,0,0,rational
4945,UnknownExtensionConnector.java,widgetset.,0,0,rational
4946,UnknownExtensionConnector.java,@since 77.4,0,0,rational
4947,UnknownExtensionConnector.java,@author vaadin ltd,0,0,rational
4952,VaadinPortlet.java,portlet 20 base class.,0,0,rational
4953,VaadinPortlet.java,this replaces the servlet in servlet portlet 10,0,0,rational
4954,VaadinPortlet.java,deployments and handles various portlet requests from the browser.,0,0,rational
4955,VaadinPortlet.java,@author vaadin ltd,0,0,rational
4958,VaadinPortlet.java,base class for portlet requests that need access to http servlet,0,0,rational
4962,VaadinPortlet.java,portlet request for liferay.,0,0,rational
4965,VaadinPortlet.java,portlet request for gatein.,0,0,rational
4968,VaadinPortlet.java,portlet request for websphere portal.,0,0,rational
4971,VaadinPortlet.java,portlet request for websphere portal.,0,0,rational
4974,VaadinPortlet.java,@author vaadin ltd,0,0,rational
4975,VaadinPortlet.java,@deprecated as of 70.,0,0,rational
4976,VaadinPortlet.java,this is no longer used and only provided for,0,0,rational
4977,VaadinPortlet.java,backwards compatibility.,0,0,rational
4978,VaadinPortlet.java,each @link requesthandler can,0,0,rational
4979,VaadinPortlet.java,individually decide whether it wants to handle a request or,0,0,rational
4980,VaadinPortlet.java,not.,0,0,rational
4995,VaadinServiceInitListener.java,listener for @link vaadinservice initialization events.,0,0,rational
4996,VaadinServiceInitListener.java,the listener can,0,0,rational
4997,VaadinServiceInitListener.java,add listeners and request handlers the service.,0,0,rational
4999,VaadinServiceInitListener.java,listener instances are by default discovered and instantiated using,0,0,rational
5000,VaadinServiceInitListener.java,@link serviceloader .,0,0,rational
5001,VaadinServiceInitListener.java,this means that all implementations must have a,0,0,rational
5002,VaadinServiceInitListener.java,zero argument constructor and the fully qualified name of the implementation,0,0,rational
5003,VaadinServiceInitListener.java,class must be listed on a separate line in a,0,0,rational
5004,VaadinServiceInitListener.java,meta inf services com^vaadin.server^vaadinserviceinitlistener file present in,0,0,rational
5005,VaadinServiceInitListener.java,the jar file containing the implementation class.,0,0,rational
5007,VaadinServiceInitListener.java,"integrations for specific runtime environments, such as osgi or spring, might",0,0,rational
5008,VaadinServiceInitListener.java,also provide other ways of discovering listeners.,0,0,rational
5009,VaadinServiceInitListener.java,@since 80,0,0,rational
5010,VaadinServiceInitListener.java,@author vaadin ltd,0,0,rational
5025,VGridLayout.java,private helper class.,0,0,rational
5029,VLazyInitItemIdentifiers.java,@author vaadin ltd,0,0,rational
5030,VLazyInitItemIdentifiers.java,@deprecated replaced in 81 with,0,0,rational
5031,VLazyInitItemIdentifiers.java,ragovercriteria string and,0,0,rational
5032,VLazyInitItemIdentifiers.java,@link droptargetextension#setdropcriteria string,0,0,rational
5038,VScrollTable.java,vscrolltable is a flowpanel having two widgets in it tablehead component,0,0,rational
5039,VScrollTable.java,scrollpanel,0,0,rational
5040,VScrollTable.java,"tablehead contains table s header and widgets logic for resizing,",0,0,rational
5041,VScrollTable.java,reordering and hiding columns.,0,0,rational
5042,VScrollTable.java,scrollpanel contains vscrolltablebody object which handles content.,0,0,rational
5043,VScrollTable.java,to save,0,0,rational
5044,VScrollTable.java,"some bandwidth and to improve clients responsiveness with loads of data, in",0,0,rational
5045,VScrollTable.java,vscrolltablebody all rows are not necessary rendered.,0,0,rational
5046,VScrollTable.java,there are spacers in,0,0,rational
5047,VScrollTable.java,vscrolltablebody to use the exact same space as non rendered rows would use.,0,0,rational
5049,VScrollTable.java,more rows instead of paging .,0,0,rational
5050,VScrollTable.java,in vscrolltable we listen to scroll events.,0,0,rational
5051,VScrollTable.java,on horizontal scrolling we also,0,0,rational
5052,VScrollTable.java,update tableheads scroll position which has its scrollbars hidden.,0,0,rational
5053,VScrollTable.java,on,0,0,rational
5054,VScrollTable.java,vertical scroll events we will check if we are reaching the end of area where,0,0,rational
5055,VScrollTable.java,we have rows rendered and,0,0,rational
5056,VScrollTable.java,todo implement unregistering for child components in cells,0,0,rational
5067,VScrollTable.java,non javadoc,0,0,rational
5068,VScrollTable.java,@see,0,0,rational
5069,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,0,0,rational
5070,VScrollTable.java,dom^client.focusevent,0,0,rational
5071,VScrollTable.java,non javadoc,0,0,rational
5072,VScrollTable.java,@see,0,0,rational
5073,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,0,0,rational
5074,VScrollTable.java,dom^client.blurevent,0,0,rational
5075,VScrollTable.java,non javadoc,0,0,rational
5077,VScrollTable.java,simple interface for parts of the table capable of owning a context menu.,0,0,rational
5078,VScrollTable.java,@since 72,0,0,rational
5079,VScrollTable.java,@author vaadin ltd,0,0,rational
5090,VScrollTable.java,non javadoc,0,0,rational
5091,VScrollTable.java,@see,0,0,rational
5092,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,0,0,rational
5093,VScrollTable.java,dom^client.focusevent,0,0,rational
5094,VScrollTable.java,non javadoc,0,0,rational
5095,VScrollTable.java,@see,0,0,rational
5096,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,0,0,rational
5097,VScrollTable.java,dom^client.blurevent,0,0,rational
5098,VScrollTable.java,non javadoc,0,0,rational
5100,VScrollTable.java,handles showing context menu on long press from a touch screen.,0,0,rational
5101,VScrollTable.java,@since 72,0,0,rational
5102,VScrollTable.java,@author vaadin ltd,0,0,rational
5113,VScrollTable.java,non javadoc,0,0,rational
5114,VScrollTable.java,@see,0,0,rational
5115,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,0,0,rational
5116,VScrollTable.java,dom^client.focusevent,0,0,rational
5117,VScrollTable.java,non javadoc,0,0,rational
5118,VScrollTable.java,@see,0,0,rational
5119,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,0,0,rational
1,Abfss.java,azure blob file system implementation of abstractfilesystem.,0,1,summary
1028,TestConnCache.java,this class tests the client connection caching in a single node,1,1,summary
5,AbstractContractGetFileStatusTest.java,test getfilestatus and related listing operations.,0,1,summary
775,Query.java,check if a record matches a query.,1,1,summary
1032,TestCustomOauthTokenProvider.java,test custom oauth token providers.,0,1,summary
781,QueueName.java,represents a queue name.,1,1,summary
271,DefaultAnonymizingRumenSerializer.java,default rumen json serializer.,0,1,summary
783,RandomKeyGenerator.java,data generator tool to generate as much keys as possible.,1,1,summary
273,DelegatingSSLSocketFactory.java,a @link sslsocketfactory that can delegate to various ssl implementations.,0,1,summary
1042,TestDataDrivenDBInputFormat.java,test aspects of datadrivendbinputformat,1,1,summary
531,FsConstants.java,filesystem related constants.,0,1,summary
789,ReencryptionUpdater.java,"class for finalizing re encrypt edek operations, by updating file xattrs with",1,1,summary
1047,TestEditLogFileOutputStream.java,test the editlogfileoutputstream,0,1,summary
792,ReencryptionUpdater.java,the tasks are submitted by reencryptionhandler.,1,1,summary
1049,TestFederationPolicyUtils.java,unit test for @link federationpolicyutils .,0,1,summary
537,GetNamespaceInfoResponse.java,api response for listing hdfs namespaces present in the state store.,1,1,summary
794,ReencryptionUpdater.java,"it is assumed only 1 updater will be running, since updating file xattrs",0,1,summary
795,ReencryptionUpdater.java,"requires namespace write lock, and performance gain from multi threading",1,1,summary
1052,TestFileSizeCountTask.java,unit test for file size count task.,0,1,summary
796,ReencryptionUpdater.java,is limited.,1,1,summary
1054,TestHandler.java,tests handler interface.,0,1,summary
798,ReencryptionUpdater.java,it contains,1,1,summary
799,ReencryptionUpdater.java,"all the submitted futures, and statistics about how far the futures are",0,1,summary
1056,TestHDFSServerPorts.java,this test checks correctness of port usage by hdfs components,1,1,summary
1057,TestHDFSServerPorts.java,"namenode, datanode, secondarynamenode and backupnode.",0,1,summary
801,ReencryptionUpdater.java,class representing the task for one batch of a re encryption command.,1,1,summary
802,ReencryptionUpdater.java,it,0,1,summary
803,ReencryptionUpdater.java,also contains statistics about how far this single batch has been executed.,1,1,summary
804,ReencryptionUpdater.java,class that encapsulates re encryption details of a file.,0,1,summary
1066,TestKeyInputStream.java,tests @link keyinputstream .,1,1,summary
554,HadoopIllegalArgumentException.java,indicates that a method has been passed illegal or invalid argument.,0,1,summary
1069,TestMetricsVisitor.java,test the metric visitor interface,1,1,summary
1071,TestNativeAzureFileSystemUploadLogic.java,"tests for the upload, buffering and flush logic in wasb.",0,1,summary
560,HashResolver.java,order the destinations based on consistent hashing.,1,1,summary
564,IDataLoader.java,an idataloader loads data on demand,0,1,summary
1077,TestOmMultipartKeyInfoCodec.java,this class tests ommultipartkeyinfocodec.,1,1,summary
566,InconsistentS3ClientFactory.java,s3 client factory used for testing with eventual consistency fault injection.,0,1,summary
1079,TestOMVolumeRequest.java,base test class for volume request.,1,1,summary
1082,TestOzoneNativeAuthorizer.java,test class for @link ozonenativeauthorizer .,0,1,summary
61,ApplicationStateData.java,contains all the state data that needs to be stored persistently for an application,1,1,summary
1085,TestProtoBufRpc.java,test for testing protocol buffer based rpc mechanism.,0,1,summary
574,InfoKeyHandler.java,executes info object.,1,1,summary
830,RegistryInternalConstants.java,internal constants for the registry.,0,1,summary
834,RegistryOperations.java,registry operations,1,1,summary
1091,TestRDBStore.java,rdbstore tests.,0,1,summary
579,ITestAbfsReadWriteAndSeek.java,"test read, write and seek.",1,1,summary
1348,TimelineStorageMonitor.java,this abstract class is for monitoring health of timeline storage.,0,1,summary
1093,TestRegistrySecurityHelper.java,test for registry security operations,1,1,summary
837,ResourceBlacklistRequest.java,@link resourceblacklistrequest encapsulates the list of resource names which should be added or removed from the em blacklist em of resources for the application.,0,1,summary
70,BalancingPolicy.java,balancing policy.,1,1,summary
1352,TonyRuntimeFactory.java,implementation of runtimefactory with tony runtime,0,1,summary
584,ITestAzureNativeContractSeek.java,contract test.,1,1,summary
1099,TestRouterWebServiceUtil.java,test class to validate routerwebserviceutil methods.,0,1,summary
1355,TypedEvent.java,basic event implementation to implement custom events.,1,1,summary
844,ResourceRequestsJsonVerifications.java,performs value verifications on,0,1,summary
1101,TestS3BucketManager.java,tests for s3 bucket manager.,1,1,summary
845,ResourceRequestsJsonVerifications.java,@link org^apache.hadoop^yarn.server^resourcemanager.webapp^dao.resourcerequestinfo,0,1,summary
846,ResourceRequestsJsonVerifications.java,objects against the values of @link resourcerequest .,1,1,summary
591,ITestListPerformance.java,test list performance.,0,1,summary
1104,TestSaveNamespace.java,test various failure scenarios during savenamespace operation.,1,1,summary
1360,UniformSizeInputFormat.java,"uniformsizeinputformat extends the inputformat class, to produce",0,1,summary
81,BaseRouterWebServicesTest.java,base class for all the routerrmadminservice test cases.,1,1,summary
1361,UniformSizeInputFormat.java,input splits for distcp.,0,1,summary
593,ITestS3Select.java,test the s3 select feature with some basic sql commands.,1,1,summary
850,ResourceRequestsJsonVerifications.java,builder class for @link resourcerequestsjsonverifications .,0,1,summary
86,BatchedRequests.java,a grouping of scheduling requests which are sent to the placementalgorithm,1,1,summary
87,BatchedRequests.java,to place as a batch.,0,1,summary
600,KerberosDelegationTokenAuthenticator.java,the code kerberosdelegationtokenauthenticator code provides support for,1,1,summary
601,KerberosDelegationTokenAuthenticator.java,kerberos spnego authentication mechanism and support for hadoop delegation,0,1,summary
1370,Utils.java,a utility class.,0,1,summary
602,KerberosDelegationTokenAuthenticator.java,token operations.,0,1,summary
91,BatchedRequests.java,iterator type.,0,1,summary
1371,Utils.java,it provides,0,1,summary
1372,Utils.java,a path filter utility to filter out output part files in the output dir,0,1,summary
352,DelegationTokenIdentifier.java,a delegation token identifier that is specific to hdfs.,0,1,summary
98,BlockPlacementStatusWithNodeGroup.java,an implementation of @see blockplacementstatus for,0,1,summary
1122,TestSCMDatanodeHeartbeatDispatcher.java,this class tests the behavior of scmdatanodeheartbeatdispatcher.,0,1,summary
1124,TestSequenceFile.java,support for flat files of binary key value pairs.,0,1,summary
868,RMAdminRequestInterceptor.java,"defines the contract to be implemented by the request intercepter classes,",0,1,summary
613,LocalizationStatusPBImpl.java,pb impl of @link localizationstatus .,0,1,summary
103,BlocksMap.java,this class maintains the map from a block to its metadata.,0,1,summary
1127,TestSeveralNameNodes.java,test that we can start several and run with namenodes on the same minicluster,0,1,summary
616,LocatedFileStatus.java,this class defines a filestatus that includes a file s block locations.,0,1,summary
873,RSLegacyRawErasureCoderFactory.java,a raw coder factory for the legacy raw reed solomon coder in java.,0,1,summary
1130,TestSwiftFileSystemContract.java,this is the full filesystem contract test which requires the,0,1,summary
362,DfsServlet.java,a base class for the servlets in dfs.,0,1,summary
618,LoggedTask.java,a @link loggedtask represents a hadoop task that is part of a hadoop job.,0,1,summary
1131,TestSwiftFileSystemContract.java,default config set up to point to a filesystem.,0,1,summary
364,DiskBalancerCluster.java,diskbalancercluster represents the nodes that we are working against.,0,1,summary
109,BlockUtils.java,utils functions to help block functions.,0,1,summary
878,SchedulerQueueManager.java,context of the queues in scheduler.,0,1,summary
880,SequenceFileRecordReader.java,an @link recordreader for @link sequencefile s.,0,1,summary
883,ShellBasedUnixGroupsMapping.java,a simple shell based implementation of @link groupmappingserviceprovider that exec s the code groups code shell command to fetch the group,0,1,summary
116,CapacitySchedulerPlanFollower.java,this class implements a @link planfollower .,0,1,summary
117,CapacitySchedulerPlanFollower.java,"this is invoked on a timer, and",0,1,summary
629,LogParserUtil.java,common utility functions for @link logparser .,0,1,summary
118,CapacitySchedulerPlanFollower.java,it is in charge to publish the state of the @link plan s to the underlying,0,1,summary
119,CapacitySchedulerPlanFollower.java,@link capacityscheduler .,0,1,summary
887,StandardSocketFactory.java,specialized socketfactory to create sockets with a socks proxy,0,1,summary
1144,TestTaskCommit.java,special committer that does not cleanup temporary files in,0,1,summary
1400,VolumeSet.java,volumeset to manage hdds volumes in a datanode.,0,1,summary
1145,TestTaskCommit.java,aborttask,0,1,summary
889,StateStoreFileSystemImpl.java,@link statestoredriver implementation based on a filesystem.,0,1,summary
634,LRUCacheHashMap.java,lru cache with a configurable maximum cache size and access order.,0,1,summary
1147,TestTaskCommit.java,files left behind in aborttask.,0,1,summary
1403,WritableComparator.java,a comparator for @link writablecomparable s.,0,1,summary
1149,TestTaskCommit.java,find these files and hence short circuit aborttask.,0,1,summary
637,MapContext.java,the context that is given to the @link mapper .,0,1,summary
898,StreamBaseRecordReader.java,shared functionality for hadoopstreaming formats.,0,1,summary
1158,TestTaskContext.java,tests context api and @link statusreporter#getprogress via @link taskattemptcontext#getprogress api .,0,1,summary
1161,TestTopCLI.java,test class for topcli.,0,1,summary
649,MetaBlockAlreadyExists.java,exception meta block with the same name already exists.,0,1,summary
1163,TestUpgradeDomainBlockPlacementPolicy.java,end to end test case for upgrade domain,0,1,summary
651,MetricsCache.java,a metrics cache for sinks that don t support sparse updates.,0,1,summary
909,StructureGenerator.java,this program generates a random namespace structure with the following,0,1,summary
401,DistributedSchedulingAllocateRequest.java,"object used by the application master when distributed scheduling is enabled,",0,1,summary
658,NativeSingleLineParser.java,this sample parser will parse the sample log and extract the resource,0,1,summary
659,NativeSingleLineParser.java,skyline.,0,1,summary
1173,TextInputFormat.java,an @link inputformat for plain text files.,0,1,summary
1174,TextInputFormat.java,files are broken into lines.,0,1,summary
1430,YarnAuthorizationProvider.java,an implementation of the interface will provide authorization related,0,1,summary
1431,YarnAuthorizationProvider.java,information and enforce permission check.,0,1,summary
408,DockerKillCommand.java,encapsulates the docker kill command and its command line arguments.,0,1,summary
410,EditLogTailer.java,editlogtailer represents a thread which periodically reads from edits,0,1,summary
411,EditLogTailer.java,journals and applies the transactions contained within to a given,0,1,summary
412,EditLogTailer.java,fsnamesystem.,0,1,summary
669,Nfs3Status.java,success or error status is reported in nfs3 responses.,0,1,summary
671,Node2ObjectsMap.java,this data structure maintains the list of containers that is on a datanode.,0,1,summary
1186,TimelineDataToRetrieve.java,encapsulates information regarding which data to retrieve for each entity,0,1,summary
1187,TimelineDataToRetrieve.java,while querying.,0,1,summary
1443,YarnServiceJobSubmitter.java,submit a job to cluster.,0,1,summary
1188,TimelineDataToRetrieve.java,br,0,1,summary
1189,TimelineDataToRetrieve.java,data to retrieve contains the following br,0,1,summary
677,NodeUpdateType.java,p,0,1,summary
682,NullOutputFormat.java,consume all outputs and put them in dev null.,0,1,summary
685,OMNodeDetails.java,this class stores om node details.,0,1,summary
686,OMNodeDetails.java,builder class for omnodedetails.,0,1,summary
175,ComparableVersion.java,generic implementation of version comparison.,0,1,summary
690,OpportunisticContainersStatusPBImpl.java,protocol buffer implementation of opportunisticcontainersstatus.,0,1,summary
692,OzoneObj.java,class representing an unique ozone object.,0,1,summary
697,Parser.java,a class for parsing outputs,0,1,summary
703,PartitionResourcesInfo.java,this class represents queue user resource usage info for a given partition,0,1,summary
960,SwiftBadRequestException.java,thrown to indicate that data locality can t be calculated or requested path is incorrect.,0,1,summary
450,ErasureCodingPolicyManager.java,this manages erasure coding policies predefined and activated in the system.,0,1,summary
964,SwiftRestClient.java,this implements the client side of the swift rest api.,0,1,summary
709,ProcessIdFileReader.java,helper functionality to read the pid from a file.,0,1,summary
711,QuasiMonteCarlo.java,a map reduce program that estimates the value of pi,0,1,summary
200,ComparableVersion.java,represents a numeric item in the version item list.,0,1,summary
201,ComparableVersion.java,"represents a string in the version item list, usually a qualifier.",0,1,summary
202,ComparableVersion.java,represents a version list item.,0,1,summary
203,ComparableVersion.java,this class is used both for the global item list and for sub lists which start,0,1,summary
459,EventWatcher.java,event watcher the re send a message after timeout.,0,1,summary
204,ComparableVersion.java,with number in the version specification .,0,1,summary
477,FairOrderingPolicy.java,an orderingpolicy which orders schedulableentities for fairness see,0,1,summary
478,FairOrderingPolicy.java,fairscheduler,0,1,summary
479,FairOrderingPolicy.java,"fairsharepolicy , generally, processes with lesser usage are lesser.",0,1,summary
239,ConfigurationException.java,exception to throw in case of a configuration problem.,0,1,summary
500,FederationPolicyException.java,generic policy exception.,0,1,summary
245,CpuTimeTracker.java,utility for sampling and computing cpu usage.,0,1,summary
1015,TableConfig.java,class that maintains table configuration.,0,1,summary
248,DBProfile.java,user visible configs based rocksdb tuning page.,0,1,summary
1017,TestAddBlock.java,test addblockop is written and read correctly,0,1,summary
506,FederationStateStoreInvalidInputException.java,"exception thrown by the @code federationmembershipstatestoreinputvalidator ,",0,1,summary
1020,TestAdlContractDeleteLive.java,test delete contract test.,0,1,summary
1022,TestAdlContractSeekLive.java,test seek operation on adl file system.,0,1,summary
511,FileSystemApplicationHistoryStore.java,file system implementation of @link applicationhistorystore .,0,1,summary
1473,JavaStreamingTestExample.java,"perform streaming testing using welch s 2 sample t test on a stream of data, where the data",0,1,summary
1505,KVStore.java,abstraction for a local key value store for storing app data.,1,1,summary
1474,JavaStreamingTestExample.java,stream arrives as text files in a directory.,0,1,summary
1475,JavaStreamingTestExample.java,stops when the two groups are statistically,1,1,summary
1476,JavaStreamingTestExample.java,significant p value 005 or after a user specified timeout in number of batches is exceeded.,0,1,summary
1445,ChunkFetchSuccess.java,response to @link chunkfetchrequest when a chunk exists and has been successfully fetched.,1,1,summary
1573,LevelDB.java,implementation of kvstore that uses leveldb as the underlying data store.,0,1,summary
1576,LocalDiskShuffleDataIO.java,implementation of the @link shuffledataio plugin system that replicates the local shuffle,1,1,summary
1577,LocalDiskShuffleDataIO.java,storage and index file functionality that has historically been used from spark 24 and earlier.,0,1,summary
1451,ExecutorPlugin.java,a plugin which can be automatically instantiated within each spark executor.,0,1,summary
1581,MessageWithHeader.java,a wrapper message that holds two separate pieces a header and a body .,0,1,summary
1584,RemoveBlocks.java,request to remove a set of blocks.,0,1,summary
1586,StreamHandle.java,identifier for a fixed number of chunks to read from a stream created by an open blocks,0,1,summary
1587,StreamHandle.java,message.,0,1,summary
1592,TBoolColumn.java,"the set of fields this struct contains, along with convenience methods for finding and manipulating them.",0,1,summary
1594,UploadBlockStream.java,"a request to upload a block, which the destination should receive as a stream.",0,1,summary
1469,FlatMapFunction.java,a function that returns zero or more output records from each input record.,0,1,summary
2179,IScannerInfoConsoleParser.java,parses a line of command output looking for scanner info entries.,0,1,summary
1667,AutoconfMacroParameterListValidator.java,this class provides the macro call parameter parsing for the autoconf editor hover,1,1,summary
1798,CPropertyTester.java,a property tester that determines if a file is an executable or a c c project.,0,1,summary
2440,SCDOptionsEnum.java,enumeration class for scanner configuration affecting command line options,1,1,summary
1800,CUIPreferenceInitializer.java,this class implements the setting of the cui initial preference store settings.,0,1,summary
2058,ICPPAliasTemplateInstance.java,represents an instance of an alias template 145.7 .,1,1,summary
2187,ITestItem.java,represents status of the test item.,0,1,summary
1675,BindingClassifierTest.java,tests for @link bindingclassifier .,1,1,summary
2445,SourceLookupTest.java,tests that interaction with source lookups works as expected.,0,1,summary
1678,C99BuildASTParserAction.java,semantic actions called by the c99 parser to build an ast.,1,1,summary
1808,DefaultEnvironmentContextInfo.java,the default implementation of the icontextinfo used by the environment variable provider,0,1,summary
2066,ICPPASTLinkageSpecification.java,this interface represents a linkage specification.,1,1,summary
1682,CConfigurationDescriptionCache.java,cconfigurationdescriptioncache is a proxy class for serialization of configuration description data.,0,1,summary
2067,ICPPASTLinkageSpecification.java,eg extern c .,1,1,summary
2195,IViewInMemory.java,provides the ability to view a variable in the memory view.,0,1,summary
2579,TriggerCellModifier.java,cell modifier used to edit the trigger value.,1,1,summary
2199,LanguageSettingsProvidersSerializer.java,helper class handling serialization and notifications for language settings entries @link iclanguagesettingentry .,0,1,summary
2200,LanguageSettingsProvidersSerializer.java,those are for readability of xml only,1,1,summary
2201,LanguageSettingsProvidersSerializer.java,dummy class to represent ill defined provider.,0,1,summary
2585,UncallCommandHandler.java,command handler to trigger an uncall operation,1,1,summary
2074,ICPPASTVirtSpecifier.java,a virt specifier at the end of a function declaration.,0,1,summary
2202,LanguageSettingsProvidersSerializer.java,those are for readability of xml only,1,1,summary
2204,LanguageSettingsProvidersSerializer.java,those are for readability of xml only,0,1,summary
2205,LanguageSettingsProvidersSerializer.java,wrapper for workspace providers to ensure level of indirection.,1,1,summary
2589,UPCKeyword.java,enumeration of keywords that upc adds to c99.,0,1,summary
2209,LanguageSettingsProvidersSerializer.java,those are for readability of xml only,1,1,summary
2593,UPCLanguage.java,"implementation of the ilanguage extension point, adds upc as a language to cdt.",0,1,summary
2210,LanguageSettingsProvidersSerializer.java,language settings change event implementation.,1,1,summary
1828,DocCommentOwnerBlock.java,project property page for setting documentation comment owner.,0,1,summary
2597,VMHasChildrenUpdate.java,helper class implementation of the @link ihaschildrenupdate update object.,1,1,summary
2603,WhiteSpaceOptions.java,manage code formatter white space options on a higher level.,0,1,summary
2093,IDsfDebugServicesFactory.java,a factory to create dsf services.,0,1,summary
1842,DummyPage.java,this class is just to replace a category reference in org^eclipse.cdt^ui that we exclude because we do not bring in the org^eclipse.cdt^managedbuild.ui plug in.,0,1,summary
2100,IGDBTraceControl.java,the tracecontrol service provides access to the debugger tracing functionality.,0,1,summary
2237,MIAsyncErrorProcessor.java,this class handles these type of situations by firing mierrorevent when such an error appears.,0,1,summary
2623,WordIgnoreProposal.java,proposal to ignore the word during the current editing session.,0,1,summary
1855,FoldingConfigurationBlock.java,configures c editor folding preferences.,0,1,summary
2625,WorkingCopyTests.java,contains unit test cases for working copies.,0,1,summary
1859,FormattedValueTests.java,tests to verify the operation of formattedvaluesvmutil,0,1,summary
2382,MultiLaunchConfigurationTabGroup.java,tab group for launch group.,0,1,summary
2127,IInclude.java,represents an include declaration in a c translation unit.,0,1,summary
1873,GdbExpressionVMProvider.java,a specialization of expressionvmprovider that uses a gdb specific variable vm,0,1,summary
1879,GDBSourceLookup.java,default implementation of @link igdbsourcelookup,0,1,summary
2392,PDOMMacroReferenceName.java,"represents declarations, definitions and references to bindings, except for macros.",0,1,summary
2140,IMIBackend.java,service for controlling the back end process.,0,1,summary
1759,ClangToolChain.java,the clang toolchain.,0,1,summary
2401,ProcessLauncher.java,this class implements external process launching for internal builder.,0,1,summary
2146,IMSASTDeclspecList.java,"represents a microsoft attribute specifier, introduced by declspec.",0,1,summary
1634,AddBreakpointRulerAction.java,ruler action to add breakpoint with a dialog properties.,0,1,summary
2531,SpellEvent.java,spell event fired for words detected by a spell check iterator.,0,1,summary
1636,AddLineBreakpointActionDelegate.java,a delegate for the add line breakpoint action.,0,1,summary
2533,StandardCElementLabelProvider.java,celementlabelprovider that respects settings from the appearance preference page.,0,1,summary
1766,CommonBuildTab.java,common utilities for core build launch configuration tabs.,0,1,summary
2024,GroupDebugContextsCommandHandler.java,command handler to trigger grouping of debug contexts operation.,0,1,summary
1641,AddMemoryBlocks.java,adds memory blocks to the memory view.,0,1,summary
2154,INodeFactory.java,control flow graph node factory,0,1,summary
2410,QtPDOMNameIndex.java,a data structure for storing lists of pdomnames that are indexed by a string key.,0,1,summary
2539,StringDialogField.java,dialog field containing a label and a text control.,0,1,summary
2028,IBHistoryAction.java,action used for the include browser forward backward buttons,0,1,summary
1774,CoreBuildGenericLaunchConfigProvider.java,core launch configuration provider used by generic target types.,0,1,summary
2288,MIDataListRegisterNames.java,show a list of register names for the current target.,0,1,summary
2544,ToggleDynamicPrintfAdapter.java,toggles a dynamic printf in a c c editor.,0,1,summary
1778,CPPASTProblem.java,c specific implementation allows actions to visit the problem.,0,1,summary
2548,TracepointActionsPropertyPage.java,property page for tracepoint actions,0,1,summary
1780,CPPASTReferenceOperator.java,reference operator for declarators.,0,1,summary
2424,ReturnCheckerTest.java,test for @see returncheckertest class,0,1,summary
2552,TracingConsole.java,a console that is used to print traces.,0,1,summary
2553,TracingConsole.java,the console is attached to a launch.,0,1,summary
1787,CPPImplicitVariable.java,represents a variable implicitly created in c code.,0,1,summary
2302,MIEnvironmentDirectory.java,add directory pathdir to beginning of search path for source files.,0,1,summary
2175,IRegisters2.java,service extension of iregisters to manage user defined register groups,0,1,summary
3585,ReserializingTestCollectionGenerator.java,reserializes the sets created by another test set generator.,0,1,summary
2689,AbstractSortedKeySortedSetMultimap.java,basic implementation of a @link sortedsetmultimap with a sorted key set.,1,1,summary
3074,CloseablesTest.java,unit tests for @link closeables .,0,1,summary
3205,ForwardingBlockingDequeTest.java,test for @link forwardingblockingdeque,1,1,summary
3590,Resources.java,provides utility methods for working with resources in the classpath.,0,1,summary
3209,ForwardingImmutableSet.java,gwt implementation of @link immutableset that forwards to another @code set implementation.,1,1,summary
2697,ArbitraryInstances.java,"supplies an arbitrary default instance for a wide range of types, often useful in testing",0,1,summary
3082,CollectionTestSuiteBuilder.java,concrete instantiation of @link abstractcollectiontestsuitebuilder for testing collections that,1,1,summary
2698,ArbitraryInstances.java,utilities.,0,1,summary
3083,CollectionTestSuiteBuilder.java,do not have a more specific tester like @link listtestsuitebuilder or @link,1,1,summary
3084,CollectionTestSuiteBuilder.java,settestsuitebuilder .,0,1,summary
3214,ForwardingQueueTest.java,tests for @code forwardingqueue .,1,1,summary
2832,CacheBuilder.java,a builder of @link loadingcache and @link cache instances having any combination of the,0,1,summary
4115,SortedSetNavigationTester.java,a generic junit test which tests operations on a sortedset.,1,1,summary
3220,GwtTestSuite.java,runs all gwt tests.,0,1,summary
3095,ConflictingRequirementsException.java,thrown when requirements on a tester method or class conflict with each other.,1,1,summary
3608,SmoothRateLimiter.java,"the primary feature of a ratelimiter is its stable rate , the maximum rate that is should",0,1,summary
3609,SmoothRateLimiter.java,allow at normal conditions.,1,1,summary
3226,HashFunctionEnum.java,an enum that contains all of the known hash functions.,0,1,summary
3610,SmoothRateLimiter.java,"this is enforced by throttling incoming requests as needed, ie",1,1,summary
3099,CountingOutputStream.java,an outputstream that counts the number of bytes written.,0,1,summary
3611,SmoothRateLimiter.java,"compute, for an incoming request, the appropriate throttle time, and make the calling thread",1,1,summary
3612,SmoothRateLimiter.java,wait as much.,0,1,summary
4126,SubscriberTest.java,tests for @link subscriber .,1,1,summary
3230,HostAndPort.java,an immutable representation of a host and port.,0,1,summary
3105,DescendingMultiset.java,a skeleton implementation of a descending multiset.,1,1,summary
4134,TesterRequirements.java,encapsulates the constraints that a class under test must satisfy in order for a tester method to,0,1,summary
4135,TesterRequirements.java,be run against that class.,1,1,summary
3113,EqualsTester.java,tester for equals and hashcode methods of a class.,0,1,summary
4143,WrappingScheduledExecutorService.java,an abstract @code scheduledexecutorservice that allows subclasses to @linkplain,1,1,summary
4144,WrappingScheduledExecutorService.java,#wraptask callable wrap tasks before they are submitted to the underlying executor.,0,1,summary
2746,ArrayListMultimapGwtSerializationDependencies.java,a dummy superclass to support gwt serialization of the element types of an @link,1,1,summary
2747,ArrayListMultimapGwtSerializationDependencies.java,arraylistmultimap .,0,1,summary
3772,SmoothRateLimiter.java,"p in summary, the time it takes to move to the left spend k permits , is equal to the area of",0,1,summary
3773,SmoothRateLimiter.java,the function of width k.,0,1,summary
3390,MultimapBuilderTest.java,tests for @link multimapbuilder .,0,1,summary
3394,NullsLastOrdering_CustomFieldSerializer.java,this class implements the gwt serialization of @link nullslastordering .,0,1,summary
3398,ObjectCountHashMap.java,objectcounthashmap is an implementation of @code abstractobjectcountmap that uses arrays to,0,1,summary
2630,AbstractCollectionTester.java,base class for collection testers.,0,1,summary
3399,ObjectCountHashMap.java,store key objects and count values.,0,1,summary
2760,AtomicDoubleArrayTest.java,unit test for @link atomicdoublearray .,0,1,summary
2636,AbstractListeningExecutorService.java,abstract @link listeningexecutorservice implementation that creates @link listenablefuture,0,1,summary
2637,AbstractListeningExecutorService.java,instances for each @link runnable and @link callable submitted to it.,0,1,summary
2765,BaseEncodingBenchmark.java,benchmark for @code baseencoding performance.,0,1,summary
2767,BloomFilter.java,a bloom filter for instances of @code t .,0,1,summary
2768,BloomFilter.java,a bloom filter offers an approximate containment test,0,1,summary
2769,BloomFilter.java,"with one sided error if it claims that an element is contained in it, this might be in error,",0,1,summary
3282,ImmutableSetHashFloodingDetectionBenchmark.java,benchmark of implementations of @link immutableset#hashfloodingdetected object .,0,1,summary
3410,PeekingIterator.java,an iterator that supports a one element lookahead while iterating.,0,1,summary
2770,BloomFilter.java,"but if it claims that an element is i not i contained in it, then this is definitely true.",0,1,summary
3285,ImmutableTable_CustomFieldSerializerBase.java,this class contains static utility methods for writing @link immutabletable gwt field,0,1,summary
3286,ImmutableTable_CustomFieldSerializerBase.java,serializers.,0,1,summary
3802,SmoothRateLimiter.java,"the primary feature of a ratelimiter is its stable rate , the maximum rate that is should",0,1,summary
3803,SmoothRateLimiter.java,allow at normal conditions.,0,1,summary
2652,AbstractLoadingCache.java,this class provides a skeletal implementation of the @code cache interface to minimize the,0,1,summary
3804,SmoothRateLimiter.java,"this is enforced by throttling incoming requests as needed, ie",0,1,summary
3293,LazyStackTraceBenchmark.java,quick and dirty benchmark of @link throwables#lazystacktrace throwable .,0,1,summary
3805,SmoothRateLimiter.java,"compute, for an incoming request, the appropriate throttle time, and make the calling thread",0,1,summary
3422,Preconditions.java,static convenience methods that help a method or constructor check whether it was invoked,0,1,summary
3806,SmoothRateLimiter.java,wait as much.,0,1,summary
3423,Preconditions.java,"correctly that is, whether its i preconditions i were met .",0,1,summary
3040,CacheLoaderTest.java,unit tests for @link cacheloader .,0,1,summary
3300,LongMathBenchmark.java,benchmarks for the non rounding methods of @code longmath .,0,1,summary
3046,ClassToInstanceMap.java,"a map, each entry of which maps a java a href http tinyurl^com 2cmwkz raw type a to an",0,1,summary
3047,ClassToInstanceMap.java,instance of that type.,0,1,summary
3304,MapPutAllTester.java,a generic junit test which tests @code putall operations on a map.,0,1,summary
3048,ClassToInstanceMap.java,"in addition to implementing @code map , the additional type safe",0,1,summary
3049,ClassToInstanceMap.java,operations @link #putinstance and @link #getinstance are available.,0,1,summary
3182,FeatureSpecificTestSuiteBuilder.java,"creates, based on your criteria, a junit test suite that exhaustively tests the object generated",0,1,summary
3183,FeatureSpecificTestSuiteBuilder.java,"by a g, selecting appropriate tests by matching them against specified features.",0,1,summary
3313,MapSerializationTester.java,basic serialization test for maps.,0,1,summary
3317,MultimapBuilder.java,a builder for a multimap implementation that allows customization of the backing map and value,0,1,summary
3318,MultimapBuilder.java,collection implementations used in a particular multimap.,0,1,summary
2681,AbstractMultimap.java,"a skeleton @code multimap implementation, not necessarily in terms of a @code map .",0,1,summary
3580,RegularImmutableList_CustomFieldSerializer.java,this class implements the gwt serialization of @link regularimmutablelist .,0,1,summary
2685,AbstractMultimapTester.java,superclass for all @code multimap testers.,0,1,summary
4514,SpiUtils.java,utilities for testing the multibinder & mapbinder extension spi.,0,1,summary
4179,Binder.java,collects configuration information primarily i bindings i which will be used to create an,1,1,summary
4180,Binder.java,@link injector .,0,1,summary
4181,Binder.java,guice provides this object to your application s @link module implementors so,1,1,summary
4182,Binder.java,they may each contribute their own bindings and other registrations.,0,1,summary
4502,ManagedFilterPipeline.java,"central routing dispatch class handles lifecycle of managed filters, and delegates to the servlet",1,1,summary
4151,AbstractModule.java,a support class for @link module s which reduces repetition and results in a more readable,0,1,summary
4487,Element.java,an internal binding annotation applied to each element in a multibinding.,0,1,summary
4503,ManagedFilterPipeline.java,pipeline.,0,1,summary
4152,AbstractModule.java,configuration.,0,1,summary
4473,DefaultMethodInterceptionTest.java,tests for interception of default methods.,0,1,summary
4508,PrivateElementProcessor,handles @code binder^newprivatebinder elements.,0,1,summary
5376,Window.java,@link ui#addwindow window .,0,1,summary
4864,RpcDataProviderExtension.java,implemented as an extension hardcoded to support a specific connector type.,1,1,summary
4610,ClientRpcWriter.java,serializes @link clientrpc client rpc invocations to json.,0,1,summary
4995,VaadinServiceInitListener.java,listener for @link vaadinservice initialization events.,1,1,summary
4996,VaadinServiceInitListener.java,the listener can,0,1,summary
4997,VaadinServiceInitListener.java,add listeners and request handlers the service.,1,1,summary
4870,RpcDataProviderExtension.java,class for keeping track of current items and valuechangelisteners.,0,1,summary
4616,ColorPickerServerRpc.java,rpc interface for abstractcolorpicker.,1,1,summary
4620,ComboBoxState.java,shared state for the combobox component.,0,1,summary
5518,XhrConnectionError.java,xhrconnectionerror provides detail about an error which occurred during an,1,1,summary
4750,HeaderRow.java,a header row in a grid.,0,1,summary
5519,XhrConnectionError.java,xhr request to the server.,1,1,summary
4624,DeclarativeValueProvider.java,value provider class for declarative support.,0,1,summary
4626,DeclarativeValueProvider.java,provides a straightforward mapping between an item and its value.,1,1,summary
4756,InternalContainerAnnotationForJS.java,annotation enabling using multiple @link javascript @javascript,0,1,summary
4757,InternalContainerAnnotationForJS.java,annotations.,1,1,summary
4633,DoubleRangeValidator.java,validator for validating that a @link double is inside a given range.,0,1,summary
5146,VScrollTable.java,overwrites onbrowserevent function on focusablescrollpanel to give event,1,1,summary
4767,MyPickerConnector.java,mini tutorial code for,0,1,summary
4640,FooterDoubleClickHandler.java,handler for @link griddoubleclickevent s that happen in the footer of the,1,1,summary
4641,FooterDoubleClickHandler.java,grid.,0,1,summary
5025,VGridLayout.java,private helper class.,1,1,summary
4901,SelectAllEvent.java,"a select all event, fired by the grid when it needs all rows in data source",0,1,summary
4902,SelectAllEvent.java,"to be selected, or when all rows have been selected and are now deselected.",1,1,summary
4649,Grid.java,a grid component for displaying tabular data.,0,1,summary
4524,AbstractFocusable.java,an abstract base class for focusable components.,1,1,summary
5038,VScrollTable.java,vscrolltable is a flowpanel having two widgets in it tablehead component,0,1,summary
5039,VScrollTable.java,scrollpanel,1,1,summary
4784,PopupView.java,a component for displaying a two different views to data.,0,1,summary
5040,VScrollTable.java,"tablehead contains table s header and widgets logic for resizing,",1,1,summary
4785,PopupView.java,the minimized view,0,1,summary
5041,VScrollTable.java,reordering and hiding columns.,0,1,summary
4786,PopupView.java,"is normally used to render the component, and when it is clicked the full",0,1,summary
5042,VScrollTable.java,scrollpanel contains vscrolltablebody object which handles content.,0,1,summary
4787,PopupView.java,view is displayed on a popup.,0,1,summary
4915,ShouldWriteDataDelegate.java,delegate used by @link designcontext to determine whether container data,0,1,summary
5043,VScrollTable.java,to save,0,1,summary
4788,PopupView.java,the inner class @link popupview^content is,0,1,summary
4916,ShouldWriteDataDelegate.java,should be written out for a component.,0,1,summary
5044,VScrollTable.java,"some bandwidth and to improve clients responsiveness with loads of data, in",0,1,summary
4533,AbstractMultiSelectState.java,shared state for @code abstractmultiselect .,0,1,summary
4789,PopupView.java,used to deliver contents to this component.,0,1,summary
5045,VScrollTable.java,vscrolltablebody all rows are not necessary rendered.,0,1,summary
5046,VScrollTable.java,there are spacers in,0,1,summary
5047,VScrollTable.java,vscrolltablebody to use the exact same space as non rendered rows would use.,0,1,summary
5048,VScrollTable.java,this way we can use seamlessly traditional scrollbars and scrolling to fetch,0,1,summary
5049,VScrollTable.java,more rows instead of paging .,0,1,summary
4540,AbstractProperty.java,abstract base class for @link property implementations.,0,1,summary
4541,AbstractProperty.java,handles listener management for @link valuechangelistener s and,0,1,summary
4542,AbstractProperty.java,@link readonlystatuschangelistener s.,0,1,summary
4937,TargetDetailsImpl.java,a hashmap backed implementation of @link targetdetails for termina^^^n.,0,1,summary
4944,UnknownExtensionConnector.java,connector used as a placeholder for extensions that are not present in the,0,1,summary
4945,UnknownExtensionConnector.java,widgetset.,0,1,summary
4566,AbstractSingleComponentContainerState.java,default shared state implementation for abstractsinglecomponentcontainer.,0,1,summary
4952,VaadinPortlet.java,portlet 20 base class.,0,1,summary
4953,VaadinPortlet.java,this replaces the servlet in servlet portlet 10,0,1,summary
4954,VaadinPortlet.java,deployments and handles various portlet requests from the browser.,0,1,summary
4575,ApplicationConfiguration.java,helper class for reading configuration options from the bootstap,0,1,summary
4578,ApplicationConfiguration.java,wraps a native javascript object containing fields for an error message.,0,1,summary
4584,BootstrapPageResponse.java,a representation of a bootstrap page being generated.,0,1,summary
4847,PortletDummyRequestHandler.java,request handler which provides a dummy html response to any resource request,0,1,summary
4848,PortletDummyRequestHandler.java,with the resource id dummy.,0,1,summary
5362,VTextArea.java,this class represents a multiline textfield textarea .,0,1,summary
4596,ButtonRenderer.java,a renderer that displays a button with a textual caption.,0,1,summary
4857,RequiredTextFieldTest.java,test for ^v required style,0,1,summary
4731,GridManyColumnsV7.java,test ui for grid initial rendering performance profiling.,0,1,summary
5373,Window.java,a component that represents a floating popup window that can be added to a,0,1,summary
4733,GridSelectionModel.java,the server side interface that controls grid s selection state.,0,1,summary
4861,RpcDataProviderExtension.java,provides vaadin server side container data source to a,0,1,summary
5374,Window.java,@link ui .,0,1,summary
4862,RpcDataProviderExtension.java,@link com^vaadin.v7^client.connectors^gridconnector gridconnector .,0,1,summary
5375,Window.java,a window is added to a @code ui using,0,1,summary
4863,RpcDataProviderExtension.java,this is currently,0,1,summary
2594,UPCLanguage.java,@author mike kucera,0,1,Ownership
1762,ClangToolChain.java,@author dschaefer,1,1,Ownership
2180,IScannerInfoConsoleParser.java,@author vhirsl,0,1,Ownership
2405,ProcStatParser.java,@author marc dumais,1,1,Ownership
1669,AutoconfMacroParameterListValidator.java,@author jjohnstn,0,1,Ownership
2441,SCDOptionsEnum.java,@author vhirsl,1,1,Ownership
1771,ContainerTabModel.java,@author jjohnstn,0,1,Ownership
1836,DOMGCCParserExtensionTestSuite.java,@author jcamelon,0,1,Ownership
1838,DOMParserTestSuite.java,@author jcamelon,0,1,Ownership
2414,RenameCSourceFolderChange.java,@author ee4 graf ifs,0,1,Ownership
1679,C99BuildASTParserAction.java,@author mike kucera,0,1,Ownership
2386,PDOMDependencyGenerator.java,@author doug schaefer,0,1,Ownership
2590,UPCKeyword.java,@author mike kucera,0,1,Ownership
2046,ICodeReaderFactory.java,@author jcamelon,0,1,Ownership
3587,ReserializingTestCollectionGenerator.java,@author jesse wilson,0,1,Ownership
3332,MultimapBuilder.java,@author louis wasserman,1,1,Ownership
2692,AbstractSortedKeySortedSetMultimap.java,@author louis wasserman,0,1,Ownership
3077,CloseablesTest.java,@author michael lancaster,1,1,Ownership
3206,ForwardingBlockingDequeTest.java,@author emily soldal,0,1,Ownership
3210,ForwardingImmutableSet.java,@author hayward chan,1,1,Ownership
3595,Resources.java,@author chris nokleberg,0,1,Ownership
3596,Resources.java,@author ben yu,1,1,Ownership
3085,CollectionTestSuiteBuilder.java,@author chris povirk,0,1,Ownership
3597,Resources.java,@author colin decker,1,1,Ownership
3086,CollectionTestSuiteBuilder.java,@author louis wasserman,0,1,Ownership
3215,ForwardingQueueTest.java,@author robert konigsberg,1,1,Ownership
3216,ForwardingQueueTest.java,@author louis wasserman,0,1,Ownership
4118,SortedSetNavigationTester.java,@author jesse wilson,1,1,Ownership
4119,SortedSetNavigationTester.java,@author louis wasserman,0,1,Ownership
3096,ConflictingRequirementsException.java,@author george van den driessche,1,1,Ownership
2714,ArbitraryInstances.java,@author kevin bourrillion,0,1,Ownership
2715,ArbitraryInstances.java,@author ben yu,1,1,Ownership
3227,HashFunctionEnum.java,@author kurt alfred kluever,0,1,Ownership
3100,CountingOutputStream.java,@author chris nokleberg,1,1,Ownership
4127,SubscriberTest.java,@author cliff biffle,0,1,Ownership
4128,SubscriberTest.java,@author colin decker,1,1,Ownership
3108,DescendingMultiset.java,@author louis wasserman,0,1,Ownership
3493,Preconditions.java,@author kevin bourrillion,0,1,Ownership
4136,TesterRequirements.java,@author george van den driessche,0,1,Ownership
4141,TestStringListGenerator.java,@author kevin bourrillion,0,1,Ownership
4146,WrappingScheduledExecutorService.java,@author luke sandberg,0,1,Ownership
3254,HostAndPort.java,@author paul marks,0,1,Ownership
3391,MultimapBuilderTest.java,@author louis wasserman,0,1,Ownership
3395,NullsLastOrdering_CustomFieldSerializer.java,@author chris povirk,0,1,Ownership
2632,AbstractCollectionTester.java,@author kevin bourrillion,0,1,Ownership
3147,EqualsTester.java,@author jim mcmaster,0,1,Ownership
3148,EqualsTester.java,@author jige yu,0,1,Ownership
2642,AbstractListeningExecutorService.java,@author chris povirk,0,1,Ownership
3414,PeekingIterator.java,@author mick killianey,0,1,Ownership
3415,PeekingIterator.java,@since 20,0,1,Ownership
3288,ImmutableTable_CustomFieldSerializerBase.java,@author chris povirk,0,1,Ownership
3041,CacheLoaderTest.java,@author charles fry,0,1,Ownership
3044,CacheManualTest.java,@author charles fry,0,1,Ownership
2789,BloomFilter.java,@author dimitris andreou,0,1,Ownership
3301,LongMathBenchmark.java,@author louis wasserman,0,1,Ownership
2790,BloomFilter.java,@author kevin bourrillion,0,1,Ownership
2664,AbstractLoadingCache.java,@author charles fry,0,1,Ownership
3307,MapPutAllTester.java,@author chris povirk,0,1,Ownership
3308,MapPutAllTester.java,@author kevin bourrillion,0,1,Ownership
2929,CacheBuilder.java,@author charles fry,0,1,Ownership
2930,CacheBuilder.java,@author kevin bourrillion,0,1,Ownership
3058,ClassToInstanceMap.java,@author kevin bourrillion,0,1,Ownership
3314,MapSerializationTester.java,@author louis wasserman,0,1,Ownership
3192,FeatureSpecificTestSuiteBuilder.java,@author george van den driessche,0,1,Ownership
2682,AbstractMultimap.java,@author louis wasserman,0,1,Ownership
3581,RegularImmutableList_CustomFieldSerializer.java,@author hayward chan,0,1,Ownership
2686,AbstractMultimapTester.java,@author louis wasserman,0,1,Ownership
4512,ProxyFactoryTest.java,@author crazybob@google^com bob lee,0,1,Ownership
4497,EncounterImpl.java,@author jessewilson@google^com jesse wilson,1,1,Ownership
4499,ImplicitBindingTest.java,"@author crazybob@google^com bob lee an enum cannot be implemented by anything, so it should not be possible to have a successful valid jitable binding",0,1,Ownership
4515,SpiUtils.java,@author sameb@google^com sam berlin,1,1,Ownership
4323,Binder.java,@author crazybob@google^com bob lee,0,1,Ownership
4164,AbstractModule.java,@author crazybob@google^com bob lee,1,1,Ownership
4324,Binder.java,@author jessewilson@google^com jesse wilson,0,1,Ownership
4325,Binder.java,@author kevinb@google^com kevin bourrillion,0,1,Ownership
4504,ManagedFilterPipeline.java,@author dhanji@gmail^com dhanji r. prasanna,0,1,Ownership
4474,DefaultMethodInterceptionTest.java,@author cgdecker@google^com colin decker,0,1,Ownership
4491,Element.java,@author jessewilson@google^com jesse wilson,0,1,Ownership
4509,PrivateElementProcessor,@author jessewilson@google^com jesse wilson,0,1,Ownership
4929,SimpleGridUI.java,@author vaadin ltd,0,1,Ownership
4611,ClientRpcWriter.java,@author vaadin ltd,1,1,Ownership
4868,RpcDataProviderExtension.java,@author vaadin ltd,0,1,Ownership
4932,SpacerVisibilityChangedEvent.java,@author vaadin ltd,1,1,Ownership
4751,HeaderRow.java,@author vaadin ltd,0,1,Ownership
5393,Window.java,@author vaadin ltd.,1,1,Ownership
5521,XhrConnectionError.java,@author vaadin ltd,0,1,Ownership
5010,VaadinServiceInitListener.java,@author vaadin ltd,1,1,Ownership
4947,UnknownExtensionConnector.java,@author vaadin ltd,0,1,Ownership
5079,VScrollTable.java,@author vaadin ltd,1,1,Ownership
5401,Window.java,@author vaadin ltd,0,1,Ownership
4761,InternalContainerAnnotationForJS.java,@author vaadin ltd,1,1,Ownership
4634,DoubleRangeValidator.java,@author vaadin ltd.,0,1,Ownership
4955,VaadinPortlet.java,@author vaadin ltd,1,1,Ownership
4572,AdjacentElementsWithTooltipsTest.java,@author vaadin ltd,0,1,Ownership
5151,VScrollTable.java,@author vaadin ltd,1,1,Ownership
4643,FooterDoubleClickHandler.java,@author vaadin ltd,0,1,Ownership
4772,MyPickerConnector.java,@author vaadin ltd,0,1,Ownership
5029,VLazyInitItemIdentifiers.java,@author vaadin ltd,0,1,Ownership
4904,SelectAllEvent.java,@author vaadin ltd,0,1,Ownership
4650,Grid.java,@author vaadin ltd,0,1,Ownership
4588,BootstrapPageResponse.java,@author vaadin ltd,0,1,Ownership
4974,VaadinPortlet.java,@author vaadin ltd,0,1,Ownership
4782,NotEmptyValidatorTest.java,@author vaadin ltd,0,1,Ownership
5102,VScrollTable.java,@author vaadin ltd,0,1,Ownership
4528,AbstractFocusable.java,@author vaadin ltd,0,1,Ownership
4849,PortletDummyRequestHandler.java,@author vaadin ltd,0,1,Ownership
5426,Window.java,@author vaadin ltd,0,1,Ownership
4534,AbstractMultiSelectState.java,@author vaadin ltd,0,1,Ownership
4790,PopupView.java,@author vaadin ltd.,0,1,Ownership
5366,VTextArea.java,@author vaadin ltd.,0,1,Ownership
4919,ShouldWriteDataDelegate.java,@author vaadin ltd,0,1,Ownership
4602,ButtonRenderer.java,@author vaadin ltd,0,1,Ownership
4858,RequiredTextFieldTest.java,@author vaadin ltd,0,1,Ownership
5371,VUpload.java,@author vaadin ltd,0,1,Ownership
4735,GridSelectionModel.java,@author vaadin ltd,0,1,Ownership
2,Abfss.java,this impl delegates to the old filesystem,0,1,Expand
516,FileSystemApplicationHistoryStore.java,@link #applicationstarted applicationstartdata is supposed to,1,1,Expand
517,FileSystemApplicationHistoryStore.java,be invoked first when writing any history data of one application and it will,0,1,Expand
6,AbstractContractGetFileStatusTest.java,the tree parameters.,1,1,Expand
518,FileSystemApplicationHistoryStore.java,"open a file, while @link #applicationfinished applicationfinishdata is",0,1,Expand
7,AbstractContractGetFileStatusTest.java,kept small to avoid killing object store test runs too much.,1,1,Expand
519,FileSystemApplicationHistoryStore.java,supposed to be last writing operation and will close the file.,0,1,Expand
8,AbstractContractGetFileStatusTest.java,accept everything.,1,1,Expand
776,Query.java,the query is usually a partial record.,0,1,Expand
9,AbstractContractGetFileStatusTest.java,the tree parameters.,1,1,Expand
10,AbstractContractGetFileStatusTest.java,kept small to avoid killing object store test runs too much.,0,1,Expand
11,AbstractContractGetFileStatusTest.java,accept nothing.,1,1,Expand
1035,TestCustomOauthTokenProvider.java,instead this just checks that the creation works and that everything,0,1,Expand
12,AbstractContractGetFileStatusTest.java,the tree parameters.,1,1,Expand
1036,TestCustomOauthTokenProvider.java,is propagated.,0,1,Expand
13,AbstractContractGetFileStatusTest.java,kept small to avoid killing object store test runs too much.,1,1,Expand
14,AbstractContractGetFileStatusTest.java,path filter which only expects paths whose final name element,0,1,Expand
15,AbstractContractGetFileStatusTest.java,equals the @code match field.,1,1,Expand
16,AbstractContractGetFileStatusTest.java,the tree parameters.,0,1,Expand
784,RandomKeyGenerator.java,wrapper to hold ozone keyvalidate entry.,1,1,Expand
17,AbstractContractGetFileStatusTest.java,kept small to avoid killing object store test runs too much.,0,1,Expand
785,RandomKeyGenerator.java,validates the write done in ozone cluster.,1,1,Expand
18,AbstractContractGetFileStatusTest.java,a filesystem filter which exposes the protected method,0,1,Expand
274,DelegatingSSLSocketFactory.java,"specifically, either openssl or jsse can be used.",1,1,Expand
19,AbstractContractGetFileStatusTest.java,"@link #listlocatedstatus path, pathfilter .",0,1,Expand
275,DelegatingSSLSocketFactory.java,openssl offers better,1,1,Expand
276,DelegatingSSLSocketFactory.java,performance than jsse and is made available via the,0,1,Expand
277,DelegatingSSLSocketFactory.java,a href https github^com wildfly wildfly openssl wildlfy openssl a,1,1,Expand
278,DelegatingSSLSocketFactory.java,library.,0,1,Expand
791,ReencryptionUpdater.java,p,1,1,Expand
793,ReencryptionUpdater.java,p,0,1,Expand
794,ReencryptionUpdater.java,"it is assumed only 1 updater will be running, since updating file xattrs",1,1,Expand
795,ReencryptionUpdater.java,"requires namespace write lock, and performance gain from multi threading",0,1,Expand
796,ReencryptionUpdater.java,is limited.,1,1,Expand
797,ReencryptionUpdater.java,class to track re encryption submissions of a single zone.,0,1,Expand
798,ReencryptionUpdater.java,it contains,1,1,Expand
799,ReencryptionUpdater.java,"all the submitted futures, and statistics about how far the futures are",0,1,Expand
800,ReencryptionUpdater.java,processed.,1,1,Expand
1058,TestHDFSServerPorts.java,the correct behavior is br when a specific port is provided the server must either start on that port or fail by throwing @link java^net.bindexception .,0,1,Expand
1059,TestHDFSServerPorts.java,br,1,1,Expand
1060,TestHDFSServerPorts.java,if the port 0 ephemeral then the server should choose a free port and start on it.,0,1,Expand
44,AbstractS3ACommitterFactory.java,dynamically create the output committer based on subclass type and settings.,1,1,Expand
1072,TestNativeAzureFileSystemUploadLogic.java,just an arbitrary number so that the values i write have a predictable,0,1,Expand
562,HttpHeaderConfigurations.java,responsible to keep all abfs http headers here.,1,1,Expand
53,ApplicationConstants.java,the type of launch for the container.,0,1,Expand
54,ApplicationConstants.java,environment for applications.,1,1,Expand
1086,TestProtoBufRpc.java,this test depends on test^proto definition of types in src test proto,0,1,Expand
1087,TestProtoBufRpc.java,and protobuf service definition from src test test rpc service^proto,1,1,Expand
66,AutoInputFormat.java,it can currently handle text and sequence files.,0,1,Expand
847,ResourceRequestsJsonVerifications.java,with the help of the,1,1,Expand
848,ResourceRequestsJsonVerifications.java,"@link builder , users can also make verifications of the custom resource",0,1,Expand
1105,TestSaveNamespace.java,cases covered,1,1,Expand
849,ResourceRequestsJsonVerifications.java,types and its values.,0,1,Expand
1106,TestSaveNamespace.java,ol,1,1,Expand
1362,UniformSizeInputFormat.java,it looks at the copy listing and groups the contents into input splits such,0,1,Expand
594,ITestS3Select.java,executed if the destination store declares its support for the feature.,1,1,Expand
1107,TestSaveNamespace.java,li recover from failure while saving into the second storage directory li,0,1,Expand
1363,UniformSizeInputFormat.java,that the total number of bytes to be copied for each input split is,1,1,Expand
1108,TestSaveNamespace.java,li recover from failure while moving current into lastcheckpoint^tmp li,0,1,Expand
1364,UniformSizeInputFormat.java,uniform.,1,1,Expand
1109,TestSaveNamespace.java,li recover from failure while moving lastcheckpoint^tmp into,0,1,Expand
1110,TestSaveNamespace.java,previous^checkpoint li,1,1,Expand
1111,TestSaveNamespace.java,li recover from failure while rolling edits file li,0,1,Expand
88,BatchedRequests.java,the placement algorithm tends to give more optimal,1,1,Expand
1112,TestSaveNamespace.java,ol,0,1,Expand
89,BatchedRequests.java,placements if more requests are batched together.,1,1,Expand
604,KerberosDelegationTokenAuthenticator.java,it falls back to the @link pseudodelegationtokenauthenticator if the http,0,1,Expand
1373,Utils.java,this class filters output part files from the given directory,1,1,Expand
605,KerberosDelegationTokenAuthenticator.java,endpoint does not trigger a spnego authentication,0,1,Expand
1374,Utils.java,it does not accept files with filenames logs and success.,1,1,Expand
352,DelegationTokenIdentifier.java,a delegation token identifier that is specific to hdfs.,0,1,Expand
1378,Utils.java,this class filters log files from directory given,1,1,Expand
1379,Utils.java,it doesnt accept paths having logs.,0,1,Expand
1124,TestSequenceFile.java,support for flat files of binary key value pairs.,1,1,Expand
1127,TestSeveralNameNodes.java,test that we can start several and run with namenodes on the same minicluster,0,1,Expand
104,BlocksMap.java,block s metadata currently includes blockcollection it belongs to and,1,1,Expand
105,BlocksMap.java,the datanodes that store the block.,0,1,Expand
619,LoggedTask.java,"it knows about the pssibly empty sequence of attempts, its i o footprint,",0,1,Expand
620,LoggedTask.java,and its runtime.,0,1,Expand
365,DiskBalancerCluster.java,p,0,1,Expand
366,DiskBalancerCluster.java,please note,0,1,Expand
367,DiskBalancerCluster.java,semantics of inclusionlist and exclusionlists.,0,1,Expand
368,DiskBalancerCluster.java,p,0,1,Expand
369,DiskBalancerCluster.java,if a non empty inclusionlist is specified then the diskbalancer assumes that,0,1,Expand
370,DiskBalancerCluster.java,the user is only interested in processing that list of nodes.,0,1,Expand
371,DiskBalancerCluster.java,this node list,0,1,Expand
372,DiskBalancerCluster.java,is checked against the exclusionlist and only the nodes in inclusionlist but,0,1,Expand
373,DiskBalancerCluster.java,not in exclusionlist is processed.,0,1,Expand
374,DiskBalancerCluster.java,p,0,1,Expand
375,DiskBalancerCluster.java,"if inclusionlist is empty, then we assume that all live nodes in the nodes is",0,1,Expand
120,CapacitySchedulerPlanFollower.java,"this implementation does so, by",0,1,Expand
376,DiskBalancerCluster.java,to be processed by diskbalancer.,0,1,Expand
121,CapacitySchedulerPlanFollower.java,"adding removing resizing leaf queues in the scheduler, thus affecting the",0,1,Expand
377,DiskBalancerCluster.java,in that case diskbalancer will avoid any,0,1,Expand
122,CapacitySchedulerPlanFollower.java,dynamic behavior of the scheduler in a way that is consistent with the,0,1,Expand
378,DiskBalancerCluster.java,nodes specified in the exclusionlist but will process all nodes in the,0,1,Expand
634,LRUCacheHashMap.java,lru cache with a configurable maximum cache size and access order.,0,1,Expand
123,CapacitySchedulerPlanFollower.java,content of the plan.,0,1,Expand
379,DiskBalancerCluster.java,cluster.,0,1,Expand
124,CapacitySchedulerPlanFollower.java,it also updates the plan s view on how much resources,0,1,Expand
380,DiskBalancerCluster.java,p,0,1,Expand
1404,WritableComparator.java,p this base implementation uses the natural ordering.,0,1,Expand
125,CapacitySchedulerPlanFollower.java,are available in the cluster.,0,1,Expand
381,DiskBalancerCluster.java,"in other words, an empty inclusionlist is means all the nodes otherwise",0,1,Expand
1405,WritableComparator.java,to define alternate,0,1,Expand
382,DiskBalancerCluster.java,only a given list is processed and exclusionlist is always honored.,0,1,Expand
1406,WritableComparator.java,"orderings, override @link #compare writablecomparable,writablecomparable .",0,1,Expand
1164,TestUpgradeDomainBlockPlacementPolicy.java,the test configs upgrade domain for nodes via admin json,0,1,Expand
652,MetricsCache.java,cached record,0,1,Expand
1165,TestUpgradeDomainBlockPlacementPolicy.java,config file and put some nodes to decommission state.,0,1,Expand
909,StructureGenerator.java,this program generates a random namespace structure with the following,0,1,Expand
1166,TestUpgradeDomainBlockPlacementPolicy.java,the test then verifies replicas are placed on the nodes that,0,1,Expand
910,StructureGenerator.java,constraints,0,1,Expand
1167,TestUpgradeDomainBlockPlacementPolicy.java,satisfy the upgrade domain policy.,0,1,Expand
911,StructureGenerator.java,1,0,1,Expand
912,StructureGenerator.java,"the number of subdirectories is a random number in minwidth, maxwidth .",0,1,Expand
913,StructureGenerator.java,2,0,1,Expand
914,StructureGenerator.java,"the maximum depth of each subdirectory is a random number 2 maxdepth 3, maxdepth .",0,1,Expand
915,StructureGenerator.java,3,0,1,Expand
660,NativeSingleLineParser.java,p the expected log format is normalizedjobname numinstances submittime,0,1,Expand
916,StructureGenerator.java,files are randomly placed in the empty directories.,0,1,Expand
661,NativeSingleLineParser.java,starttime endtime jobinstancename memusage coreusage,0,1,Expand
917,StructureGenerator.java,the size of each,0,1,Expand
918,StructureGenerator.java,file follows gaussian distribution.,0,1,Expand
151,Classpath.java,the output likely will include wildcards in the classpath.,0,1,Expand
1175,TextInputFormat.java,either linefeed or carriage return are used to signal end of line.,0,1,Expand
919,StructureGenerator.java,the generated namespace structure is described by two files in the output,0,1,Expand
1432,YarnAuthorizationProvider.java,it is excepted that any of the,0,1,Expand
920,StructureGenerator.java,directory.,0,1,Expand
1433,YarnAuthorizationProvider.java,methods defined in this interface should be non blocking call and should not,0,1,Expand
1178,TextInputFormat.java,.,0,1,Expand
1434,YarnAuthorizationProvider.java,involve expensive computation as these method could be invoked in rpc.,0,1,Expand
922,StructureGenerator.java,each line of the second file contains,0,1,Expand
923,StructureGenerator.java,"the full name of a file and its size, separated by a blank.",0,1,Expand
156,Classpath.java,this is useful in situations where wildcard syntax isn t usable.,0,1,Expand
157,Classpath.java,"with the jar argument, it writes the classpath as a manifest in a jar file.",0,1,Expand
413,EditLogTailer.java,the thread which does the actual work of tailing edits journals and,0,1,Expand
414,EditLogTailer.java,applying the transactions to the fsns.,0,1,Expand
672,Node2ObjectsMap.java,this information is built from the dn container reports.,0,1,Expand
1186,TimelineDataToRetrieve.java,encapsulates information regarding which data to retrieve for each entity,0,1,Expand
930,StructureGenerator.java,avgfilesize avgfilesizeinblocks average size of blocks default is 1.,0,1,Expand
931,StructureGenerator.java,outdir outdir output directory default is the current directory.,0,1,Expand
1189,TimelineDataToRetrieve.java,data to retrieve contains the following br,0,1,Expand
677,NodeUpdateType.java,p,0,1,Expand
1190,TimelineDataToRetrieve.java,ul,0,1,Expand
1192,TimelineDataToRetrieve.java,in response.,0,1,Expand
682,NullOutputFormat.java,consume all outputs and put them in dev null.,0,1,Expand
1195,TimelineDataToRetrieve.java,these can either be,0,1,Expand
1196,TimelineDataToRetrieve.java,exact config keys or prefixes which are then compared against config,0,1,Expand
1199,TimelineDataToRetrieve.java,"or empty, all configurations will be fetched if fieldstoretrieve",0,1,Expand
1202,TimelineDataToRetrieve.java,confused with configfilters which is used to decide which entities to,0,1,Expand
1203,TimelineDataToRetrieve.java,return instead.,0,1,Expand
1204,TimelineDataToRetrieve.java,li,0,1,Expand
693,OzoneObj.java,ozone objects supported for acl.,0,1,Expand
1206,TimelineDataToRetrieve.java,in response.,0,1,Expand
694,OzoneObj.java,ozone objects supported for acl.,0,1,Expand
1209,TimelineDataToRetrieve.java,these can either be,0,1,Expand
1210,TimelineDataToRetrieve.java,exact metric ids or prefixes which are then compared against metric,0,1,Expand
1213,TimelineDataToRetrieve.java,"or empty, all metrics will be fetched if fieldstoretrieve contains",0,1,Expand
1216,TimelineDataToRetrieve.java,with metricfilters which is used to decide which entities to return,0,1,Expand
1217,TimelineDataToRetrieve.java,instead.,0,1,Expand
1218,TimelineDataToRetrieve.java,li,0,1,Expand
451,ErasureCodingPolicyManager.java,it loads customized policies and syncs with persisted ones in,0,1,Expand
452,ErasureCodingPolicyManager.java,namenode image.,0,1,Expand
1222,TimelineDataToRetrieve.java,"namely entity id, entity type and entity created time.",0,1,Expand
1223,TimelineDataToRetrieve.java,all fields will,0,1,Expand
712,QuasiMonteCarlo.java,using a quasi monte carlo qmc method.,0,1,Expand
1225,TimelineDataToRetrieve.java,li,0,1,Expand
713,QuasiMonteCarlo.java,arbitrary integrals can be approximated numerically by qmc methods.,0,1,Expand
1228,TimelineDataToRetrieve.java,number of metrics to return.,0,1,Expand
1229,TimelineDataToRetrieve.java,this parameter is ignored if metrics are not to,0,1,Expand
1230,TimelineDataToRetrieve.java,be fetched.,0,1,Expand
1231,TimelineDataToRetrieve.java,li,0,1,Expand
1233,TimelineDataToRetrieve.java,be retrieved.,0,1,Expand
722,QuasiMonteCarlo.java,there are better methods for computing pi.,0,1,Expand
1235,TimelineDataToRetrieve.java,li,0,1,Expand
723,QuasiMonteCarlo.java,we emphasize numerical approximation of arbitrary integrals in this example.,0,1,Expand
724,QuasiMonteCarlo.java,"for computing many digits of pi, consider using bbp.",0,1,Expand
1237,TimelineDataToRetrieve.java,be retrieved.,0,1,Expand
725,QuasiMonteCarlo.java,the implementation is discussed below.,0,1,Expand
726,QuasiMonteCarlo.java,mapper,0,1,Expand
1239,TimelineDataToRetrieve.java,li,0,1,Expand
727,QuasiMonteCarlo.java,generate points in a unit square,0,1,Expand
1240,TimelineDataToRetrieve.java,ul,0,1,Expand
728,QuasiMonteCarlo.java,and then count points inside outside of the inscribed circle of the square.,0,1,Expand
729,QuasiMonteCarlo.java,reducer,0,1,Expand
741,QuasiMonteCarlo.java,generate points in a unit square,0,1,Expand
742,QuasiMonteCarlo.java,and then count points inside outside of the inscribed circle of the square.,0,1,Expand
1017,TestAddBlock.java,test addblockop is written and read correctly,0,1,Expand
1536,KVStore.java,kvstore instances are thread safe for both reads and writes.,0,1,Expand
1537,KVStore.java,p,1,1,Expand
1477,JavaStreamingTestExample.java,"the rows of the text files must be in the form boolean, double .",0,1,Expand
1478,JavaStreamingTestExample.java,for example,1,1,Expand
1479,JavaStreamingTestExample.java,"false, 392",0,1,Expand
1480,JavaStreamingTestExample.java,"true, 9932",1,1,Expand
1506,KVStore.java,p,0,1,Expand
1507,KVStore.java,there are two main features provided by the implementations of this interface,1,1,Expand
1508,KVStore.java,p,0,1,Expand
1509,KVStore.java,h3 serialization h3,1,1,Expand
1510,KVStore.java,p,0,1,Expand
1511,KVStore.java,"if the underlying data store requires serialization, data will be serialized to and deserialized",1,1,Expand
1448,ChunkFetchSuccess.java,"similarly, the client side decoding will reuse the netty bytebuf as the buffer.",0,1,Expand
1512,KVStore.java,"using a @link kvstoreserializer , which can be customized by the application.",1,1,Expand
1513,KVStore.java,the serializer is,0,1,Expand
1514,KVStore.java,"based on jackson, so it supports all the jackson annotations for controlling the serialization of",1,1,Expand
1515,KVStore.java,app defined types.,0,1,Expand
1516,KVStore.java,p,0,1,Expand
1517,KVStore.java,p,0,1,Expand
1518,KVStore.java,data is also automatically compressed to save disk space.,0,1,Expand
1519,KVStore.java,p,0,1,Expand
1520,KVStore.java,h3 automatic key management h3,0,1,Expand
1521,KVStore.java,p,0,1,Expand
1522,KVStore.java,"when using the built in key management, the implementation will automatically create unique",0,1,Expand
1523,KVStore.java,keys for each type written to the store.,0,1,Expand
1524,KVStore.java,"keys are based on the type name, and always start",0,1,Expand
1525,KVStore.java,with the prefix character so that it s easy to use both manual and automatic key,0,1,Expand
1526,KVStore.java,management apis without conflicts .,0,1,Expand
1527,KVStore.java,p,0,1,Expand
1528,KVStore.java,p,0,1,Expand
1529,KVStore.java,another feature of automatic key management is indexing by annotating fields or methods of,0,1,Expand
1530,KVStore.java,"objects written to the store with @link kvindex , indices are created to sort the data",0,1,Expand
1531,KVStore.java,by the values of those properties.,0,1,Expand
1595,UploadBlockStream.java,the actual block data is not contained here.,0,1,Expand
1532,KVStore.java,this makes it possible to provide sorting without having,0,1,Expand
1596,UploadBlockStream.java,it will be passed to the streamcallbackwithid,0,1,Expand
1533,KVStore.java,to load all instances of those types from the store.,0,1,Expand
1597,UploadBlockStream.java,that is returned from rpchandler^receivestream,0,1,Expand
1534,KVStore.java,p,0,1,Expand
1535,KVStore.java,p,0,1,Expand
2112,IGDBTraceControl.java,gdb specific part @since 44,0,1,Expand
1668,AutoconfMacroParameterListValidator.java,it is modified from the cdt class cparameterlistvalidator,1,1,Expand
1861,FormattedValueTests.java,helper class that stores some element paths and nodes using a certain format,0,1,Expand
2374,MIThreadGroupAddedEvent.java,"thread group added,id i1",1,1,Expand
2315,MIStack.java,class to track stack depth and debug frames for our internal cache,0,1,Expand
2446,SourceLookupTest.java,p,1,1,Expand
2452,SourceLookupTest.java,p,0,1,Expand
2263,MIBreakpointsSynchronizer.java,catchpoint expressions gdb tracepoint commands,1,1,Expand
2264,MIBreakpointsSynchronizer.java,class to store an event that needs to be performed by the synchronizer,0,1,Expand
2265,MIBreakpointsSynchronizer.java,@see mibreakpointssynchronizer class documentation for design comments,1,1,Expand
2075,ICPPASTVirtSpecifier.java,"there are two virt specifiers, final and override .",0,1,Expand
2397,ProblemMarkerManager.java,visitors used to filter the element delta changes,1,1,Expand
2142,IMIBackend.java,event indicating that the back end process has started or terminated.,0,1,Expand
1631,AbstractTrialUndoActionProvider.java,action for a null rule,1,1,Expand
2534,StandardCElementLabelProvider.java,triggers a viewer update when a preference changes.,0,1,Expand
1638,AddLineBreakpointActionDelegate.java,initially derived from addfunctionbreakpointactiondelegate,0,1,Expand
2090,ICSourceNotFoundDescription.java,an instance is usually provided by an adapter.,0,1,Expand
1642,AddMemoryBlocks.java,p,0,1,Expand
2411,QtPDOMNameIndex.java,"this is equivalent to the java type map string, list pdomname .",0,1,Expand
2482,SourceLookupTest.java,p,0,1,Expand
1650,AddMemoryBlocks.java,p,0,1,Expand
2485,SourceLookupTest.java,p,0,1,Expand
2103,IGDBTraceControl.java,gdb specific part,0,1,Expand
2104,IGDBTraceControl.java,marker interface for a context on which trace operations can be performed,0,1,Expand
1784,CPPDeferredFunction.java,a compiler would resolve it during instantiation.,0,1,Expand
2105,IGDBTraceControl.java,gdb specific part,0,1,Expand
2106,IGDBTraceControl.java,specific trace record context.,0,1,Expand
2107,IGDBTraceControl.java,it describes tracing data.,0,1,Expand
2108,IGDBTraceControl.java,gdb specific part,0,1,Expand
2109,IGDBTraceControl.java,this is the model data interface that corresponds to itracerecorddmcontext.,0,1,Expand
2110,IGDBTraceControl.java,gdb specific part,0,1,Expand
1662,AllTemplateEngineTests.java,the test suite will execute all the testcases added to the suite.,0,1,Expand
2111,IGDBTraceControl.java,trace events,0,1,Expand
3840,SmoothRateLimiter.java,"requested permits, by an invocation acquire permits , are served from",0,1,Expand
3841,SmoothRateLimiter.java,stored permits if available,1,1,Expand
3842,SmoothRateLimiter.java,fresh permits for any remaining permits,0,1,Expand
3075,CloseablesTest.java,"p checks proper closing behavior, and ensures that ioexceptions on closeable^close are not",1,1,Expand
3076,CloseablesTest.java,propagated out from the @link closeables#close method if @code swallowexception is true.,0,1,Expand
3599,Resources.java,a byte source that reads from a url using @link url#openstream .,1,1,Expand
2832,CacheBuilder.java,a builder of @link loadingcache and @link cache instances having any combination of the,0,1,Expand
2833,CacheBuilder.java,following features,1,1,Expand
2834,CacheBuilder.java,ul,0,1,Expand
2835,CacheBuilder.java,li automatic loading of entries into the cache,1,1,Expand
2836,CacheBuilder.java,li least recently used eviction when a maximum size is exceeded,0,1,Expand
2837,CacheBuilder.java,"li time based expiration of entries, measured since last access or last write",1,1,Expand
2838,CacheBuilder.java,li keys automatically wrapped in @linkplain weakreference weak references,0,1,Expand
2839,CacheBuilder.java,li values automatically wrapped in @linkplain weakreference weak or @linkplain,1,1,Expand
2840,CacheBuilder.java,softreference soft references,0,1,Expand
2841,CacheBuilder.java,li notification of evicted or otherwise removed entries,1,1,Expand
2843,CacheBuilder.java,ul,0,1,Expand
3613,SmoothRateLimiter.java,the simplest way to maintain a rate of qps is to keep the timestamp of the last granted,1,1,Expand
2845,CacheBuilder.java,by default,0,1,Expand
3614,SmoothRateLimiter.java,"request, and ensure that 1 qps seconds have elapsed since then.",1,1,Expand
3615,SmoothRateLimiter.java,"for example, for a rate of",0,1,Expand
3871,SmoothRateLimiter.java,"this role is played by storedpermitstowaittime double storedpermits, double permitstotake .",1,1,Expand
3616,SmoothRateLimiter.java,"qps 5 5 tokens per second , if we ensure that a request isn t granted earlier than 200ms after",0,1,Expand
3617,SmoothRateLimiter.java,"the last one, then we achieve the intended rate.",1,1,Expand
3618,SmoothRateLimiter.java,if a request comes and the last request was,0,1,Expand
3619,SmoothRateLimiter.java,"granted only 100ms ago, then we wait for another 100ms.",1,1,Expand
3620,SmoothRateLimiter.java,"at this rate, serving 15 fresh permits",0,1,Expand
3621,SmoothRateLimiter.java,ie for an acquire 15 request naturally takes 3 seconds.,1,1,Expand
3622,SmoothRateLimiter.java,it is important to realize that such a ratelimiter has a very superficial memory of the past,0,1,Expand
3623,SmoothRateLimiter.java,it only remembers the last request.,1,1,Expand
3624,SmoothRateLimiter.java,what if the ratelimiter was unused for a long period of,0,1,Expand
3625,SmoothRateLimiter.java,"time, then a request arrived and was immediately granted?",1,1,Expand
3626,SmoothRateLimiter.java,this ratelimiter would immediately,0,1,Expand
3627,SmoothRateLimiter.java,forget about that past underutilization.,1,1,Expand
3628,SmoothRateLimiter.java,this may result in either underutilization or,0,1,Expand
2860,CacheBuilder.java,in real life this would come from a command line flag or config file,1,1,Expand
3629,SmoothRateLimiter.java,"overflow, depending on the real world consequences of not using the expected rate.",0,1,Expand
3630,SmoothRateLimiter.java,past underutilization could mean that excess resources are available.,1,1,Expand
3631,SmoothRateLimiter.java,"then, the ratelimiter",0,1,Expand
3632,SmoothRateLimiter.java,"should speed up for a while, to take advantage of these resources.",1,1,Expand
3633,SmoothRateLimiter.java,this is important when the,0,1,Expand
3634,SmoothRateLimiter.java,"rate is applied to networking limiting bandwidth , where past underutilization typically",1,1,Expand
3635,SmoothRateLimiter.java,"translates to almost empty buffers , which can be filled immediately.",0,1,Expand
3636,SmoothRateLimiter.java,"on the other hand, past underutilization could mean that the server responsible for handling",1,1,Expand
3637,SmoothRateLimiter.java,"the request has become less ready for future requests , ie its caches become stale, and",0,1,Expand
3638,SmoothRateLimiter.java,requests become more likely to trigger expensive operations a more extreme case of this,1,1,Expand
3639,SmoothRateLimiter.java,"example is when a server has just booted, and it is mostly busy with getting itself up to",0,1,Expand
3640,SmoothRateLimiter.java,speed .,1,1,Expand
3641,SmoothRateLimiter.java,"to deal with such scenarios, we add an extra dimension, that of past underutilization ,",0,1,Expand
3642,SmoothRateLimiter.java,modeled by storedpermits variable.,1,1,Expand
3643,SmoothRateLimiter.java,"this variable is zero when there is no underutilization,",0,1,Expand
3644,SmoothRateLimiter.java,"and it can grow up to maxstoredpermits, for sufficiently large underutilization.",1,1,Expand
3645,SmoothRateLimiter.java,"so, the",0,1,Expand
3646,SmoothRateLimiter.java,"requested permits, by an invocation acquire permits , are served from",1,1,Expand
3647,SmoothRateLimiter.java,stored permits if available,0,1,Expand
3648,SmoothRateLimiter.java,fresh permits for any remaining permits,1,1,Expand
2880,CacheBuilder.java,"p b note b by default, the returned cache uses equality comparisons the @link",0,1,Expand
2886,CacheBuilder.java,p entries are automatically evicted from the cache when any of @linkplain #maximumsize long,1,1,Expand
2887,CacheBuilder.java,"maximumsize , @linkplain #maximumweight long maximumweight , @linkplain #expireafterwrite",0,1,Expand
2888,CacheBuilder.java,"expireafterwrite , @linkplain #expireafteraccess expireafteraccess , @linkplain #weakkeys",1,1,Expand
2889,CacheBuilder.java,"weakkeys , @linkplain #weakvalues weakvalues , or @linkplain #softvalues softvalues are",0,1,Expand
2890,CacheBuilder.java,requested.,1,1,Expand
2638,AbstractListeningExecutorService.java,these tasks are run,0,1,Expand
2639,AbstractListeningExecutorService.java,with the abstract @link #execute execute runnable method.,1,1,Expand
2905,CacheBuilder.java,p certain cache configurations will result in the accrual of periodic maintenance tasks which,0,1,Expand
3931,SmoothRateLimiter.java,"arrivals come exactly one second after the previous, then storedpermits is never increased",1,1,Expand
3677,SmoothRateLimiter.java,"this role is played by storedpermitstowaittime double storedpermits, double permitstotake .",0,1,Expand
2909,CacheBuilder.java,calling it should not be necessary with a high throughput cache.,1,1,Expand
3423,Preconditions.java,"correctly that is, whether its i preconditions i were met .",0,1,Expand
3425,Preconditions.java,"of a specified type, which helps the method in which the exception was thrown communicate that",1,1,Expand
3426,Preconditions.java,its caller has made a mistake.,0,1,Expand
3427,Preconditions.java,this allows constructs such as,1,1,Expand
3429,Preconditions.java,public static double sqrt double value,0,1,Expand
3430,Preconditions.java,if value 0,1,1,Expand
3431,Preconditions.java,throw new illegalargumentexception input is negative value,0,1,Expand
3432,Preconditions.java,calculate square root,1,1,Expand
3433,Preconditions.java,pre,0,1,Expand
3436,Preconditions.java,public static double sqrt double value,0,1,Expand
3438,Preconditions.java,calculate square root,0,1,Expand
3183,FeatureSpecificTestSuiteBuilder.java,"by a g, selecting appropriate tests by matching them against specified features.",0,1,Expand
3439,Preconditions.java,pre,0,1,Expand
3444,Preconditions.java,pre,0,1,Expand
3453,Preconditions.java,"however, the methods of this class have a large number of overloads that prevent such",0,1,Expand
3459,Preconditions.java,h3 other types of preconditions h3,0,1,Expand
3460,Preconditions.java,p not every type of precondition failure is supported by these methods.,0,1,Expand
3464,Preconditions.java,h3 non preconditions h3,0,1,Expand
2699,ArbitraryInstances.java,"p covers arrays, enums and common types defined in @code java^lang , @code java^lang.reflect ,",0,1,Expand
2700,ArbitraryInstances.java,"@code java^io , @code java^nio , @code java^math , @code java^util , @code",0,1,Expand
2701,ArbitraryInstances.java,"java^util.concurrent , @code java^util.regex , @code com^google.common^base , @code",0,1,Expand
2702,ArbitraryInstances.java,com^google.common^collect and @code com^google.common^primitives .,0,1,Expand
2703,ArbitraryInstances.java,"in addition, if the type",0,1,Expand
2704,ArbitraryInstances.java,"exposes at least one public static final constant of the same type, one of the constants will be",0,1,Expand
3473,Preconditions.java,similar to those in this class for non precondition checks.,0,1,Expand
2705,ArbitraryInstances.java,used or if the class exposes a public parameter less constructor then it will be new d and,0,1,Expand
2706,ArbitraryInstances.java,returned.,0,1,Expand
3481,Preconditions.java,p @code preconditions uses @link strings#lenientformat to format error message template,0,1,Expand
3737,SmoothRateLimiter.java,"arrivals come exactly one second after the previous, then storedpermits is never increased",0,1,Expand
3486,Preconditions.java,"number of occurrences of @code %s in the format string, @code preconditions will still",0,1,Expand
3743,SmoothRateLimiter.java,this implements the following function where coldinterval coldfactor stableinterval.,0,1,Expand
3744,SmoothRateLimiter.java,pre,0,1,Expand
3745,SmoothRateLimiter.java,^ throttling,0,1,Expand
3746,SmoothRateLimiter.java,cold,0,1,Expand
3491,Preconditions.java,href https github^com google guava wiki preconditionsexplained using @code,0,1,Expand
3747,SmoothRateLimiter.java,interval .,0,1,Expand
3492,Preconditions.java,preconditions a .,0,1,Expand
3748,SmoothRateLimiter.java,warmup period is the area of the trapezoid between,0,1,Expand
3749,SmoothRateLimiter.java,thresholdpermits and maxpermits,0,1,Expand
3750,SmoothRateLimiter.java,stable warm .,0,1,Expand
3751,SmoothRateLimiter.java,interval .,0,1,Expand
3752,SmoothRateLimiter.java,up .,0,1,Expand
3753,SmoothRateLimiter.java,period.,0,1,Expand
3754,SmoothRateLimiter.java,0 storedpermits,0,1,Expand
3755,SmoothRateLimiter.java,0 thresholdpermits maxpermits,0,1,Expand
3756,SmoothRateLimiter.java,pre,0,1,Expand
3757,SmoothRateLimiter.java,"before going into the details of this particular function, let s keep in mind the basics",0,1,Expand
3758,SmoothRateLimiter.java,ol,0,1,Expand
3759,SmoothRateLimiter.java,li the state of the ratelimiter storedpermits is a vertical line in this figure.,0,1,Expand
3760,SmoothRateLimiter.java,"li when the ratelimiter is not used, this goes right up to maxpermits",0,1,Expand
3761,SmoothRateLimiter.java,"li when the ratelimiter is used, this goes left down to zero , since if we have",0,1,Expand
3762,SmoothRateLimiter.java,"storedpermits, we serve from those first",0,1,Expand
3763,SmoothRateLimiter.java,"li when unused , we go right at a constant rate!",0,1,Expand
3764,SmoothRateLimiter.java,the rate at which we move to the right is,0,1,Expand
3766,SmoothRateLimiter.java,this ensures that the time it takes to go from 0 to,0,1,Expand
3768,SmoothRateLimiter.java,"li when used , the time it takes, as explained in the introductory class note, is equal to",0,1,Expand
3769,SmoothRateLimiter.java,"the integral of our function, between x permits and x k permits, assuming we want to",0,1,Expand
3770,SmoothRateLimiter.java,spend k saved permits.,0,1,Expand
3771,SmoothRateLimiter.java,ol,0,1,Expand
2748,ArrayListMultimapGwtSerializationDependencies.java,the gwt supersource for this class contains a field for each type.,0,1,Expand
3774,SmoothRateLimiter.java,"p assuming we have saturated demand, the time to go from maxpermits to thresholdpermits is",0,1,Expand
3775,SmoothRateLimiter.java,equal to warmupperiod.,0,1,Expand
3776,SmoothRateLimiter.java,and the time to go from thresholdpermits to 0 is warmupperiod 2.,0,1,Expand
3779,SmoothRateLimiter.java,where coldfactor was hard coded as 3.,0,1,Expand
3780,SmoothRateLimiter.java,p it remains to calculate thresholdspermits and maxpermits.,0,1,Expand
3782,SmoothRateLimiter.java,li the time to go from thresholdpermits to 0 is equal to the integral of the function,0,1,Expand
3783,SmoothRateLimiter.java,between 0 and thresholdpermits.,0,1,Expand
3784,SmoothRateLimiter.java,this is thresholdpermits stableintervals.,0,1,Expand
3789,SmoothRateLimiter.java,thresholdpermits 05 warmupperiod stableinterval,0,1,Expand
3791,SmoothRateLimiter.java,li the time to go from maxpermits to thresholdpermits is equal to the integral of the,0,1,Expand
3792,SmoothRateLimiter.java,function between thresholdpermits and maxpermits.,0,1,Expand
3794,SmoothRateLimiter.java,"trapezoid, and it is equal to 05 stableinterval coldinterval maxpermits",0,1,Expand
3795,SmoothRateLimiter.java,thresholdpermits .,0,1,Expand
2774,BloomFilter.java,p the false positive probability @code fpp of a bloom filter is defined as the probability,0,1,Expand
3798,SmoothRateLimiter.java,maxpermits thresholdpermits 2 warmupperiod stableinterval coldinterval,0,1,Expand
2775,BloomFilter.java,that @linkplain #mightcontain object will erroneously return @code true for an object that,0,1,Expand
2776,BloomFilter.java,has not actually been put in the @code bloomfilter .,0,1,Expand
2777,BloomFilter.java,p bloom filters are serializable.,0,1,Expand
2778,BloomFilter.java,they also support a more compact serial representation via the,0,1,Expand
2779,BloomFilter.java,@link #writeto and @link #readfrom methods.,0,1,Expand
2780,BloomFilter.java,both serialized forms will continue to be,0,1,Expand
2781,BloomFilter.java,supported by future versions of this library.,0,1,Expand
2782,BloomFilter.java,"however, serial forms generated by newer versions",0,1,Expand
2783,BloomFilter.java,"of the code may not be readable by older versions of the code eg, a serialized bloom filter",0,1,Expand
3807,SmoothRateLimiter.java,the simplest way to maintain a rate of qps is to keep the timestamp of the last granted,0,1,Expand
2784,BloomFilter.java,generated today may i not i be readable by a binary that was compiled 6 months ago .,0,1,Expand
3808,SmoothRateLimiter.java,"request, and ensure that 1 qps seconds have elapsed since then.",0,1,Expand
3809,SmoothRateLimiter.java,"for example, for a rate of",0,1,Expand
3810,SmoothRateLimiter.java,"qps 5 5 tokens per second , if we ensure that a request isn t granted earlier than 200ms after",0,1,Expand
3811,SmoothRateLimiter.java,"the last one, then we achieve the intended rate.",0,1,Expand
3812,SmoothRateLimiter.java,if a request comes and the last request was,0,1,Expand
3813,SmoothRateLimiter.java,"granted only 100ms ago, then we wait for another 100ms.",0,1,Expand
3814,SmoothRateLimiter.java,"at this rate, serving 15 fresh permits",0,1,Expand
3815,SmoothRateLimiter.java,ie for an acquire 15 request naturally takes 3 seconds.,0,1,Expand
3816,SmoothRateLimiter.java,it is important to realize that such a ratelimiter has a very superficial memory of the past,0,1,Expand
3817,SmoothRateLimiter.java,it only remembers the last request.,0,1,Expand
3818,SmoothRateLimiter.java,what if the ratelimiter was unused for a long period of,0,1,Expand
3050,ClassToInstanceMap.java,"p like any other @code map class, object , this map may contain entries for primitive types,",0,1,Expand
3819,SmoothRateLimiter.java,"time, then a request arrived and was immediately granted?",0,1,Expand
3051,ClassToInstanceMap.java,and a primitive type and its corresponding wrapper type may map to different values.,0,1,Expand
3820,SmoothRateLimiter.java,this ratelimiter would immediately,0,1,Expand
3821,SmoothRateLimiter.java,forget about that past underutilization.,0,1,Expand
3822,SmoothRateLimiter.java,this may result in either underutilization or,0,1,Expand
3823,SmoothRateLimiter.java,"overflow, depending on the real world consequences of not using the expected rate.",0,1,Expand
3824,SmoothRateLimiter.java,past underutilization could mean that excess resources are available.,0,1,Expand
3825,SmoothRateLimiter.java,"then, the ratelimiter",0,1,Expand
3826,SmoothRateLimiter.java,"should speed up for a while, to take advantage of these resources.",0,1,Expand
3827,SmoothRateLimiter.java,this is important when the,0,1,Expand
3828,SmoothRateLimiter.java,"rate is applied to networking limiting bandwidth , where past underutilization typically",0,1,Expand
3829,SmoothRateLimiter.java,"translates to almost empty buffers , which can be filled immediately.",0,1,Expand
3830,SmoothRateLimiter.java,"on the other hand, past underutilization could mean that the server responsible for handling",0,1,Expand
3319,MultimapBuilder.java,p this can be used to easily configure multimap data structure implementations not provided,0,1,Expand
3831,SmoothRateLimiter.java,"the request has become less ready for future requests , ie its caches become stale, and",0,1,Expand
3320,MultimapBuilder.java,"explicitly in @code com^google.common^collect , for example",0,1,Expand
3832,SmoothRateLimiter.java,requests become more likely to trigger expensive operations a more extreme case of this,0,1,Expand
3833,SmoothRateLimiter.java,"example is when a server has just booted, and it is mostly busy with getting itself up to",0,1,Expand
3834,SmoothRateLimiter.java,speed .,0,1,Expand
3835,SmoothRateLimiter.java,"to deal with such scenarios, we add an extra dimension, that of past underutilization ,",0,1,Expand
3836,SmoothRateLimiter.java,modeled by storedpermits variable.,0,1,Expand
3837,SmoothRateLimiter.java,"this variable is zero when there is no underutilization,",0,1,Expand
3838,SmoothRateLimiter.java,"and it can grow up to maxstoredpermits, for sufficiently large underutilization.",0,1,Expand
3839,SmoothRateLimiter.java,"so, the",0,1,Expand
4518,SpiUtils.java,the kind of binding.,0,1,Expand
4519,SpiUtils.java,the result of the binding.,1,1,Expand
4488,Element.java,all elements are,0,1,Expand
4489,Element.java,assigned a globally unique id to allow different modules to contribute multibindings,0,1,Expand
4490,Element.java,independently.,0,1,Expand
5376,Window.java,@link ui#addwindow window .,0,1,Expand
5121,VScrollTable.java,non javadoc,1,1,Expand
5377,Window.java,p,0,1,Expand
5378,Window.java,the contents of a window is set using @link #setcontent component or by,1,1,Expand
5379,Window.java,"using the @link #window string, component constructor.",0,1,Expand
5380,Window.java,p,1,1,Expand
5381,Window.java,p,0,1,Expand
5382,Window.java,a window can be positioned on the screen using absolute coordinates pixels,1,1,Expand
5383,Window.java,or set to be centered using @link #center,0,1,Expand
5384,Window.java,p,1,1,Expand
5129,VScrollTable.java,example itabpanel just set contained components invisible and back,0,1,Expand
5385,Window.java,p,1,1,Expand
5386,Window.java,the caption is displayed in the window header.,0,1,Expand
5387,Window.java,p,1,1,Expand
5388,Window.java,p,0,1,Expand
5389,Window.java,"in vaadin versions prior to 70.0, window was also used as application level",1,1,Expand
5134,VScrollTable.java,non javadoc,0,1,Expand
5390,Window.java,windows.,1,1,Expand
5391,Window.java,this function is now covered by the @link ui class.,0,1,Expand
5136,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,1,1,Expand
5392,Window.java,p,0,1,Expand
5138,VScrollTable.java,non javadoc,1,1,Expand
5140,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,0,1,Expand
5142,VScrollTable.java,non javadoc,1,1,Expand
5399,Window.java,event which is fired when the window order position is changed.,0,1,Expand
5144,VScrollTable.java,for internal use only.,1,1,Expand
5146,VScrollTable.java,overwrites onbrowserevent function on focusablescrollpanel to give event,0,1,Expand
5147,VScrollTable.java,access to touchcontextprovider.,1,1,Expand
5148,VScrollTable.java,has to be public to give tableconnector,0,1,Expand
5406,Window.java,an interface used for listening to window order change events.,1,1,Expand
5412,Window.java,an interface used for listening to window close events.,0,1,Expand
5157,VScrollTable.java,example itabpanel just set contained components invisible and back,1,1,Expand
5413,Window.java,add the,0,1,Expand
5414,Window.java,closelistener to a window and,1,1,Expand
5415,Window.java,@link closelistener#windowclose closeevent will be called whenever the,0,1,Expand
5416,Window.java,user closes the window.,1,1,Expand
5417,Window.java,p,0,1,Expand
5162,VScrollTable.java,non javadoc,1,1,Expand
5164,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,0,1,Expand
5420,Window.java,p,1,1,Expand
5166,VScrollTable.java,non javadoc,0,1,Expand
5168,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,1,1,Expand
5170,VScrollTable.java,non javadoc,0,1,Expand
5172,VScrollTable.java,used to recall the position of an open context menu if we need to close,1,1,Expand
5175,VScrollTable.java,for internal use only.,0,1,Expand
5432,Window.java,an interface used for listening to window maximize restore events.,1,1,Expand
5433,Window.java,add,0,1,Expand
5434,Window.java,the windowmodechangelistener to a window and,1,1,Expand
5435,Window.java,@link windowmodechangelistener#windowmodechanged windowmodechangeevent,0,1,Expand
5436,Window.java,will be called whenever the window is maximized,1,1,Expand
5437,Window.java,@link windowmode#maximized or restored @link windowmode#normal .,0,1,Expand
5182,VScrollTable.java,example itabpanel just set contained components invisible and back,1,1,Expand
5442,Window.java,resize events are fired whenever the client side fires a resize event,0,1,Expand
5187,VScrollTable.java,non javadoc,1,1,Expand
5443,Window.java,eg the browser window is resized .,0,1,Expand
5444,Window.java,the frequency may vary across,1,1,Expand
5189,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,0,1,Expand
5445,Window.java,browsers.,1,1,Expand
5191,VScrollTable.java,non javadoc,0,1,Expand
5193,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,1,1,Expand
5195,VScrollTable.java,non javadoc,0,1,Expand
5197,VScrollTable.java,for internal use only.,1,1,Expand
5456,Window.java,a @link shortcutlistener specifically made to define a keyboard,0,1,Expand
5457,Window.java,shortcut that closes the window.,1,1,Expand
5204,VScrollTable.java,example itabpanel just set contained components invisible and back,0,1,Expand
5463,Window.java,"getui ^addaction new window^closeshortcut window, keycode^escape",1,1,Expand
5209,VScrollTable.java,non javadoc,0,1,Expand
5211,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,1,1,Expand
5213,VScrollTable.java,non javadoc,0,1,Expand
4958,VaadinPortlet.java,base class for portlet requests that need access to http servlet,1,1,Expand
5215,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,0,1,Expand
5217,VScrollTable.java,non javadoc,0,1,Expand
4962,VaadinPortlet.java,portlet request for liferay.,0,1,Expand
5220,VScrollTable.java,reordering disabled and clicking on it resets sorting.,0,1,Expand
4965,VaadinPortlet.java,portlet request for gatein.,0,1,Expand
4968,VaadinPortlet.java,portlet request for websphere portal.,0,1,Expand
5226,VScrollTable.java,example itabpanel just set contained components invisible and back,0,1,Expand
4971,VaadinPortlet.java,portlet request for websphere portal.,0,1,Expand
5231,VScrollTable.java,non javadoc,0,1,Expand
5233,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,0,1,Expand
5235,VScrollTable.java,non javadoc,0,1,Expand
5237,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,0,1,Expand
5239,VScrollTable.java,non javadoc,0,1,Expand
5247,VScrollTable.java,example itabpanel just set contained components invisible and back,0,1,Expand
5252,VScrollTable.java,non javadoc,0,1,Expand
5254,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,0,1,Expand
4999,VaadinServiceInitListener.java,listener instances are by default discovered and instantiated using,0,1,Expand
5256,VScrollTable.java,non javadoc,0,1,Expand
5000,VaadinServiceInitListener.java,@link serviceloader .,0,1,Expand
5001,VaadinServiceInitListener.java,this means that all implementations must have a,0,1,Expand
5258,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,0,1,Expand
5002,VaadinServiceInitListener.java,zero argument constructor and the fully qualified name of the implementation,0,1,Expand
5003,VaadinServiceInitListener.java,class must be listed on a separate line in a,0,1,Expand
5260,VScrollTable.java,non javadoc,0,1,Expand
5004,VaadinServiceInitListener.java,meta inf services com^vaadin.server^vaadinserviceinitlistener file present in,0,1,Expand
5005,VaadinServiceInitListener.java,the jar file containing the implementation class.,0,1,Expand
5263,VScrollTable.java,reordering disabled and clicking on it resets sorting.,0,1,Expand
5007,VaadinServiceInitListener.java,"integrations for specific runtime environments, such as osgi or spring, might",0,1,Expand
5008,VaadinServiceInitListener.java,also provide other ways of discovering listeners.,0,1,Expand
5269,VScrollTable.java,example itabpanel just set contained components invisible and back,0,1,Expand
5274,VScrollTable.java,non javadoc,0,1,Expand
5276,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,0,1,Expand
5278,VScrollTable.java,non javadoc,0,1,Expand
5280,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,0,1,Expand
5282,VScrollTable.java,non javadoc,0,1,Expand
5290,VScrollTable.java,example itabpanel just set contained components invisible and back,0,1,Expand
5038,VScrollTable.java,vscrolltable is a flowpanel having two widgets in it tablehead component,0,1,Expand
5295,VScrollTable.java,non javadoc,0,1,Expand
5040,VScrollTable.java,"tablehead contains table s header and widgets logic for resizing,",0,1,Expand
5297,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,0,1,Expand
5042,VScrollTable.java,scrollpanel contains vscrolltablebody object which handles content.,0,1,Expand
5299,VScrollTable.java,non javadoc,0,1,Expand
5044,VScrollTable.java,"some bandwidth and to improve clients responsiveness with loads of data, in",0,1,Expand
5301,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,0,1,Expand
5303,VScrollTable.java,non javadoc,0,1,Expand
4791,PopupView.java,constructors,0,1,Expand
5047,VScrollTable.java,vscrolltablebody to use the exact same space as non rendered rows would use.,0,1,Expand
4792,PopupView.java,methods inherited from abstractcomponentcontainer.,0,1,Expand
5048,VScrollTable.java,this way we can use seamlessly traditional scrollbars and scrolling to fetch,0,1,Expand
5305,VScrollTable.java,this panel can only contain vscrolltablerow type of widgets.,0,1,Expand
4793,PopupView.java,these are unnecessary,0,1,Expand
4794,PopupView.java,but mandatory .,0,1,Expand
5050,VScrollTable.java,in vscrolltable we listen to scroll events.,0,1,Expand
4795,PopupView.java,most of them are not supported in this implementation.,0,1,Expand
5051,VScrollTable.java,on horizontal scrolling we also,0,1,Expand
5052,VScrollTable.java,update tableheads scroll position which has its scrollbars hidden.,0,1,Expand
5053,VScrollTable.java,on,0,1,Expand
5054,VScrollTable.java,vertical scroll events we will check if we are reaching the end of area where,0,1,Expand
5055,VScrollTable.java,we have rows rendered and,0,1,Expand
5056,VScrollTable.java,todo implement unregistering for child components in cells,0,1,Expand
4801,PopupView.java,constructors,0,1,Expand
4802,PopupView.java,methods inherited from abstractcomponentcontainer.,0,1,Expand
4547,AbstractProperty.java,an code event code object specifying the property whose read only,0,1,Expand
4803,PopupView.java,these are unnecessary,0,1,Expand
4548,AbstractProperty.java,status has been changed.,0,1,Expand
4804,PopupView.java,but mandatory .,0,1,Expand
4805,PopupView.java,most of them are not supported in this implementation.,0,1,Expand
4806,PopupView.java,this event is received by the popupvisibilitylisteners when the,0,1,Expand
5062,VScrollTable.java,example itabpanel just set contained components invisible and back,0,1,Expand
4807,PopupView.java,visibility of the popup changes.,0,1,Expand
4808,PopupView.java,you can get the new visibility directly,0,1,Expand
4809,PopupView.java,"with @link #ispopupvisible , or get the popupview that produced the",0,1,Expand
4810,PopupView.java,event with @link #getpopupview .,0,1,Expand
4811,PopupView.java,constructors,0,1,Expand
5067,VScrollTable.java,non javadoc,0,1,Expand
4812,PopupView.java,methods inherited from abstractcomponentcontainer.,0,1,Expand
4813,PopupView.java,these are unnecessary,0,1,Expand
5069,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,0,1,Expand
4814,PopupView.java,but mandatory .,0,1,Expand
4815,PopupView.java,most of them are not supported in this implementation.,0,1,Expand
5071,VScrollTable.java,non javadoc,0,1,Expand
4816,PopupView.java,defines a listener that can receive a popupvisibilityevent when the,0,1,Expand
4817,PopupView.java,visibility of the popup changes.,0,1,Expand
5073,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,0,1,Expand
5075,VScrollTable.java,non javadoc,0,1,Expand
5077,VScrollTable.java,simple interface for parts of the table capable of owning a context menu.,0,1,Expand
5085,VScrollTable.java,example itabpanel just set contained components invisible and back,0,1,Expand
5090,VScrollTable.java,non javadoc,0,1,Expand
5092,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,0,1,Expand
5094,VScrollTable.java,non javadoc,0,1,Expand
5096,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,0,1,Expand
4585,BootstrapPageResponse.java,the bootstrap page,0,1,Expand
4586,BootstrapPageResponse.java,contains of the full dom of the html document as well as the http headers,0,1,Expand
5098,VScrollTable.java,non javadoc,0,1,Expand
4587,BootstrapPageResponse.java,that will be included in the corresponding http response.,0,1,Expand
5100,VScrollTable.java,handles showing context menu on long press from a touch screen.,0,1,Expand
5108,VScrollTable.java,example itabpanel just set contained components invisible and back,0,1,Expand
4597,ButtonRenderer.java,the value of the,0,1,Expand
4598,ButtonRenderer.java,corresponding property is used as the caption.,0,1,Expand
5113,VScrollTable.java,non javadoc,0,1,Expand
5115,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,0,1,Expand
5373,Window.java,a component that represents a floating popup window that can be added to a,0,1,Expand
5117,VScrollTable.java,non javadoc,0,1,Expand
5375,Window.java,a window is added to a @code ui using,0,1,Expand
5119,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,0,1,Expand
273,DelegatingSSLSocketFactory.java,a @link sslsocketfactory that can delegate to various ssl implementations.,0,1,usage
278,DelegatingSSLSocketFactory.java,library.,1,1,usage
279,DelegatingSSLSocketFactory.java,p,0,1,usage
280,DelegatingSSLSocketFactory.java,the factory has several different modes of operation,1,1,usage
281,DelegatingSSLSocketFactory.java,ul,0,1,usage
282,DelegatingSSLSocketFactory.java,li openssl uses the wildly openssl library to delegate to the,1,1,usage
283,DelegatingSSLSocketFactory.java,system installed openssl.,0,1,usage
284,DelegatingSSLSocketFactory.java,if the wildfly openssl integration is not,1,1,usage
285,DelegatingSSLSocketFactory.java,"properly setup, an exception is thrown.",0,1,usage
286,DelegatingSSLSocketFactory.java,li,1,1,usage
289,DelegatingSSLSocketFactory.java,li,0,1,usage
291,DelegatingSSLSocketFactory.java,it disables the gcm cipher when running on java 8.,1,1,usage
292,DelegatingSSLSocketFactory.java,li,0,1,usage
295,DelegatingSSLSocketFactory.java,li,1,1,usage
296,DelegatingSSLSocketFactory.java,ul,0,1,usage
297,DelegatingSSLSocketFactory.java,p,1,1,usage
301,DelegatingSSLSocketFactory.java,p,0,1,usage
302,DelegatingSSLSocketFactory.java,default jsse is not truly the the default jsse implementation because,1,1,usage
305,DelegatingSSLSocketFactory.java,was not changed in order to preserve backwards compatibility.,0,1,usage
307,DelegatingSSLSocketFactory.java,a new mode called default jsse with gcm delegates to the default jsse,1,1,usage
308,DelegatingSSLSocketFactory.java,implementation with no changes to the list of enabled ciphers.,0,1,usage
309,DelegatingSSLSocketFactory.java,p,1,1,usage
567,InconsistentS3ClientFactory.java,this client is for testing i only i it is in the production,0,1,usage
568,InconsistentS3ClientFactory.java,@code hadoop aws module to enable integration tests to use this,1,1,usage
569,InconsistentS3ClientFactory.java,just by editing the hadoop configuration used to bring up the client.,0,1,usage
588,ITestCommitOperations.java,this is done with an inconsistent client.,1,1,usage
1356,TypedEvent.java,@param t,0,1,usage
90,BatchedRequests.java,placementalgorithmoutput attempt the number of times the requests in this,1,1,usage
1373,Utils.java,this class filters output part files from the given directory,0,1,usage
1374,Utils.java,it does not accept files with filenames logs and success.,1,1,usage
1375,Utils.java,this can be used to list paths of output directory as follows,0,1,usage
1376,Utils.java,"path filelist fileutil^stat2paths fs^liststatus outdir,",1,1,usage
1377,Utils.java,new outputfilesfilter,0,1,usage
1378,Utils.java,this class filters log files from directory given,1,1,usage
1379,Utils.java,it doesnt accept paths having logs.,0,1,usage
1380,Utils.java,this can be used to list paths of output directory as follows,1,1,usage
1381,Utils.java,"path filelist fileutil^stat2paths fs^liststatus outdir,",0,1,usage
1382,Utils.java,new outputlogfilter,1,1,usage
876,SafeModeException.java,client cannot modified namespace until the safe mode is off.,0,1,usage
621,LoggedTask.java,all of the public methods are simply accessors for the instance variables we,1,1,usage
622,LoggedTask.java,want to write out in the json files.,0,1,usage
1404,WritableComparator.java,p this base implementation uses the natural ordering.,1,1,usage
1405,WritableComparator.java,to define alternate,0,1,usage
638,MapContext.java,@param keyin the key input type to the mapper,1,1,usage
1150,TestTaskCommit.java,special committer that always requires commit.,0,1,usage
1406,WritableComparator.java,"orderings, override @link #compare writablecomparable,writablecomparable .",0,1,usage
639,MapContext.java,@param valuein the value input type to the mapper,0,1,usage
1407,WritableComparator.java,p one may optimize compare intensive operations by overriding,0,1,usage
640,MapContext.java,@param keyout the key output type from the mapper,0,1,usage
1408,WritableComparator.java,"@link #compare byte ,int,int,byte ,int,int .",0,1,usage
641,MapContext.java,@param valueout the value output type from the mapper,0,1,usage
1409,WritableComparator.java,static utility methods are,0,1,usage
1410,WritableComparator.java,provided to assist in optimized implementations of this method.,0,1,usage
899,StreamBaseRecordReader.java,a custom reader can be,0,1,usage
900,StreamBaseRecordReader.java,defined to be a recordreader with the constructor below and is selected with,0,1,usage
901,StreamBaseRecordReader.java,the option bin hadoopstreaming inputreader .,0,1,usage
924,StructureGenerator.java,the synopsis of the command is,0,1,usage
925,StructureGenerator.java,java structuregenerator,0,1,usage
926,StructureGenerator.java,maxdepth maxdepth maximum depth of the directory tree default is 5.,0,1,usage
927,StructureGenerator.java,minwidth minwidth minimum number of subdirectories per directories default is 1,0,1,usage
928,StructureGenerator.java,maxwidth maxwidth maximum number of subdirectories per directories default is 5,0,1,usage
929,StructureGenerator.java,numoffiles #offiles the total number of files default is 10.,0,1,usage
930,StructureGenerator.java,avgfilesize avgfilesizeinblocks average size of blocks default is 1.,0,1,usage
931,StructureGenerator.java,outdir outdir output directory default is the current directory.,0,1,usage
932,StructureGenerator.java,seed seed random number generator seed default is the current time.,0,1,usage
933,StructureGenerator.java,in memory representation of a directory in memory representation of a file,0,1,usage
175,ComparableVersion.java,generic implementation of version comparison.,0,1,usage
176,ComparableVersion.java,p features,0,1,usage
177,ComparableVersion.java,ul,0,1,usage
188,ComparableVersion.java,li code milestone code or code m code li,0,1,usage
189,ComparableVersion.java,li code rc code or code cr code li,0,1,usage
190,ComparableVersion.java,li code snapshot code li,0,1,usage
191,ComparableVersion.java,li code the empty string code or code ga code or code final code li,0,1,usage
192,ComparableVersion.java,li code sp code li,0,1,usage
193,ComparableVersion.java,ul,0,1,usage
194,ComparableVersion.java,"unknown qualifiers are considered after known qualifiers, with lexical order always case insensitive ,",0,1,usage
195,ComparableVersion.java,li,0,1,usage
197,ComparableVersion.java,li,0,1,usage
453,ErasureCodingPolicyManager.java,this class is instantiated by the fsnamesystem.,0,1,usage
200,ComparableVersion.java,represents a numeric item in the version item list.,0,1,usage
201,ComparableVersion.java,"represents a string in the version item list, usually a qualifier.",0,1,usage
202,ComparableVersion.java,represents a version list item.,0,1,usage
714,QuasiMonteCarlo.java,"in this example,",0,1,usage
203,ComparableVersion.java,this class is used both for the global item list and for sub lists which start,0,1,usage
715,QuasiMonteCarlo.java,"we use a qmc method to approximate the integral i int s f x dx ,",0,1,usage
716,QuasiMonteCarlo.java,"where s 0,1 ^2 is a unit square,",0,1,usage
717,QuasiMonteCarlo.java,"x x 1,x 2 is a 2 dimensional point,",0,1,usage
718,QuasiMonteCarlo.java,"and f is a function describing the inscribed circle of the square s ,",0,1,usage
719,QuasiMonteCarlo.java,"f x 1 if 2x 1 1 ^2 2x 2 1 ^2 &lt 1 and f x 0 , otherwise.",0,1,usage
720,QuasiMonteCarlo.java,it is easy to see that pi is equal to 4i .,0,1,usage
721,QuasiMonteCarlo.java,so an approximation of pi is obtained once i is evaluated numerically.,0,1,usage
722,QuasiMonteCarlo.java,there are better methods for computing pi.,0,1,usage
723,QuasiMonteCarlo.java,we emphasize numerical approximation of arbitrary integrals in this example.,0,1,usage
724,QuasiMonteCarlo.java,"for computing many digits of pi, consider using bbp.",0,1,usage
480,FairOrderingPolicy.java,if,0,1,usage
481,FairOrderingPolicy.java,sizedbasedweight is set to true then an application with high demand,0,1,usage
482,FairOrderingPolicy.java,may be prioritized ahead of an application with less usage.,0,1,usage
483,FairOrderingPolicy.java,this,0,1,usage
484,FairOrderingPolicy.java,"is to offset the tendency to favor small apps, which could result in",0,1,usage
486,FairOrderingPolicy.java,"continuously optional, default false",0,1,usage
249,DBProfile.java,documentation for options.,0,1,usage
250,DBProfile.java,p,0,1,usage
251,DBProfile.java,https github^com facebook rocksdb blob master include rocksdb options^h,0,1,usage
252,DBProfile.java,p,0,1,usage
253,DBProfile.java,most tuning parameters are based on this url.,0,1,usage
254,DBProfile.java,p,0,1,usage
255,DBProfile.java,https github^com facebook rocksdb wiki setup options and basic tuning,0,1,usage
1488,JavaStreamingTestExample.java,batches processed exceeds numbatchestimeout .,0,1,usage
1481,JavaStreamingTestExample.java,usage,1,1,usage
1482,JavaStreamingTestExample.java,javastreamingtestexample datadir batchduration numbatchestimeout,0,1,usage
1483,JavaStreamingTestExample.java,to run on your local machine using the directory datadir with 5 seconds between each batch and,1,1,usage
1484,JavaStreamingTestExample.java,"a timeout after 100 insignificant batches, call",0,1,usage
1485,JavaStreamingTestExample.java,bin run example mllib^javastreamingtestexample datadir 5 100,0,1,usage
1486,JavaStreamingTestExample.java,as you add text files to datadir the significance test wil continually update every,0,1,usage
1471,JavaRecord.java,java bean class to be used with the example javasqlnetworkwordcount.,0,1,usage
1487,JavaStreamingTestExample.java,batchduration seconds until the test becomes significant p value 005 or the number of,0,1,usage
2048,ICodeReaderFactory.java,@noreference this interface is not intended to be referenced by clients.,0,1,usage
2055,ICPointerType.java,@noimplement this interface is not intended to be implemented by clients.,1,1,usage
1801,CUIPreferenceInitializer.java,@noextend this class is not intended to be subclassed by clients.,0,1,usage
2314,MIStack.java,sub classes must supply the miarg object.,1,1,usage
2060,ICPPAliasTemplateInstance.java,@noextend this interface is not intended to be extended by clients.,0,1,usage
2061,ICPPAliasTemplateInstance.java,@noimplement this interface is not intended to be implemented by clients.,1,1,usage
2068,ICPPASTLinkageSpecification.java,@noextend this interface is not intended to be extended by clients.,0,1,usage
2069,ICPPASTLinkageSpecification.java,@noimplement this interface is not intended to be implemented by clients.,1,1,usage
2582,TypedCDTViewerFilter.java,@noextend this class is not intended to be subclassed by clients.,0,1,usage
2076,ICPPASTVirtSpecifier.java,@noimplement this interface is not intended to be implemented by clients.,1,1,usage
2077,ICPPASTVirtSpecifier.java,@noextend this interface is not intended to be extended by clients.,0,1,usage
2085,ICPPPointerToMemberType.java,@noimplement this interface is not intended to be implemented by clients.,1,1,usage
1829,DocCommentOwnerBlock.java,em this class is not intended for use outside of cdt em,0,1,usage
1830,DocCommentOwnerBlock.java,@noextend this class is not intended to be subclassed by clients.,1,1,usage
1831,DocCommentOwnerBlock.java,@noinstantiate this class is not intended to be instantiated by clients.,0,1,usage
2604,WhiteSpaceOptions.java,preview snippets.,1,1,usage
2605,WhiteSpaceOptions.java,"private void createbeforeellipsis map workingvalues, innernode parent createoption parent, workingvalues, formattermessages^whitespaceoptions vararg parameter, defaultcodeformatterconstants^formatter insert space before ellipsis, vararg parameter preview private void createafterellipsis map workingvalues, innernode parent createoption parent, workingvalues, formattermessages^whitespaceoptions vararg parameter, defaultcodeformatterconstants^formatter insert space after ellipsis, vararg parameter preview syntax element tree private innernode createreturntree map workingvalues, innernode parent final innernode root new innernode parent, workingvalues, formattermessages^whitespaceoptions return createoption root, workingvalues, formattermessages^whitespacetabpage before parenthesized expressions, defaultcodeformatterconstants^formatter insert space before parenthesized expression in return, return preview return root private innernode createthrowtree map workingvalues, innernode parent final innernode root new innernode parent, workingvalues, formattermessages^whitespaceoptions throw createoption root, workingvalues, formattermessages^whitespacetabpage before parenthesized expressions, defaultcodeformatterconstants^formatter insert space before parenthesized expression in throw, throw preview return root",0,1,usage
2606,WhiteSpaceOptions.java,represents a node in the options tree.,1,1,usage
2607,WhiteSpaceOptions.java,preview snippets.,0,1,usage
2608,WhiteSpaceOptions.java,"private void createbeforeellipsis map workingvalues, innernode parent createoption parent, workingvalues, formattermessages^whitespaceoptions vararg parameter, defaultcodeformatterconstants^formatter insert space before ellipsis, vararg parameter preview private void createafterellipsis map workingvalues, innernode parent createoption parent, workingvalues, formattermessages^whitespaceoptions vararg parameter, defaultcodeformatterconstants^formatter insert space after ellipsis, vararg parameter preview syntax element tree private innernode createreturntree map workingvalues, innernode parent final innernode root new innernode parent, workingvalues, formattermessages^whitespaceoptions return createoption root, workingvalues, formattermessages^whitespacetabpage before parenthesized expressions, defaultcodeformatterconstants^formatter insert space before parenthesized expression in return, return preview return root private innernode createthrowtree map workingvalues, innernode parent final innernode root new innernode parent, workingvalues, formattermessages^whitespaceoptions throw createoption root, workingvalues, formattermessages^whitespacetabpage before parenthesized expressions, defaultcodeformatterconstants^formatter insert space before parenthesized expression in throw, throw preview return root",1,1,usage
2609,WhiteSpaceOptions.java,a node representing a group of options in the tree.,0,1,usage
2610,WhiteSpaceOptions.java,preview snippets.,1,1,usage
2611,WhiteSpaceOptions.java,"private void createbeforeellipsis map workingvalues, innernode parent createoption parent, workingvalues, formattermessages^whitespaceoptions vararg parameter, defaultcodeformatterconstants^formatter insert space before ellipsis, vararg parameter preview private void createafterellipsis map workingvalues, innernode parent createoption parent, workingvalues, formattermessages^whitespaceoptions vararg parameter, defaultcodeformatterconstants^formatter insert space after ellipsis, vararg parameter preview syntax element tree private innernode createreturntree map workingvalues, innernode parent final innernode root new innernode parent, workingvalues, formattermessages^whitespaceoptions return createoption root, workingvalues, formattermessages^whitespacetabpage before parenthesized expressions, defaultcodeformatterconstants^formatter insert space before parenthesized expression in return, return preview return root private innernode createthrowtree map workingvalues, innernode parent final innernode root new innernode parent, workingvalues, formattermessages^whitespaceoptions throw createoption root, workingvalues, formattermessages^whitespacetabpage before parenthesized expressions, defaultcodeformatterconstants^formatter insert space before parenthesized expression in throw, throw preview return root",0,1,usage
2612,WhiteSpaceOptions.java,a node representing a concrete white space option in the tree.,1,1,usage
1851,FindStdLibPath.java,currently the shell script is only for linux.,0,1,usage
1865,GCCKeywords.java,@noextend this interface is not intended to be extended by clients.,1,1,usage
1866,GCCKeywords.java,@noinstantiate this class is not intended to be instantiated by clients.,0,1,usage
2380,MultiCfgContributedEnvironment.java,@noextend this class is not intended to be subclassed by clients.,1,1,usage
2128,IInclude.java,@noextend this interface is not intended to be extended by clients.,0,1,usage
2129,IInclude.java,@noimplement this interface is not intended to be implemented by clients.,1,1,usage
2387,PDOMDependencyGenerator.java,@noextend this class is not intended to be subclassed by clients.,0,1,usage
2388,PDOMDependencyGenerator.java,@noinstantiate this class is not intended to be instantiated by clients.,1,1,usage
2136,IMacroEntry.java,@noextend this interface is not intended to be extended by clients.,0,1,usage
2137,IMacroEntry.java,@noimplement this interface is not intended to be implemented by clients.,1,1,usage
1886,GnuMakefileGenerator.java,@noinstantiate this class is not intended to be instantiated by clients.,0,1,usage
1887,GnuMakefileGenerator.java,string constants for makefile contents and messages private static final string auto dep comment ^autodeps non nls 1 private static final string message managedmakebuilder^message non nls 1 private static final string build error message ^error non nls 1 private static final string dep incl comment ^module.dep^includes non nls 1 private static final string mod incl comment ^module.make^includes non nls 1 private itool buildtools private boolean buildtoolsused private imanagedbuildinfo info private set outputextensionsset maps of macro names string to values list dependency file variables private vector dependencymakefiles ipath s relative to the top build directory or absolute,1,1,usage
1888,GnuMakefileGenerator.java,imanagedbuildermakefilegenerator m e t h o d s,0,1,usage
1889,GnuMakefileGenerator.java,m a k e f i l e s p o p u l a t i o n m e t h o d s,1,1,usage
1890,GnuMakefileGenerator.java,m a i n makefile m a k e f i l e m e t h o d s,0,1,usage
1891,GnuMakefileGenerator.java,s o u r c e s sources^mk m a k e f i l e m e t h o d s,1,1,usage
2148,IMSASTDeclspecList.java,@noextend this interface is not intended to be extended by clients.,0,1,usage
1892,GnuMakefileGenerator.java,f r a g m e n t subdir^mk m a k e f i l e m e t h o d s,1,1,usage
2149,IMSASTDeclspecList.java,@noimplement this interface is not intended to be implemented by clients.,0,1,usage
1893,GnuMakefileGenerator.java,m a k e f i l eg e n e r a t i o n c o m m o n m e t h o d s,1,1,usage
1894,GnuMakefileGenerator.java,adds a macro addition prefix to a map of macro names to entries.,0,1,usage
1895,GnuMakefileGenerator.java,entry prefixes look like,1,1,usage
1896,GnuMakefileGenerator.java,c srcs,0,1,usage
1897,GnuMakefileGenerator.java,"addprefix root ,",1,1,usage
1898,GnuMakefileGenerator.java,r e s o u r c e v i s i t o r m e t h o d s,0,1,usage
2155,INodeFactory.java,@noextend this interface is not intended to be extended by clients.,1,1,usage
1899,GnuMakefileGenerator.java,o t h e r m e t h o d s,0,1,usage
1900,GnuMakefileGenerator.java,"process a string denoting a filepath in a way compatible for gnu make rules, handling",1,1,usage
1901,GnuMakefileGenerator.java,windows drive letters and whitespace appropriately.,0,1,usage
1902,GnuMakefileGenerator.java,p p,1,1,usage
1903,GnuMakefileGenerator.java,the context these paths appear in is on the right hand side of a rule header.,0,1,usage
1904,GnuMakefileGenerator.java,ie,1,1,usage
2161,IPropertyChangeParticipant.java,p,0,1,usage
1905,GnuMakefileGenerator.java,p p,1,1,usage
2162,IPropertyChangeParticipant.java,clients may implement this interface.,0,1,usage
1906,GnuMakefileGenerator.java,target dep1 dep2 dep3,1,1,usage
2163,IPropertyChangeParticipant.java,p,0,1,usage
1907,GnuMakefileGenerator.java,p,1,1,usage
1652,AddMemoryBlocks.java,"in order to avoid duplicating the addmemoryblocks method one version for expressions, one for memory space address, we pass in a an opaque parameter and let the logic within addmemoryblocks differentiate where needed via isinstanceof request object used to get the memory spaces",0,1,usage
1908,GnuMakefileGenerator.java,@param path the string denoting the path to process,1,1,usage
1909,GnuMakefileGenerator.java,@throws nullpointerexception is path is null,0,1,usage
1910,GnuMakefileGenerator.java,@return a suitable make rule compatible path,1,1,usage
1912,GnuMakefileGenerator.java,what resources have been changed.,0,1,usage
1913,GnuMakefileGenerator.java,the logic is very simple.,1,1,usage
1914,GnuMakefileGenerator.java,if a,0,1,usage
1916,GnuMakefileGenerator.java,in which they are located are dirty so the makefile fragments for them,1,1,usage
1917,GnuMakefileGenerator.java,have to be regenerated.,0,1,usage
1918,GnuMakefileGenerator.java,p,1,1,usage
2431,RulerColumnDescriptor.java,instances can be obtained from a @link rulercolumnregistry .,0,1,usage
1920,GnuMakefileGenerator.java,itself.,0,1,usage
2433,RulerColumnDescriptor.java,@noinstantiate this class is not intended to be instantiated by clients.,0,1,usage
1921,GnuMakefileGenerator.java,we are relying on make to do the right things when confronted,0,1,usage
1922,GnuMakefileGenerator.java,with a dependency on a moved header file.,0,1,usage
1923,GnuMakefileGenerator.java,"that said, make will treat",0,1,usage
1924,GnuMakefileGenerator.java,the missing header file in a dependency rule as a target it has to build,0,1,usage
1925,GnuMakefileGenerator.java,unless told otherwise.,0,1,usage
1926,GnuMakefileGenerator.java,these dummy targets are added to the makefile,0,1,usage
1927,GnuMakefileGenerator.java,to avoid a missing target error.,0,1,usage
1928,GnuMakefileGenerator.java,string constants for makefile contents and messages private static final string auto dep comment ^autodeps non nls 1 private static final string message managedmakebuilder^message non nls 1 private static final string build error message ^error non nls 1 private static final string dep incl comment ^module.dep^includes non nls 1 private static final string mod incl comment ^module.make^includes non nls 1 private itool buildtools private boolean buildtoolsused private imanagedbuildinfo info private set outputextensionsset maps of macro names string to values list dependency file variables private vector dependencymakefiles ipath s relative to the top build directory or absolute,0,1,usage
2185,ITestItem.java,@noextend this interface is not intended to be extended by clients.,0,1,usage
1673,AutotoolsProblemMarkerInfo.java,@noextend this class is not intended to be subclassed by clients.,0,1,usage
1929,GnuMakefileGenerator.java,imanagedbuildermakefilegenerator m e t h o d s,0,1,usage
2186,ITestItem.java,@noimplement this interface is not intended to be implemented by clients.,0,1,usage
1930,GnuMakefileGenerator.java,m a k e f i l e s p o p u l a t i o n m e t h o d s,0,1,usage
1931,GnuMakefileGenerator.java,m a i n makefile m a k e f i l e m e t h o d s,0,1,usage
1932,GnuMakefileGenerator.java,s o u r c e s sources^mk m a k e f i l e m e t h o d s,0,1,usage
1933,GnuMakefileGenerator.java,f r a g m e n t subdir^mk m a k e f i l e m e t h o d s,0,1,usage
1934,GnuMakefileGenerator.java,m a k e f i l eg e n e r a t i o n c o m m o n m e t h o d s,0,1,usage
1935,GnuMakefileGenerator.java,adds a macro addition prefix to a map of macro names to entries.,0,1,usage
1936,GnuMakefileGenerator.java,entry prefixes look like,0,1,usage
1937,GnuMakefileGenerator.java,c srcs,0,1,usage
2450,SourceLookupTest.java,"located in the @link #build path directory, but it is now located in the",0,1,usage
1938,GnuMakefileGenerator.java,"addprefix root ,",0,1,usage
2451,SourceLookupTest.java,@link basetestcase#source path directory.,0,1,usage
1939,GnuMakefileGenerator.java,r e s o u r c e v i s i t o r m e t h o d s,0,1,usage
1940,GnuMakefileGenerator.java,o t h e r m e t h o d s,0,1,usage
2453,SourceLookupTest.java,the wild card in sourcelookup ^exe can be one of the following to cover the,0,1,usage
1685,CConfigurationDescriptionCache.java,ol,0,1,usage
1941,GnuMakefileGenerator.java,"process a string denoting a filepath in a way compatible for gnu make rules, handling",0,1,usage
2454,SourceLookupTest.java,different effective types of source lookups that need to be done depending on,0,1,usage
1686,CConfigurationDescriptionCache.java,li initialization,0,1,usage
1942,GnuMakefileGenerator.java,windows drive letters and whitespace appropriately.,0,1,usage
2455,SourceLookupTest.java,how the program was compiled.,0,1,usage
1687,CConfigurationDescriptionCache.java,ul,0,1,usage
1943,GnuMakefileGenerator.java,p p,0,1,usage
2456,SourceLookupTest.java,each of these options produces different debug,0,1,usage
1688,CConfigurationDescriptionCache.java,li after eclipse started a project is being opened.,0,1,usage
1944,GnuMakefileGenerator.java,the context these paths appear in is on the right hand side of a rule header.,0,1,usage
2457,SourceLookupTest.java,information about where to find the source file.,0,1,usage
1689,CConfigurationDescriptionCache.java,a new cconfigurationdescriptioncache is created,0,1,usage
1945,GnuMakefileGenerator.java,ie,0,1,usage
2458,SourceLookupTest.java,see the makefile for more,0,1,usage
1690,CConfigurationDescriptionCache.java,"with cconfigurationdescriptioncache icstorageelement storage, cprojectdescription parent constructor.",0,1,usage
1946,GnuMakefileGenerator.java,p p,0,1,usage
2459,SourceLookupTest.java,information.,0,1,usage
1691,CConfigurationDescriptionCache.java,li any clients needed icconfigurationdescription get cconfigurationdescription using constructor,0,1,usage
1947,GnuMakefileGenerator.java,target dep1 dep2 dep3,0,1,usage
2460,SourceLookupTest.java,ul,0,1,usage
1692,CConfigurationDescriptionCache.java,"cconfigurationdescription cconfigurationdata data, string buildsystemid, icdataproxycontainer cr",0,1,usage
1948,GnuMakefileGenerator.java,p,0,1,usage
2461,SourceLookupTest.java,li b ac b absolute and canonical path no .,0,1,usage
1693,CConfigurationDescriptionCache.java,where the cconfigurationdescriptioncache is passed as data.,0,1,usage
1949,GnuMakefileGenerator.java,@param path the string denoting the path to process,0,1,usage
2462,SourceLookupTest.java,.,0,1,usage
1694,CConfigurationDescriptionCache.java,the reference to cache is kept in field fcfgcache.,0,1,usage
1950,GnuMakefileGenerator.java,@throws nullpointerexception is path is null,0,1,usage
2463,SourceLookupTest.java,in path passed to gcc,0,1,usage
1695,CConfigurationDescriptionCache.java,"li fcfgcache is used to getspecsettings cconfigurationspecsettings, after that fcfgcache is set to null.",0,1,usage
1951,GnuMakefileGenerator.java,@return a suitable make rule compatible path,0,1,usage
2464,SourceLookupTest.java,li,0,1,usage
1696,CConfigurationDescriptionCache.java,ul,0,1,usage
1952,GnuMakefileGenerator.java,this class is used to recursively walk the project and determine which,0,1,usage
1697,CConfigurationDescriptionCache.java,li user enters project properties settings,0,1,usage
1953,GnuMakefileGenerator.java,modules contribute buildable source files.,0,1,usage
2466,SourceLookupTest.java,.,0,1,usage
1698,CConfigurationDescriptionCache.java,ul,0,1,usage
2467,SourceLookupTest.java,in path passed to gcc,0,1,usage
1699,CConfigurationDescriptionCache.java,li another cconfigurationdescription settings configuration created using the same constructor setting fcfgcache,0,1,usage
2468,SourceLookupTest.java,li,0,1,usage
1700,CConfigurationDescriptionCache.java,to the cconfigurationdescriptioncache.,0,1,usage
1701,CConfigurationDescriptionCache.java,ul,0,1,usage
2470,SourceLookupTest.java,.,0,1,usage
1702,CConfigurationDescriptionCache.java,li user changes settings in the settings configuration cconfigurationdescription and saves it,0,1,usage
2471,SourceLookupTest.java,in path passed to gcc,0,1,usage
1703,CConfigurationDescriptionCache.java,ul,0,1,usage
2472,SourceLookupTest.java,li,0,1,usage
1704,CConfigurationDescriptionCache.java,li new cconfigurationdescriptioncache is created from the cconfigurationdescription via constructor,0,1,usage
1705,CConfigurationDescriptionCache.java,"cconfigurationdescriptioncache icconfigurationdescription basedescription, .",0,1,usage
2474,SourceLookupTest.java,.,0,1,usage
1706,CConfigurationDescriptionCache.java,where,0,1,usage
2219,MachOBinaryParserPage.java,@noextend this class is not intended to be subclassed by clients.,0,1,usage
2475,SourceLookupTest.java,in path passed to gcc,0,1,usage
1707,CConfigurationDescriptionCache.java,basedescription is saved as fbasedescription.,0,1,usage
2476,SourceLookupTest.java,li,0,1,usage
1708,CConfigurationDescriptionCache.java,li cconfigurationdescriptioncache^applydata .,0,1,usage
2221,ManageConfigRunner.java,@noextend this class is not intended to be subclassed by clients.,0,1,usage
1709,CConfigurationDescriptionCache.java,is used to persist the data.,0,1,usage
2478,SourceLookupTest.java,ul,0,1,usage
1710,CConfigurationDescriptionCache.java,at that point,0,1,usage
1712,CConfigurationDescriptionCache.java,ul,0,1,usage
1713,CConfigurationDescriptionCache.java,ol,0,1,usage
1714,CConfigurationDescriptionCache.java,@see icconfigurationdescription,0,1,usage
2483,SourceLookupTest.java,the result of the variations on compilation arguments means that some of the,0,1,usage
1715,CConfigurationDescriptionCache.java,@see cconfigurationdescription,0,1,usage
1716,CConfigurationDescriptionCache.java,@see cprojectdescriptionevent,0,1,usage
2030,IBuildObject.java,@noextend this class is not intended to be subclassed by clients.,0,1,usage
2287,MIDataListRegisterNames.java,data list register names regno,0,1,usage
2031,IBuildObject.java,@noimplement this interface is not intended to be implemented by clients.,0,1,usage
1788,CPPImplicitVariable.java,for example the initializer of a structured binding decomposition dcl^struct.bind,0,1,usage
2301,MIEnvironmentDirectory.java,environment directory r pathdir,0,1,usage
1789,CPPImplicitVariable.java,"code auto first, second decomposed code",0,1,usage
1790,CPPImplicitVariable.java,the code initializerevaluation code has to be supplied.,0,1,usage
2303,MIEnvironmentDirectory.java,r will first reset the path to its default,0,1,usage
4116,SortedSetNavigationTester.java,can t be invoked directly please see,0,1,usage
3114,EqualsTester.java,p the simplest use case is,1,1,usage
3115,EqualsTester.java,pre,0,1,usage
3117,EqualsTester.java,pre,1,1,usage
3118,EqualsTester.java,"p this tests @code foo^equals foo , @code foo^equals null , and a few other operations.",0,1,usage
3119,EqualsTester.java,"p for more extensive testing, add multiple equality groups.",1,1,usage
3120,EqualsTester.java,each group should contain objects,0,1,usage
4145,WrappingScheduledExecutorService.java,p note that task wrapping may occur even if the task is never executed.,1,1,usage
3121,EqualsTester.java,that are equal to each other but unequal to the objects in any other group.,0,1,usage
3122,EqualsTester.java,for example,1,1,usage
3123,EqualsTester.java,pre,0,1,usage
3124,EqualsTester.java,new equalstester,1,1,usage
3125,EqualsTester.java,"addequalitygroup new user page , new user page",0,1,usage
3126,EqualsTester.java,addequalitygroup new user sergey,1,1,usage
3127,EqualsTester.java,testequals,0,1,usage
3128,EqualsTester.java,pre,1,1,usage
3150,EqualsTester.java,class used to test whether equals correctly handles an instance of an incompatible class.,0,1,usage
3151,EqualsTester.java,"since it is a private inner class, the invoker can never pass in an instance to the tester",1,1,usage
3184,FeatureSpecificTestSuiteBuilder.java,@param b the concrete type of this builder the self type .,0,1,usage
3185,FeatureSpecificTestSuiteBuilder.java,all the builder methods of this,1,1,usage
3186,FeatureSpecificTestSuiteBuilder.java,"class such as @link #named return this type, so that builder methods of more derived",0,1,usage
3188,FeatureSpecificTestSuiteBuilder.java,@param g the type of the generator to be passed to testers in the generated test suite.,1,1,usage
3189,FeatureSpecificTestSuiteBuilder.java,an,0,1,usage
3191,FeatureSpecificTestSuiteBuilder.java,information required to parameterize the test.,1,1,usage
3192,FeatureSpecificTestSuiteBuilder.java,@author george van den driessche,0,1,usage
3230,HostAndPort.java,an immutable representation of a host and port.,1,1,usage
3231,HostAndPort.java,p example usage,0,1,usage
3232,HostAndPort.java,pre,1,1,usage
3233,HostAndPort.java,hostandport hp hostandport^fromstring 2001 db8 1,0,1,usage
3235,HostAndPort.java,requirebracketsforipv6,1,1,usage
3236,HostAndPort.java,hp^gethost returns 2001 db8 1,0,1,usage
3237,HostAndPort.java,hp^getport returns 80,1,1,usage
3238,HostAndPort.java,hp^tostring returns 2001 db8 1 80,0,1,usage
3239,HostAndPort.java,pre,1,1,usage
3240,HostAndPort.java,p here are some examples of recognized formats,0,1,usage
3241,HostAndPort.java,ul,1,1,usage
3242,HostAndPort.java,li example^com,0,1,usage
3244,HostAndPort.java,li 1920.21,1,1,usage
3246,HostAndPort.java,li 2001 db8 1 @link #gethost omits brackets,0,1,usage
3247,HostAndPort.java,li 2001 db8 1 80 @link #gethost omits brackets,1,1,usage
3248,HostAndPort.java,li 2001 db8 1 use @link #requirebracketsforipv6 to prohibit this,0,1,usage
3249,HostAndPort.java,ul,1,1,usage
3250,HostAndPort.java,"p note that this is not an exhaustive list, because these methods are only concerned with",0,1,usage
3251,HostAndPort.java,"brackets, colons, and port numbers.",1,1,usage
3253,HostAndPort.java,caller s responsibility.,0,1,usage
3254,HostAndPort.java,@author paul marks,1,1,usage
3287,ImmutableTable_CustomFieldSerializerBase.java,serializers should delegate to @link #serialize and @link #instantiate .,0,1,usage
3319,MultimapBuilder.java,p this can be used to easily configure multimap data structure implementations not provided,1,1,usage
3320,MultimapBuilder.java,"explicitly in @code com^google.common^collect , for example",0,1,usage
3321,MultimapBuilder.java,pre @code,1,1,usage
3322,MultimapBuilder.java,"listmultimap string, integer treelistmultimap",0,1,usage
3323,MultimapBuilder.java,multimapbuilder^treekeys ^arraylistvalues ^build,1,1,usage
3324,MultimapBuilder.java,"setmultimap integer, myenum hashenummultimap",0,1,usage
3325,MultimapBuilder.java,multimapbuilder^hashkeys ^enumsetvalues myenum^class ^build,1,1,usage
3326,MultimapBuilder.java,pre,0,1,usage
3327,MultimapBuilder.java,p @code multimapbuilder instances are immutable.,1,1,usage
3328,MultimapBuilder.java,invoking a configuration method has no effect,0,1,usage
3329,MultimapBuilder.java,on the receiving instance you must store and use the new builder instance it returns instead.,1,1,usage
3330,MultimapBuilder.java,"p the generated multimaps are serializable if the key and value types are serializable, unless",0,1,usage
3331,MultimapBuilder.java,stated otherwise in one of the configuration methods.,1,1,usage
3333,MultimapBuilder.java,@param k0 an upper bound on the key type of the generated multimap.,0,1,usage
3334,MultimapBuilder.java,@param v0 an upper bound on the value type of the generated multimap.,1,1,usage
3335,MultimapBuilder.java,@since 160,0,1,usage
3336,MultimapBuilder.java,leaving k and v as upper bounds rather than the actual key and value types allows type,1,1,usage
3337,MultimapBuilder.java,parameters to be left implicit more often.,0,1,usage
3338,MultimapBuilder.java,cachebuilder uses the same technique.,1,1,usage
3339,MultimapBuilder.java,an intermediate stage in a @link multimapbuilder in which the key value collection map,0,1,usage
3340,MultimapBuilder.java,"implementation has been specified, but the value collection implementation has not.",1,1,usage
3341,MultimapBuilder.java,@param k0 the upper bound on the key type of the generated multimap.,0,1,usage
3342,MultimapBuilder.java,@since 160,1,1,usage
3343,MultimapBuilder.java,leaving k and v as upper bounds rather than the actual key and value types allows type,0,1,usage
3344,MultimapBuilder.java,parameters to be left implicit more often.,1,1,usage
3345,MultimapBuilder.java,cachebuilder uses the same technique.,0,1,usage
3346,MultimapBuilder.java,a specialization of @link multimapbuilder that generates @link listmultimap instances.,1,1,usage
3347,MultimapBuilder.java,@since 160,0,1,usage
3348,MultimapBuilder.java,leaving k and v as upper bounds rather than the actual key and value types allows type,1,1,usage
3349,MultimapBuilder.java,parameters to be left implicit more often.,0,1,usage
3350,MultimapBuilder.java,cachebuilder uses the same technique.,1,1,usage
3352,MultimapBuilder.java,@since 160,0,1,usage
3353,MultimapBuilder.java,leaving k and v as upper bounds rather than the actual key and value types allows type,1,1,usage
3354,MultimapBuilder.java,parameters to be left implicit more often.,0,1,usage
3355,MultimapBuilder.java,cachebuilder uses the same technique.,1,1,usage
3357,MultimapBuilder.java,@since 160,0,1,usage
3403,ObjectCountHashMap.java,"p in the absence of element deletions, this will iterate over elements in insertion order.",1,1,usage
3423,Preconditions.java,"correctly that is, whether its i preconditions i were met .",0,1,usage
3424,Preconditions.java,"p if the precondition is not met, the @code preconditions method throws an unchecked exception",1,1,usage
3427,Preconditions.java,this allows constructs such as,0,1,usage
3428,Preconditions.java,pre @code,1,1,usage
3429,Preconditions.java,public static double sqrt double value,0,1,usage
3430,Preconditions.java,if value 0,1,1,usage
3431,Preconditions.java,throw new illegalargumentexception input is negative value,0,1,usage
3432,Preconditions.java,calculate square root,1,1,usage
3433,Preconditions.java,pre,0,1,usage
3434,Preconditions.java,p to be replaced with the more compact,1,1,usage
3435,Preconditions.java,pre @code,0,1,usage
3436,Preconditions.java,public static double sqrt double value,1,1,usage
3437,Preconditions.java,"checkargument value 0, input is negative %s , value",0,1,usage
3438,Preconditions.java,calculate square root,1,1,usage
3439,Preconditions.java,pre,0,1,usage
3440,Preconditions.java,"p so that a hypothetical bad caller of this method, such as",1,1,usage
3441,Preconditions.java,pre @code,0,1,usage
3442,Preconditions.java,void examplebadcaller,1,1,usage
3443,Preconditions.java,double d sqrt 10,0,1,usage
3444,Preconditions.java,pre,1,1,usage
3445,Preconditions.java,p would be flagged as having called @code sqrt with an illegal argument.,0,1,usage
3446,Preconditions.java,h3 performance h3,1,1,usage
3447,Preconditions.java,p avoid passing message arguments that are expensive to compute your code will always compute,0,1,usage
3448,Preconditions.java,"them, even though they usually won t be needed.",1,1,usage
3449,Preconditions.java,"if you have such arguments, use the conventional",0,1,usage
3450,Preconditions.java,if throw idiom instead.,1,1,usage
3451,Preconditions.java,"p depending on your message arguments, memory may be allocated for boxing and varargs array",0,1,usage
3452,Preconditions.java,creation.,1,1,usage
3454,Preconditions.java,allocations in many common cases.,0,1,usage
3455,Preconditions.java,"p the message string is not formatted unless the exception will be thrown, so the cost of the",1,1,usage
3456,Preconditions.java,string formatting itself should not be a concern.,0,1,usage
3457,Preconditions.java,"p as with any performance concerns, you should consider profiling your code in a production",1,1,usage
3458,Preconditions.java,environment if possible before spending a lot of effort on tweaking a particular element.,0,1,usage
3461,Preconditions.java,continue to throw,1,1,usage
3462,Preconditions.java,standard jdk exceptions such as @link java^util.nosuchelementexception or @link,0,1,usage
3463,Preconditions.java,unsupportedoperationexception in the situations they are intended for.,1,1,usage
3465,Preconditions.java,p it is of course possible to use the methods of this class to check for invalid conditions,0,1,usage
3466,Preconditions.java,which are i not the caller s fault i .,1,1,usage
3467,Preconditions.java,doing so is b not recommended b because it is,0,1,usage
3468,Preconditions.java,misleading to future readers of the code and of stack traces.,1,1,usage
3469,Preconditions.java,see a,0,1,usage
3470,Preconditions.java,href https github^com google guava wiki conditionalfailuresexplained conditional failures,1,1,usage
3471,Preconditions.java,explained a in the guava user guide for more advice.,0,1,usage
3472,Preconditions.java,"notably, @link verify offers assertions",1,1,usage
3474,Preconditions.java,h3 @code java^util.objects^requirenonnull h3,0,1,usage
3475,Preconditions.java,p projects which use @code com^google.common should generally avoid the use of @link,1,1,usage
3476,Preconditions.java,java^util.objects#requirenonnull object .,0,1,usage
3477,Preconditions.java,"instead, use whichever of @link",1,1,usage
3478,Preconditions.java,#checknotnull object or @link verify#verifynotnull object is appropriate to the situation.,0,1,usage
3479,Preconditions.java,the same goes for the message accepting overloads.,1,1,usage
3480,Preconditions.java,h3 only @code %s is supported h3,0,1,usage
3482,Preconditions.java,strings.,1,1,usage
3483,Preconditions.java,"this only supports the @code %s specifier, not the full range of @link",0,1,usage
3484,Preconditions.java,java^util.formatter specifiers.,1,1,usage
3485,Preconditions.java,"however, note that if the number of arguments does not match the",0,1,usage
3487,Preconditions.java,"behave as expected, and will still include all argument values in the error message the message",1,1,usage
3488,Preconditions.java,will simply not be formatted exactly as intended.,0,1,usage
3491,Preconditions.java,href https github^com google guava wiki preconditionsexplained using @code,1,1,usage
3492,Preconditions.java,preconditions a .,0,1,usage
3594,Resources.java,p all method parameters must be non null unless documented otherwise.,1,1,usage
3607,SmoothRateLimiter.java,"how is the ratelimiter designed, and why?",0,1,usage
3608,SmoothRateLimiter.java,"the primary feature of a ratelimiter is its stable rate , the maximum rate that is should",1,1,usage
3611,SmoothRateLimiter.java,"compute, for an incoming request, the appropriate throttle time, and make the calling thread",0,1,usage
3613,SmoothRateLimiter.java,the simplest way to maintain a rate of qps is to keep the timestamp of the last granted,1,1,usage
3614,SmoothRateLimiter.java,"request, and ensure that 1 qps seconds have elapsed since then.",0,1,usage
3617,SmoothRateLimiter.java,"the last one, then we achieve the intended rate.",1,1,usage
3618,SmoothRateLimiter.java,if a request comes and the last request was,0,1,usage
3619,SmoothRateLimiter.java,"granted only 100ms ago, then we wait for another 100ms.",1,1,usage
3622,SmoothRateLimiter.java,it is important to realize that such a ratelimiter has a very superficial memory of the past,0,1,usage
3623,SmoothRateLimiter.java,it only remembers the last request.,1,1,usage
3624,SmoothRateLimiter.java,what if the ratelimiter was unused for a long period of,0,1,usage
3625,SmoothRateLimiter.java,"time, then a request arrived and was immediately granted?",1,1,usage
3627,SmoothRateLimiter.java,forget about that past underutilization.,0,1,usage
3628,SmoothRateLimiter.java,this may result in either underutilization or,1,1,usage
3629,SmoothRateLimiter.java,"overflow, depending on the real world consequences of not using the expected rate.",0,1,usage
3631,SmoothRateLimiter.java,"then, the ratelimiter",1,1,usage
3632,SmoothRateLimiter.java,"should speed up for a while, to take advantage of these resources.",0,1,usage
3633,SmoothRateLimiter.java,this is important when the,1,1,usage
3634,SmoothRateLimiter.java,"rate is applied to networking limiting bandwidth , where past underutilization typically",0,1,usage
3636,SmoothRateLimiter.java,"on the other hand, past underutilization could mean that the server responsible for handling",1,1,usage
3637,SmoothRateLimiter.java,"the request has become less ready for future requests , ie its caches become stale, and",0,1,usage
3642,SmoothRateLimiter.java,modeled by storedpermits variable.,1,1,usage
3643,SmoothRateLimiter.java,"this variable is zero when there is no underutilization,",0,1,usage
3645,SmoothRateLimiter.java,"so, the",1,1,usage
3649,SmoothRateLimiter.java,how this works is best explained with an example,0,1,usage
3650,SmoothRateLimiter.java,"for a ratelimiter that produces 1 token per second, every second that goes by with the",1,1,usage
3651,SmoothRateLimiter.java,"ratelimiter being unused, we increase storedpermits by 1.",0,1,usage
3652,SmoothRateLimiter.java,say we leave the ratelimiter unused,1,1,usage
3653,SmoothRateLimiter.java,"for 10 seconds ie, we expected a request at time x, but we are at time x 10 seconds before",0,1,usage
3654,SmoothRateLimiter.java,"a request actually arrives this is also related to the point made in the last paragraph , thus",1,1,usage
2631,AbstractCollectionTester.java,@param e the element type of the collection to be tested.,0,1,usage
3655,SmoothRateLimiter.java,storedpermits becomes 100 assuming maxstoredpermits 100 .,1,1,usage
3656,SmoothRateLimiter.java,"at that point, a request of",0,1,usage
3657,SmoothRateLimiter.java,acquire 3 arrives.,1,1,usage
3658,SmoothRateLimiter.java,"we serve this request out of storedpermits, and reduce that to 70 how",0,1,usage
3659,SmoothRateLimiter.java,this is translated to throttling time is discussed later .,0,1,usage
3660,SmoothRateLimiter.java,"immediately after, assume that an",0,1,usage
3661,SmoothRateLimiter.java,acquire 10 request arriving.,0,1,usage
3662,SmoothRateLimiter.java,"we serve the request partly from storedpermits, using all the",0,1,usage
3663,SmoothRateLimiter.java,"remaining 70 permits, and the remaining 30, we serve them by fresh permits produced by the",0,1,usage
2640,AbstractListeningExecutorService.java,"p in addition to @link #execute , subclasses must implement all methods related to shutdown and",0,1,usage
3664,SmoothRateLimiter.java,rate limiter.,0,1,usage
2641,AbstractListeningExecutorService.java,termination.,0,1,usage
3665,SmoothRateLimiter.java,we already know how much time it takes to serve 3 fresh permits if the rate is,0,1,usage
3666,SmoothRateLimiter.java,"1 token per second , then this will take 3 seconds.",0,1,usage
3667,SmoothRateLimiter.java,but what does it mean to serve 7 stored,0,1,usage
3668,SmoothRateLimiter.java,permits?,0,1,usage
3669,SmoothRateLimiter.java,"as explained above, there is no unique answer.",0,1,usage
3670,SmoothRateLimiter.java,if we are primarily interested to deal,0,1,usage
3671,SmoothRateLimiter.java,"with underutilization, then we want stored permits to be given out faster than fresh ones,",0,1,usage
3672,SmoothRateLimiter.java,because underutilization free resources for the taking.,0,1,usage
3673,SmoothRateLimiter.java,if we are primarily interested to,0,1,usage
3674,SmoothRateLimiter.java,"deal with overflow, then stored permits could be given out slower than fresh ones.",0,1,usage
3675,SmoothRateLimiter.java,"thus, we",0,1,usage
3676,SmoothRateLimiter.java,require a different in each case function that translates storedpermits to throttling time.,0,1,usage
3677,SmoothRateLimiter.java,"this role is played by storedpermitstowaittime double storedpermits, double permitstotake .",0,1,usage
2654,AbstractLoadingCache.java,"p to implement a cache, the programmer needs only to extend this class and provide an",0,1,usage
3678,SmoothRateLimiter.java,the,0,1,usage
3679,SmoothRateLimiter.java,underlying model is a continuous function mapping storedpermits from 00 to maxstoredpermits,0,1,usage
2656,AbstractLoadingCache.java,@link,0,1,usage
3681,SmoothRateLimiter.java,storedpermits,0,1,usage
3682,SmoothRateLimiter.java,essentially measure unused time we spend unused time buying storing permits.,0,1,usage
3683,SmoothRateLimiter.java,rate is,0,1,usage
3684,SmoothRateLimiter.java,"permits time , thus 1 rate time permits .",0,1,usage
3685,SmoothRateLimiter.java,"thus, 1 rate time permits times",0,1,usage
2662,AbstractLoadingCache.java,all other methods throw,0,1,usage
3688,SmoothRateLimiter.java,of requested permits.,0,1,usage
3697,SmoothRateLimiter.java,this guarantees that we handle,0,1,usage
3701,SmoothRateLimiter.java,integrals .,0,1,usage
3704,SmoothRateLimiter.java,cost as fresh ones 1 qps is the cost for each .,0,1,usage
3709,SmoothRateLimiter.java,underutilization.,0,1,usage
3713,SmoothRateLimiter.java,"last, but not least consider a ratelimiter with rate of 1 permit per second, currently",0,1,usage
3714,SmoothRateLimiter.java,"completely unused, and an expensive acquire 100 request comes.",0,1,usage
3715,SmoothRateLimiter.java,it would be nonsensical to just,0,1,usage
3717,SmoothRateLimiter.java,why wait without doing anything?,0,1,usage
3718,SmoothRateLimiter.java,a much,0,1,usage
3720,SmoothRateLimiter.java,"instead , and postpone subsequent requests as needed.",0,1,usage
3722,SmoothRateLimiter.java,"task immediately, and postpone by 100 seconds future requests, thus we allow for work to get",0,1,usage
3724,SmoothRateLimiter.java,this has important consequences it means that the ratelimiter doesn t remember the time of the,0,1,usage
3725,SmoothRateLimiter.java,"last request, but it remembers the expected time of the next request.",0,1,usage
3726,SmoothRateLimiter.java,this also enables,0,1,usage
3727,SmoothRateLimiter.java,us to tell immediately see tryacquire timeout whether a particular timeout is enough to get,0,1,usage
3728,SmoothRateLimiter.java,"us to the point of the next scheduling time, since we always maintain that.",0,1,usage
3729,SmoothRateLimiter.java,and what we mean by,0,1,usage
3730,SmoothRateLimiter.java,an unused ratelimiter is also defined by that notion when we observe that the,0,1,usage
2707,ArbitraryInstances.java,p all default instances returned by @link #get are generics safe.,0,1,usage
3731,SmoothRateLimiter.java,"expected arrival time of the next request is actually in the past, then the difference now",0,1,usage
2708,ArbitraryInstances.java,clients won t get type,0,1,usage
3732,SmoothRateLimiter.java,"past is the amount of time that the ratelimiter was formally unused, and it is that amount of",0,1,usage
2709,ArbitraryInstances.java,"errors for using @code get comparator^class as a @code comparator foo , for example.",0,1,usage
3733,SmoothRateLimiter.java,time which we translate to storedpermits.,0,1,usage
2710,ArbitraryInstances.java,immutable empty instances are returned for collection types @code for string @code 0 for,0,1,usage
3734,SmoothRateLimiter.java,we increase storedpermits with the amount of permits,0,1,usage
2711,ArbitraryInstances.java,number types reasonable default instance for other stateless types.,0,1,usage
3735,SmoothRateLimiter.java,that would have been produced in that idle time .,0,1,usage
2712,ArbitraryInstances.java,"for mutable types, a fresh",0,1,usage
3736,SmoothRateLimiter.java,"so, if rate 1 permit per second, and",0,1,usage
2713,ArbitraryInstances.java,instance is created each time @code get is called.,0,1,usage
3737,SmoothRateLimiter.java,"arrivals come exactly one second after the previous, then storedpermits is never increased",0,1,usage
3738,SmoothRateLimiter.java,we would only increase it for arrivals later than the expected one second.,0,1,usage
3739,SmoothRateLimiter.java,the time when the next request no matter its size will be granted.,0,1,usage
3740,SmoothRateLimiter.java,"after granting a request,",0,1,usage
3741,SmoothRateLimiter.java,this is pushed further in the future.,0,1,usage
3742,SmoothRateLimiter.java,large requests push this further than small requests.,0,1,usage
3743,SmoothRateLimiter.java,this implements the following function where coldinterval coldfactor stableinterval.,0,1,usage
3748,SmoothRateLimiter.java,warmup period is the area of the trapezoid between,0,1,usage
3754,SmoothRateLimiter.java,0 storedpermits,0,1,usage
3757,SmoothRateLimiter.java,"before going into the details of this particular function, let s keep in mind the basics",0,1,usage
3760,SmoothRateLimiter.java,"li when the ratelimiter is not used, this goes right up to maxpermits",0,1,usage
3761,SmoothRateLimiter.java,"li when the ratelimiter is used, this goes left down to zero , since if we have",0,1,usage
3762,SmoothRateLimiter.java,"storedpermits, we serve from those first",0,1,usage
3764,SmoothRateLimiter.java,the rate at which we move to the right is,0,1,usage
3766,SmoothRateLimiter.java,this ensures that the time it takes to go from 0 to,0,1,usage
3768,SmoothRateLimiter.java,"li when used , the time it takes, as explained in the introductory class note, is equal to",0,1,usage
3769,SmoothRateLimiter.java,"the integral of our function, between x permits and x k permits, assuming we want to",0,1,usage
3772,SmoothRateLimiter.java,"p in summary, the time it takes to move to the left spend k permits , is equal to the area of",0,1,usage
3773,SmoothRateLimiter.java,the function of width k.,0,1,usage
3774,SmoothRateLimiter.java,"p assuming we have saturated demand, the time to go from maxpermits to thresholdpermits is",0,1,usage
3776,SmoothRateLimiter.java,and the time to go from thresholdpermits to 0 is warmupperiod 2.,0,1,usage
3777,SmoothRateLimiter.java,the,0,1,usage
3778,SmoothRateLimiter.java,reason that this is warmupperiod 2 is to maintain the behavior of the original implementation,0,1,usage
3782,SmoothRateLimiter.java,li the time to go from thresholdpermits to 0 is equal to the integral of the function,0,1,usage
3787,SmoothRateLimiter.java,therefore,0,1,usage
3791,SmoothRateLimiter.java,li the time to go from maxpermits to thresholdpermits is equal to the integral of the,0,1,usage
3793,SmoothRateLimiter.java,this is the area of the pictured,0,1,usage
3801,SmoothRateLimiter.java,"how is the ratelimiter designed, and why?",0,1,usage
3802,SmoothRateLimiter.java,"the primary feature of a ratelimiter is its stable rate , the maximum rate that is should",0,1,usage
3805,SmoothRateLimiter.java,"compute, for an incoming request, the appropriate throttle time, and make the calling thread",0,1,usage
3807,SmoothRateLimiter.java,the simplest way to maintain a rate of qps is to keep the timestamp of the last granted,0,1,usage
3808,SmoothRateLimiter.java,"request, and ensure that 1 qps seconds have elapsed since then.",0,1,usage
3811,SmoothRateLimiter.java,"the last one, then we achieve the intended rate.",0,1,usage
2788,BloomFilter.java,@param t the type of instances that the @code bloomfilter accepts,0,1,usage
3812,SmoothRateLimiter.java,if a request comes and the last request was,0,1,usage
3813,SmoothRateLimiter.java,"granted only 100ms ago, then we wait for another 100ms.",0,1,usage
2792,BloomFilter.java,"cheat sheet m total bits n expected insertions b m n, bits per insertion p expected false positive probability 1 optimal k b ln2 2 p 1 e ^ kn m ^k 3 for optimal k p 2 ^ k 06185^b 4 for optimal k m nlnp ln2 ^ 2",0,1,usage
3816,SmoothRateLimiter.java,it is important to realize that such a ratelimiter has a very superficial memory of the past,0,1,usage
2793,BloomFilter.java,"a strategy to translate t instances, to @code numhashfunctions bit indexes.",0,1,usage
3817,SmoothRateLimiter.java,it only remembers the last request.,0,1,usage
2794,BloomFilter.java,p implementations should be collections of pure functions ie stateless .,0,1,usage
3818,SmoothRateLimiter.java,what if the ratelimiter was unused for a long period of,0,1,usage
3819,SmoothRateLimiter.java,"time, then a request arrived and was immediately granted?",0,1,usage
3821,SmoothRateLimiter.java,forget about that past underutilization.,0,1,usage
3822,SmoothRateLimiter.java,this may result in either underutilization or,0,1,usage
3823,SmoothRateLimiter.java,"overflow, depending on the real world consequences of not using the expected rate.",0,1,usage
3825,SmoothRateLimiter.java,"then, the ratelimiter",0,1,usage
3826,SmoothRateLimiter.java,"should speed up for a while, to take advantage of these resources.",0,1,usage
3827,SmoothRateLimiter.java,this is important when the,0,1,usage
3828,SmoothRateLimiter.java,"rate is applied to networking limiting bandwidth , where past underutilization typically",0,1,usage
3830,SmoothRateLimiter.java,"on the other hand, past underutilization could mean that the server responsible for handling",0,1,usage
3831,SmoothRateLimiter.java,"the request has become less ready for future requests , ie its caches become stale, and",0,1,usage
3836,SmoothRateLimiter.java,modeled by storedpermits variable.,0,1,usage
3837,SmoothRateLimiter.java,"this variable is zero when there is no underutilization,",0,1,usage
3839,SmoothRateLimiter.java,"so, the",0,1,usage
3843,SmoothRateLimiter.java,how this works is best explained with an example,0,1,usage
3844,SmoothRateLimiter.java,"for a ratelimiter that produces 1 token per second, every second that goes by with the",0,1,usage
3845,SmoothRateLimiter.java,"ratelimiter being unused, we increase storedpermits by 1.",0,1,usage
3846,SmoothRateLimiter.java,say we leave the ratelimiter unused,0,1,usage
3847,SmoothRateLimiter.java,"for 10 seconds ie, we expected a request at time x, but we are at time x 10 seconds before",0,1,usage
3848,SmoothRateLimiter.java,"a request actually arrives this is also related to the point made in the last paragraph , thus",0,1,usage
3849,SmoothRateLimiter.java,storedpermits becomes 100 assuming maxstoredpermits 100 .,0,1,usage
3850,SmoothRateLimiter.java,"at that point, a request of",0,1,usage
3851,SmoothRateLimiter.java,acquire 3 arrives.,0,1,usage
3852,SmoothRateLimiter.java,"we serve this request out of storedpermits, and reduce that to 70 how",0,1,usage
3853,SmoothRateLimiter.java,this is translated to throttling time is discussed later .,0,1,usage
3854,SmoothRateLimiter.java,"immediately after, assume that an",0,1,usage
3855,SmoothRateLimiter.java,acquire 10 request arriving.,0,1,usage
2832,CacheBuilder.java,a builder of @link loadingcache and @link cache instances having any combination of the,0,1,usage
3856,SmoothRateLimiter.java,"we serve the request partly from storedpermits, using all the",0,1,usage
3857,SmoothRateLimiter.java,"remaining 70 permits, and the remaining 30, we serve them by fresh permits produced by the",0,1,usage
3858,SmoothRateLimiter.java,rate limiter.,0,1,usage
3859,SmoothRateLimiter.java,we already know how much time it takes to serve 3 fresh permits if the rate is,0,1,usage
3860,SmoothRateLimiter.java,"1 token per second , then this will take 3 seconds.",0,1,usage
3861,SmoothRateLimiter.java,but what does it mean to serve 7 stored,0,1,usage
3862,SmoothRateLimiter.java,permits?,0,1,usage
3863,SmoothRateLimiter.java,"as explained above, there is no unique answer.",0,1,usage
3864,SmoothRateLimiter.java,if we are primarily interested to deal,0,1,usage
3865,SmoothRateLimiter.java,"with underutilization, then we want stored permits to be given out faster than fresh ones,",0,1,usage
3866,SmoothRateLimiter.java,because underutilization free resources for the taking.,0,1,usage
3867,SmoothRateLimiter.java,if we are primarily interested to,0,1,usage
2844,CacheBuilder.java,p these features are all optional caches can be created using all or none of them.,0,1,usage
3868,SmoothRateLimiter.java,"deal with overflow, then stored permits could be given out slower than fresh ones.",0,1,usage
2845,CacheBuilder.java,by default,0,1,usage
3869,SmoothRateLimiter.java,"thus, we",0,1,usage
2846,CacheBuilder.java,cache instances created by @code cachebuilder will not perform any type of eviction.,0,1,usage
3870,SmoothRateLimiter.java,require a different in each case function that translates storedpermits to throttling time.,0,1,usage
2847,CacheBuilder.java,p usage example,0,1,usage
3871,SmoothRateLimiter.java,"this role is played by storedpermitstowaittime double storedpermits, double permitstotake .",0,1,usage
2848,CacheBuilder.java,pre @code,0,1,usage
3872,SmoothRateLimiter.java,the,0,1,usage
2849,CacheBuilder.java,"loadingcache key, graph graphs cachebuilder^newbuilder",0,1,usage
3873,SmoothRateLimiter.java,underlying model is a continuous function mapping storedpermits from 00 to maxstoredpermits,0,1,usage
2850,CacheBuilder.java,maximumsize 10000,0,1,usage
2851,CacheBuilder.java,expireafterwrite duration^ofminutes 10,0,1,usage
3875,SmoothRateLimiter.java,storedpermits,0,1,usage
2852,CacheBuilder.java,removallistener my listener,0,1,usage
3876,SmoothRateLimiter.java,essentially measure unused time we spend unused time buying storing permits.,0,1,usage
2853,CacheBuilder.java,build,0,1,usage
3877,SmoothRateLimiter.java,rate is,0,1,usage
2854,CacheBuilder.java,"new cacheloader key, graph",0,1,usage
3878,SmoothRateLimiter.java,"permits time , thus 1 rate time permits .",0,1,usage
2855,CacheBuilder.java,public graph load key key throws anyexception,0,1,usage
3879,SmoothRateLimiter.java,"thus, 1 rate time permits times",0,1,usage
2856,CacheBuilder.java,return createexpensivegraph key,0,1,usage
2857,CacheBuilder.java,pre,0,1,usage
2858,CacheBuilder.java,"p or equivalently,",0,1,usage
3882,SmoothRateLimiter.java,of requested permits.,0,1,usage
2859,CacheBuilder.java,pre @code,0,1,usage
2860,CacheBuilder.java,in real life this would come from a command line flag or config file,0,1,usage
2863,CacheBuilder.java,removallistener my listener,0,1,usage
2864,CacheBuilder.java,build,0,1,usage
2865,CacheBuilder.java,"new cacheloader key, graph",0,1,usage
2866,CacheBuilder.java,public graph load key key throws anyexception,0,1,usage
2867,CacheBuilder.java,return createexpensivegraph key,0,1,usage
3891,SmoothRateLimiter.java,this guarantees that we handle,0,1,usage
2868,CacheBuilder.java,pre,0,1,usage
2869,CacheBuilder.java,p the returned cache is implemented as a hash table with similar performance characteristics to,0,1,usage
2870,CacheBuilder.java,@link concurrenthashmap .,0,1,usage
2871,CacheBuilder.java,it implements all optional operations of the @link loadingcache and,0,1,usage
3895,SmoothRateLimiter.java,integrals .,0,1,usage
2872,CacheBuilder.java,@link cache interfaces.,0,1,usage
2873,CacheBuilder.java,the @code asmap view and its collection views have i weakly,0,1,usage
2874,CacheBuilder.java,consistent iterators i .,0,1,usage
3898,SmoothRateLimiter.java,cost as fresh ones 1 qps is the cost for each .,0,1,usage
2875,CacheBuilder.java,"this means that they are safe for concurrent use, but if other threads",0,1,usage
2876,CacheBuilder.java,"modify the cache after the iterator is created, it is undefined which of these changes, if any,",0,1,usage
2877,CacheBuilder.java,are reflected in that iterator.,0,1,usage
2878,CacheBuilder.java,these iterators never throw @link,0,1,usage
2879,CacheBuilder.java,concurrentmodificationexception .,0,1,usage
3903,SmoothRateLimiter.java,underutilization.,0,1,usage
2881,CacheBuilder.java,object#equals equals method to determine equality for keys or values.,0,1,usage
2882,CacheBuilder.java,"however, if @link",0,1,usage
2883,CacheBuilder.java,"#weakkeys was specified, the cache uses identity @code comparisons instead for keys.",0,1,usage
3907,SmoothRateLimiter.java,"last, but not least consider a ratelimiter with rate of 1 permit per second, currently",0,1,usage
2884,CacheBuilder.java,"likewise, if @link #weakvalues or @link #softvalues was specified, the cache uses identity",0,1,usage
3908,SmoothRateLimiter.java,"completely unused, and an expensive acquire 100 request comes.",0,1,usage
2885,CacheBuilder.java,comparisons for values.,0,1,usage
3909,SmoothRateLimiter.java,it would be nonsensical to just,0,1,usage
2886,CacheBuilder.java,p entries are automatically evicted from the cache when any of @linkplain #maximumsize long,0,1,usage
2887,CacheBuilder.java,"maximumsize , @linkplain #maximumweight long maximumweight , @linkplain #expireafterwrite",0,1,usage
3911,SmoothRateLimiter.java,why wait without doing anything?,0,1,usage
2888,CacheBuilder.java,"expireafterwrite , @linkplain #expireafteraccess expireafteraccess , @linkplain #weakkeys",0,1,usage
3912,SmoothRateLimiter.java,a much,0,1,usage
2889,CacheBuilder.java,"weakkeys , @linkplain #weakvalues weakvalues , or @linkplain #softvalues softvalues are",0,1,usage
2890,CacheBuilder.java,requested.,0,1,usage
3914,SmoothRateLimiter.java,"instead , and postpone subsequent requests as needed.",0,1,usage
2891,CacheBuilder.java,p if @linkplain #maximumsize long maximumsize or @linkplain #maximumweight long,0,1,usage
2892,CacheBuilder.java,maximumweight is requested entries may be evicted on each cache modification.,0,1,usage
3916,SmoothRateLimiter.java,"task immediately, and postpone by 100 seconds future requests, thus we allow for work to get",0,1,usage
2893,CacheBuilder.java,p if @linkplain #expireafterwrite expireafterwrite or @linkplain #expireafteraccess,0,1,usage
2894,CacheBuilder.java,"expireafteraccess is requested entries may be evicted on each cache modification, on occasional",0,1,usage
3918,SmoothRateLimiter.java,this has important consequences it means that the ratelimiter doesn t remember the time of the,0,1,usage
2895,CacheBuilder.java,"cache accesses, or on calls to @link cache#cleanup .",0,1,usage
3919,SmoothRateLimiter.java,"last request, but it remembers the expected time of the next request.",0,1,usage
2896,CacheBuilder.java,expired entries may be counted by @link,0,1,usage
3920,SmoothRateLimiter.java,this also enables,0,1,usage
2897,CacheBuilder.java,"cache#size , but will never be visible to read or write operations.",0,1,usage
3921,SmoothRateLimiter.java,us to tell immediately see tryacquire timeout whether a particular timeout is enough to get,0,1,usage
2898,CacheBuilder.java,"p if @linkplain #weakkeys weakkeys , @linkplain #weakvalues weakvalues , or @linkplain",0,1,usage
3922,SmoothRateLimiter.java,"us to the point of the next scheduling time, since we always maintain that.",0,1,usage
3923,SmoothRateLimiter.java,and what we mean by,0,1,usage
2900,CacheBuilder.java,be reclaimed by the garbage collector.,0,1,usage
3924,SmoothRateLimiter.java,an unused ratelimiter is also defined by that notion when we observe that the,0,1,usage
2901,CacheBuilder.java,entries with reclaimed keys or values may be removed from,0,1,usage
3925,SmoothRateLimiter.java,"expected arrival time of the next request is actually in the past, then the difference now",0,1,usage
2902,CacheBuilder.java,"the cache on each cache modification, on occasional cache accesses, or on calls to @link",0,1,usage
3926,SmoothRateLimiter.java,"past is the amount of time that the ratelimiter was formally unused, and it is that amount of",0,1,usage
2903,CacheBuilder.java,"cache#cleanup such entries may be counted in @link cache#size , but will never be visible to",0,1,usage
3927,SmoothRateLimiter.java,time which we translate to storedpermits.,0,1,usage
2904,CacheBuilder.java,read or write operations.,0,1,usage
3928,SmoothRateLimiter.java,we increase storedpermits with the amount of permits,0,1,usage
2905,CacheBuilder.java,p certain cache configurations will result in the accrual of periodic maintenance tasks which,0,1,usage
3929,SmoothRateLimiter.java,that would have been produced in that idle time .,0,1,usage
2906,CacheBuilder.java,"will be performed during write operations, or during occasional read operations in the absence of",0,1,usage
3930,SmoothRateLimiter.java,"so, if rate 1 permit per second, and",0,1,usage
2907,CacheBuilder.java,writes.,0,1,usage
3931,SmoothRateLimiter.java,"arrivals come exactly one second after the previous, then storedpermits is never increased",0,1,usage
2908,CacheBuilder.java,"the @link cache#cleanup method of the returned cache will also perform maintenance, but",0,1,usage
3932,SmoothRateLimiter.java,we would only increase it for arrivals later than the expected one second.,0,1,usage
2909,CacheBuilder.java,calling it should not be necessary with a high throughput cache.,0,1,usage
3933,SmoothRateLimiter.java,the time when the next request no matter its size will be granted.,0,1,usage
2910,CacheBuilder.java,only caches built with,0,1,usage
3934,SmoothRateLimiter.java,"after granting a request,",0,1,usage
2911,CacheBuilder.java,"@linkplain #removallistener removallistener , @linkplain #expireafterwrite expireafterwrite ,",0,1,usage
3935,SmoothRateLimiter.java,this is pushed further in the future.,0,1,usage
2912,CacheBuilder.java,"@linkplain #expireafteraccess expireafteraccess , @linkplain #weakkeys weakkeys , @linkplain",0,1,usage
3936,SmoothRateLimiter.java,large requests push this further than small requests.,0,1,usage
2913,CacheBuilder.java,"#weakvalues weakvalues , or @linkplain #softvalues softvalues perform periodic maintenance.",0,1,usage
3937,SmoothRateLimiter.java,"this implements a bursty ratelimiter, where storedpermits are translated to zero throttling.",0,1,usage
3938,SmoothRateLimiter.java,the maximum number of permits that can be saved when the ratelimiter is unused is defined in,0,1,usage
2915,CacheBuilder.java,retain all the configuration properties of the original cache.,0,1,usage
2916,CacheBuilder.java,note that the serialized form does,0,1,usage
2917,CacheBuilder.java,"i not i include cache contents, but only configuration.",0,1,usage
2922,CacheBuilder.java,this is,0,1,usage
2923,CacheBuilder.java,normally @code object unless it is constrained by using a method like @code,0,1,usage
2924,CacheBuilder.java,#removallistener,0,1,usage
2926,CacheBuilder.java,this is,0,1,usage
2927,CacheBuilder.java,normally @code object unless it is constrained by using a method like @code,0,1,usage
2928,CacheBuilder.java,#removallistener,0,1,usage
3055,ClassToInstanceMap.java,"p to map a generic type to an instance of that type, use @link",0,1,usage
3056,ClassToInstanceMap.java,com^google.common^reflect.typetoinstancemap instead.,0,1,usage
3057,ClassToInstanceMap.java,@param b the common supertype that all entries must share often this is simply @link object,0,1,usage
4153,AbstractModule.java,"simply extend this class, implement @link #configure , and call the inherited",0,1,usage
4154,AbstractModule.java,methods which mirror those found in @link binder .,1,1,usage
4155,AbstractModule.java,for example,0,1,usage
4156,AbstractModule.java,pre,1,1,usage
4157,AbstractModule.java,public class mymodule extends abstractmodule,0,1,usage
4158,AbstractModule.java,protected void configure,1,1,usage
4159,AbstractModule.java,bind service^class ^to serviceimpl^class ^in singleton^class,0,1,usage
4160,AbstractModule.java,bind creditcardpaymentservice^class,1,1,usage
4161,AbstractModule.java,bind paymentservice^class ^to creditcardpaymentservice^class,0,1,usage
4162,AbstractModule.java,bindconstant ^annotatedwith names^named port ^to 8080,1,1,usage
4163,AbstractModule.java,pre,0,1,usage
4181,Binder.java,guice provides this object to your application s @link module implementors so,1,1,usage
4183,Binder.java,h3 the guice binding edsl h3,0,1,usage
4184,Binder.java,"guice uses an i embedded domain specific language i , or edsl, to help you create bindings",1,1,usage
4185,Binder.java,simply and readably.,0,1,usage
4188,Binder.java,javadocs b .,1,1,usage
4189,Binder.java,"instead, you should consult the series of examples below.",0,1,usage
4190,Binder.java,"to save space, these",1,1,usage
4191,Binder.java,"examples omit the opening @code binder , just as you will if your module extends @link",0,1,usage
4192,Binder.java,abstractmodule .,1,1,usage
4193,Binder.java,pre,0,1,usage
4196,Binder.java,does not change guice s default behavior.,1,1,usage
4198,Binder.java,@link module class to serve as an explicit i manifest i for the services it provides.,0,1,usage
4199,Binder.java,"also,",1,1,usage
4201,Binder.java,given explicitly.,0,1,usage
4202,Binder.java,pre,1,1,usage
4204,Binder.java,specifies that a request for a @code service instance with no binding annotations should be,0,1,usage
4205,Binder.java,treated as if it were a request for a @code serviceimpl instance.,1,1,usage
4206,Binder.java,this i overrides i the,0,1,usage
4207,Binder.java,function of any @link implementedby @implementedby or @link providedby @providedby,1,1,usage
4208,Binder.java,"annotations found on @code service , since guice will have already moved on to @code",0,1,usage
4209,Binder.java,serviceimpl before it reaches the point when it starts looking for these annotations.,1,1,usage
4210,Binder.java,pre,0,1,usage
4212,Binder.java,"in this example, @code serviceprovider must extend or implement @code provider service .",1,1,usage
4213,Binder.java,this,0,1,usage
4214,Binder.java,binding specifies that guice should resolve an unannotated injection request for @code service,1,1,usage
4215,Binder.java,"by first resolving an instance of @code serviceprovider in the regular way, then calling @link",0,1,usage
4216,Binder.java,provider#get get on the resulting provider instance to obtain the @code service instance.,1,1,usage
4217,Binder.java,"p the @link provider you use here does not have to be a factory that is, a provider which",0,1,usage
4218,Binder.java,always i creates i each instance it provides.,1,1,usage
4475,DefaultMethodInterceptionTest.java,interface with a default method annotated to be intercepted.,0,1,usage
4220,Binder.java,follow.,1,1,usage
4476,DefaultMethodInterceptionTest.java,foo implementation that does not override the default method.,0,1,usage
4221,Binder.java,you can then use guice s concept of @link scope scopes to guide when creation should,1,1,usage
4477,DefaultMethodInterceptionTest.java,a base class defining a method with the same signature as foo s default method.,0,1,usage
4222,Binder.java,happen letting guice work for you .,1,1,usage
4478,DefaultMethodInterceptionTest.java,foo implementation that should use superclass method rather than default method.,0,1,usage
4223,Binder.java,pre,1,1,usage
4226,Binder.java,@code @red .,0,1,usage
4227,Binder.java,if your module also includes bindings for particular i values i of the,1,1,usage
4229,Binder.java,of @code @red that have no exact match in the bindings.,0,1,usage
4230,Binder.java,pre,0,1,usage
4231,Binder.java,bind serviceimpl^class ^in singleton^class,0,1,usage
4232,Binder.java,"or, alternatively",0,1,usage
4234,Binder.java,either of these statements places the @code serviceimpl class into singleton scope.,0,1,usage
4235,Binder.java,guice will,0,1,usage
4236,Binder.java,create only one instance of @code serviceimpl and will reuse it for all injection requests of,0,1,usage
4238,Binder.java,note that it is still possible to bind another instance of @code serviceimpl if the,0,1,usage
4240,Binder.java,guice is not overly,0,1,usage
4242,Binder.java,with i enabling i your application to share only one instance if that s all you tell guice you,0,1,usage
4243,Binder.java,need.,0,1,usage
4245,Binder.java,an annotation on the @code serviceimpl class.,0,1,usage
4246,Binder.java,"p besides @link singleton @link scopes#singleton , there are servlet specific scopes",0,1,usage
4247,Binder.java,"available in @code com^google.inject^servlet.servletscopes , and your modules can contribute",0,1,usage
4248,Binder.java,their own custom scopes for use here as well.,0,1,usage
4249,Binder.java,pre,0,1,usage
4250,Binder.java,bind new typeliteral&lt paymentservice&lt creditcard,0,1,usage
4253,Binder.java,it tells guice how to,0,1,usage
4254,Binder.java,honor an injection request for an element of type @code paymentservice creditcard .,0,1,usage
4255,Binder.java,the class,0,1,usage
4256,Binder.java,@code creditcardpaymentservice must implement the @code paymentservice creditcard interface.,0,1,usage
4257,Binder.java,"guice cannot currently bind or inject a generic type, such as @code set e all type parameters",0,1,usage
4258,Binder.java,must be fully specified.,0,1,usage
4259,Binder.java,pre,0,1,usage
4260,Binder.java,bind service^class ^toinstance new serviceimpl,0,1,usage
4261,Binder.java,"or, alternatively",0,1,usage
4265,Binder.java,@code service injection requests.,0,1,usage
4266,Binder.java,"when the @link injector is created, it will automatically",0,1,usage
4268,Binder.java,serviceimpl is simply ignored.,0,1,usage
4270,Binder.java,that you can t control.,0,1,usage
4271,Binder.java,pre,0,1,usage
4273,Binder.java,sets up a constant binding.,0,1,usage
4274,Binder.java,constant injections must always be annotated.,0,1,usage
4275,Binder.java,when a constant,0,1,usage
4276,Binder.java,"binding s value is a string, it is eligible for conversion to all primitive types, to @link",0,1,usage
4277,Binder.java,"enum#valueof class, string all enums , and to @link class#forname class literals .",0,1,usage
4278,Binder.java,conversions,0,1,usage
4279,Binder.java,"for other types can be configured using @link #converttotypes matcher, typeconverter",0,1,usage
4280,Binder.java,converttotypes .,0,1,usage
4281,Binder.java,pre,0,1,usage
4282,Binder.java,@literal @ color red color red a member variable field,0,1,usage
4283,Binder.java,red mymodule^class.getdeclaredfield red ^getannotation color^class,0,1,usage
4285,Binder.java,if your binding annotation has parameters you can apply different bindings to different specific,0,1,usage
4286,Binder.java,values of your annotation.,0,1,usage
4287,Binder.java,getting your hands on the right instance of the annotation is a bit of,0,1,usage
4288,Binder.java,"a pain one approach, shown above, is to apply a prototype annotation to a field in your module",0,1,usage
4290,Binder.java,pre,0,1,usage
4291,Binder.java,bind service^class,0,1,usage
4292,Binder.java,annotatedwith names^named blue,0,1,usage
4294,Binder.java,"differentiating by names is a common enough use case that we provided a standard annotation,",0,1,usage
4295,Binder.java,@link com^google.inject^name.named @named .,0,1,usage
4296,Binder.java,"because of guice s library support, binding by name",0,1,usage
4297,Binder.java,is quite easier than in the arbitrary binding annotation case we just saw.,0,1,usage
4298,Binder.java,"however, remember that",0,1,usage
4299,Binder.java,these names will live in a single flat namespace with all the other names used in your,0,1,usage
4300,Binder.java,application.,0,1,usage
4301,Binder.java,pre,0,1,usage
4302,Binder.java,constructor t lonector getlonectorfromserviceimplviareflection,0,1,usage
4303,Binder.java,bind serviceimpl^class,0,1,usage
4306,Binder.java,implementation.,0,1,usage
4307,Binder.java,it means that we do not need to place @literal @ inject on any of the,0,1,usage
4308,Binder.java,constructors and that guice treats the provided constructor as though it were annotated so.,0,1,usage
4309,Binder.java,it is,0,1,usage
4310,Binder.java,useful for cases where you cannot modify existing classes and is a bit simpler than using a,0,1,usage
4311,Binder.java,@link provider .,0,1,usage
4312,Binder.java,p the above list of examples is far from exhaustive.,0,1,usage
4313,Binder.java,if you can think of how the concepts of one,0,1,usage
4314,Binder.java,"example might coexist with the concepts from another, you can most likely weave the two together.",0,1,usage
4315,Binder.java,"if the two concepts make no sense with each other, you most likely won t be able to do it.",0,1,usage
4316,Binder.java,in a,0,1,usage
4318,Binder.java,"runtime, as soon as you try to create your injector.",0,1,usage
4319,Binder.java,"p the other methods of binder such as @link #bindscope , @link #bindinterceptor , @link",0,1,usage
4320,Binder.java,"#install , @link #requeststaticinjection , @link #adderror and @link #currentstage are not",0,1,usage
4321,Binder.java,"part of the binding edsl you can learn how to use these in the usual way, from the method",0,1,usage
4322,Binder.java,documentation.,0,1,usage
4737,GridSelectionModel.java,@param t,0,1,usage
4738,GridSelectionModel.java,the grid bean type,1,1,usage
4627,DeclarativeValueProvider.java,@param t,0,1,usage
4628,DeclarativeValueProvider.java,item type,1,1,usage
4905,SelectAllEvent.java,@param t,0,1,usage
4906,SelectAllEvent.java,the type of the rows in grid,1,1,usage
4652,Grid.java,@param t,0,1,usage
4653,Grid.java,the grid bean type,1,1,usage
4654,Grid.java,header and footer,0,1,usage
4658,Grid.java,@param t,1,1,usage
4659,Grid.java,the grid bean type,0,1,usage
4660,Grid.java,header and footer,1,1,usage
4661,Grid.java,selection mode representing the built in selection models in grid.,0,1,usage
4667,Grid.java,header and footer,1,1,usage
4669,Grid.java,header and footer,0,1,usage
4672,Grid.java,header and footer,1,1,usage
4674,Grid.java,@param t,0,1,usage
4675,Grid.java,the grid bean type,1,1,usage
4676,Grid.java,header and footer,0,1,usage
4679,Grid.java,usage,1,1,usage
4680,Grid.java,pre,0,1,usage
4681,Grid.java,grid^addcontextclicklistener event &gt notification^show,0,1,usage
4682,Grid.java,gridcontextclickevent&lt person&gt event ^getitem clicked,0,1,usage
4683,Grid.java,pre,0,1,usage
4684,Grid.java,@param t,0,1,usage
4685,Grid.java,the grid bean type,0,1,usage
4686,Grid.java,header and footer,0,1,usage
4687,Grid.java,an event that is fired when a column s visibility changes.,0,1,usage
4688,Grid.java,@since 75.0,0,1,usage
4689,Grid.java,header and footer,0,1,usage
4690,Grid.java,a helper base class for creating extensions for the grid component.,0,1,usage
5458,Window.java,pre,0,1,usage
4691,Grid.java,@param t,0,1,usage
5459,Window.java,code,0,1,usage
4692,Grid.java,header and footer,0,1,usage
5460,Window.java,within the window using helper,0,1,usage
4693,Grid.java,class for managing visible details rows.,0,1,usage
4694,Grid.java,@param t,0,1,usage
5462,Window.java,or globally,0,1,usage
4695,Grid.java,the grid bean type,0,1,usage
4696,Grid.java,header and footer,0,1,usage
5464,Window.java,code,0,1,usage
5465,Window.java,pre,0,1,usage
4699,Grid.java,@param t,0,1,usage
4700,Grid.java,the grid bean type,0,1,usage
4599,ButtonRenderer.java,click listeners can be added,0,1,usage
4600,ButtonRenderer.java,"to the renderer, invoked when any of the rendered buttons is clicked.",0,1,usage
5373,Window.java,a component that represents a floating popup window that can be added to a,0,1,usage
5375,Window.java,a window is added to a @code ui using,0,1,usage
516,FileSystemApplicationHistoryStore.java,@link #applicationstarted applicationstartdata is supposed to,0,1,Pointer
517,FileSystemApplicationHistoryStore.java,be invoked first when writing any history data of one application and it will,1,1,Pointer
518,FileSystemApplicationHistoryStore.java,"open a file, while @link #applicationfinished applicationfinishdata is",0,1,Pointer
519,FileSystemApplicationHistoryStore.java,supposed to be last writing operation and will close the file.,1,1,Pointer
777,Query.java,@param t type of the record to query.,0,1,Pointer
273,DelegatingSSLSocketFactory.java,a @link sslsocketfactory that can delegate to various ssl implementations.,1,1,Pointer
275,DelegatingSSLSocketFactory.java,openssl offers better,0,1,Pointer
276,DelegatingSSLSocketFactory.java,performance than jsse and is made available via the,1,1,Pointer
277,DelegatingSSLSocketFactory.java,a href https github^com wildfly wildfly openssl wildlfy openssl a,0,1,Pointer
278,DelegatingSSLSocketFactory.java,library.,1,1,Pointer
1049,TestFederationPolicyUtils.java,unit test for @link federationpolicyutils .,0,1,Pointer
1066,TestKeyInputStream.java,tests @link keyinputstream .,1,1,Pointer
1082,TestOzoneNativeAuthorizer.java,test class for @link ozonenativeauthorizer .,0,1,Pointer
837,ResourceBlacklistRequest.java,@link resourceblacklistrequest encapsulates the list of resource names which should be added or removed from the em blacklist em of resources for the application.,1,1,Pointer
838,ResourceBlacklistRequest.java,@see resourcerequest,0,1,Pointer
839,ResourceBlacklistRequest.java,@see applicationmasterprotocol#allocate org^apache.hadoop^yarn.api^protocolrecords.allocaterequest,1,1,Pointer
1352,TonyRuntimeFactory.java,implementation of runtimefactory with tony runtime,0,1,Pointer
844,ResourceRequestsJsonVerifications.java,performs value verifications on,1,1,Pointer
1101,TestS3BucketManager.java,tests for s3 bucket manager.,0,1,Pointer
845,ResourceRequestsJsonVerifications.java,@link org^apache.hadoop^yarn.server^resourcemanager.webapp^dao.resourcerequestinfo,1,1,Pointer
846,ResourceRequestsJsonVerifications.java,objects against the values of @link resourcerequest .,0,1,Pointer
847,ResourceRequestsJsonVerifications.java,with the help of the,1,1,Pointer
848,ResourceRequestsJsonVerifications.java,"@link builder , users can also make verifications of the custom resource",0,1,Pointer
849,ResourceRequestsJsonVerifications.java,types and its values.,1,1,Pointer
850,ResourceRequestsJsonVerifications.java,builder class for @link resourcerequestsjsonverifications .,0,1,Pointer
604,KerberosDelegationTokenAuthenticator.java,it falls back to the @link pseudodelegationtokenauthenticator if the http,1,1,Pointer
605,KerberosDelegationTokenAuthenticator.java,endpoint does not trigger a spnego authentication,0,1,Pointer
613,LocalizationStatusPBImpl.java,pb impl of @link localizationstatus .,1,1,Pointer
618,LoggedTask.java,a @link loggedtask represents a hadoop task that is part of a hadoop job.,0,1,Pointer
880,SequenceFileRecordReader.java,an @link recordreader for @link sequencefile s.,1,1,Pointer
629,LogParserUtil.java,common utility functions for @link logparser .,0,1,Pointer
1400,VolumeSet.java,volumeset to manage hdds volumes in a datanode.,1,1,Pointer
889,StateStoreFileSystemImpl.java,@link statestoredriver implementation based on a filesystem.,0,1,Pointer
1403,WritableComparator.java,a comparator for @link writablecomparable s.,1,1,Pointer
1404,WritableComparator.java,p this base implementation uses the natural ordering.,0,1,Pointer
637,MapContext.java,the context that is given to the @link mapper .,1,1,Pointer
1405,WritableComparator.java,to define alternate,0,1,Pointer
1406,WritableComparator.java,"orderings, override @link #compare writablecomparable,writablecomparable .",1,1,Pointer
1407,WritableComparator.java,p one may optimize compare intensive operations by overriding,0,1,Pointer
1408,WritableComparator.java,"@link #compare byte ,int,int,byte ,int,int .",1,1,Pointer
1409,WritableComparator.java,static utility methods are,0,1,Pointer
1410,WritableComparator.java,provided to assist in optimized implementations of this method.,1,1,Pointer
1158,TestTaskContext.java,tests context api and @link statusreporter#getprogress via @link taskattemptcontext#getprogress api .,0,1,Pointer
902,StreamBaseRecordReader.java,@see streamxmlrecordreader,1,1,Pointer
1173,TextInputFormat.java,an @link inputformat for plain text files.,0,1,Pointer
1174,TextInputFormat.java,files are broken into lines.,1,1,Pointer
1186,TimelineDataToRetrieve.java,encapsulates information regarding which data to retrieve for each entity,0,1,Pointer
1189,TimelineDataToRetrieve.java,data to retrieve contains the following br,1,1,Pointer
1190,TimelineDataToRetrieve.java,ul,0,1,Pointer
1191,TimelineDataToRetrieve.java,li b confstoretrieve b used for deciding which configs to return,1,1,Pointer
1192,TimelineDataToRetrieve.java,in response.,0,1,Pointer
1193,TimelineDataToRetrieve.java,this is represented as a @link timelinefilterlist object,0,1,Pointer
1194,TimelineDataToRetrieve.java,containing @link timelineprefixfilter objects.,0,1,Pointer
1195,TimelineDataToRetrieve.java,these can either be,0,1,Pointer
172,ComparableVersion.java,code source of this file http grepcode^com file repo1^maven.org maven2 org^apache.maven maven artifact 31.1 org apache maven artifact versioning comparableversion^java modifications made on top of the source 1.,0,1,Pointer
1196,TimelineDataToRetrieve.java,exact config keys or prefixes which are then compared against config,0,1,Pointer
173,ComparableVersion.java,changed package org^apache.maven^artifact.versioning to package org^apache.hadoop^util 2.,0,1,Pointer
686,OMNodeDetails.java,builder class for omnodedetails.,0,1,Pointer
1199,TimelineDataToRetrieve.java,"or empty, all configurations will be fetched if fieldstoretrieve",0,1,Pointer
1200,TimelineDataToRetrieve.java,contains @link field#configs or @link field#all .,0,1,Pointer
1202,TimelineDataToRetrieve.java,confused with configfilters which is used to decide which entities to,0,1,Pointer
1203,TimelineDataToRetrieve.java,return instead.,0,1,Pointer
1204,TimelineDataToRetrieve.java,li,0,1,Pointer
1206,TimelineDataToRetrieve.java,in response.,0,1,Pointer
1207,TimelineDataToRetrieve.java,this is represented as a @link timelinefilterlist object,0,1,Pointer
1208,TimelineDataToRetrieve.java,containing @link timelineprefixfilter objects.,0,1,Pointer
1209,TimelineDataToRetrieve.java,these can either be,0,1,Pointer
1210,TimelineDataToRetrieve.java,exact metric ids or prefixes which are then compared against metric,0,1,Pointer
699,PartialOutputCommitter.java,interface for an @link org^apache.hadoop^mapreduce.outputcommitter,0,1,Pointer
1213,TimelineDataToRetrieve.java,"or empty, all metrics will be fetched if fieldstoretrieve contains",0,1,Pointer
1216,TimelineDataToRetrieve.java,with metricfilters which is used to decide which entities to return,0,1,Pointer
1217,TimelineDataToRetrieve.java,instead.,0,1,Pointer
1218,TimelineDataToRetrieve.java,li,0,1,Pointer
453,ErasureCodingPolicyManager.java,this class is instantiated by the fsnamesystem.,0,1,Pointer
1222,TimelineDataToRetrieve.java,"namely entity id, entity type and entity created time.",0,1,Pointer
199,ComparableVersion.java,@see a href https cwiki^apache.org confluence display mavenold versioning versioning on maven wiki a,0,1,Pointer
1223,TimelineDataToRetrieve.java,all fields will,0,1,Pointer
1225,TimelineDataToRetrieve.java,li,0,1,Pointer
714,QuasiMonteCarlo.java,"in this example,",0,1,Pointer
715,QuasiMonteCarlo.java,"we use a qmc method to approximate the integral i int s f x dx ,",0,1,Pointer
971,SwiftRestClient.java,get the current operation statistics.,0,1,Pointer
1228,TimelineDataToRetrieve.java,number of metrics to return.,0,1,Pointer
972,SwiftRestClient.java,@return a snapshot of the statistics,0,1,Pointer
1229,TimelineDataToRetrieve.java,this parameter is ignored if metrics are not to,0,1,Pointer
973,SwiftRestClient.java,base class for all swift rest operations.,0,1,Pointer
1230,TimelineDataToRetrieve.java,be fetched.,0,1,Pointer
974,SwiftRestClient.java,@param m request,0,1,Pointer
1231,TimelineDataToRetrieve.java,li,0,1,Pointer
463,EventWatcher.java,@param timeout payload the type of the events which are tracked.,0,1,Pointer
975,SwiftRestClient.java,@param r result,0,1,Pointer
464,EventWatcher.java,@param completion payload the type of event which could cancel the,0,1,Pointer
976,SwiftRestClient.java,get the current operation statistics.,0,1,Pointer
1233,TimelineDataToRetrieve.java,be retrieved.,0,1,Pointer
465,EventWatcher.java,tracking.,0,1,Pointer
977,SwiftRestClient.java,@return a snapshot of the statistics,0,1,Pointer
1235,TimelineDataToRetrieve.java,li,0,1,Pointer
1237,TimelineDataToRetrieve.java,be retrieved.,0,1,Pointer
981,SwiftRestClient.java,get the current operation statistics.,0,1,Pointer
982,SwiftRestClient.java,@return a snapshot of the statistics,0,1,Pointer
1239,TimelineDataToRetrieve.java,li,0,1,Pointer
983,SwiftRestClient.java,generate an auth message.,0,1,Pointer
1240,TimelineDataToRetrieve.java,ul,0,1,Pointer
984,SwiftRestClient.java,@param r response,0,1,Pointer
985,SwiftRestClient.java,get the current operation statistics.,0,1,Pointer
986,SwiftRestClient.java,@return a snapshot of the statistics,0,1,Pointer
987,SwiftRestClient.java,create operation.,0,1,Pointer
477,FairOrderingPolicy.java,an orderingpolicy which orders schedulableentities for fairness see,0,1,Pointer
989,SwiftRestClient.java,get the current operation statistics.,0,1,Pointer
478,FairOrderingPolicy.java,fairscheduler,0,1,Pointer
990,SwiftRestClient.java,@return a snapshot of the statistics,0,1,Pointer
479,FairOrderingPolicy.java,"fairsharepolicy , generally, processes with lesser usage are lesser.",0,1,Pointer
991,SwiftRestClient.java,delete operation.,0,1,Pointer
992,SwiftRestClient.java,@param r,0,1,Pointer
249,DBProfile.java,documentation for options.,0,1,Pointer
250,DBProfile.java,p,0,1,Pointer
251,DBProfile.java,https github^com facebook rocksdb blob master include rocksdb options^h,0,1,Pointer
252,DBProfile.java,p,0,1,Pointer
253,DBProfile.java,most tuning parameters are based on this url.,0,1,Pointer
254,DBProfile.java,p,0,1,Pointer
255,DBProfile.java,https github^com facebook rocksdb wiki setup options and basic tuning,0,1,Pointer
511,FileSystemApplicationHistoryStore.java,file system implementation of @link applicationhistorystore .,0,1,Pointer
1588,StreamHandle.java,this is used by @link org^apache.spark^network.shuffle^oneforoneblockfetcher .,0,1,Pointer
1576,LocalDiskShuffleDataIO.java,implementation of the @link shuffledataio plugin system that replicates the local shuffle,1,1,Pointer
1512,KVStore.java,"using a @link kvstoreserializer , which can be customized by the application.",0,1,Pointer
1530,KVStore.java,"objects written to the store with @link kvindex , indices are created to sort the data",0,1,Pointer
2246,MIBreakpointsSynchronizer.java,p,0,1,Pointer
2247,MIBreakpointsSynchronizer.java,"bug 530377 prior to fixing 530377, events that arrived from gdb faster than",1,1,Pointer
2248,MIBreakpointsSynchronizer.java,dsf eclipse fully processed them could cause the state within the,0,1,Pointer
2249,MIBreakpointsSynchronizer.java,synchronizer and manager to become corrupt.,1,1,Pointer
2250,MIBreakpointsSynchronizer.java,this would happen because it,0,1,Pointer
1675,BindingClassifierTest.java,tests for @link bindingclassifier .,1,1,Pointer
2251,MIBreakpointsSynchronizer.java,"takes multiple dsf stages to complete handling 1 event, so the handling of",0,1,Pointer
2252,MIBreakpointsSynchronizer.java,the next event would become intermingled.,1,1,Pointer
2253,MIBreakpointsSynchronizer.java,that violated many assumptions in,0,1,Pointer
2254,MIBreakpointsSynchronizer.java,the code that the code run in the respective requestmonitor would be on the,1,1,Pointer
2255,MIBreakpointsSynchronizer.java,same state.,0,1,Pointer
2256,MIBreakpointsSynchronizer.java,this is an unsuprising assumption based on the general idea of,1,1,Pointer
2257,MIBreakpointsSynchronizer.java,dsf as not requiring the normal synchronization primitives as everything is,0,1,Pointer
2258,MIBreakpointsSynchronizer.java,single threaded.,1,1,Pointer
2259,MIBreakpointsSynchronizer.java,"to resolve this problem, there is some code",0,1,Pointer
1875,GdbExpressionVMProvider.java,"to understand why this is necessary, see gdbvariablevmnode.",0,1,Pointer
2260,MIBreakpointsSynchronizer.java,@link #queueevent breakpointevent that ensures each event is fully,0,1,Pointer
2581,TypedCDTViewerFilter.java,see org^eclipse.cdt^internal.ui^dialogs.typedviewerfilter,0,1,Pointer
2261,MIBreakpointsSynchronizer.java,processed before the next event starts processing.,0,1,Pointer
2458,SourceLookupTest.java,see the makefile for more,0,1,Pointer
1755,CDebugModelPresentation.java,@see idebugmodelpresentation,0,1,Pointer
2459,SourceLookupTest.java,information.,0,1,Pointer
1757,CElementDelta.java,@see icelementdelta,0,1,Pointer
2598,VMHasChildrenUpdate.java,@see vmviewerupdate,0,1,Pointer
2407,ProcStatParser.java,@see also http www^linuxhowtos.org system procstat^htm,0,1,Pointer
1714,CConfigurationDescriptionCache.java,@see icconfigurationdescription,0,1,Pointer
1715,CConfigurationDescriptionCache.java,@see cconfigurationdescription,0,1,Pointer
1716,CConfigurationDescriptionCache.java,@see cprojectdescriptionevent,0,1,Pointer
2036,ICLanguageSettingPathEntry.java,see interface hierarchy for more specifics.,0,1,Pointer
2424,ReturnCheckerTest.java,test for @see returncheckertest class,0,1,Pointer
2041,ICLibraryFileEntry.java,see @link icsettingentry#library file .,0,1,Pointer
2431,RulerColumnDescriptor.java,instances can be obtained from a @link rulercolumnregistry .,0,1,Pointer
2047,ICodeReaderFactory.java,@deprecated replaced by @link includefilecontentprovider,0,1,Pointer
2757,AtomicDoubleArrayTest.java,source,0,1,Pointer
2758,AtomicDoubleArrayTest.java,http gee^cs.oswego^edu cgi bin viewcvs^cgi jsr166 src test tck jsr166e atomicdoublearraytest^java?revision 113,1,1,Pointer
2759,AtomicDoubleArrayTest.java,modified to adapt to guava coding conventions,0,1,Pointer
3209,ForwardingImmutableSet.java,gwt implementation of @link immutableset that forwards to another @code set implementation.,1,1,Pointer
3082,CollectionTestSuiteBuilder.java,concrete instantiation of @link abstractcollectiontestsuitebuilder for testing collections that,0,1,Pointer
3083,CollectionTestSuiteBuilder.java,do not have a more specific tester like @link listtestsuitebuilder or @link,1,1,Pointer
3084,CollectionTestSuiteBuilder.java,settestsuitebuilder .,0,1,Pointer
3469,Preconditions.java,see a,1,1,Pointer
3470,Preconditions.java,href https github^com google guava wiki conditionalfailuresexplained conditional failures,0,1,Pointer
3471,Preconditions.java,explained a in the guava user guide for more advice.,1,1,Pointer
3472,Preconditions.java,"notably, @link verify offers assertions",0,1,Pointer
3473,Preconditions.java,similar to those in this class for non precondition checks.,1,1,Pointer
3282,ImmutableSetHashFloodingDetectionBenchmark.java,benchmark of implementations of @link immutableset#hashfloodingdetected object .,0,1,Pointer
2707,ArbitraryInstances.java,p all default instances returned by @link #get are generics safe.,1,1,Pointer
2771,BloomFilter.java,"p if you are unfamiliar with bloom filters, this nice a",0,1,Pointer
3411,PeekingIterator.java,p see the guava user guide article on a href,1,1,Pointer
4116,SortedSetNavigationTester.java,can t be invoked directly please see,0,1,Pointer
2772,BloomFilter.java,href http llimllib^github.com bloomfilter tutorial tutorial a may help you understand how,1,1,Pointer
3412,PeekingIterator.java,https github^com google guava wiki collectionhelpersexplained#peekingiterator @code,0,1,Pointer
4117,SortedSetNavigationTester.java,@code sortedsettestsuitebuilder .,1,1,Pointer
2773,BloomFilter.java,they work.,0,1,Pointer
3413,PeekingIterator.java,peekingiterator a .,0,1,Pointer
2774,BloomFilter.java,p the false positive probability @code fpp of a bloom filter is defined as the probability,0,1,Pointer
2775,BloomFilter.java,that @linkplain #mightcontain object will erroneously return @code true for an object that,0,1,Pointer
2776,BloomFilter.java,has not actually been put in the @code bloomfilter .,0,1,Pointer
2777,BloomFilter.java,p bloom filters are serializable.,0,1,Pointer
2778,BloomFilter.java,they also support a more compact serial representation via the,0,1,Pointer
2779,BloomFilter.java,@link #writeto and @link #readfrom methods.,0,1,Pointer
3293,LazyStackTraceBenchmark.java,quick and dirty benchmark of @link throwables#lazystacktrace throwable .,0,1,Pointer
3489,Preconditions.java,h3 more information h3,0,1,Pointer
3106,DescendingMultiset.java,only needs @code forwardmultiset and,0,1,Pointer
3490,Preconditions.java,p see the guava user guide on a,0,1,Pointer
3107,DescendingMultiset.java,@code entryiterator .,0,1,Pointer
3491,Preconditions.java,href https github^com google guava wiki preconditionsexplained using @code,0,1,Pointer
3492,Preconditions.java,preconditions a .,0,1,Pointer
2918,CacheBuilder.java,p see the guava user guide article on a,0,1,Pointer
2919,CacheBuilder.java,href https github^com google guava wiki cachesexplained caching a for a higher level,0,1,Pointer
2920,CacheBuilder.java,explanation.,0,1,Pointer
3306,MapPutAllTester.java,please see @link com^google.common^collect.testing^maptestsuitebuilder .,0,1,Pointer
3052,ClassToInstanceMap.java,p see the guava user guide article on a href,0,1,Pointer
3053,ClassToInstanceMap.java,https github^com google guava wiki newcollectiontypesexplained#classtoinstancemap @code,0,1,Pointer
3054,ClassToInstanceMap.java,classtoinstancemap a .,0,1,Pointer
3580,RegularImmutableList_CustomFieldSerializer.java,this class implements the gwt serialization of @link regularimmutablelist .,0,1,Pointer
2749,ArrayListMultimapGwtSerializationDependencies.java,"p for details about this hack, see @link gwtserializationdependencies , which takes the same",0,1,Pointer
2750,ArrayListMultimapGwtSerializationDependencies.java,approach but with a subclass rather than a superclass.,0,1,Pointer
2878,CacheBuilder.java,these iterators never throw @link,0,1,Pointer
2879,CacheBuilder.java,concurrentmodificationexception .,0,1,Pointer
5120,VScrollTable.java,dom^client.blurevent,0,1,Pointer
5121,VScrollTable.java,non javadoc,1,1,Pointer
5134,VScrollTable.java,non javadoc,0,1,Pointer
5135,VScrollTable.java,@see,1,1,Pointer
5136,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,0,1,Pointer
5137,VScrollTable.java,dom^client.focusevent,1,1,Pointer
5138,VScrollTable.java,non javadoc,0,1,Pointer
5139,VScrollTable.java,@see,1,1,Pointer
5395,Window.java,non javadoc,0,1,Pointer
5140,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,1,1,Pointer
5396,Window.java,@see com^vaadin.ui^panel#paintcontent com^vaadin.server^painttarget,0,1,Pointer
5141,VScrollTable.java,dom^client.blurevent,1,1,Pointer
5397,Window.java,non javadoc,0,1,Pointer
5142,VScrollTable.java,non javadoc,1,1,Pointer
4886,RpcDataProviderExtension.java,"@see grid#addvaluechangelistener com^vaadin.v7^data.container, object, object",0,1,Pointer
5398,Window.java,"@see com^vaadin.ui^panel#changevariables java^lang.object, java^util.map",1,1,Pointer
4887,RpcDataProviderExtension.java,"grid#addvaluechangelistener container, object, object",0,1,Pointer
5399,Window.java,event which is fired when the window order position is changed.,1,1,Pointer
4888,RpcDataProviderExtension.java,@see grid#valuechangelisteners,0,1,Pointer
5400,Window.java,@see ui^windoworderupdateevent,1,1,Pointer
5402,Window.java,non javadoc,0,1,Pointer
5403,Window.java,@see com^vaadin.ui^panel#paintcontent com^vaadin.server^painttarget,1,1,Pointer
5404,Window.java,non javadoc,0,1,Pointer
5405,Window.java,"@see com^vaadin.ui^panel#changevariables java^lang.object, java^util.map",1,1,Pointer
4640,FooterDoubleClickHandler.java,handler for @link griddoubleclickevent s that happen in the footer of the,0,1,Pointer
5408,Window.java,non javadoc,1,1,Pointer
5409,Window.java,@see com^vaadin.ui^panel#paintcontent com^vaadin.server^painttarget,0,1,Pointer
5410,Window.java,non javadoc,1,1,Pointer
5411,Window.java,"@see com^vaadin.ui^panel#changevariables java^lang.object, java^util.map",0,1,Pointer
5162,VScrollTable.java,non javadoc,1,1,Pointer
5163,VScrollTable.java,@see,0,1,Pointer
5164,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,1,1,Pointer
5165,VScrollTable.java,dom^client.focusevent,0,1,Pointer
5421,Window.java,non javadoc,1,1,Pointer
5166,VScrollTable.java,non javadoc,0,1,Pointer
5422,Window.java,@see com^vaadin.ui^panel#paintcontent com^vaadin.server^painttarget,1,1,Pointer
5167,VScrollTable.java,@see,0,1,Pointer
5423,Window.java,non javadoc,1,1,Pointer
5168,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,0,1,Pointer
5424,Window.java,"@see com^vaadin.ui^panel#changevariables java^lang.object, java^util.map",1,1,Pointer
5169,VScrollTable.java,dom^client.blurevent,0,1,Pointer
5170,VScrollTable.java,non javadoc,1,1,Pointer
4915,ShouldWriteDataDelegate.java,delegate used by @link designcontext to determine whether container data,0,1,Pointer
4916,ShouldWriteDataDelegate.java,should be written out for a component.,1,1,Pointer
5428,Window.java,non javadoc,0,1,Pointer
4917,ShouldWriteDataDelegate.java,@see designcontext#shouldwritedata component,1,1,Pointer
5429,Window.java,@see com^vaadin.ui^panel#paintcontent com^vaadin.server^painttarget,0,1,Pointer
5430,Window.java,non javadoc,1,1,Pointer
4663,Grid.java,these enums can be used in @link grid#setselectionmode selectionmode,0,1,Pointer
5431,Window.java,"@see com^vaadin.ui^panel#changevariables java^lang.object, java^util.map",1,1,Pointer
4665,Grid.java,@see grid#setselectionmode selectionmode,0,1,Pointer
4666,Grid.java,@see grid#setselectionmodel gridselectionmodel,1,1,Pointer
5438,Window.java,non javadoc,0,1,Pointer
5439,Window.java,@see com^vaadin.ui^panel#paintcontent com^vaadin.server^painttarget,1,1,Pointer
5440,Window.java,non javadoc,0,1,Pointer
5441,Window.java,"@see com^vaadin.ui^panel#changevariables java^lang.object, java^util.map",1,1,Pointer
5187,VScrollTable.java,non javadoc,0,1,Pointer
5188,VScrollTable.java,@see,1,1,Pointer
5189,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,0,1,Pointer
5190,VScrollTable.java,dom^client.focusevent,1,1,Pointer
5446,Window.java,non javadoc,0,1,Pointer
5191,VScrollTable.java,non javadoc,1,1,Pointer
5447,Window.java,@see com^vaadin.ui^panel#paintcontent com^vaadin.server^painttarget,0,1,Pointer
5192,VScrollTable.java,@see,1,1,Pointer
5448,Window.java,non javadoc,0,1,Pointer
5193,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,0,1,Pointer
4937,TargetDetailsImpl.java,a hashmap backed implementation of @link targetdetails for termina^^^n.,0,1,Pointer
5449,Window.java,"@see com^vaadin.ui^panel#changevariables java^lang.object, java^util.map",0,1,Pointer
5194,VScrollTable.java,dom^client.blurevent,0,1,Pointer
5195,VScrollTable.java,non javadoc,0,1,Pointer
5452,Window.java,non javadoc,0,1,Pointer
5453,Window.java,@see com^vaadin.ui^panel#paintcontent com^vaadin.server^painttarget,0,1,Pointer
5454,Window.java,non javadoc,0,1,Pointer
5455,Window.java,"@see com^vaadin.ui^panel#changevariables java^lang.object, java^util.map",0,1,Pointer
5209,VScrollTable.java,non javadoc,0,1,Pointer
5210,VScrollTable.java,@see,0,1,Pointer
5211,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,0,1,Pointer
5212,VScrollTable.java,dom^client.focusevent,0,1,Pointer
5213,VScrollTable.java,non javadoc,0,1,Pointer
5214,VScrollTable.java,@see,0,1,Pointer
5215,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,0,1,Pointer
5216,VScrollTable.java,dom^client.blurevent,0,1,Pointer
5217,VScrollTable.java,non javadoc,0,1,Pointer
5231,VScrollTable.java,non javadoc,0,1,Pointer
5232,VScrollTable.java,@see,0,1,Pointer
5233,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,0,1,Pointer
5234,VScrollTable.java,dom^client.focusevent,0,1,Pointer
5235,VScrollTable.java,non javadoc,0,1,Pointer
5236,VScrollTable.java,@see,0,1,Pointer
5237,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,0,1,Pointer
5238,VScrollTable.java,dom^client.blurevent,0,1,Pointer
5239,VScrollTable.java,non javadoc,0,1,Pointer
4734,GridSelectionModel.java,selectionmodel should extend @link abstractgridextension .,0,1,Pointer
4739,GridSelectionModel.java,@see abstractselectionmodel,0,1,Pointer
4740,GridSelectionModel.java,@see singleselectionmodel,0,1,Pointer
5252,VScrollTable.java,non javadoc,0,1,Pointer
4741,GridSelectionModel.java,@see multiselectionmodel,0,1,Pointer
5253,VScrollTable.java,@see,0,1,Pointer
5254,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,0,1,Pointer
5255,VScrollTable.java,dom^client.focusevent,0,1,Pointer
5256,VScrollTable.java,non javadoc,0,1,Pointer
5257,VScrollTable.java,@see,0,1,Pointer
5258,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,0,1,Pointer
5259,VScrollTable.java,dom^client.blurevent,0,1,Pointer
5260,VScrollTable.java,non javadoc,0,1,Pointer
5274,VScrollTable.java,non javadoc,0,1,Pointer
5275,VScrollTable.java,@see,0,1,Pointer
5276,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,0,1,Pointer
5277,VScrollTable.java,dom^client.focusevent,0,1,Pointer
5278,VScrollTable.java,non javadoc,0,1,Pointer
4767,MyPickerConnector.java,mini tutorial code for,0,1,Pointer
5279,VScrollTable.java,@see,0,1,Pointer
4768,MyPickerConnector.java,"https vaadin^com wiki wiki main widget%20styling%20using%20only%20css,",0,1,Pointer
5280,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,0,1,Pointer
4769,MyPickerConnector.java,https,0,1,Pointer
5281,VScrollTable.java,dom^client.blurevent,0,1,Pointer
4770,MyPickerConnector.java,vaadin^com wiki wiki main lightweight%20calculations%20of%20widget%20l,0,1,Pointer
5282,VScrollTable.java,non javadoc,0,1,Pointer
5295,VScrollTable.java,non javadoc,0,1,Pointer
5296,VScrollTable.java,@see,0,1,Pointer
5297,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,0,1,Pointer
5298,VScrollTable.java,dom^client.focusevent,0,1,Pointer
5299,VScrollTable.java,non javadoc,0,1,Pointer
5300,VScrollTable.java,@see,0,1,Pointer
5301,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,0,1,Pointer
4533,AbstractMultiSelectState.java,shared state for @code abstractmultiselect .,0,1,Pointer
5302,VScrollTable.java,dom^client.blurevent,0,1,Pointer
5303,VScrollTable.java,non javadoc,0,1,Pointer
4540,AbstractProperty.java,abstract base class for @link property implementations.,0,1,Pointer
4541,AbstractProperty.java,handles listener management for @link valuechangelistener s and,0,1,Pointer
4542,AbstractProperty.java,@link readonlystatuschangelistener s.,0,1,Pointer
4544,AbstractProperty.java,"@deprecated as of 80, replaced by @link valueprovider , @link setter , see",0,1,Pointer
4545,AbstractProperty.java,@link binder,0,1,Pointer
5067,VScrollTable.java,non javadoc,0,1,Pointer
5068,VScrollTable.java,@see,0,1,Pointer
5069,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,0,1,Pointer
5070,VScrollTable.java,dom^client.focusevent,0,1,Pointer
5071,VScrollTable.java,non javadoc,0,1,Pointer
5072,VScrollTable.java,@see,0,1,Pointer
5073,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,0,1,Pointer
5074,VScrollTable.java,dom^client.blurevent,0,1,Pointer
5075,VScrollTable.java,non javadoc,0,1,Pointer
5090,VScrollTable.java,non javadoc,0,1,Pointer
5091,VScrollTable.java,@see,0,1,Pointer
5092,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,0,1,Pointer
5093,VScrollTable.java,dom^client.focusevent,0,1,Pointer
5094,VScrollTable.java,non javadoc,0,1,Pointer
5095,VScrollTable.java,@see,0,1,Pointer
5096,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,0,1,Pointer
5097,VScrollTable.java,dom^client.blurevent,0,1,Pointer
5098,VScrollTable.java,non javadoc,0,1,Pointer
5100,VScrollTable.java,handles showing context menu on long press from a touch screen.,0,1,Pointer
5113,VScrollTable.java,non javadoc,0,1,Pointer
5114,VScrollTable.java,@see,0,1,Pointer
5115,VScrollTable.java,com^google.gwt^event.dom^client.focushandler#onfocus com^google.gwt^event,0,1,Pointer
5116,VScrollTable.java,dom^client.focusevent,0,1,Pointer
5117,VScrollTable.java,non javadoc,0,1,Pointer
5118,VScrollTable.java,@see,0,1,Pointer
5119,VScrollTable.java,com^google.gwt^event.dom^client.blurhandler#onblur com^google.gwt^event,0,1,Pointer
961,SwiftBadRequestException.java,data locality can t be calculated if openstack swift version is old.,0,1,deprecation
632,LogWebService.java,support only atsv2 client only.,1,1,deprecation
2176,IRegisters2.java,@since 26,0,1,deprecation
2432,RulerColumnDescriptor.java,@since 72,1,1,deprecation
2309,MIReverseDebugEnabler.java,@since 42,0,1,deprecation
2059,ICPPAliasTemplateInstance.java,@since 55,1,1,deprecation
2446,SourceLookupTest.java,p,0,1,deprecation
1810,DefaultEnvironmentContextInfo.java,@since 30,1,1,deprecation
2196,IViewInMemory.java,@since 74,0,1,deprecation
2452,SourceLookupTest.java,p,1,1,deprecation
2586,UncallCommandHandler.java,@since 70,0,1,deprecation
2078,ICPPASTVirtSpecifier.java,@since 57,1,1,deprecation
1823,DisplayDsfExecutor.java,@since 10,0,1,deprecation
2599,VMHasChildrenUpdate.java,@since 10,1,1,deprecation
2479,SourceLookupTest.java,"in addition, there can also be a b dwarf2 b in the name.",0,1,deprecation
1840,DsfDebugUITools.java,@since 11,1,1,deprecation
2096,IDsfDebugServicesFactory.java,@since 11,0,1,deprecation
2480,SourceLookupTest.java,that means it is,1,1,deprecation
2481,SourceLookupTest.java,"designed to run with gdb 74, see comment in makefile for olddwarfflags.",0,1,deprecation
2482,SourceLookupTest.java,p,1,1,deprecation
2483,SourceLookupTest.java,the result of the variations on compilation arguments means that some of the,0,1,deprecation
2484,SourceLookupTest.java,tests are parameterised.,1,1,deprecation
2485,SourceLookupTest.java,p,0,1,deprecation
2102,IGDBTraceControl.java,@since 30,1,1,deprecation
2486,SourceLookupTest.java,some of the cdt source lookup features require newer versions of gdb than,0,1,deprecation
1847,ElementNumberFormatsContribution.java,@since 22,0,1,deprecation
2487,SourceLookupTest.java,"others, therefore the relevant tests use assumegdbversion methods to be",0,1,deprecation
2488,SourceLookupTest.java,skipped when appropriate.,0,1,deprecation
2238,MIAsyncErrorProcessor.java,@since 53,0,1,deprecation
1856,FoldingConfigurationBlock.java,@since 30,0,1,deprecation
2112,IGDBTraceControl.java,gdb specific part @since 44,0,1,deprecation
1860,FormattedValueTests.java,@since 22,0,1,deprecation
2372,MIThreadCreatedEvent.java,this can only be detected by gdb mi after gdb 68.,0,1,deprecation
2375,MIThreadGroupAddedEvent.java,this can only be detected by gdb mi with gdb 72.,0,1,deprecation
2376,MIThreadGroupAddedEvent.java,@since 51,0,1,deprecation
1869,GDBControl_7_12.java,need a new finallaunchsequence for gdb 712,0,1,deprecation
1870,GDBControl_7_12.java,@since 52,0,1,deprecation
2383,MultiLaunchConfigurationTabGroup.java,"@deprecated see bug 517722, launch groups are now part of platform.",0,1,deprecation
2262,MIBreakpointsSynchronizer.java,@since 42,0,1,deprecation
1880,GDBSourceLookup.java,@since 50,0,1,deprecation
1885,GnuMakefileGenerator.java,@since 12,0,1,deprecation
2141,IMIBackend.java,@since 11,0,1,deprecation
2147,IMSASTDeclspecList.java,@since 66,0,1,deprecation
1767,CommonBuildTab.java,@since 91,0,1,deprecation
2535,StandardCElementLabelProvider.java,@deprecated use @link appearanceawarelabelprovider instead.,0,1,deprecation
2025,GroupDebugContextsCommandHandler.java,@since 71,0,1,deprecation
1770,ContainerTabModel.java,@since 12.1,0,1,deprecation
1775,CoreBuildGenericLaunchConfigProvider.java,@since 83,0,1,deprecation
2545,ToggleDynamicPrintfAdapter.java,@since 75,0,1,deprecation
1651,AddMemoryBlocks.java,@since 32,0,1,deprecation
2164,IPropertyChangeParticipant.java,@since 50,0,1,deprecation
2549,TracepointActionsPropertyPage.java,@since 21,0,1,deprecation
2172,IRefreshAllTarget.java,@since 11,0,1,deprecation
2558,TracingConsole.java,@since 21,0,1,deprecation
1663,AllTemplateEngineTests.java,@since 40,0,1,deprecation
2047,ICodeReaderFactory.java,@deprecated replaced by @link includefilecontentprovider,0,1,deprecation
2559,TracingConsole.java,this class was moved from package org^eclipse.cdt^dsf.gdb^internal.ui^tracing,0,1,deprecation
2784,BloomFilter.java,generated today may i not i be readable by a binary that was compiled 6 months ago .,0,1,deprecation
2785,BloomFilter.java,"p as of guava 230, this class is thread safe and lock free.",1,1,deprecation
2786,BloomFilter.java,it internally uses atomics and,0,1,deprecation
2787,BloomFilter.java,compare and swap to ensure correctness when multiple threads are used to access it.,1,1,deprecation
3494,Preconditions.java,@since 20,0,1,deprecation
3335,MultimapBuilder.java,@since 160,1,1,deprecation
2791,BloomFilter.java,@since 110 thread safe since 230,0,1,deprecation
2665,AbstractLoadingCache.java,@since 110,1,1,deprecation
3149,EqualsTester.java,@since 100,0,1,deprecation
3342,MultimapBuilder.java,@since 160,1,1,deprecation
3598,Resources.java,@since 10,0,1,deprecation
3347,MultimapBuilder.java,@since 160,0,1,deprecation
2643,AbstractListeningExecutorService.java,@since 140,0,1,deprecation
2931,CacheBuilder.java,@since 100,0,1,deprecation
3059,ClassToInstanceMap.java,@since 20,0,1,deprecation
3255,HostAndPort.java,@since 100,0,1,deprecation
3352,MultimapBuilder.java,@since 160,0,1,deprecation
2716,ArbitraryInstances.java,@since 120,0,1,deprecation
3101,CountingOutputStream.java,@since 10,0,1,deprecation
3357,MultimapBuilder.java,@since 160,0,1,deprecation
2782,BloomFilter.java,"however, serial forms generated by newer versions",0,1,deprecation
2783,BloomFilter.java,"of the code may not be readable by older versions of the code eg, a serialized bloom filter",0,1,deprecation
4544,AbstractProperty.java,"@deprecated as of 80, replaced by @link valueprovider , @link setter , see",0,1,deprecation
4545,AbstractProperty.java,@link binder,1,1,deprecation
4546,AbstractProperty.java,legacypropertyhelper has been removed in vaadin 8 events,0,1,deprecation
4867,RpcDataProviderExtension.java,@since 74,1,1,deprecation
4612,ClientRpcWriter.java,@since 71,0,1,deprecation
4869,RpcDataProviderExtension.java,"@deprecated as of 80, no replacement available.",1,1,deprecation
4933,SpacerVisibilityChangedEvent.java,@since 77.13,0,1,deprecation
4549,AbstractProperty.java,legacypropertyhelper has been removed in vaadin 8 events,1,1,deprecation
4871,RpcDataProviderExtension.java,@since 76,0,1,deprecation
4617,ColorPickerServerRpc.java,@since 70.0,1,1,deprecation
4938,TargetDetailsImpl.java,@since 63,0,1,deprecation
4939,TargetDetailsImpl.java,@deprecated replaced in 81 by @link dropevent#gettransferdata string,1,1,deprecation
4621,ComboBoxState.java,@since 70,0,1,deprecation
4688,Grid.java,@since 75.0,1,1,deprecation
4752,HeaderRow.java,@since 80,0,1,deprecation
5520,XhrConnectionError.java,@since 76,1,1,deprecation
5009,VaadinServiceInitListener.java,@since 80,0,1,deprecation
5394,Window.java,@since 30,1,1,deprecation
4946,UnknownExtensionConnector.java,@since 77.4,0,1,deprecation
5078,VScrollTable.java,@since 72,1,1,deprecation
4567,AbstractSingleComponentContainerState.java,@since 80,0,1,deprecation
4762,InternalContainerAnnotationForJS.java,@since 80,0,1,deprecation
4635,DoubleRangeValidator.java,@since 80,0,1,deprecation
5150,VScrollTable.java,@since 72,0,1,deprecation
4577,ApplicationConfiguration.java,@since 70,0,1,deprecation
4642,FooterDoubleClickHandler.java,@since 74,0,1,deprecation
4579,ApplicationConfiguration.java,@since 70,0,1,deprecation
4773,MyPickerConnector.java,@since 70.0,0,1,deprecation
5030,VLazyInitItemIdentifiers.java,@deprecated replaced in 81 with,0,1,deprecation
4903,SelectAllEvent.java,@since 74,0,1,deprecation
5031,VLazyInitItemIdentifiers.java,ragovercriteria string and,0,1,deprecation
5032,VLazyInitItemIdentifiers.java,@link droptargetextension#setdropcriteria string,0,1,deprecation
4651,Grid.java,@since 80,0,1,deprecation
4589,BootstrapPageResponse.java,@since 70.0,0,1,deprecation
5101,VScrollTable.java,@since 72,0,1,deprecation
4975,VaadinPortlet.java,@deprecated as of 70.,0,1,deprecation
4527,AbstractFocusable.java,@since 76,0,1,deprecation
4976,VaadinPortlet.java,this is no longer used and only provided for,0,1,deprecation
4977,VaadinPortlet.java,backwards compatibility.,0,1,deprecation
4978,VaadinPortlet.java,each @link requesthandler can,0,1,deprecation
4850,PortletDummyRequestHandler.java,@since 71,0,1,deprecation
4979,VaadinPortlet.java,individually decide whether it wants to handle a request or,0,1,deprecation
4980,VaadinPortlet.java,not.,0,1,deprecation
4918,ShouldWriteDataDelegate.java,@since 75.0,0,1,deprecation
4535,AbstractMultiSelectState.java,@since 80,0,1,deprecation
4855,QueryBuilder.java,"@deprecated as of 80, no replacement available.",0,1,deprecation
4601,ButtonRenderer.java,@since 74,0,1,deprecation
4543,AbstractProperty.java,@since 66,0,1,deprecation
128,CapacitySchedulerPlanFollower.java,differences among existing queues .,0,1,rational
129,CapacitySchedulerPlanFollower.java,this makes it resilient to frequency of,1,1,rational
130,CapacitySchedulerPlanFollower.java,"synchronization, and rm restart issues no catch up is necessary .",0,1,rational
656,NativeBatchProcessor.java,"used to create channel, transfer data and command between java and native",1,1,rational
789,ReencryptionUpdater.java,"class for finalizing re encrypt edek operations, by updating file xattrs with",0,1,rational
279,DelegatingSSLSocketFactory.java,p,1,1,rational
1432,YarnAuthorizationProvider.java,it is excepted that any of the,0,1,rational
1433,YarnAuthorizationProvider.java,methods defined in this interface should be non blocking call and should not,1,1,rational
1434,YarnAuthorizationProvider.java,involve expensive computation as these method could be invoked in rpc.,0,1,rational
415,EditLogTailer.java,manage the active namenode proxy .,1,1,rational
416,EditLogTailer.java,this cannot just be the a single proxy since we could,0,1,rational
417,EditLogTailer.java,"failover across a number of namenodes, rather than just between an active and a standby.",1,1,rational
418,EditLogTailer.java,p,0,1,rational
419,EditLogTailer.java,we lazily get a proxy to one of the configured namenodes and attempt to make the request,1,1,rational
420,EditLogTailer.java,against it.,0,1,rational
421,EditLogTailer.java,"if it doesn t succeed, either because the proxy failed to be created or the request",1,1,rational
422,EditLogTailer.java,"failed, we try the next nn in the list.",0,1,rational
423,EditLogTailer.java,we try this up to the configuration maximum number of,1,1,rational
424,EditLogTailer.java,retries before throwing up our hands.,0,1,rational
297,DelegatingSSLSocketFactory.java,p,1,1,rational
425,EditLogTailer.java,a working proxy is retained across attempts since we,0,1,rational
426,EditLogTailer.java,expect the active namenode to switch rarely.,1,1,rational
427,EditLogTailer.java,p,0,1,rational
428,EditLogTailer.java,this mechanism is b very bad b for cases where we care about being i fast i it just,1,1,rational
301,DelegatingSSLSocketFactory.java,p,0,1,rational
429,EditLogTailer.java,blindly goes and tries namenodes.,0,1,rational
302,DelegatingSSLSocketFactory.java,default jsse is not truly the the default jsse implementation because,0,1,rational
303,DelegatingSSLSocketFactory.java,the gcm cipher is disabled when running on java 8.,0,1,rational
304,DelegatingSSLSocketFactory.java,"however, the name",0,1,rational
1073,TestNativeAzureFileSystemUploadLogic.java,various scenarios to test in how often we flush data while uploading.,0,1,rational
305,DelegatingSSLSocketFactory.java,was not changed in order to preserve backwards compatibility.,0,1,rational
306,DelegatingSSLSocketFactory.java,"instead,",0,1,rational
307,DelegatingSSLSocketFactory.java,a new mode called default jsse with gcm delegates to the default jsse,0,1,rational
308,DelegatingSSLSocketFactory.java,implementation with no changes to the list of enabled ciphers.,0,1,rational
309,DelegatingSSLSocketFactory.java,p,0,1,rational
1079,TestOMVolumeRequest.java,base test class for volume request.,0,1,rational
61,ApplicationStateData.java,contains all the state data that needs to be stored persistently for an application,0,1,rational
703,PartitionResourcesInfo.java,this class represents queue user resource usage info for a given partition,0,1,rational
831,RegistryInternalConstants.java,these are the things which aren t visible to users.,0,1,rational
1348,TimelineStorageMonitor.java,this abstract class is for monitoring health of timeline storage.,0,1,rational
74,BalancingPolicy.java,cluster is balanced if each node is balanced.,0,1,rational
75,BalancingPolicy.java,cluster is balanced if each pool in each node is balanced.,0,1,rational
1355,TypedEvent.java,basic event implementation to implement custom events.,0,1,rational
461,EventWatcher.java,event watcher will send the tracked payload event after a timeout period,0,1,rational
462,EventWatcher.java,unless a confirmation from the original event completion event is arrived.,0,1,rational
1132,TestSwiftFileSystemContract.java,some of the tests override the base class tests these,0,1,rational
109,BlockUtils.java,utils functions to help block functions.,0,1,rational
1133,TestSwiftFileSystemContract.java,"are where swiftfs does not implement those features, or",0,1,rational
1134,TestSwiftFileSystemContract.java,when the behavior of swiftfs does not match the normal,0,1,rational
1135,TestSwiftFileSystemContract.java,contract which normally means that directories and equal files,0,1,rational
1136,TestSwiftFileSystemContract.java,are being treated as equal.,0,1,rational
245,CpuTimeTracker.java,utility for sampling and computing cpu usage.,0,1,rational
1146,TestTaskCommit.java,the framework s fileoutputcommitter cleans up any temporary,0,1,rational
1147,TestTaskCommit.java,files left behind in aborttask.,0,1,rational
1148,TestTaskCommit.java,we want the test case to,0,1,rational
1149,TestTaskCommit.java,find these files and hence short circuit aborttask.,0,1,rational
126,CapacitySchedulerPlanFollower.java,"this implementation of planfollower is relatively stateless, and it can",0,1,rational
127,CapacitySchedulerPlanFollower.java,synchronize schedulers and plans that have arbitrary changes performing set,0,1,rational
1607,AbstractCPropertyTab.java,"in this case, we ll able to use",0,1,rational
1608,AbstractCPropertyTab.java,a lot of utility methods via provider link.,1,1,rational
1609,AbstractCPropertyTab.java,"in particular, it allows to get current project,",0,1,rational
2313,MIStack.java,provide the data.,1,1,rational
1610,AbstractCPropertyTab.java,configuration etc see icpropertyprovider interface.,0,1,rational
1611,AbstractCPropertyTab.java,a standard way to create buttons ins edit del etc,1,1,rational
1612,AbstractCPropertyTab.java,and to handle their events see buttonpressed int,0,1,rational
2316,MIStack.java,"a map of threadid framescacheinfo, that can be cleared based on a context.",1,1,rational
1613,AbstractCPropertyTab.java,several utility methods to create widgets in the,0,1,rational
2317,MIStack.java,we use this cache for a few reasons,1,1,rational
1614,AbstractCPropertyTab.java,"uniform manner setuplabel , setuptext etc .",0,1,rational
2318,MIStack.java,br,1,1,rational
1615,AbstractCPropertyTab.java,means to handle control messages which are the main,0,1,rational
2319,MIStack.java,"first, two commands such as",1,1,rational
1616,AbstractCPropertyTab.java,communication way for new cdt model pages and tabs.,0,1,rational
2320,MIStack.java,pre,1,1,rational
1809,DefaultEnvironmentContextInfo.java,"used to represent the configuration, project, workspace and eclipse environment contexts",0,1,rational
2321,MIStack.java,stack info depth 11,1,1,rational
2322,MIStack.java,stack info depth 2,0,1,rational
2323,MIStack.java,pre,0,1,rational
2324,MIStack.java,would both be sent to gdb because the command cache sees them as different.,0,1,rational
2325,MIStack.java,this cache allows us to know that if we already asked for a stack depth,0,1,rational
2326,MIStack.java,we can potentially re use the answer.,0,1,rational
2327,MIStack.java,br,0,1,rational
2328,MIStack.java,the same concept is applicable for the stack list frames command with different limits.,0,1,rational
2329,MIStack.java,"also, the stack depth can be deduced from the frames list, so we don t need to ask gdb for it again.",0,1,rational
2330,MIStack.java,p,0,1,rational
2331,MIStack.java,the second reason is that gdb is unreliable when it comes to returning frames.,0,1,rational
2332,MIStack.java,the mi protocol only allows to reply,0,1,rational
2333,MIStack.java,with data or with error.,0,1,rational
2334,MIStack.java,"when gdb is unwinding sometimes it gets both, and while the console cli protocol has no",0,1,rational
2335,MIStack.java,"problem with that, for mi, gdb replies randomly, sometimes with data, sometimes with error.",0,1,rational
2336,MIStack.java,if we cache the valid data,0,1,rational
2337,MIStack.java,it will eliminate the issue with invalid data on subsequent invocations.,0,1,rational
2338,MIStack.java,we don t cache errors.,0,1,rational
2339,MIStack.java,base class for the iframedmdata object that uses an miframe object to,0,1,rational
2340,MIStack.java,provide the data.,0,1,rational
2341,MIStack.java,sub classes must provide the miframe object,0,1,rational
2223,MIAsyncErrorProcessor.java,in some cases gdb reports exec commands failure after the ^running event is fired.,0,1,rational
1842,DummyPage.java,this class is just to replace a category reference in org^eclipse.cdt^ui that we exclude because we do not bring in the org^eclipse.cdt^managedbuild.ui plug in.,0,1,rational
2101,IGDBTraceControl.java,it is used to do such things as start and stop tracing.,0,1,rational
1850,FindStdLibPath.java,the purpose is to find a path where stdc library is located.,0,1,rational
3136,EqualsTester.java,li the hash codes of any two equal objects are equal,0,1,rational
3137,EqualsTester.java,ul,1,1,rational
2690,AbstractSortedKeySortedSetMultimap.java,p this superclass allows @code treemultimap to override methods to return navigable set and,0,1,rational
2691,AbstractSortedKeySortedSetMultimap.java,"map types in non gwt only, while gwt code will inherit the sortedmap sortedset overrides.",1,1,rational
3140,EqualsTester.java,ul,0,1,rational
3400,ObjectCountHashMap.java,comparing to using a traditional @code hashmap,1,1,rational
3401,ObjectCountHashMap.java,"implementation which stores keys and count values as map entries, @code objectcounthashmap",0,1,rational
3146,EqualsTester.java,ul,1,1,rational
3402,ObjectCountHashMap.java,minimizes object allocation and reduces memory footprint.,0,1,rational
3221,GwtTestSuite.java,grouping them into a suite is much faster than running each as a one test,1,1,rational
3222,GwtTestSuite.java,"suite, as the per suite setup is expensive.",0,1,rational
2652,AbstractLoadingCache.java,this class provides a skeletal implementation of the @code cache interface to minimize the,1,1,rational
2653,AbstractLoadingCache.java,effort required to implement this interface.,0,1,rational
3294,LazyStackTraceBenchmark.java,we benchmark a caller,1,1,rational
3295,LazyStackTraceBenchmark.java,finder implementation that might be used in a logging framework.,0,1,rational
3937,SmoothRateLimiter.java,"this implements a bursty ratelimiter, where storedpermits are translated to zero throttling.",1,1,rational
3938,SmoothRateLimiter.java,the maximum number of permits that can be saved when the ratelimiter is unused is defined in,0,1,rational
3939,SmoothRateLimiter.java,"terms of time, in this sense if a ratelimiter is 2qps, and this time is specified as 10",1,1,rational
3940,SmoothRateLimiter.java,"seconds, we can save up to 2 10 20 permits.",0,1,rational
3622,SmoothRateLimiter.java,it is important to realize that such a ratelimiter has a very superficial memory of the past,0,1,rational
3623,SmoothRateLimiter.java,it only remembers the last request.,0,1,rational
3624,SmoothRateLimiter.java,what if the ratelimiter was unused for a long period of,0,1,rational
3816,SmoothRateLimiter.java,it is important to realize that such a ratelimiter has a very superficial memory of the past,0,1,rational
3625,SmoothRateLimiter.java,"time, then a request arrived and was immediately granted?",0,1,rational
3817,SmoothRateLimiter.java,it only remembers the last request.,0,1,rational
3626,SmoothRateLimiter.java,this ratelimiter would immediately,0,1,rational
3818,SmoothRateLimiter.java,what if the ratelimiter was unused for a long period of,0,1,rational
3627,SmoothRateLimiter.java,forget about that past underutilization.,0,1,rational
3819,SmoothRateLimiter.java,"time, then a request arrived and was immediately granted?",0,1,rational
3628,SmoothRateLimiter.java,this may result in either underutilization or,0,1,rational
3820,SmoothRateLimiter.java,this ratelimiter would immediately,0,1,rational
3629,SmoothRateLimiter.java,"overflow, depending on the real world consequences of not using the expected rate.",0,1,rational
3821,SmoothRateLimiter.java,forget about that past underutilization.,0,1,rational
3118,EqualsTester.java,"p this tests @code foo^equals foo , @code foo^equals null , and a few other operations.",0,1,rational
3822,SmoothRateLimiter.java,this may result in either underutilization or,0,1,rational
3119,EqualsTester.java,"p for more extensive testing, add multiple equality groups.",0,1,rational
3823,SmoothRateLimiter.java,"overflow, depending on the real world consequences of not using the expected rate.",0,1,rational
3120,EqualsTester.java,each group should contain objects,0,1,rational
3129,EqualsTester.java,p this tests,0,1,rational
3130,EqualsTester.java,ul,0,1,rational
3131,EqualsTester.java,li comparing each object against itself returns true,0,1,rational
3133,EqualsTester.java,li comparing each object against an instance of an incompatible class returns false,0,1,rational
3134,EqualsTester.java,li comparing each pair of objects within the same equality group returns true,0,1,rational
3135,EqualsTester.java,li comparing each pair of objects from different equality groups returns false,0,1,rational
4499,ImplicitBindingTest.java,"@author crazybob@google^com bob lee an enum cannot be implemented by anything, so it should not be possible to have a successful valid jitable binding",0,1,rational
5124,VScrollTable.java,to detect if the first visible,0,1,rational
5125,VScrollTable.java,these are used when jumping between pages when pressing home and end,1,1,rational
5126,VScrollTable.java,changes to manage mousedown and mouseup,0,1,rational
5127,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,1,1,rational
5128,VScrollTable.java,lost .,0,1,rational
5129,VScrollTable.java,example itabpanel just set contained components invisible and back,1,1,rational
5130,VScrollTable.java,when changing tabs.,0,1,rational
5131,VScrollTable.java,updates first visible row for the case we cannot wait,1,1,rational
5132,VScrollTable.java,this method has logic which rows needs to be requested from server when,0,1,rational
5133,VScrollTable.java,user scrolls.,1,1,rational
5152,VScrollTable.java,to detect if the first visible,0,1,rational
5153,VScrollTable.java,these are used when jumping between pages when pressing home and end,1,1,rational
5154,VScrollTable.java,changes to manage mousedown and mouseup,0,1,rational
5155,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,1,1,rational
5156,VScrollTable.java,lost .,0,1,rational
5157,VScrollTable.java,example itabpanel just set contained components invisible and back,1,1,rational
4901,SelectAllEvent.java,"a select all event, fired by the grid when it needs all rows in data source",0,1,rational
5158,VScrollTable.java,when changing tabs.,1,1,rational
4902,SelectAllEvent.java,"to be selected, or when all rows have been selected and are now deselected.",0,1,rational
5159,VScrollTable.java,updates first visible row for the case we cannot wait,1,1,rational
5160,VScrollTable.java,this method has logic which rows needs to be requested from server when,0,1,rational
5161,VScrollTable.java,user scrolls.,1,1,rational
4915,ShouldWriteDataDelegate.java,delegate used by @link designcontext to determine whether container data,0,1,rational
4916,ShouldWriteDataDelegate.java,should be written out for a component.,1,1,rational
5177,VScrollTable.java,to detect if the first visible,0,1,rational
5178,VScrollTable.java,these are used when jumping between pages when pressing home and end,1,1,rational
5179,VScrollTable.java,changes to manage mousedown and mouseup,0,1,rational
5180,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,1,1,rational
5181,VScrollTable.java,lost .,0,1,rational
5182,VScrollTable.java,example itabpanel just set contained components invisible and back,1,1,rational
5183,VScrollTable.java,when changing tabs.,0,1,rational
5184,VScrollTable.java,updates first visible row for the case we cannot wait,1,1,rational
5185,VScrollTable.java,this method has logic which rows needs to be requested from server when,0,1,rational
5186,VScrollTable.java,user scrolls.,1,1,rational
4931,SpacerVisibilityChangedEvent.java,event fired when a spacer element is hidden or shown in escalator.,0,1,rational
5199,VScrollTable.java,to detect if the first visible,1,1,rational
5200,VScrollTable.java,these are used when jumping between pages when pressing home and end,0,1,rational
5201,VScrollTable.java,changes to manage mousedown and mouseup,1,1,rational
5202,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,0,1,rational
5203,VScrollTable.java,lost .,1,1,rational
5204,VScrollTable.java,example itabpanel just set contained components invisible and back,0,1,rational
5205,VScrollTable.java,when changing tabs.,1,1,rational
5206,VScrollTable.java,updates first visible row for the case we cannot wait,0,1,rational
5207,VScrollTable.java,this method has logic which rows needs to be requested from server when,1,1,rational
5208,VScrollTable.java,user scrolls.,0,1,rational
5221,VScrollTable.java,to detect if the first visible,1,1,rational
5222,VScrollTable.java,these are used when jumping between pages when pressing home and end,0,1,rational
5223,VScrollTable.java,changes to manage mousedown and mouseup,1,1,rational
5224,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,0,1,rational
5225,VScrollTable.java,lost .,1,1,rational
5226,VScrollTable.java,example itabpanel just set contained components invisible and back,0,1,rational
5227,VScrollTable.java,when changing tabs.,1,1,rational
5228,VScrollTable.java,updates first visible row for the case we cannot wait,0,1,rational
5229,VScrollTable.java,this method has logic which rows needs to be requested from server when,1,1,rational
5230,VScrollTable.java,user scrolls.,0,1,rational
5242,VScrollTable.java,to detect if the first visible,0,1,rational
5243,VScrollTable.java,these are used when jumping between pages when pressing home and end,0,1,rational
5244,VScrollTable.java,changes to manage mousedown and mouseup,0,1,rational
5245,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,0,1,rational
5246,VScrollTable.java,lost .,0,1,rational
5247,VScrollTable.java,example itabpanel just set contained components invisible and back,0,1,rational
5248,VScrollTable.java,when changing tabs.,0,1,rational
5249,VScrollTable.java,updates first visible row for the case we cannot wait,0,1,rational
5250,VScrollTable.java,this method has logic which rows needs to be requested from server when,0,1,rational
5251,VScrollTable.java,user scrolls.,0,1,rational
5264,VScrollTable.java,to detect if the first visible,0,1,rational
5265,VScrollTable.java,these are used when jumping between pages when pressing home and end,0,1,rational
5266,VScrollTable.java,changes to manage mousedown and mouseup,0,1,rational
5267,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,0,1,rational
5268,VScrollTable.java,lost .,0,1,rational
5269,VScrollTable.java,example itabpanel just set contained components invisible and back,0,1,rational
5270,VScrollTable.java,when changing tabs.,0,1,rational
5271,VScrollTable.java,updates first visible row for the case we cannot wait,0,1,rational
5272,VScrollTable.java,this method has logic which rows needs to be requested from server when,0,1,rational
5273,VScrollTable.java,user scrolls.,0,1,rational
5285,VScrollTable.java,to detect if the first visible,0,1,rational
5286,VScrollTable.java,these are used when jumping between pages when pressing home and end,0,1,rational
5287,VScrollTable.java,changes to manage mousedown and mouseup,0,1,rational
5288,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,0,1,rational
5289,VScrollTable.java,lost .,0,1,rational
5290,VScrollTable.java,example itabpanel just set contained components invisible and back,0,1,rational
5291,VScrollTable.java,when changing tabs.,0,1,rational
5292,VScrollTable.java,updates first visible row for the case we cannot wait,0,1,rational
5293,VScrollTable.java,this method has logic which rows needs to be requested from server when,0,1,rational
5294,VScrollTable.java,user scrolls.,0,1,rational
4791,PopupView.java,constructors,0,1,rational
4792,PopupView.java,methods inherited from abstractcomponentcontainer.,0,1,rational
5048,VScrollTable.java,this way we can use seamlessly traditional scrollbars and scrolling to fetch,0,1,rational
4793,PopupView.java,these are unnecessary,0,1,rational
5305,VScrollTable.java,this panel can only contain vscrolltablerow type of widgets.,0,1,rational
4794,PopupView.java,but mandatory .,0,1,rational
5306,VScrollTable.java,this,0,1,rational
4795,PopupView.java,most of them are not supported in this implementation.,0,1,rational
5307,VScrollTable.java,"simulates very large table, keeping spacers which take room of",0,1,rational
5308,VScrollTable.java,unrendered rows.,0,1,rational
4801,PopupView.java,constructors,0,1,rational
5057,VScrollTable.java,to detect if the first visible,0,1,rational
4802,PopupView.java,methods inherited from abstractcomponentcontainer.,0,1,rational
5058,VScrollTable.java,these are used when jumping between pages when pressing home and end,0,1,rational
4803,PopupView.java,these are unnecessary,0,1,rational
5059,VScrollTable.java,changes to manage mousedown and mouseup,0,1,rational
4804,PopupView.java,but mandatory .,0,1,rational
5060,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,0,1,rational
4805,PopupView.java,most of them are not supported in this implementation.,0,1,rational
5061,VScrollTable.java,lost .,0,1,rational
5062,VScrollTable.java,example itabpanel just set contained components invisible and back,0,1,rational
5063,VScrollTable.java,when changing tabs.,0,1,rational
5064,VScrollTable.java,updates first visible row for the case we cannot wait,0,1,rational
5065,VScrollTable.java,this method has logic which rows needs to be requested from server when,0,1,rational
5066,VScrollTable.java,user scrolls.,0,1,rational
4811,PopupView.java,constructors,0,1,rational
4812,PopupView.java,methods inherited from abstractcomponentcontainer.,0,1,rational
4813,PopupView.java,these are unnecessary,0,1,rational
4814,PopupView.java,but mandatory .,0,1,rational
4815,PopupView.java,most of them are not supported in this implementation.,0,1,rational
5080,VScrollTable.java,to detect if the first visible,0,1,rational
5081,VScrollTable.java,these are used when jumping between pages when pressing home and end,0,1,rational
5082,VScrollTable.java,changes to manage mousedown and mouseup,0,1,rational
5083,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,0,1,rational
5084,VScrollTable.java,lost .,0,1,rational
5085,VScrollTable.java,example itabpanel just set contained components invisible and back,0,1,rational
5086,VScrollTable.java,when changing tabs.,0,1,rational
5087,VScrollTable.java,updates first visible row for the case we cannot wait,0,1,rational
5088,VScrollTable.java,this method has logic which rows needs to be requested from server when,0,1,rational
5089,VScrollTable.java,user scrolls.,0,1,rational
5103,VScrollTable.java,to detect if the first visible,0,1,rational
5104,VScrollTable.java,these are used when jumping between pages when pressing home and end,0,1,rational
5105,VScrollTable.java,changes to manage mousedown and mouseup,0,1,rational
5106,VScrollTable.java,overridden due table might not survive of visibility change scroll pos,0,1,rational
5107,VScrollTable.java,lost .,0,1,rational
5108,VScrollTable.java,example itabpanel just set contained components invisible and back,0,1,rational
5109,VScrollTable.java,when changing tabs.,0,1,rational
5110,VScrollTable.java,updates first visible row for the case we cannot wait,0,1,rational
5111,VScrollTable.java,this method has logic which rows needs to be requested from server when,0,1,rational
5112,VScrollTable.java,user scrolls.,0,1,rational